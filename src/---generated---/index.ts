import { Field } from '@nestjs/graphql';
import { ArgsType } from '@nestjs/graphql';
import { Type } from 'class-transformer';
import { Prisma } from '@prisma/client';
import { Int } from '@nestjs/graphql';
import { InputType } from '@nestjs/graphql';
import { registerEnumType } from '@nestjs/graphql';
import { ObjectType } from '@nestjs/graphql';
import { ID } from '@nestjs/graphql';
import { GraphQLJSON } from 'graphql-type-json';
import { Float } from '@nestjs/graphql';

export enum WeightCategoryScalarFieldEnum {
    id = "id",
    name = "name",
    alias = "alias",
    shippingFee = "shippingFee",
    active = "active",
    description = "description",
    createdAt = "createdAt",
    updatedAt = "updatedAt"
}

export enum UserScalarFieldEnum {
    id = "id",
    firstName = "firstName",
    lastName = "lastName",
    email = "email",
    countryCode = "countryCode",
    phoneNumber = "phoneNumber",
    phoneNumberVerified = "phoneNumberVerified",
    roles = "roles",
    password = "password",
    referrer = "referrer",
    gender = "gender",
    displayPicture = "displayPicture",
    personalEmail = "personalEmail",
    eduInstituteId = "eduInstituteId",
    shoppingPreferenceIds = "shoppingPreferenceIds",
    hobbyIds = "hobbyIds",
    about = "about",
    createdAt = "createdAt",
    updatedAt = "updatedAt",
    wishlistIds = "wishlistIds",
    savedDealIds = "savedDealIds",
    conversationIds = "conversationIds",
    dmIds = "dmIds",
    orderIds = "orderIds",
    followedByIDs = "followedByIDs",
    followingIDs = "followingIDs",
    legacyId = "legacyId",
    blackListed = "blackListed",
    addedManually = "addedManually",
    registrationPlatform = "registrationPlatform",
    instagramUsername = "instagramUsername",
    referralRockCode = "referralRockCode",
    deactivated = "deactivated",
    signupV = "signupV",
    isParent = "isParent"
}

export enum UniversityAdminScalarFieldEnum {
    id = "id",
    userType = "userType",
    userName = "userName",
    email = "email",
    password = "password",
    createdAt = "createdAt",
    updatedAt = "updatedAt"
}

export enum SupportTicketScalarFieldEnum {
    id = "id",
    type = "type",
    issue = "issue",
    initiator = "initiator",
    associatedUserId = "associatedUserId",
    resolved = "resolved",
    concernedId = "concernedId",
    userLastSeen = "userLastSeen",
    adminLastSeen = "adminLastSeen",
    createdAt = "createdAt",
    updatedAt = "updatedAt"
}

export enum SupportRequestScalarFieldEnum {
    id = "id",
    userId = "userId",
    ticketId = "ticketId",
    email = "email",
    message = "message",
    status = "status",
    createdAt = "createdAt",
    updatedAt = "updatedAt"
}

export enum StoryViewScalarFieldEnum {
    id = "id",
    storyId = "storyId",
    userId = "userId",
    createdAt = "createdAt"
}

export enum StoryReactionScalarFieldEnum {
    id = "id",
    storyId = "storyId",
    userId = "userId",
    type = "type",
    active = "active",
    previousReactionId = "previousReactionId",
    removedAt = "removedAt",
    createdAt = "createdAt"
}

export enum StoryPayloadScalarFieldEnum {
    id = "id"
}

export enum StoryScalarFieldEnum {
    id = "id",
    userId = "userId",
    type = "type",
    content = "content",
    caption = "caption",
    backgroundColor = "backgroundColor",
    viewCount = "viewCount",
    eduInstituteId = "eduInstituteId",
    expiresAt = "expiresAt",
    archived = "archived",
    createdAt = "createdAt",
    updatedAt = "updatedAt"
}

export enum ShoppingPreferenceScalarFieldEnum {
    id = "id",
    name = "name",
    image = "image",
    active = "active",
    createdAt = "createdAt",
    updatedAt = "updatedAt",
    userIds = "userIds"
}

export enum PushNotificationCampaignScalarFieldEnum {
    id = "id",
    name = "name",
    senderListType = "senderListType",
    status = "status",
    createdAt = "createdAt",
    updatedAt = "updatedAt"
}

export enum PromoCodeScalarFieldEnum {
    id = "id",
    name = "name",
    code = "code",
    active = "active",
    type = "type",
    value = "value",
    usageLimit = "usageLimit",
    useCount = "useCount",
    createdAt = "createdAt",
    updatedAt = "updatedAt"
}

export enum ProductReportScalarFieldEnum {
    id = "id",
    productId = "productId",
    reporterId = "reporterId",
    reason = "reason",
    details = "details",
    createdAt = "createdAt",
    updatedAt = "updatedAt"
}

export enum ProductListingScalarFieldEnum {
    id = "id",
    type = "type",
    title = "title",
    categoryId = "categoryId",
    selectedCategoryFilters = "selectedCategoryFilters",
    extendedData = "extendedData",
    brandId = "brandId",
    colorId = "colorId",
    productCondition = "productCondition",
    productDeliveryMode = "productDeliveryMode",
    shippingChargePayer = "shippingChargePayer",
    weightCategoryId = "weightCategoryId",
    uploaderId = "uploaderId",
    price = "price",
    priceString = "priceString",
    description = "description",
    reasonForSelling = "reasonForSelling",
    shippingEnabled = "shippingEnabled",
    shippingFrom = "shippingFrom",
    active = "active",
    soldOut = "soldOut",
    blackListed = "blackListed",
    createdAt = "createdAt",
    updatedAt = "updatedAt",
    wishlistedUserIds = "wishlistedUserIds",
    legacyHash = "legacyHash",
    archived = "archived",
    categoryPreferredGender = "categoryPreferredGender",
    uploaderEduInstituteId = "uploaderEduInstituteId"
}

export enum ProductCommentScalarFieldEnum {
    id = "id",
    text = "text",
    parentId = "parentId",
    createdAt = "createdAt",
    updatedAt = "updatedAt",
    productListingId = "productListingId",
    userId = "userId",
    flagged = "flagged",
    archived = "archived"
}

export enum ProductCategoryScalarFieldEnum {
    id = "id",
    name = "name",
    image = "image",
    parentId = "parentId",
    preferredGender = "preferredGender",
    createdAt = "createdAt",
    updatedAt = "updatedAt",
    active = "active",
    shippable = "shippable"
}

export enum PrivacyPolicyScalarFieldEnum {
    id = "id",
    question = "question",
    answer = "answer",
    createdAt = "createdAt",
    updatedAt = "updatedAt"
}

export enum UserListedFilter {
    YES = "YES",
    NO = "NO",
    ONLY_RENTALS = "ONLY_RENTALS",
    ONLY_MARKETPLACE = "ONLY_MARKETPLACE"
}

export enum UserGenderFilter {
    ALL = "ALL",
    MALE = "MALE",
    FEMALE = "FEMALE",
    OTHER = "OTHER"
}

export enum UniversityAdminType {
    ADMIN = "ADMIN",
    INSTITUTION = "INSTITUTION"
}

export enum Tag {
    EVENT = "EVENT",
    SPORT = "SPORT",
    RESOURCES = "RESOURCES"
}

export enum SystemNotificationType {
    CONVERSATION_RELATED = "CONVERSATION_RELATED",
    ORDER_RELATED = "ORDER_RELATED",
    PAYOUT_RELATED = "PAYOUT_RELATED",
    PROFILE_RELATED = "PROFILE_RELATED"
}

export enum SystemIcons {
    RUMIE_HAT = "RUMIE_HAT",
    OFFER = "OFFER",
    PACKAGE = "PACKAGE",
    USPS = "USPS"
}

export enum SupportTicketType {
    General = "General",
    OrderRelated = "OrderRelated",
    ProductRelated = "ProductRelated"
}

export enum SupportTicketParticipant {
    ADMIN = "ADMIN",
    USER = "USER"
}

export enum SupportStatusType {
    OPEN = "OPEN",
    IN_PROGRESS = "IN_PROGRESS",
    CLOSED = "CLOSED"
}

export enum StoryType {
    IMAGE = "IMAGE",
    VIDEO = "VIDEO",
    PRODUCT = "PRODUCT"
}

export enum SortOrder {
    asc = "asc",
    desc = "desc"
}

export enum ShippingChargePayer {
    BUYER = "BUYER",
    SELLER = "SELLER"
}

export enum SellerPayoutStatus {
    PENDING = "PENDING",
    COMPLETE = "COMPLETE",
    CANCELLED = "CANCELLED",
    SENT = "SENT"
}

export enum SelectionChoice {
    SINGLE = "SINGLE",
    MULTIPLE = "MULTIPLE"
}

export enum Role {
    USER = "USER"
}

export enum RentalNotificationType {
    STARTED = "STARTED",
    ENDED = "ENDED"
}

export enum ReactionType {
    LIKE = "LIKE",
    LOVE = "LOVE",
    LAUGH = "LAUGH",
    WOW = "WOW",
    SAD = "SAD",
    ANGRY = "ANGRY"
}

export enum QueryMode {
    'default' = "default",
    insensitive = "insensitive"
}

export enum PushNotificationSenderListType {
    ALL_UNIVERSITIES = "ALL_UNIVERSITIES",
    ONLY_SELECTED_UNIVERSTIES = "ONLY_SELECTED_UNIVERSTIES",
    ALL_BUT_EXCLUDED_UNIVERSITIES = "ALL_BUT_EXCLUDED_UNIVERSITIES"
}

export enum PushNotificationCampaignStatus {
    SCHEDULED = "SCHEDULED",
    PROCESSED = "PROCESSED",
    CANCELLED = "CANCELLED"
}

export enum PromoCodeType {
    FIXED_VALUE = "FIXED_VALUE",
    PERCENTAGE = "PERCENTAGE"
}

export enum ProductReportReason {
    INAPPROPRIATE_CONTENT = "INAPPROPRIATE_CONTENT",
    COUNTERFEIT = "COUNTERFEIT",
    MISLEADING = "MISLEADING",
    PROHIBITED_ITEM = "PROHIBITED_ITEM",
    SPAM = "SPAM",
    HARASSMENT = "HARASSMENT",
    INCORRECT_CATEGORY = "INCORRECT_CATEGORY",
    OTHER = "OTHER"
}

export enum ProductReportAction {
    REMOVED = "REMOVED",
    WARNING_ISSUED = "WARNING_ISSUED",
    NO_ACTION = "NO_ACTION"
}

export enum ProductListingType {
    SALE = "SALE",
    RENT = "RENT"
}

export enum ProductDeliveryMode {
    DROP_TO_BUYER = "DROP_TO_BUYER",
    ASK_BUYER_TO_PICK = "ASK_BUYER_TO_PICK",
    MEET_AT_PUBLIC_PLACE = "MEET_AT_PUBLIC_PLACE"
}

export enum ProductCondition {
    OKAYISH = "OKAYISH",
    GOOD = "GOOD",
    FABULOUS = "FABULOUS",
    NEW = "NEW"
}

export enum PreferredGender {
    MEN = "MEN",
    WOMEN = "WOMEN",
    ALL = "ALL"
}

export enum Platform {
    ANDROID = "ANDROID",
    IOS = "IOS",
    WEB = "WEB"
}

export enum PayoutNotificationType {
    PROCESSED = "PROCESSED"
}

export enum PaymentLinkStatus {
    ACCEPTED = "ACCEPTED",
    DECLINED = "DECLINED"
}

export enum OrderType {
    BUY = "BUY",
    RENT = "RENT"
}

export enum OrderStatus {
    CONFIRMED = "CONFIRMED",
    CANCELLED = "CANCELLED"
}

export enum OrderNotificationType {
    CONFIRMED = "CONFIRMED",
    LABEL_GENERATED = "LABEL_GENERATED",
    IN_TRANSIT = "IN_TRANSIT",
    DELIVERED = "DELIVERED",
    DELIVERY_ATTEMPTED = "DELIVERY_ATTEMPTED",
    CANCELLED = "CANCELLED"
}

export enum OfferNotificationType {
    RECEIVED = "RECEIVED",
    WITHDRAWN = "WITHDRAWN",
    REJECTED = "REJECTED",
    ACCEPTED = "ACCEPTED",
    COUNTERED = "COUNTERED"
}

export enum NotificationType {
    OFFER = "OFFER",
    RENTAL = "RENTAL",
    ORDER = "ORDER",
    PAYOUT = "PAYOUT",
    SYSTEM = "SYSTEM",
    PERSONAL_DM = "PERSONAL_DM",
    CAMPUS_CHAT_REPLY = "CAMPUS_CHAT_REPLY"
}

export enum MessageType {
    TEXT = "TEXT",
    IMAGE = "IMAGE",
    PRODUCT_BUBBLE = "PRODUCT_BUBBLE",
    DEAL_MEETUP_OFFER_BUBBLE = "DEAL_MEETUP_OFFER_BUBBLE",
    DEAL_OFFER_BUBBLE = "DEAL_OFFER_BUBBLE",
    COUNTER_SELLER_OFFER_BUBBLE = "COUNTER_SELLER_OFFER_BUBBLE",
    RENT_OFFER_BUBBLE = "RENT_OFFER_BUBBLE",
    INFO_SYSTEM_MESSAGE = "INFO_SYSTEM_MESSAGE",
    PAYMENT_CONFIRMATION_SYSTEM_MESSAGE = "PAYMENT_CONFIRMATION_SYSTEM_MESSAGE",
    ORDER_UPDATE_SYSTEM_MESSAGE = "ORDER_UPDATE_SYSTEM_MESSAGE",
    PAYMENT_LINK_MESSAGE = "PAYMENT_LINK_MESSAGE",
    PAYMENT_LINK_UPDATE_MESSAGE = "PAYMENT_LINK_UPDATE_MESSAGE",
    LOCAL_ORDER_UPDATE_MESSAGE = "LOCAL_ORDER_UPDATE_MESSAGE",
    LOCAL_ORDER_HANDED_OVER_MESSAGE = "LOCAL_ORDER_HANDED_OVER_MESSAGE"
}

export enum MessageState {
    INITIAL = "INITIAL",
    WITHDRAWN = "WITHDRAWN",
    ACCEPTED = "ACCEPTED",
    REJECTED = "REJECTED",
    COUNTERED = "COUNTERED"
}

export enum MessageActionType {
    ACCEPT_REQUEST = "ACCEPT_REQUEST",
    REJECT_REQUEST = "REJECT_REQUEST",
    WITHDRAW_REQUEST = "WITHDRAW_REQUEST",
    COUNTER_REQUEST = "COUNTER_REQUEST"
}

export enum MediaType {
    IMAGE = "IMAGE",
    VIDEO = "VIDEO"
}

export enum InternalCTA {
    REFERRAL = "REFERRAL",
    DEALS = "DEALS",
    MARKETPLACE = "MARKETPLACE",
    RENTAL = "RENTAL",
    USER_PROFILE = "USER_PROFILE",
    UPLOAD_PRODUCT = "UPLOAD_PRODUCT",
    EVENT_TICKETS_CATEGORY = "EVENT_TICKETS_CATEGORY"
}

export enum Gender {
    MALE = "MALE",
    FEMALE = "FEMALE",
    OTHER = "OTHER"
}

export enum Gateway {
    STRIPE = "STRIPE"
}

export enum EventType {
    impression = "impression",
    click = "click",
    ctaClick = "ctaClick"
}

export enum EduSelectionListType {
    ALL_UNIVERSITIES = "ALL_UNIVERSITIES",
    ONLY_SELECTED_UNIVERSTIES = "ONLY_SELECTED_UNIVERSTIES",
    ALL_BUT_EXCLUDED_UNIVERSITIES = "ALL_BUT_EXCLUDED_UNIVERSITIES"
}

export enum DMType {
    TEXT = "TEXT",
    STORY_SHARE = "STORY_SHARE"
}

export enum DealType {
    WITH_COUPON = "WITH_COUPON",
    WITHOUT_COUPON = "WITHOUT_COUPON"
}

export enum CTAType {
    EXTERNAL_URL = "EXTERNAL_URL",
    NAVIGATION = "NAVIGATION"
}

export enum ConversationType {
    SAME_RADIUS = "SAME_RADIUS",
    OUTSIDE_RADIUS = "OUTSIDE_RADIUS",
    RENT = "RENT"
}

export enum CampusChatType {
    GENERAL = "GENERAL",
    STUDENT_BUSINESS = "STUDENT_BUSINESS",
    LOST_AND_FOUND = "LOST_AND_FOUND",
    EVENTS = "EVENTS",
    BUY_SELL = "BUY_SELL",
    ACADEMICS = "ACADEMICS",
    ANNOUNCEMENTS = "ANNOUNCEMENTS",
    SPORTS = "SPORTS",
    HOUSING = "HOUSING",
    JOBS_AND_INTERNSHIPS = "JOBS_AND_INTERNSHIPS",
    CUSTOM = "CUSTOM"
}

export enum CampusChatReportReason {
    INAPPROPRIATE_CONTENT = "INAPPROPRIATE_CONTENT",
    HATE_SPEECH = "HATE_SPEECH",
    SPAM = "SPAM",
    HARASSMENT = "HARASSMENT",
    FAKE_NEWS = "FAKE_NEWS",
    OTHER = "OTHER"
}

export enum CampusChatReportAction {
    REMOVED = "REMOVED",
    WARNING_ISSUED = "WARNING_ISSUED",
    NO_ACTION = "NO_ACTION"
}

export enum CampusChatMessageType {
    TEXT = "TEXT",
    PRODUCT_SHARE = "PRODUCT_SHARE",
    IMAGE = "IMAGE",
    VIDEO = "VIDEO",
    SYSTEM_NOTIFICATION = "SYSTEM_NOTIFICATION",
    EVENT = "EVENT"
}

export enum CampusChatMessageFlaggedBy {
    ADMIN = "ADMIN",
    SYSTEM = "SYSTEM"
}

export enum CampaignType {
    LISTING = "LISTING",
    BANNER = "BANNER",
    POPUP = "POPUP"
}

export enum BooleanChoice {
    YES = "YES",
    NO = "NO"
}

export enum BannerType {
    SINGLE = "SINGLE",
    SLIDER = "SLIDER"
}

export enum BannerPosition {
    HOMEPAGE_SLIDER_1 = "HOMEPAGE_SLIDER_1",
    HOMEPAGE_SLIDER_2 = "HOMEPAGE_SLIDER_2",
    HOMEPAGE_SINGLE_1 = "HOMEPAGE_SINGLE_1",
    HOMEPAGE_SINGLE_2 = "HOMEPAGE_SINGLE_2",
    MYLISTING_SINGLE = "MYLISTING_SINGLE",
    SAVED_DEALS_SINGLE_1 = "SAVED_DEALS_SINGLE_1",
    SAVED_DEALS_SINGLE_2 = "SAVED_DEALS_SINGLE_2",
    STUDENT_DEALS_SINGLE_1 = "STUDENT_DEALS_SINGLE_1",
    STUDENT_DEALS_PAGE_SINGLE_2 = "STUDENT_DEALS_PAGE_SINGLE_2"
}

export enum Availability {
    ALL = "ALL",
    SUNDAY = "SUNDAY",
    MONDAY = "MONDAY",
    TUESDAY = "TUESDAY",
    WEDNESDAY = "WEDNESDAY",
    THURSDAY = "THURSDAY",
    FRIDAY = "FRIDAY",
    SATURDAY = "SATURDAY"
}

export enum AppPopupTemplate {
    WITHOUT_COUPON = "WITHOUT_COUPON",
    WITH_COUPON = "WITH_COUPON"
}

export enum AppLovingAdType {
    BANNER = "BANNER",
    NATIVE = "NATIVE"
}

export enum AppLovinPosition {
    HOME_PAGE_BANNER = "HOME_PAGE_BANNER",
    PRODUCT_PAGE_BANNER = "PRODUCT_PAGE_BANNER",
    SELLER_PAGE_BANNER = "SELLER_PAGE_BANNER"
}

export enum AnnouncementBannerPosition {
    HOME_PAGE = "HOME_PAGE",
    HOME_PAGE_TOP = "HOME_PAGE_TOP",
    HOME_PAGE_BOTTOM = "HOME_PAGE_BOTTOM",
    PRODUCT_DETAIL_PAGE = "PRODUCT_DETAIL_PAGE"
}

export enum AltSignupStatus {
    PENDING = "PENDING",
    APPROVED = "APPROVED",
    REJECTED = "REJECTED"
}

export enum AdminRole {
    SUPER_ADMIN = "SUPER_ADMIN",
    ADMIN = "ADMIN",
    MANAGER = "MANAGER",
    MARKETER = "MARKETER",
    ANALYST = "ANALYST",
    SUPPORT = "SUPPORT"
}

export enum AddressType {
    COLLEGE = "COLLEGE",
    RESIDENCE = "RESIDENCE",
    PUBLIC = "PUBLIC"
}

export enum AdVisibility {
    LISTING_CARDS = "LISTING_CARDS",
    BANNER_SINGLE = "BANNER_SINGLE",
    BANNER_SLIDER = "BANNER_SLIDER"
}

export enum AdType {
    LISTING_CARD = "LISTING_CARD",
    BANNER = "BANNER"
}

export enum PersonalDMScalarFieldEnum {
    id = "id",
    initiatedBy = "initiatedBy",
    participantIds = "participantIds",
    lastMessageId = "lastMessageId",
    valid = "valid",
    enabled = "enabled",
    payload = "payload",
    consumersLastSeen = "consumersLastSeen",
    providersLastSeen = "providersLastSeen",
    createdAt = "createdAt",
    updatedAt = "updatedAt"
}

export enum PayoutRequestLogScalarFieldEnum {
    id = "id",
    email = "email",
    valid = "valid",
    createdAt = "createdAt",
    updatedAt = "updatedAt"
}

export enum PaymentScalarFieldEnum {
    id = "id",
    gateway = "gateway",
    amount = "amount",
    methodDescription = "methodDescription",
    stripePaymentId = "stripePaymentId",
    createdAt = "createdAt",
    updatedAt = "updatedAt"
}

export enum PassCodeScalarFieldEnum {
    id = "id",
    userId = "userId",
    passCode = "passCode",
    isPassed = "isPassed",
    createdAt = "createdAt",
    updatedAt = "updatedAt"
}

export enum OtpLogScalarFieldEnum {
    id = "id",
    key = "key",
    otp = "otp",
    valid = "valid",
    createdAt = "createdAt",
    updatedAt = "updatedAt"
}

export enum OrderPayoutRequestLogScalarFieldEnum {
    id = "id",
    orderId = "orderId",
    email = "email",
    valid = "valid",
    createdAt = "createdAt",
    updatedAt = "updatedAt"
}

export enum OrderScalarFieldEnum {
    id = "id",
    productId = "productId",
    type = "type",
    providerId = "providerId",
    consumerId = "consumerId",
    conversationId = "conversationId",
    paymentId = "paymentId",
    status = "status",
    payload = "payload",
    createdAt = "createdAt",
    updatedAt = "updatedAt"
}

export enum NotificationPayloadsScalarFieldEnum {
    id = "id"
}

export enum NotificationScalarFieldEnum {
    id = "id",
    userId = "userId",
    type = "type",
    payload = "payload",
    title = "title",
    body = "body",
    createdAt = "createdAt",
    expiresAt = "expiresAt",
    isRead = "isRead"
}

export enum MessageScalarFieldEnum {
    id = "id",
    clientId = "clientId",
    senderId = "senderId",
    type = "type",
    payload = "payload",
    state = "state",
    conversationId = "conversationId",
    createdAt = "createdAt",
    updatedAt = "updatedAt"
}

export enum ListingSettingScalarFieldEnum {
    id = "id",
    enableSelling = "enableSelling",
    enableRenting = "enableRenting",
    reasonsForSelling = "reasonsForSelling",
    meetupPreferences = "meetupPreferences",
    productDeliveryModes = "productDeliveryModes",
    sellerFees = "sellerFees",
    taxes = "taxes",
    creditProcessing = "creditProcessing",
    createdAt = "createdAt",
    updatedAt = "updatedAt"
}

export enum LegacyImagesScalarFieldEnum {
    id = "id",
    oldUrl = "oldUrl",
    newUrl = "newUrl",
    createdAt = "createdAt",
    updatedAt = "updatedAt"
}

export enum InstitutionScalarFieldEnum {
    id = "id",
    institutionName = "institutionName",
    slug = "slug",
    passCode = "passCode",
    logo = "logo",
    schoolColor = "schoolColor",
    localistCalendarUrl = "localistCalendarUrl",
    createdAt = "createdAt",
    updatedAt = "updatedAt"
}

export enum HobbyScalarFieldEnum {
    id = "id",
    name = "name",
    image = "image",
    createdAt = "createdAt",
    updatedAt = "updatedAt",
    active = "active",
    userIds = "userIds"
}

export enum EventScalarFieldEnum {
    id = "id",
    clientId = "clientId",
    campaignId = "campaignId",
    userId = "userId",
    gender = "gender",
    eduInstituteId = "eduInstituteId",
    platform = "platform",
    type = "type",
    timestamp = "timestamp",
    screen = "screen",
    batch = "batch",
    createdAt = "createdAt",
    updatedAt = "updatedAt"
}

export enum EduInstituteScalarFieldEnum {
    id = "id",
    name = "name",
    domain = "domain",
    logo = "logo",
    city = "city",
    state = "state",
    address = "address",
    zip = "zip",
    location = "location",
    active = "active",
    passCode = "passCode",
    isRegistered = "isRegistered",
    createdAt = "createdAt",
    updatedAt = "updatedAt"
}

export enum DMMessageTypeScalarFieldEnum {
    id = "id"
}

export enum DirectMessageScalarFieldEnum {
    id = "id",
    clientId = "clientId",
    senderId = "senderId",
    type = "type",
    payload = "payload",
    personalDmId = "personalDmId",
    createdAt = "createdAt",
    updatedAt = "updatedAt"
}

export enum DealScalarFieldEnum {
    id = "id",
    name = "name",
    image = "image",
    url = "url",
    type = "type",
    couponCode = "couponCode",
    active = "active",
    createdAt = "createdAt",
    updatedAt = "updatedAt",
    savedUserIds = "savedUserIds"
}

export enum ConversationScalarFieldEnum {
    id = "id",
    productId = "productId",
    initiatedBy = "initiatedBy",
    participantIds = "participantIds",
    lastMessageId = "lastMessageId",
    valid = "valid",
    enabled = "enabled",
    type = "type",
    preferredPaymentMethod = "preferredPaymentMethod",
    preferredAddressId = "preferredAddressId",
    paymentLinkSent = "paymentLinkSent",
    deliveryConfirmedBySeller = "deliveryConfirmedBySeller",
    paymentLinkCount = "paymentLinkCount",
    orderId = "orderId",
    payload = "payload",
    consumersLastSeen = "consumersLastSeen",
    providersLastSeen = "providersLastSeen",
    createdAt = "createdAt",
    updatedAt = "updatedAt"
}

export enum ColorScalarFieldEnum {
    id = "id",
    name = "name",
    hex = "hex",
    active = "active",
    createdAt = "createdAt",
    updatedAt = "updatedAt"
}

export enum ChatBubblesScalarFieldEnum {
    id = "id"
}

export enum CampusChatReportScalarFieldEnum {
    id = "id",
    messageId = "messageId",
    commentId = "commentId",
    reporterId = "reporterId",
    reason = "reason",
    details = "details",
    createdAt = "createdAt",
    updatedAt = "updatedAt"
}

export enum CampusChatMessagePayloadScalarFieldEnum {
    id = "id"
}

export enum CampusChatMessageScalarFieldEnum {
    id = "id",
    chatId = "chatId",
    userId = "userId",
    clientId = "clientId",
    type = "type",
    content = "content",
    reportCount = "reportCount",
    flagged = "flagged",
    flaggedAt = "flaggedAt",
    flaggedBy = "flaggedBy",
    deletedAt = "deletedAt",
    createdAt = "createdAt",
    updatedAt = "updatedAt"
}

export enum CampusChatScalarFieldEnum {
    id = "id",
    eduInstituteId = "eduInstituteId",
    name = "name",
    type = "type",
    description = "description",
    active = "active",
    createdAt = "createdAt",
    updatedAt = "updatedAt"
}

export enum CampaignScalarFieldEnum {
    id = "id",
    userId = "userId",
    title = "title",
    url = "url",
    location = "location",
    locationCoordinates = "locationCoordinates",
    type = "type",
    tag = "tag",
    localistId = "localistId",
    campaignImage = "campaignImage",
    campaignStartAt = "campaignStartAt",
    campaignEndAt = "campaignEndAt",
    campaignDuration = "campaignDuration",
    eventDayTime = "eventDayTime",
    showOnApp = "showOnApp",
    createdAt = "createdAt",
    updatedAt = "updatedAt"
}

export enum BrandScalarFieldEnum {
    id = "id",
    name = "name",
    image = "image",
    active = "active",
    createdAt = "createdAt",
    updatedAt = "updatedAt",
    featured = "featured"
}

export enum BannerScalarFieldEnum {
    id = "id",
    name = "name",
    type = "type",
    positions = "positions",
    active = "active",
    createdAt = "createdAt",
    updatedAt = "updatedAt"
}

export enum BannedWordsCategoryScalarFieldEnum {
    id = "id",
    name = "name",
    description = "description",
    severity = "severity",
    active = "active",
    createdAt = "createdAt",
    updatedAt = "updatedAt"
}

export enum BannedWordScalarFieldEnum {
    id = "id",
    word = "word",
    categoryId = "categoryId",
    active = "active",
    createdAt = "createdAt",
    updatedAt = "updatedAt"
}

export enum AppPopupScalarFieldEnum {
    id = "id",
    name = "name",
    frequency = "frequency",
    selectionListType = "selectionListType",
    template = "template",
    image = "image",
    description = "description",
    ctaUrl = "ctaUrl",
    ctaText = "ctaText",
    couponCode = "couponCode",
    delayInSeconds = "delayInSeconds",
    active = "active",
    createdAt = "createdAt",
    updatedAt = "updatedAt"
}

export enum AppLovinScalarFieldEnum {
    id = "id",
    alias = "alias",
    adUnitId = "adUnitId",
    type = "type",
    position = "position",
    active = "active",
    createdAt = "createdAt",
    updatedAt = "updatedAt"
}

export enum AnnouncementBannerScalarFieldEnum {
    id = "id",
    name = "name",
    position = "position",
    hasInternalCTA = "hasInternalCTA",
    internalCTA = "internalCTA",
    image = "image",
    active = "active",
    createdAt = "createdAt",
    updatedAt = "updatedAt"
}

export enum AdvertiserScalarFieldEnum {
    id = "id",
    companyName = "companyName",
    companyWebsiteUrl = "companyWebsiteUrl",
    logo = "logo",
    address1 = "address1",
    address2 = "address2",
    city = "city",
    state = "state",
    zip = "zip",
    active = "active",
    createdAt = "createdAt",
    updatedAt = "updatedAt"
}

export enum AdminScalarFieldEnum {
    id = "id",
    name = "name",
    username = "username",
    password = "password",
    countryCode = "countryCode",
    phoneNumber = "phoneNumber",
    email = "email",
    roles = "roles"
}

export enum AdScalarFieldEnum {
    id = "id",
    type = "type",
    visibility = "visibility",
    title = "title",
    image = "image",
    url = "url",
    active = "active",
    createdAt = "createdAt",
    updatedAt = "updatedAt",
    advertiserName = "advertiserName",
    advertiserId = "advertiserId",
    monthlyBudget = "monthlyBudget",
    priority = "priority",
    targetGenders = "targetGenders"
}

registerEnumType(AdScalarFieldEnum, { name: 'AdScalarFieldEnum', description: undefined })
registerEnumType(AdminScalarFieldEnum, { name: 'AdminScalarFieldEnum', description: undefined })
registerEnumType(AdvertiserScalarFieldEnum, { name: 'AdvertiserScalarFieldEnum', description: undefined })
registerEnumType(AnnouncementBannerScalarFieldEnum, { name: 'AnnouncementBannerScalarFieldEnum', description: undefined })
registerEnumType(AppLovinScalarFieldEnum, { name: 'AppLovinScalarFieldEnum', description: undefined })
registerEnumType(AppPopupScalarFieldEnum, { name: 'AppPopupScalarFieldEnum', description: undefined })
registerEnumType(BannedWordScalarFieldEnum, { name: 'BannedWordScalarFieldEnum', description: undefined })
registerEnumType(BannedWordsCategoryScalarFieldEnum, { name: 'BannedWordsCategoryScalarFieldEnum', description: undefined })
registerEnumType(BannerScalarFieldEnum, { name: 'BannerScalarFieldEnum', description: undefined })
registerEnumType(BrandScalarFieldEnum, { name: 'BrandScalarFieldEnum', description: undefined })
registerEnumType(CampaignScalarFieldEnum, { name: 'CampaignScalarFieldEnum', description: undefined })
registerEnumType(CampusChatScalarFieldEnum, { name: 'CampusChatScalarFieldEnum', description: undefined })
registerEnumType(CampusChatMessageScalarFieldEnum, { name: 'CampusChatMessageScalarFieldEnum', description: undefined })
registerEnumType(CampusChatMessagePayloadScalarFieldEnum, { name: 'CampusChatMessagePayloadScalarFieldEnum', description: undefined })
registerEnumType(CampusChatReportScalarFieldEnum, { name: 'CampusChatReportScalarFieldEnum', description: undefined })
registerEnumType(ChatBubblesScalarFieldEnum, { name: 'ChatBubblesScalarFieldEnum', description: undefined })
registerEnumType(ColorScalarFieldEnum, { name: 'ColorScalarFieldEnum', description: undefined })
registerEnumType(ConversationScalarFieldEnum, { name: 'ConversationScalarFieldEnum', description: undefined })
registerEnumType(DealScalarFieldEnum, { name: 'DealScalarFieldEnum', description: undefined })
registerEnumType(DirectMessageScalarFieldEnum, { name: 'DirectMessageScalarFieldEnum', description: undefined })
registerEnumType(DMMessageTypeScalarFieldEnum, { name: 'DMMessageTypeScalarFieldEnum', description: undefined })
registerEnumType(EduInstituteScalarFieldEnum, { name: 'EduInstituteScalarFieldEnum', description: undefined })
registerEnumType(EventScalarFieldEnum, { name: 'EventScalarFieldEnum', description: undefined })
registerEnumType(HobbyScalarFieldEnum, { name: 'HobbyScalarFieldEnum', description: undefined })
registerEnumType(InstitutionScalarFieldEnum, { name: 'InstitutionScalarFieldEnum', description: undefined })
registerEnumType(LegacyImagesScalarFieldEnum, { name: 'LegacyImagesScalarFieldEnum', description: undefined })
registerEnumType(ListingSettingScalarFieldEnum, { name: 'ListingSettingScalarFieldEnum', description: undefined })
registerEnumType(MessageScalarFieldEnum, { name: 'MessageScalarFieldEnum', description: undefined })
registerEnumType(NotificationScalarFieldEnum, { name: 'NotificationScalarFieldEnum', description: undefined })
registerEnumType(NotificationPayloadsScalarFieldEnum, { name: 'NotificationPayloadsScalarFieldEnum', description: undefined })
registerEnumType(OrderScalarFieldEnum, { name: 'OrderScalarFieldEnum', description: undefined })
registerEnumType(OrderPayoutRequestLogScalarFieldEnum, { name: 'OrderPayoutRequestLogScalarFieldEnum', description: undefined })
registerEnumType(OtpLogScalarFieldEnum, { name: 'OtpLogScalarFieldEnum', description: undefined })
registerEnumType(PassCodeScalarFieldEnum, { name: 'PassCodeScalarFieldEnum', description: undefined })
registerEnumType(PaymentScalarFieldEnum, { name: 'PaymentScalarFieldEnum', description: undefined })
registerEnumType(PayoutRequestLogScalarFieldEnum, { name: 'PayoutRequestLogScalarFieldEnum', description: undefined })
registerEnumType(PersonalDMScalarFieldEnum, { name: 'PersonalDMScalarFieldEnum', description: undefined })
registerEnumType(AdType, { name: 'AdType', description: undefined })
registerEnumType(AdVisibility, { name: 'AdVisibility', description: undefined })
registerEnumType(AddressType, { name: 'AddressType', description: undefined })
registerEnumType(AdminRole, { name: 'AdminRole', description: undefined })
registerEnumType(AltSignupStatus, { name: 'AltSignupStatus', description: undefined })
registerEnumType(AnnouncementBannerPosition, { name: 'AnnouncementBannerPosition', description: undefined })
registerEnumType(AppLovinPosition, { name: 'AppLovinPosition', description: undefined })
registerEnumType(AppLovingAdType, { name: 'AppLovingAdType', description: undefined })
registerEnumType(AppPopupTemplate, { name: 'AppPopupTemplate', description: undefined })
registerEnumType(Availability, { name: 'Availability', description: undefined })
registerEnumType(BannerPosition, { name: 'BannerPosition', description: undefined })
registerEnumType(BannerType, { name: 'BannerType', description: undefined })
registerEnumType(BooleanChoice, { name: 'BooleanChoice', description: undefined })
registerEnumType(CampaignType, { name: 'CampaignType', description: undefined })
registerEnumType(CampusChatMessageFlaggedBy, { name: 'CampusChatMessageFlaggedBy', description: undefined })
registerEnumType(CampusChatMessageType, { name: 'CampusChatMessageType', description: undefined })
registerEnumType(CampusChatReportAction, { name: 'CampusChatReportAction', description: undefined })
registerEnumType(CampusChatReportReason, { name: 'CampusChatReportReason', description: undefined })
registerEnumType(CampusChatType, { name: 'CampusChatType', description: undefined })
registerEnumType(ConversationType, { name: 'ConversationType', description: undefined })
registerEnumType(CTAType, { name: 'CTAType', description: undefined })
registerEnumType(DealType, { name: 'DealType', description: undefined })
registerEnumType(DMType, { name: 'DMType', description: undefined })
registerEnumType(EduSelectionListType, { name: 'EduSelectionListType', description: undefined })
registerEnumType(EventType, { name: 'EventType', description: undefined })
registerEnumType(Gateway, { name: 'Gateway', description: undefined })
registerEnumType(Gender, { name: 'Gender', description: undefined })
registerEnumType(InternalCTA, { name: 'InternalCTA', description: undefined })
registerEnumType(MediaType, { name: 'MediaType', description: undefined })
registerEnumType(MessageActionType, { name: 'MessageActionType', description: undefined })
registerEnumType(MessageState, { name: 'MessageState', description: undefined })
registerEnumType(MessageType, { name: 'MessageType', description: undefined })
registerEnumType(NotificationType, { name: 'NotificationType', description: undefined })
registerEnumType(OfferNotificationType, { name: 'OfferNotificationType', description: undefined })
registerEnumType(OrderNotificationType, { name: 'OrderNotificationType', description: undefined })
registerEnumType(OrderStatus, { name: 'OrderStatus', description: undefined })
registerEnumType(OrderType, { name: 'OrderType', description: undefined })
registerEnumType(PaymentLinkStatus, { name: 'PaymentLinkStatus', description: undefined })
registerEnumType(PayoutNotificationType, { name: 'PayoutNotificationType', description: undefined })
registerEnumType(Platform, { name: 'Platform', description: undefined })
registerEnumType(PreferredGender, { name: 'PreferredGender', description: undefined })
registerEnumType(ProductCondition, { name: 'ProductCondition', description: undefined })
registerEnumType(ProductDeliveryMode, { name: 'ProductDeliveryMode', description: undefined })
registerEnumType(ProductListingType, { name: 'ProductListingType', description: undefined })
registerEnumType(ProductReportAction, { name: 'ProductReportAction', description: undefined })
registerEnumType(ProductReportReason, { name: 'ProductReportReason', description: undefined })
registerEnumType(PromoCodeType, { name: 'PromoCodeType', description: undefined })
registerEnumType(PushNotificationCampaignStatus, { name: 'PushNotificationCampaignStatus', description: undefined })
registerEnumType(PushNotificationSenderListType, { name: 'PushNotificationSenderListType', description: undefined })
registerEnumType(QueryMode, { name: 'QueryMode', description: undefined })
registerEnumType(ReactionType, { name: 'ReactionType', description: undefined })
registerEnumType(RentalNotificationType, { name: 'RentalNotificationType', description: undefined })
registerEnumType(Role, { name: 'Role', description: undefined })
registerEnumType(SelectionChoice, { name: 'SelectionChoice', description: undefined })
registerEnumType(SellerPayoutStatus, { name: 'SellerPayoutStatus', description: undefined })
registerEnumType(ShippingChargePayer, { name: 'ShippingChargePayer', description: undefined })
registerEnumType(SortOrder, { name: 'SortOrder', description: undefined })
registerEnumType(StoryType, { name: 'StoryType', description: undefined })
registerEnumType(SupportStatusType, { name: 'SupportStatusType', description: undefined })
registerEnumType(SupportTicketParticipant, { name: 'SupportTicketParticipant', description: undefined })
registerEnumType(SupportTicketType, { name: 'SupportTicketType', description: undefined })
registerEnumType(SystemIcons, { name: 'SystemIcons', description: undefined })
registerEnumType(SystemNotificationType, { name: 'SystemNotificationType', description: undefined })
registerEnumType(Tag, { name: 'Tag', description: undefined })
registerEnumType(UniversityAdminType, { name: 'UniversityAdminType', description: undefined })
registerEnumType(UserGenderFilter, { name: 'UserGenderFilter', description: undefined })
registerEnumType(UserListedFilter, { name: 'UserListedFilter', description: undefined })
registerEnumType(PrivacyPolicyScalarFieldEnum, { name: 'PrivacyPolicyScalarFieldEnum', description: undefined })
registerEnumType(ProductCategoryScalarFieldEnum, { name: 'ProductCategoryScalarFieldEnum', description: undefined })
registerEnumType(ProductCommentScalarFieldEnum, { name: 'ProductCommentScalarFieldEnum', description: undefined })
registerEnumType(ProductListingScalarFieldEnum, { name: 'ProductListingScalarFieldEnum', description: undefined })
registerEnumType(ProductReportScalarFieldEnum, { name: 'ProductReportScalarFieldEnum', description: undefined })
registerEnumType(PromoCodeScalarFieldEnum, { name: 'PromoCodeScalarFieldEnum', description: undefined })
registerEnumType(PushNotificationCampaignScalarFieldEnum, { name: 'PushNotificationCampaignScalarFieldEnum', description: undefined })
registerEnumType(ShoppingPreferenceScalarFieldEnum, { name: 'ShoppingPreferenceScalarFieldEnum', description: undefined })
registerEnumType(StoryScalarFieldEnum, { name: 'StoryScalarFieldEnum', description: undefined })
registerEnumType(StoryPayloadScalarFieldEnum, { name: 'StoryPayloadScalarFieldEnum', description: undefined })
registerEnumType(StoryReactionScalarFieldEnum, { name: 'StoryReactionScalarFieldEnum', description: undefined })
registerEnumType(StoryViewScalarFieldEnum, { name: 'StoryViewScalarFieldEnum', description: undefined })
registerEnumType(SupportRequestScalarFieldEnum, { name: 'SupportRequestScalarFieldEnum', description: undefined })
registerEnumType(SupportTicketScalarFieldEnum, { name: 'SupportTicketScalarFieldEnum', description: undefined })
registerEnumType(UniversityAdminScalarFieldEnum, { name: 'UniversityAdminScalarFieldEnum', description: undefined })
registerEnumType(UserScalarFieldEnum, { name: 'UserScalarFieldEnum', description: undefined })
registerEnumType(WeightCategoryScalarFieldEnum, { name: 'WeightCategoryScalarFieldEnum', description: undefined })

@ArgsType()
export class AdAggregateArgs {
    @Field(() => AdWhereInput, {nullable:true})
    @Type(() => AdWhereInput)
    where?: InstanceType<typeof AdWhereInput>;
    @Field(() => [AdOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<AdOrderByWithRelationInput>;
    @Field(() => AdWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<AdWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class AdAvgOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    monthlyBudget?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    priority?: `${SortOrder}`;
}

@InputType()
export class AdCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    visibility?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    title?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    image?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    url?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    advertiserName?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    advertiserId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    monthlyBudget?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    priority?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    targetGenders?: `${SortOrder}`;
}

@InputType()
export class AdCreateManyAdvertiserInputEnvelope {
    @Field(() => [AdCreateManyAdvertiserInput], {nullable:false})
    @Type(() => AdCreateManyAdvertiserInput)
    data!: Array<AdCreateManyAdvertiserInput>;
}

@InputType()
export class AdCreateManyAdvertiserInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => AdType, {nullable:false})
    type!: `${AdType}`;
    @Field(() => AdCreatevisibilityInput, {nullable:true})
    visibility?: InstanceType<typeof AdCreatevisibilityInput>;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => String, {nullable:false})
    url!: string;
    @Field(() => DateRangeCreateEnvelopeInput, {nullable:false})
    validity!: InstanceType<typeof DateRangeCreateEnvelopeInput>;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => String, {nullable:true})
    advertiserName?: string;
    @Field(() => Int, {nullable:true})
    monthlyBudget?: number;
    @Field(() => [EduInstituteSelectOptionCreateInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionCreateInput>;
    @Field(() => Int, {nullable:false})
    priority!: number;
    @Field(() => AdCreatetargetGendersInput, {nullable:true})
    targetGenders?: InstanceType<typeof AdCreatetargetGendersInput>;
}

@InputType()
export class AdCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => AdType, {nullable:false})
    type!: `${AdType}`;
    @Field(() => AdCreatevisibilityInput, {nullable:true})
    visibility?: InstanceType<typeof AdCreatevisibilityInput>;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => String, {nullable:false})
    url!: string;
    @Field(() => DateRangeCreateEnvelopeInput, {nullable:false})
    validity!: InstanceType<typeof DateRangeCreateEnvelopeInput>;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => String, {nullable:true})
    advertiserName?: string;
    @Field(() => String, {nullable:false})
    advertiserId!: string;
    @Field(() => Int, {nullable:true})
    monthlyBudget?: number;
    @Field(() => [EduInstituteSelectOptionCreateInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionCreateInput>;
    @Field(() => Int, {nullable:false})
    priority!: number;
    @Field(() => AdCreatetargetGendersInput, {nullable:true})
    targetGenders?: InstanceType<typeof AdCreatetargetGendersInput>;
}

@InputType()
export class AdCreateNestedManyWithoutAdvertiserInput {
    @Field(() => [AdCreateWithoutAdvertiserInput], {nullable:true})
    @Type(() => AdCreateWithoutAdvertiserInput)
    create?: Array<AdCreateWithoutAdvertiserInput>;
    @Field(() => [AdCreateOrConnectWithoutAdvertiserInput], {nullable:true})
    @Type(() => AdCreateOrConnectWithoutAdvertiserInput)
    connectOrCreate?: Array<AdCreateOrConnectWithoutAdvertiserInput>;
    @Field(() => AdCreateManyAdvertiserInputEnvelope, {nullable:true})
    @Type(() => AdCreateManyAdvertiserInputEnvelope)
    createMany?: InstanceType<typeof AdCreateManyAdvertiserInputEnvelope>;
    @Field(() => [AdWhereUniqueInput], {nullable:true})
    @Type(() => AdWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<AdWhereUniqueInput, 'id'>>;
}

@InputType()
export class AdCreateOrConnectWithoutAdvertiserInput {
    @Field(() => AdWhereUniqueInput, {nullable:false})
    @Type(() => AdWhereUniqueInput)
    where!: Prisma.AtLeast<AdWhereUniqueInput, 'id'>;
    @Field(() => AdCreateWithoutAdvertiserInput, {nullable:false})
    @Type(() => AdCreateWithoutAdvertiserInput)
    create!: InstanceType<typeof AdCreateWithoutAdvertiserInput>;
}

@InputType()
export class AdCreateWithoutAdvertiserInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => AdType, {nullable:false})
    type!: `${AdType}`;
    @Field(() => AdCreatevisibilityInput, {nullable:true})
    visibility?: InstanceType<typeof AdCreatevisibilityInput>;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => String, {nullable:false})
    url!: string;
    @Field(() => DateRangeCreateEnvelopeInput, {nullable:false})
    validity!: InstanceType<typeof DateRangeCreateEnvelopeInput>;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => String, {nullable:true})
    advertiserName?: string;
    @Field(() => Int, {nullable:true})
    monthlyBudget?: number;
    @Field(() => [EduInstituteSelectOptionCreateInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionCreateInput>;
    @Field(() => Int, {nullable:false})
    priority!: number;
    @Field(() => AdCreatetargetGendersInput, {nullable:true})
    targetGenders?: InstanceType<typeof AdCreatetargetGendersInput>;
}

@InputType()
export class AdCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => AdType, {nullable:false})
    type!: `${AdType}`;
    @Field(() => AdCreatevisibilityInput, {nullable:true})
    visibility?: InstanceType<typeof AdCreatevisibilityInput>;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => String, {nullable:false})
    url!: string;
    @Field(() => DateRangeCreateEnvelopeInput, {nullable:false})
    validity!: InstanceType<typeof DateRangeCreateEnvelopeInput>;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => String, {nullable:true})
    advertiserName?: string;
    @Field(() => Int, {nullable:true})
    monthlyBudget?: number;
    @Field(() => [EduInstituteSelectOptionCreateInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionCreateInput>;
    @Field(() => Int, {nullable:false})
    priority!: number;
    @Field(() => AdCreatetargetGendersInput, {nullable:true})
    targetGenders?: InstanceType<typeof AdCreatetargetGendersInput>;
    @Field(() => AdvertiserCreateNestedOneWithoutAdsInput, {nullable:false})
    advertiser!: InstanceType<typeof AdvertiserCreateNestedOneWithoutAdsInput>;
}

@InputType()
export class AdCreatetargetGendersInput {
    @Field(() => [Gender], {nullable:false})
    set!: Array<`${Gender}`>;
}

@InputType()
export class AdCreatevisibilityInput {
    @Field(() => [AdVisibility], {nullable:false})
    set!: Array<`${AdVisibility}`>;
}

@ArgsType()
export class AdGroupByArgs {
    @Field(() => AdWhereInput, {nullable:true})
    @Type(() => AdWhereInput)
    where?: InstanceType<typeof AdWhereInput>;
    @Field(() => [AdOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<AdOrderByWithAggregationInput>;
    @Field(() => [AdScalarFieldEnum], {nullable:false})
    by!: Array<`${AdScalarFieldEnum}`>;
    @Field(() => AdScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof AdScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class AdListRelationFilter {
    @Field(() => AdWhereInput, {nullable:true})
    every?: InstanceType<typeof AdWhereInput>;
    @Field(() => AdWhereInput, {nullable:true})
    some?: InstanceType<typeof AdWhereInput>;
    @Field(() => AdWhereInput, {nullable:true})
    none?: InstanceType<typeof AdWhereInput>;
}

@InputType()
export class AdMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    title?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    image?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    url?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    advertiserName?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    advertiserId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    monthlyBudget?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    priority?: `${SortOrder}`;
}

@InputType()
export class AdMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    title?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    image?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    url?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    advertiserName?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    advertiserId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    monthlyBudget?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    priority?: `${SortOrder}`;
}

@InputType()
export class AdOrderByRelationAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    _count?: `${SortOrder}`;
}

@InputType()
export class AdOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    visibility?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    title?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    image?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    url?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    advertiserName?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    advertiserId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    monthlyBudget?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    priority?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    targetGenders?: `${SortOrder}`;
    @Field(() => AdCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof AdCountOrderByAggregateInput>;
    @Field(() => AdAvgOrderByAggregateInput, {nullable:true})
    _avg?: InstanceType<typeof AdAvgOrderByAggregateInput>;
    @Field(() => AdMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof AdMaxOrderByAggregateInput>;
    @Field(() => AdMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof AdMinOrderByAggregateInput>;
    @Field(() => AdSumOrderByAggregateInput, {nullable:true})
    _sum?: InstanceType<typeof AdSumOrderByAggregateInput>;
}

@InputType()
export class AdOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    visibility?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    title?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    image?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    url?: `${SortOrder}`;
    @Field(() => DateRangeOrderByInput, {nullable:true})
    validity?: InstanceType<typeof DateRangeOrderByInput>;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    advertiserName?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    advertiserId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    monthlyBudget?: `${SortOrder}`;
    @Field(() => EduInstituteSelectOptionOrderByCompositeAggregateInput, {nullable:true})
    selectedEduInstitutes?: InstanceType<typeof EduInstituteSelectOptionOrderByCompositeAggregateInput>;
    @Field(() => SortOrder, {nullable:true})
    priority?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    targetGenders?: `${SortOrder}`;
    @Field(() => AdvertiserOrderByWithRelationInput, {nullable:true})
    advertiser?: InstanceType<typeof AdvertiserOrderByWithRelationInput>;
}

@InputType()
export class AdScalarWhereWithAggregatesInput {
    @Field(() => [AdScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<AdScalarWhereWithAggregatesInput>;
    @Field(() => [AdScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<AdScalarWhereWithAggregatesInput>;
    @Field(() => [AdScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<AdScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => EnumAdTypeWithAggregatesFilter, {nullable:true})
    type?: InstanceType<typeof EnumAdTypeWithAggregatesFilter>;
    @Field(() => EnumAdVisibilityNullableListFilter, {nullable:true})
    visibility?: InstanceType<typeof EnumAdVisibilityNullableListFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    title?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    image?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    url?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => BoolWithAggregatesFilter, {nullable:true})
    active?: InstanceType<typeof BoolWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    advertiserName?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    advertiserId?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => IntNullableWithAggregatesFilter, {nullable:true})
    monthlyBudget?: InstanceType<typeof IntNullableWithAggregatesFilter>;
    @Field(() => IntWithAggregatesFilter, {nullable:true})
    priority?: InstanceType<typeof IntWithAggregatesFilter>;
    @Field(() => EnumGenderNullableListFilter, {nullable:true})
    targetGenders?: InstanceType<typeof EnumGenderNullableListFilter>;
}

@InputType()
export class AdScalarWhereInput {
    @Field(() => [AdScalarWhereInput], {nullable:true})
    AND?: Array<AdScalarWhereInput>;
    @Field(() => [AdScalarWhereInput], {nullable:true})
    OR?: Array<AdScalarWhereInput>;
    @Field(() => [AdScalarWhereInput], {nullable:true})
    NOT?: Array<AdScalarWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => EnumAdTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumAdTypeFilter>;
    @Field(() => EnumAdVisibilityNullableListFilter, {nullable:true})
    visibility?: InstanceType<typeof EnumAdVisibilityNullableListFilter>;
    @Field(() => StringFilter, {nullable:true})
    title?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    image?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    url?: InstanceType<typeof StringFilter>;
    @Field(() => BoolFilter, {nullable:true})
    active?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    advertiserName?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringFilter, {nullable:true})
    advertiserId?: InstanceType<typeof StringFilter>;
    @Field(() => IntNullableFilter, {nullable:true})
    monthlyBudget?: InstanceType<typeof IntNullableFilter>;
    @Field(() => IntFilter, {nullable:true})
    priority?: InstanceType<typeof IntFilter>;
    @Field(() => EnumGenderNullableListFilter, {nullable:true})
    targetGenders?: InstanceType<typeof EnumGenderNullableListFilter>;
}

@InputType()
export class AdSumOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    monthlyBudget?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    priority?: `${SortOrder}`;
}

@InputType()
export class AdUncheckedCreateNestedManyWithoutAdvertiserInput {
    @Field(() => [AdCreateWithoutAdvertiserInput], {nullable:true})
    @Type(() => AdCreateWithoutAdvertiserInput)
    create?: Array<AdCreateWithoutAdvertiserInput>;
    @Field(() => [AdCreateOrConnectWithoutAdvertiserInput], {nullable:true})
    @Type(() => AdCreateOrConnectWithoutAdvertiserInput)
    connectOrCreate?: Array<AdCreateOrConnectWithoutAdvertiserInput>;
    @Field(() => AdCreateManyAdvertiserInputEnvelope, {nullable:true})
    @Type(() => AdCreateManyAdvertiserInputEnvelope)
    createMany?: InstanceType<typeof AdCreateManyAdvertiserInputEnvelope>;
    @Field(() => [AdWhereUniqueInput], {nullable:true})
    @Type(() => AdWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<AdWhereUniqueInput, 'id'>>;
}

@InputType()
export class AdUncheckedCreateWithoutAdvertiserInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => AdType, {nullable:false})
    type!: `${AdType}`;
    @Field(() => AdCreatevisibilityInput, {nullable:true})
    visibility?: InstanceType<typeof AdCreatevisibilityInput>;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => String, {nullable:false})
    url!: string;
    @Field(() => DateRangeCreateEnvelopeInput, {nullable:false})
    validity!: InstanceType<typeof DateRangeCreateEnvelopeInput>;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => String, {nullable:true})
    advertiserName?: string;
    @Field(() => Int, {nullable:true})
    monthlyBudget?: number;
    @Field(() => [EduInstituteSelectOptionCreateInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionCreateInput>;
    @Field(() => Int, {nullable:false})
    priority!: number;
    @Field(() => AdCreatetargetGendersInput, {nullable:true})
    targetGenders?: InstanceType<typeof AdCreatetargetGendersInput>;
}

@InputType()
export class AdUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => AdType, {nullable:false})
    type!: `${AdType}`;
    @Field(() => AdCreatevisibilityInput, {nullable:true})
    visibility?: InstanceType<typeof AdCreatevisibilityInput>;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => String, {nullable:false})
    url!: string;
    @Field(() => DateRangeCreateEnvelopeInput, {nullable:false})
    validity!: InstanceType<typeof DateRangeCreateEnvelopeInput>;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => String, {nullable:true})
    advertiserName?: string;
    @Field(() => String, {nullable:false})
    advertiserId!: string;
    @Field(() => Int, {nullable:true})
    monthlyBudget?: number;
    @Field(() => [EduInstituteSelectOptionCreateInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionCreateInput>;
    @Field(() => Int, {nullable:false})
    priority!: number;
    @Field(() => AdCreatetargetGendersInput, {nullable:true})
    targetGenders?: InstanceType<typeof AdCreatetargetGendersInput>;
}

@InputType()
export class AdUncheckedUpdateManyWithoutAdvertiserNestedInput {
    @Field(() => [AdCreateWithoutAdvertiserInput], {nullable:true})
    @Type(() => AdCreateWithoutAdvertiserInput)
    create?: Array<AdCreateWithoutAdvertiserInput>;
    @Field(() => [AdCreateOrConnectWithoutAdvertiserInput], {nullable:true})
    @Type(() => AdCreateOrConnectWithoutAdvertiserInput)
    connectOrCreate?: Array<AdCreateOrConnectWithoutAdvertiserInput>;
    @Field(() => [AdUpsertWithWhereUniqueWithoutAdvertiserInput], {nullable:true})
    @Type(() => AdUpsertWithWhereUniqueWithoutAdvertiserInput)
    upsert?: Array<AdUpsertWithWhereUniqueWithoutAdvertiserInput>;
    @Field(() => AdCreateManyAdvertiserInputEnvelope, {nullable:true})
    @Type(() => AdCreateManyAdvertiserInputEnvelope)
    createMany?: InstanceType<typeof AdCreateManyAdvertiserInputEnvelope>;
    @Field(() => [AdWhereUniqueInput], {nullable:true})
    @Type(() => AdWhereUniqueInput)
    set?: Array<Prisma.AtLeast<AdWhereUniqueInput, 'id'>>;
    @Field(() => [AdWhereUniqueInput], {nullable:true})
    @Type(() => AdWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<AdWhereUniqueInput, 'id'>>;
    @Field(() => [AdWhereUniqueInput], {nullable:true})
    @Type(() => AdWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<AdWhereUniqueInput, 'id'>>;
    @Field(() => [AdWhereUniqueInput], {nullable:true})
    @Type(() => AdWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<AdWhereUniqueInput, 'id'>>;
    @Field(() => [AdUpdateWithWhereUniqueWithoutAdvertiserInput], {nullable:true})
    @Type(() => AdUpdateWithWhereUniqueWithoutAdvertiserInput)
    update?: Array<AdUpdateWithWhereUniqueWithoutAdvertiserInput>;
    @Field(() => [AdUpdateManyWithWhereWithoutAdvertiserInput], {nullable:true})
    @Type(() => AdUpdateManyWithWhereWithoutAdvertiserInput)
    updateMany?: Array<AdUpdateManyWithWhereWithoutAdvertiserInput>;
    @Field(() => [AdScalarWhereInput], {nullable:true})
    @Type(() => AdScalarWhereInput)
    deleteMany?: Array<AdScalarWhereInput>;
}

@InputType()
export class AdUncheckedUpdateManyWithoutAdvertiserInput {
    @Field(() => EnumAdTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumAdTypeFieldUpdateOperationsInput>;
    @Field(() => AdUpdatevisibilityInput, {nullable:true})
    visibility?: InstanceType<typeof AdUpdatevisibilityInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateRangeUpdateEnvelopeInput, {nullable:true})
    validity?: InstanceType<typeof DateRangeUpdateEnvelopeInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    advertiserName?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableIntFieldUpdateOperationsInput, {nullable:true})
    monthlyBudget?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    @Field(() => [EduInstituteSelectOptionCreateInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionCreateInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    priority?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => AdUpdatetargetGendersInput, {nullable:true})
    targetGenders?: InstanceType<typeof AdUpdatetargetGendersInput>;
}

@InputType()
export class AdUncheckedUpdateManyInput {
    @Field(() => EnumAdTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumAdTypeFieldUpdateOperationsInput>;
    @Field(() => AdUpdatevisibilityInput, {nullable:true})
    visibility?: InstanceType<typeof AdUpdatevisibilityInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateRangeUpdateEnvelopeInput, {nullable:true})
    validity?: InstanceType<typeof DateRangeUpdateEnvelopeInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    advertiserName?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    advertiserId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableIntFieldUpdateOperationsInput, {nullable:true})
    monthlyBudget?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    @Field(() => [EduInstituteSelectOptionCreateInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionCreateInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    priority?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => AdUpdatetargetGendersInput, {nullable:true})
    targetGenders?: InstanceType<typeof AdUpdatetargetGendersInput>;
}

@InputType()
export class AdUncheckedUpdateWithoutAdvertiserInput {
    @Field(() => EnumAdTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumAdTypeFieldUpdateOperationsInput>;
    @Field(() => AdUpdatevisibilityInput, {nullable:true})
    visibility?: InstanceType<typeof AdUpdatevisibilityInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateRangeUpdateEnvelopeInput, {nullable:true})
    validity?: InstanceType<typeof DateRangeUpdateEnvelopeInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    advertiserName?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableIntFieldUpdateOperationsInput, {nullable:true})
    monthlyBudget?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    @Field(() => [EduInstituteSelectOptionCreateInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionCreateInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    priority?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => AdUpdatetargetGendersInput, {nullable:true})
    targetGenders?: InstanceType<typeof AdUpdatetargetGendersInput>;
}

@InputType()
export class AdUncheckedUpdateInput {
    @Field(() => EnumAdTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumAdTypeFieldUpdateOperationsInput>;
    @Field(() => AdUpdatevisibilityInput, {nullable:true})
    visibility?: InstanceType<typeof AdUpdatevisibilityInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateRangeUpdateEnvelopeInput, {nullable:true})
    validity?: InstanceType<typeof DateRangeUpdateEnvelopeInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    advertiserName?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    advertiserId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableIntFieldUpdateOperationsInput, {nullable:true})
    monthlyBudget?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    @Field(() => [EduInstituteSelectOptionCreateInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionCreateInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    priority?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => AdUpdatetargetGendersInput, {nullable:true})
    targetGenders?: InstanceType<typeof AdUpdatetargetGendersInput>;
}

@InputType()
export class AdUpdateManyMutationInput {
    @Field(() => EnumAdTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumAdTypeFieldUpdateOperationsInput>;
    @Field(() => AdUpdatevisibilityInput, {nullable:true})
    visibility?: InstanceType<typeof AdUpdatevisibilityInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateRangeUpdateEnvelopeInput, {nullable:true})
    validity?: InstanceType<typeof DateRangeUpdateEnvelopeInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    advertiserName?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableIntFieldUpdateOperationsInput, {nullable:true})
    monthlyBudget?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    @Field(() => [EduInstituteSelectOptionCreateInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionCreateInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    priority?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => AdUpdatetargetGendersInput, {nullable:true})
    targetGenders?: InstanceType<typeof AdUpdatetargetGendersInput>;
}

@InputType()
export class AdUpdateManyWithWhereWithoutAdvertiserInput {
    @Field(() => AdScalarWhereInput, {nullable:false})
    @Type(() => AdScalarWhereInput)
    where!: InstanceType<typeof AdScalarWhereInput>;
    @Field(() => AdUpdateManyMutationInput, {nullable:false})
    @Type(() => AdUpdateManyMutationInput)
    data!: InstanceType<typeof AdUpdateManyMutationInput>;
}

@InputType()
export class AdUpdateManyWithoutAdvertiserNestedInput {
    @Field(() => [AdCreateWithoutAdvertiserInput], {nullable:true})
    @Type(() => AdCreateWithoutAdvertiserInput)
    create?: Array<AdCreateWithoutAdvertiserInput>;
    @Field(() => [AdCreateOrConnectWithoutAdvertiserInput], {nullable:true})
    @Type(() => AdCreateOrConnectWithoutAdvertiserInput)
    connectOrCreate?: Array<AdCreateOrConnectWithoutAdvertiserInput>;
    @Field(() => [AdUpsertWithWhereUniqueWithoutAdvertiserInput], {nullable:true})
    @Type(() => AdUpsertWithWhereUniqueWithoutAdvertiserInput)
    upsert?: Array<AdUpsertWithWhereUniqueWithoutAdvertiserInput>;
    @Field(() => AdCreateManyAdvertiserInputEnvelope, {nullable:true})
    @Type(() => AdCreateManyAdvertiserInputEnvelope)
    createMany?: InstanceType<typeof AdCreateManyAdvertiserInputEnvelope>;
    @Field(() => [AdWhereUniqueInput], {nullable:true})
    @Type(() => AdWhereUniqueInput)
    set?: Array<Prisma.AtLeast<AdWhereUniqueInput, 'id'>>;
    @Field(() => [AdWhereUniqueInput], {nullable:true})
    @Type(() => AdWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<AdWhereUniqueInput, 'id'>>;
    @Field(() => [AdWhereUniqueInput], {nullable:true})
    @Type(() => AdWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<AdWhereUniqueInput, 'id'>>;
    @Field(() => [AdWhereUniqueInput], {nullable:true})
    @Type(() => AdWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<AdWhereUniqueInput, 'id'>>;
    @Field(() => [AdUpdateWithWhereUniqueWithoutAdvertiserInput], {nullable:true})
    @Type(() => AdUpdateWithWhereUniqueWithoutAdvertiserInput)
    update?: Array<AdUpdateWithWhereUniqueWithoutAdvertiserInput>;
    @Field(() => [AdUpdateManyWithWhereWithoutAdvertiserInput], {nullable:true})
    @Type(() => AdUpdateManyWithWhereWithoutAdvertiserInput)
    updateMany?: Array<AdUpdateManyWithWhereWithoutAdvertiserInput>;
    @Field(() => [AdScalarWhereInput], {nullable:true})
    @Type(() => AdScalarWhereInput)
    deleteMany?: Array<AdScalarWhereInput>;
}

@InputType()
export class AdUpdateWithWhereUniqueWithoutAdvertiserInput {
    @Field(() => AdWhereUniqueInput, {nullable:false})
    @Type(() => AdWhereUniqueInput)
    where!: Prisma.AtLeast<AdWhereUniqueInput, 'id'>;
    @Field(() => AdUpdateWithoutAdvertiserInput, {nullable:false})
    @Type(() => AdUpdateWithoutAdvertiserInput)
    data!: InstanceType<typeof AdUpdateWithoutAdvertiserInput>;
}

@InputType()
export class AdUpdateWithoutAdvertiserInput {
    @Field(() => EnumAdTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumAdTypeFieldUpdateOperationsInput>;
    @Field(() => AdUpdatevisibilityInput, {nullable:true})
    visibility?: InstanceType<typeof AdUpdatevisibilityInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateRangeUpdateEnvelopeInput, {nullable:true})
    validity?: InstanceType<typeof DateRangeUpdateEnvelopeInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    advertiserName?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableIntFieldUpdateOperationsInput, {nullable:true})
    monthlyBudget?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    @Field(() => [EduInstituteSelectOptionCreateInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionCreateInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    priority?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => AdUpdatetargetGendersInput, {nullable:true})
    targetGenders?: InstanceType<typeof AdUpdatetargetGendersInput>;
}

@InputType()
export class AdUpdateInput {
    @Field(() => EnumAdTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumAdTypeFieldUpdateOperationsInput>;
    @Field(() => AdUpdatevisibilityInput, {nullable:true})
    visibility?: InstanceType<typeof AdUpdatevisibilityInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateRangeUpdateEnvelopeInput, {nullable:true})
    validity?: InstanceType<typeof DateRangeUpdateEnvelopeInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    advertiserName?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableIntFieldUpdateOperationsInput, {nullable:true})
    monthlyBudget?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    @Field(() => [EduInstituteSelectOptionCreateInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionCreateInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    priority?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => AdUpdatetargetGendersInput, {nullable:true})
    targetGenders?: InstanceType<typeof AdUpdatetargetGendersInput>;
    @Field(() => AdvertiserUpdateOneRequiredWithoutAdsNestedInput, {nullable:true})
    advertiser?: InstanceType<typeof AdvertiserUpdateOneRequiredWithoutAdsNestedInput>;
}

@InputType()
export class AdUpdatetargetGendersInput {
    @Field(() => [Gender], {nullable:true})
    set?: Array<`${Gender}`>;
    @Field(() => [Gender], {nullable:true})
    push?: Array<`${Gender}`>;
}

@InputType()
export class AdUpdatevisibilityInput {
    @Field(() => [AdVisibility], {nullable:true})
    set?: Array<`${AdVisibility}`>;
    @Field(() => [AdVisibility], {nullable:true})
    push?: Array<`${AdVisibility}`>;
}

@InputType()
export class AdUpsertWithWhereUniqueWithoutAdvertiserInput {
    @Field(() => AdWhereUniqueInput, {nullable:false})
    @Type(() => AdWhereUniqueInput)
    where!: Prisma.AtLeast<AdWhereUniqueInput, 'id'>;
    @Field(() => AdUpdateWithoutAdvertiserInput, {nullable:false})
    @Type(() => AdUpdateWithoutAdvertiserInput)
    update!: InstanceType<typeof AdUpdateWithoutAdvertiserInput>;
    @Field(() => AdCreateWithoutAdvertiserInput, {nullable:false})
    @Type(() => AdCreateWithoutAdvertiserInput)
    create!: InstanceType<typeof AdCreateWithoutAdvertiserInput>;
}

@InputType()
export class AdWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => [AdWhereInput], {nullable:true})
    AND?: Array<AdWhereInput>;
    @Field(() => [AdWhereInput], {nullable:true})
    OR?: Array<AdWhereInput>;
    @Field(() => [AdWhereInput], {nullable:true})
    NOT?: Array<AdWhereInput>;
    @Field(() => EnumAdTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumAdTypeFilter>;
    @Field(() => EnumAdVisibilityNullableListFilter, {nullable:true})
    visibility?: InstanceType<typeof EnumAdVisibilityNullableListFilter>;
    @Field(() => StringFilter, {nullable:true})
    title?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    image?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    url?: InstanceType<typeof StringFilter>;
    @Field(() => DateRangeCompositeFilter, {nullable:true})
    validity?: InstanceType<typeof DateRangeCompositeFilter>;
    @Field(() => BoolFilter, {nullable:true})
    active?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    advertiserName?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringFilter, {nullable:true})
    advertiserId?: InstanceType<typeof StringFilter>;
    @Field(() => IntNullableFilter, {nullable:true})
    monthlyBudget?: InstanceType<typeof IntNullableFilter>;
    @Field(() => [EduInstituteSelectOptionObjectEqualityInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionObjectEqualityInput>;
    @Field(() => IntFilter, {nullable:true})
    priority?: InstanceType<typeof IntFilter>;
    @Field(() => EnumGenderNullableListFilter, {nullable:true})
    targetGenders?: InstanceType<typeof EnumGenderNullableListFilter>;
    @Field(() => AdvertiserRelationFilter, {nullable:true})
    advertiser?: InstanceType<typeof AdvertiserRelationFilter>;
}

@InputType()
export class AdWhereInput {
    @Field(() => [AdWhereInput], {nullable:true})
    AND?: Array<AdWhereInput>;
    @Field(() => [AdWhereInput], {nullable:true})
    OR?: Array<AdWhereInput>;
    @Field(() => [AdWhereInput], {nullable:true})
    NOT?: Array<AdWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => EnumAdTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumAdTypeFilter>;
    @Field(() => EnumAdVisibilityNullableListFilter, {nullable:true})
    visibility?: InstanceType<typeof EnumAdVisibilityNullableListFilter>;
    @Field(() => StringFilter, {nullable:true})
    title?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    image?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    url?: InstanceType<typeof StringFilter>;
    @Field(() => DateRangeCompositeFilter, {nullable:true})
    validity?: InstanceType<typeof DateRangeCompositeFilter>;
    @Field(() => BoolFilter, {nullable:true})
    active?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    advertiserName?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringFilter, {nullable:true})
    advertiserId?: InstanceType<typeof StringFilter>;
    @Field(() => IntNullableFilter, {nullable:true})
    monthlyBudget?: InstanceType<typeof IntNullableFilter>;
    @Field(() => [EduInstituteSelectOptionObjectEqualityInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionObjectEqualityInput>;
    @Field(() => IntFilter, {nullable:true})
    priority?: InstanceType<typeof IntFilter>;
    @Field(() => EnumGenderNullableListFilter, {nullable:true})
    targetGenders?: InstanceType<typeof EnumGenderNullableListFilter>;
    @Field(() => AdvertiserRelationFilter, {nullable:true})
    advertiser?: InstanceType<typeof AdvertiserRelationFilter>;
}

@ObjectType()
export class Ad {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => AdType, {nullable:false})
    type!: `${AdType}`;
    @Field(() => [AdVisibility], {nullable:true})
    visibility!: Array<`${AdVisibility}`>;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => String, {nullable:false})
    url!: string;
    @Field(() => DateRange, {nullable:false})
    validity?: InstanceType<typeof DateRange>;
    @Field(() => Boolean, {defaultValue:false,nullable:false})
    active!: boolean;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
    @Field(() => Date, {nullable:false})
    updatedAt!: Date;
    @Field(() => String, {nullable:true})
    advertiserName!: string | null;
    @Field(() => String, {nullable:false})
    advertiserId!: string;
    @Field(() => Int, {nullable:true})
    monthlyBudget!: number | null;
    @Field(() => [EduInstituteSelectOption], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOption>;
    @Field(() => Int, {nullable:false})
    priority!: number;
    @Field(() => [Gender], {nullable:true})
    targetGenders!: Array<`${Gender}`>;
    @Field(() => Advertiser, {nullable:false})
    advertiser?: InstanceType<typeof Advertiser>;
}

@ArgsType()
export class CreateManyAdArgs {
    @Field(() => [AdCreateManyInput], {nullable:false})
    @Type(() => AdCreateManyInput)
    data!: Array<AdCreateManyInput>;
}

@ArgsType()
export class CreateOneAdArgs {
    @Field(() => AdCreateInput, {nullable:false})
    @Type(() => AdCreateInput)
    data!: InstanceType<typeof AdCreateInput>;
}

@ArgsType()
export class DeleteManyAdArgs {
    @Field(() => AdWhereInput, {nullable:true})
    @Type(() => AdWhereInput)
    where?: InstanceType<typeof AdWhereInput>;
}

@ArgsType()
export class DeleteOneAdArgs {
    @Field(() => AdWhereUniqueInput, {nullable:false})
    @Type(() => AdWhereUniqueInput)
    where!: Prisma.AtLeast<AdWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindFirstAdOrThrowArgs {
    @Field(() => AdWhereInput, {nullable:true})
    @Type(() => AdWhereInput)
    where?: InstanceType<typeof AdWhereInput>;
    @Field(() => [AdOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<AdOrderByWithRelationInput>;
    @Field(() => AdWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<AdWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [AdScalarFieldEnum], {nullable:true})
    distinct?: Array<`${AdScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstAdArgs {
    @Field(() => AdWhereInput, {nullable:true})
    @Type(() => AdWhereInput)
    where?: InstanceType<typeof AdWhereInput>;
    @Field(() => [AdOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<AdOrderByWithRelationInput>;
    @Field(() => AdWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<AdWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [AdScalarFieldEnum], {nullable:true})
    distinct?: Array<`${AdScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyAdArgs {
    @Field(() => AdWhereInput, {nullable:true})
    @Type(() => AdWhereInput)
    where?: InstanceType<typeof AdWhereInput>;
    @Field(() => [AdOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<AdOrderByWithRelationInput>;
    @Field(() => AdWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<AdWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [AdScalarFieldEnum], {nullable:true})
    distinct?: Array<`${AdScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniqueAdOrThrowArgs {
    @Field(() => AdWhereUniqueInput, {nullable:false})
    @Type(() => AdWhereUniqueInput)
    where!: Prisma.AtLeast<AdWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindUniqueAdArgs {
    @Field(() => AdWhereUniqueInput, {nullable:false})
    @Type(() => AdWhereUniqueInput)
    where!: Prisma.AtLeast<AdWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpdateManyAdArgs {
    @Field(() => AdUpdateManyMutationInput, {nullable:false})
    @Type(() => AdUpdateManyMutationInput)
    data!: InstanceType<typeof AdUpdateManyMutationInput>;
    @Field(() => AdWhereInput, {nullable:true})
    @Type(() => AdWhereInput)
    where?: InstanceType<typeof AdWhereInput>;
}

@ArgsType()
export class UpdateOneAdArgs {
    @Field(() => AdUpdateInput, {nullable:false})
    @Type(() => AdUpdateInput)
    data!: InstanceType<typeof AdUpdateInput>;
    @Field(() => AdWhereUniqueInput, {nullable:false})
    @Type(() => AdWhereUniqueInput)
    where!: Prisma.AtLeast<AdWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpsertOneAdArgs {
    @Field(() => AdWhereUniqueInput, {nullable:false})
    @Type(() => AdWhereUniqueInput)
    where!: Prisma.AtLeast<AdWhereUniqueInput, 'id'>;
    @Field(() => AdCreateInput, {nullable:false})
    @Type(() => AdCreateInput)
    create!: InstanceType<typeof AdCreateInput>;
    @Field(() => AdUpdateInput, {nullable:false})
    @Type(() => AdUpdateInput)
    update!: InstanceType<typeof AdUpdateInput>;
}

@InputType()
export class AddressCreateInput {
    @Field(() => String, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    phoneNo!: string;
    @Field(() => String, {nullable:false})
    address1!: string;
    @Field(() => String, {nullable:true})
    address2?: string;
    @Field(() => String, {nullable:false})
    zip!: string;
    @Field(() => String, {nullable:false})
    state!: string;
    @Field(() => String, {nullable:false})
    city!: string;
    @Field(() => String, {nullable:false})
    country!: string;
    @Field(() => AddressType, {nullable:false})
    addressType!: `${AddressType}`;
}

@InputType()
export class AddressOrderByCompositeAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    _count?: `${SortOrder}`;
}

@InputType()
export class AddressOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    phoneNo?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    address1?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    address2?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    zip?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    state?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    city?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    country?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    addressType?: `${SortOrder}`;
}

@InputType()
export class AddressUpdateManyInput {
    @Field(() => AddressWhereInput, {nullable:false})
    @Type(() => AddressWhereInput)
    where!: InstanceType<typeof AddressWhereInput>;
    @Field(() => AddressUpdateInput, {nullable:false})
    @Type(() => AddressUpdateInput)
    data!: InstanceType<typeof AddressUpdateInput>;
}

@InputType()
export class AddressUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    phoneNo?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    address1?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    address2?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    zip?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    state?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    city?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    country?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumAddressTypeFieldUpdateOperationsInput, {nullable:true})
    addressType?: InstanceType<typeof EnumAddressTypeFieldUpdateOperationsInput>;
}

@InputType()
export class AddressWhereInput {
    @Field(() => [AddressWhereInput], {nullable:true})
    AND?: Array<AddressWhereInput>;
    @Field(() => [AddressWhereInput], {nullable:true})
    OR?: Array<AddressWhereInput>;
    @Field(() => [AddressWhereInput], {nullable:true})
    NOT?: Array<AddressWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    name?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    phoneNo?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    address1?: InstanceType<typeof StringFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    address2?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringFilter, {nullable:true})
    zip?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    state?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    city?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    country?: InstanceType<typeof StringFilter>;
    @Field(() => EnumAddressTypeFilter, {nullable:true})
    addressType?: InstanceType<typeof EnumAddressTypeFilter>;
}

@ObjectType()
export class Address {
    @Field(() => String, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    phoneNo!: string;
    @Field(() => String, {nullable:false})
    address1!: string;
    @Field(() => String, {nullable:true})
    address2!: string | null;
    @Field(() => String, {nullable:false})
    zip!: string;
    @Field(() => String, {nullable:false})
    state!: string;
    @Field(() => String, {nullable:false})
    city!: string;
    @Field(() => String, {nullable:false})
    country!: string;
    @Field(() => AddressType, {nullable:false})
    addressType!: `${AddressType}`;
}

@ArgsType()
export class AdminAggregateArgs {
    @Field(() => AdminWhereInput, {nullable:true})
    @Type(() => AdminWhereInput)
    where?: InstanceType<typeof AdminWhereInput>;
    @Field(() => [AdminOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<AdminOrderByWithRelationInput>;
    @Field(() => AdminWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<AdminWhereUniqueInput, 'id' | 'username' | 'email'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class AdminCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    username?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    password?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    countryCode?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    phoneNumber?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    email?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    roles?: `${SortOrder}`;
}

@InputType()
export class AdminCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    username!: string;
    @Field(() => String, {nullable:false})
    password!: string;
    @Field(() => String, {nullable:false})
    countryCode!: string;
    @Field(() => String, {nullable:false})
    phoneNumber!: string;
    @Field(() => String, {nullable:false})
    email!: string;
    @Field(() => AdminCreaterolesInput, {nullable:true})
    roles?: InstanceType<typeof AdminCreaterolesInput>;
    @Field(() => [AdminSessionCreateInput], {nullable:true})
    sessions?: Array<AdminSessionCreateInput>;
}

@InputType()
export class AdminCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    username!: string;
    @Field(() => String, {nullable:false})
    password!: string;
    @Field(() => String, {nullable:false})
    countryCode!: string;
    @Field(() => String, {nullable:false})
    phoneNumber!: string;
    @Field(() => String, {nullable:false})
    email!: string;
    @Field(() => AdminCreaterolesInput, {nullable:true})
    roles?: InstanceType<typeof AdminCreaterolesInput>;
    @Field(() => [AdminSessionCreateInput], {nullable:true})
    sessions?: Array<AdminSessionCreateInput>;
}

@InputType()
export class AdminCreaterolesInput {
    @Field(() => [AdminRole], {nullable:false})
    set!: Array<`${AdminRole}`>;
}

@ArgsType()
export class AdminGroupByArgs {
    @Field(() => AdminWhereInput, {nullable:true})
    @Type(() => AdminWhereInput)
    where?: InstanceType<typeof AdminWhereInput>;
    @Field(() => [AdminOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<AdminOrderByWithAggregationInput>;
    @Field(() => [AdminScalarFieldEnum], {nullable:false})
    by!: Array<`${AdminScalarFieldEnum}`>;
    @Field(() => AdminScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof AdminScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class AdminMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    username?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    password?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    countryCode?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    phoneNumber?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    email?: `${SortOrder}`;
}

@InputType()
export class AdminMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    username?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    password?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    countryCode?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    phoneNumber?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    email?: `${SortOrder}`;
}

@InputType()
export class AdminOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    username?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    password?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    countryCode?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    phoneNumber?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    email?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    roles?: `${SortOrder}`;
    @Field(() => AdminCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof AdminCountOrderByAggregateInput>;
    @Field(() => AdminMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof AdminMaxOrderByAggregateInput>;
    @Field(() => AdminMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof AdminMinOrderByAggregateInput>;
}

@InputType()
export class AdminOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    username?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    password?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    countryCode?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    phoneNumber?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    email?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    roles?: `${SortOrder}`;
    @Field(() => AdminSessionOrderByCompositeAggregateInput, {nullable:true})
    sessions?: InstanceType<typeof AdminSessionOrderByCompositeAggregateInput>;
}

@InputType()
export class AdminScalarWhereWithAggregatesInput {
    @Field(() => [AdminScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<AdminScalarWhereWithAggregatesInput>;
    @Field(() => [AdminScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<AdminScalarWhereWithAggregatesInput>;
    @Field(() => [AdminScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<AdminScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    name?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    username?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    password?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    countryCode?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    phoneNumber?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    email?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => EnumAdminRoleNullableListFilter, {nullable:true})
    roles?: InstanceType<typeof EnumAdminRoleNullableListFilter>;
}

@InputType()
export class AdminUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    username!: string;
    @Field(() => String, {nullable:false})
    password!: string;
    @Field(() => String, {nullable:false})
    countryCode!: string;
    @Field(() => String, {nullable:false})
    phoneNumber!: string;
    @Field(() => String, {nullable:false})
    email!: string;
    @Field(() => AdminCreaterolesInput, {nullable:true})
    roles?: InstanceType<typeof AdminCreaterolesInput>;
    @Field(() => [AdminSessionCreateInput], {nullable:true})
    sessions?: Array<AdminSessionCreateInput>;
}

@InputType()
export class AdminUncheckedUpdateManyInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    countryCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    phoneNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => AdminUpdaterolesInput, {nullable:true})
    roles?: InstanceType<typeof AdminUpdaterolesInput>;
    @Field(() => [AdminSessionCreateInput], {nullable:true})
    sessions?: Array<AdminSessionCreateInput>;
}

@InputType()
export class AdminUncheckedUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    countryCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    phoneNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => AdminUpdaterolesInput, {nullable:true})
    roles?: InstanceType<typeof AdminUpdaterolesInput>;
    @Field(() => [AdminSessionCreateInput], {nullable:true})
    sessions?: Array<AdminSessionCreateInput>;
}

@InputType()
export class AdminUpdateManyMutationInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    countryCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    phoneNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => AdminUpdaterolesInput, {nullable:true})
    roles?: InstanceType<typeof AdminUpdaterolesInput>;
    @Field(() => [AdminSessionCreateInput], {nullable:true})
    sessions?: Array<AdminSessionCreateInput>;
}

@InputType()
export class AdminUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    countryCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    phoneNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => AdminUpdaterolesInput, {nullable:true})
    roles?: InstanceType<typeof AdminUpdaterolesInput>;
    @Field(() => [AdminSessionCreateInput], {nullable:true})
    sessions?: Array<AdminSessionCreateInput>;
}

@InputType()
export class AdminUpdaterolesInput {
    @Field(() => [AdminRole], {nullable:true})
    set?: Array<`${AdminRole}`>;
    @Field(() => [AdminRole], {nullable:true})
    push?: Array<`${AdminRole}`>;
}

@InputType()
export class AdminWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:true})
    username?: string;
    @Field(() => String, {nullable:true})
    email?: string;
    @Field(() => [AdminWhereInput], {nullable:true})
    AND?: Array<AdminWhereInput>;
    @Field(() => [AdminWhereInput], {nullable:true})
    OR?: Array<AdminWhereInput>;
    @Field(() => [AdminWhereInput], {nullable:true})
    NOT?: Array<AdminWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    name?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    password?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    countryCode?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    phoneNumber?: InstanceType<typeof StringFilter>;
    @Field(() => EnumAdminRoleNullableListFilter, {nullable:true})
    roles?: InstanceType<typeof EnumAdminRoleNullableListFilter>;
    @Field(() => [AdminSessionObjectEqualityInput], {nullable:true})
    sessions?: Array<AdminSessionObjectEqualityInput>;
}

@InputType()
export class AdminWhereInput {
    @Field(() => [AdminWhereInput], {nullable:true})
    AND?: Array<AdminWhereInput>;
    @Field(() => [AdminWhereInput], {nullable:true})
    OR?: Array<AdminWhereInput>;
    @Field(() => [AdminWhereInput], {nullable:true})
    NOT?: Array<AdminWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    name?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    username?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    password?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    countryCode?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    phoneNumber?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    email?: InstanceType<typeof StringFilter>;
    @Field(() => EnumAdminRoleNullableListFilter, {nullable:true})
    roles?: InstanceType<typeof EnumAdminRoleNullableListFilter>;
    @Field(() => [AdminSessionObjectEqualityInput], {nullable:true})
    sessions?: Array<AdminSessionObjectEqualityInput>;
}

@ObjectType()
export class Admin {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    username!: string;
    @Field(() => String, {nullable:false})
    password!: string;
    @Field(() => String, {nullable:false})
    countryCode!: string;
    @Field(() => String, {nullable:false})
    phoneNumber!: string;
    @Field(() => String, {nullable:false})
    email!: string;
    @Field(() => [AdminRole], {nullable:true})
    roles!: Array<`${AdminRole}`>;
    @Field(() => [AdminSession], {nullable:true})
    sessions?: Array<AdminSession>;
}

@ArgsType()
export class CreateManyAdminArgs {
    @Field(() => [AdminCreateManyInput], {nullable:false})
    @Type(() => AdminCreateManyInput)
    data!: Array<AdminCreateManyInput>;
}

@ArgsType()
export class CreateOneAdminArgs {
    @Field(() => AdminCreateInput, {nullable:false})
    @Type(() => AdminCreateInput)
    data!: InstanceType<typeof AdminCreateInput>;
}

@ArgsType()
export class DeleteManyAdminArgs {
    @Field(() => AdminWhereInput, {nullable:true})
    @Type(() => AdminWhereInput)
    where?: InstanceType<typeof AdminWhereInput>;
}

@ArgsType()
export class DeleteOneAdminArgs {
    @Field(() => AdminWhereUniqueInput, {nullable:false})
    @Type(() => AdminWhereUniqueInput)
    where!: Prisma.AtLeast<AdminWhereUniqueInput, 'id' | 'username' | 'email'>;
}

@ArgsType()
export class FindFirstAdminOrThrowArgs {
    @Field(() => AdminWhereInput, {nullable:true})
    @Type(() => AdminWhereInput)
    where?: InstanceType<typeof AdminWhereInput>;
    @Field(() => [AdminOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<AdminOrderByWithRelationInput>;
    @Field(() => AdminWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<AdminWhereUniqueInput, 'id' | 'username' | 'email'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [AdminScalarFieldEnum], {nullable:true})
    distinct?: Array<`${AdminScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstAdminArgs {
    @Field(() => AdminWhereInput, {nullable:true})
    @Type(() => AdminWhereInput)
    where?: InstanceType<typeof AdminWhereInput>;
    @Field(() => [AdminOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<AdminOrderByWithRelationInput>;
    @Field(() => AdminWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<AdminWhereUniqueInput, 'id' | 'username' | 'email'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [AdminScalarFieldEnum], {nullable:true})
    distinct?: Array<`${AdminScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyAdminArgs {
    @Field(() => AdminWhereInput, {nullable:true})
    @Type(() => AdminWhereInput)
    where?: InstanceType<typeof AdminWhereInput>;
    @Field(() => [AdminOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<AdminOrderByWithRelationInput>;
    @Field(() => AdminWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<AdminWhereUniqueInput, 'id' | 'username' | 'email'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [AdminScalarFieldEnum], {nullable:true})
    distinct?: Array<`${AdminScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniqueAdminOrThrowArgs {
    @Field(() => AdminWhereUniqueInput, {nullable:false})
    @Type(() => AdminWhereUniqueInput)
    where!: Prisma.AtLeast<AdminWhereUniqueInput, 'id' | 'username' | 'email'>;
}

@ArgsType()
export class FindUniqueAdminArgs {
    @Field(() => AdminWhereUniqueInput, {nullable:false})
    @Type(() => AdminWhereUniqueInput)
    where!: Prisma.AtLeast<AdminWhereUniqueInput, 'id' | 'username' | 'email'>;
}

@ArgsType()
export class UpdateManyAdminArgs {
    @Field(() => AdminUpdateManyMutationInput, {nullable:false})
    @Type(() => AdminUpdateManyMutationInput)
    data!: InstanceType<typeof AdminUpdateManyMutationInput>;
    @Field(() => AdminWhereInput, {nullable:true})
    @Type(() => AdminWhereInput)
    where?: InstanceType<typeof AdminWhereInput>;
}

@ArgsType()
export class UpdateOneAdminArgs {
    @Field(() => AdminUpdateInput, {nullable:false})
    @Type(() => AdminUpdateInput)
    data!: InstanceType<typeof AdminUpdateInput>;
    @Field(() => AdminWhereUniqueInput, {nullable:false})
    @Type(() => AdminWhereUniqueInput)
    where!: Prisma.AtLeast<AdminWhereUniqueInput, 'id' | 'username' | 'email'>;
}

@ArgsType()
export class UpsertOneAdminArgs {
    @Field(() => AdminWhereUniqueInput, {nullable:false})
    @Type(() => AdminWhereUniqueInput)
    where!: Prisma.AtLeast<AdminWhereUniqueInput, 'id' | 'username' | 'email'>;
    @Field(() => AdminCreateInput, {nullable:false})
    @Type(() => AdminCreateInput)
    create!: InstanceType<typeof AdminCreateInput>;
    @Field(() => AdminUpdateInput, {nullable:false})
    @Type(() => AdminUpdateInput)
    update!: InstanceType<typeof AdminUpdateInput>;
}

@InputType()
export class AdminSessionCreateInput {
    @Field(() => String, {nullable:false})
    token!: string;
    @Field(() => Boolean, {nullable:true})
    valid?: boolean;
    @Field(() => Date, {nullable:true})
    started?: Date | string;
    @Field(() => Date, {nullable:true})
    lastSeen?: Date | string;
}

@InputType()
export class AdminSessionOrderByCompositeAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    _count?: `${SortOrder}`;
}

@InputType()
export class AdminSessionUpdateManyInput {
    @Field(() => AdminSessionWhereInput, {nullable:false})
    @Type(() => AdminSessionWhereInput)
    where!: InstanceType<typeof AdminSessionWhereInput>;
    @Field(() => AdminSessionUpdateInput, {nullable:false})
    @Type(() => AdminSessionUpdateInput)
    data!: InstanceType<typeof AdminSessionUpdateInput>;
}

@InputType()
export class AdminSessionUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    token?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    valid?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    started?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    lastSeen?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class AdminSessionWhereInput {
    @Field(() => [AdminSessionWhereInput], {nullable:true})
    AND?: Array<AdminSessionWhereInput>;
    @Field(() => [AdminSessionWhereInput], {nullable:true})
    OR?: Array<AdminSessionWhereInput>;
    @Field(() => [AdminSessionWhereInput], {nullable:true})
    NOT?: Array<AdminSessionWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    token?: InstanceType<typeof StringFilter>;
    @Field(() => BoolFilter, {nullable:true})
    valid?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    started?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    lastSeen?: InstanceType<typeof DateTimeFilter>;
}

@ObjectType()
export class AdminSession {
    @Field(() => String, {nullable:false})
    token!: string;
    @Field(() => Boolean, {defaultValue:true,nullable:false})
    valid!: boolean;
    @Field(() => Date, {nullable:false})
    started!: Date;
    @Field(() => Date, {nullable:false})
    lastSeen!: Date;
}

@ArgsType()
export class AdvertiserAggregateArgs {
    @Field(() => AdvertiserWhereInput, {nullable:true})
    @Type(() => AdvertiserWhereInput)
    where?: InstanceType<typeof AdvertiserWhereInput>;
    @Field(() => [AdvertiserOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<AdvertiserOrderByWithRelationInput>;
    @Field(() => AdvertiserWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<AdvertiserWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class AdvertiserCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    companyName?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    companyWebsiteUrl?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    logo?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    address1?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    address2?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    city?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    state?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    zip?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class AdvertiserCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    companyName!: string;
    @Field(() => String, {nullable:false})
    companyWebsiteUrl!: string;
    @Field(() => String, {nullable:false})
    logo!: string;
    @Field(() => String, {nullable:false})
    address1!: string;
    @Field(() => String, {nullable:true})
    address2?: string;
    @Field(() => String, {nullable:false})
    city!: string;
    @Field(() => String, {nullable:false})
    state!: string;
    @Field(() => String, {nullable:false})
    zip!: string;
    @Field(() => AdvertiserPOCCreateEnvelopeInput, {nullable:false})
    pointOfContact!: InstanceType<typeof AdvertiserPOCCreateEnvelopeInput>;
    @Field(() => Boolean, {nullable:false})
    active!: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class AdvertiserCreateNestedOneWithoutAdsInput {
    @Field(() => AdvertiserCreateWithoutAdsInput, {nullable:true})
    @Type(() => AdvertiserCreateWithoutAdsInput)
    create?: InstanceType<typeof AdvertiserCreateWithoutAdsInput>;
    @Field(() => AdvertiserCreateOrConnectWithoutAdsInput, {nullable:true})
    @Type(() => AdvertiserCreateOrConnectWithoutAdsInput)
    connectOrCreate?: InstanceType<typeof AdvertiserCreateOrConnectWithoutAdsInput>;
    @Field(() => AdvertiserWhereUniqueInput, {nullable:true})
    @Type(() => AdvertiserWhereUniqueInput)
    connect?: Prisma.AtLeast<AdvertiserWhereUniqueInput, 'id'>;
}

@InputType()
export class AdvertiserCreateOrConnectWithoutAdsInput {
    @Field(() => AdvertiserWhereUniqueInput, {nullable:false})
    @Type(() => AdvertiserWhereUniqueInput)
    where!: Prisma.AtLeast<AdvertiserWhereUniqueInput, 'id'>;
    @Field(() => AdvertiserCreateWithoutAdsInput, {nullable:false})
    @Type(() => AdvertiserCreateWithoutAdsInput)
    create!: InstanceType<typeof AdvertiserCreateWithoutAdsInput>;
}

@InputType()
export class AdvertiserCreateWithoutAdsInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    companyName!: string;
    @Field(() => String, {nullable:false})
    companyWebsiteUrl!: string;
    @Field(() => String, {nullable:false})
    logo!: string;
    @Field(() => String, {nullable:false})
    address1!: string;
    @Field(() => String, {nullable:true})
    address2?: string;
    @Field(() => String, {nullable:false})
    city!: string;
    @Field(() => String, {nullable:false})
    state!: string;
    @Field(() => String, {nullable:false})
    zip!: string;
    @Field(() => AdvertiserPOCCreateEnvelopeInput, {nullable:false})
    pointOfContact!: InstanceType<typeof AdvertiserPOCCreateEnvelopeInput>;
    @Field(() => Boolean, {nullable:false})
    active!: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class AdvertiserCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    companyName!: string;
    @Field(() => String, {nullable:false})
    companyWebsiteUrl!: string;
    @Field(() => String, {nullable:false})
    logo!: string;
    @Field(() => String, {nullable:false})
    address1!: string;
    @Field(() => String, {nullable:true})
    address2?: string;
    @Field(() => String, {nullable:false})
    city!: string;
    @Field(() => String, {nullable:false})
    state!: string;
    @Field(() => String, {nullable:false})
    zip!: string;
    @Field(() => AdvertiserPOCCreateEnvelopeInput, {nullable:false})
    pointOfContact!: InstanceType<typeof AdvertiserPOCCreateEnvelopeInput>;
    @Field(() => Boolean, {nullable:false})
    active!: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => AdCreateNestedManyWithoutAdvertiserInput, {nullable:true})
    ads?: InstanceType<typeof AdCreateNestedManyWithoutAdvertiserInput>;
}

@ArgsType()
export class AdvertiserGroupByArgs {
    @Field(() => AdvertiserWhereInput, {nullable:true})
    @Type(() => AdvertiserWhereInput)
    where?: InstanceType<typeof AdvertiserWhereInput>;
    @Field(() => [AdvertiserOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<AdvertiserOrderByWithAggregationInput>;
    @Field(() => [AdvertiserScalarFieldEnum], {nullable:false})
    by!: Array<`${AdvertiserScalarFieldEnum}`>;
    @Field(() => AdvertiserScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof AdvertiserScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class AdvertiserMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    companyName?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    companyWebsiteUrl?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    logo?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    address1?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    address2?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    city?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    state?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    zip?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class AdvertiserMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    companyName?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    companyWebsiteUrl?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    logo?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    address1?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    address2?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    city?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    state?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    zip?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class AdvertiserOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    companyName?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    companyWebsiteUrl?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    logo?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    address1?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    address2?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    city?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    state?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    zip?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => AdvertiserCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof AdvertiserCountOrderByAggregateInput>;
    @Field(() => AdvertiserMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof AdvertiserMaxOrderByAggregateInput>;
    @Field(() => AdvertiserMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof AdvertiserMinOrderByAggregateInput>;
}

@InputType()
export class AdvertiserOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    companyName?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    companyWebsiteUrl?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    logo?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    address1?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    address2?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    city?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    state?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    zip?: `${SortOrder}`;
    @Field(() => AdvertiserPOCOrderByInput, {nullable:true})
    pointOfContact?: InstanceType<typeof AdvertiserPOCOrderByInput>;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => AdOrderByRelationAggregateInput, {nullable:true})
    ads?: InstanceType<typeof AdOrderByRelationAggregateInput>;
}

@InputType()
export class AdvertiserRelationFilter {
    @Field(() => AdvertiserWhereInput, {nullable:true})
    is?: InstanceType<typeof AdvertiserWhereInput>;
    @Field(() => AdvertiserWhereInput, {nullable:true})
    isNot?: InstanceType<typeof AdvertiserWhereInput>;
}

@InputType()
export class AdvertiserScalarWhereWithAggregatesInput {
    @Field(() => [AdvertiserScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<AdvertiserScalarWhereWithAggregatesInput>;
    @Field(() => [AdvertiserScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<AdvertiserScalarWhereWithAggregatesInput>;
    @Field(() => [AdvertiserScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<AdvertiserScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    companyName?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    companyWebsiteUrl?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    logo?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    address1?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    address2?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    city?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    state?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    zip?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => BoolWithAggregatesFilter, {nullable:true})
    active?: InstanceType<typeof BoolWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
}

@InputType()
export class AdvertiserUncheckedCreateWithoutAdsInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    companyName!: string;
    @Field(() => String, {nullable:false})
    companyWebsiteUrl!: string;
    @Field(() => String, {nullable:false})
    logo!: string;
    @Field(() => String, {nullable:false})
    address1!: string;
    @Field(() => String, {nullable:true})
    address2?: string;
    @Field(() => String, {nullable:false})
    city!: string;
    @Field(() => String, {nullable:false})
    state!: string;
    @Field(() => String, {nullable:false})
    zip!: string;
    @Field(() => AdvertiserPOCCreateEnvelopeInput, {nullable:false})
    pointOfContact!: InstanceType<typeof AdvertiserPOCCreateEnvelopeInput>;
    @Field(() => Boolean, {nullable:false})
    active!: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class AdvertiserUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    companyName!: string;
    @Field(() => String, {nullable:false})
    companyWebsiteUrl!: string;
    @Field(() => String, {nullable:false})
    logo!: string;
    @Field(() => String, {nullable:false})
    address1!: string;
    @Field(() => String, {nullable:true})
    address2?: string;
    @Field(() => String, {nullable:false})
    city!: string;
    @Field(() => String, {nullable:false})
    state!: string;
    @Field(() => String, {nullable:false})
    zip!: string;
    @Field(() => AdvertiserPOCCreateEnvelopeInput, {nullable:false})
    pointOfContact!: InstanceType<typeof AdvertiserPOCCreateEnvelopeInput>;
    @Field(() => Boolean, {nullable:false})
    active!: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => AdUncheckedCreateNestedManyWithoutAdvertiserInput, {nullable:true})
    ads?: InstanceType<typeof AdUncheckedCreateNestedManyWithoutAdvertiserInput>;
}

@InputType()
export class AdvertiserUncheckedUpdateManyInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    companyName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    companyWebsiteUrl?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    logo?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    address1?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    address2?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    city?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    state?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    zip?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => AdvertiserPOCUpdateEnvelopeInput, {nullable:true})
    pointOfContact?: InstanceType<typeof AdvertiserPOCUpdateEnvelopeInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class AdvertiserUncheckedUpdateWithoutAdsInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    companyName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    companyWebsiteUrl?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    logo?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    address1?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    address2?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    city?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    state?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    zip?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => AdvertiserPOCUpdateEnvelopeInput, {nullable:true})
    pointOfContact?: InstanceType<typeof AdvertiserPOCUpdateEnvelopeInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class AdvertiserUncheckedUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    companyName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    companyWebsiteUrl?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    logo?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    address1?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    address2?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    city?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    state?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    zip?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => AdvertiserPOCUpdateEnvelopeInput, {nullable:true})
    pointOfContact?: InstanceType<typeof AdvertiserPOCUpdateEnvelopeInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => AdUncheckedUpdateManyWithoutAdvertiserNestedInput, {nullable:true})
    ads?: InstanceType<typeof AdUncheckedUpdateManyWithoutAdvertiserNestedInput>;
}

@InputType()
export class AdvertiserUpdateManyMutationInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    companyName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    companyWebsiteUrl?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    logo?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    address1?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    address2?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    city?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    state?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    zip?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => AdvertiserPOCUpdateEnvelopeInput, {nullable:true})
    pointOfContact?: InstanceType<typeof AdvertiserPOCUpdateEnvelopeInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class AdvertiserUpdateOneRequiredWithoutAdsNestedInput {
    @Field(() => AdvertiserCreateWithoutAdsInput, {nullable:true})
    @Type(() => AdvertiserCreateWithoutAdsInput)
    create?: InstanceType<typeof AdvertiserCreateWithoutAdsInput>;
    @Field(() => AdvertiserCreateOrConnectWithoutAdsInput, {nullable:true})
    @Type(() => AdvertiserCreateOrConnectWithoutAdsInput)
    connectOrCreate?: InstanceType<typeof AdvertiserCreateOrConnectWithoutAdsInput>;
    @Field(() => AdvertiserUpsertWithoutAdsInput, {nullable:true})
    @Type(() => AdvertiserUpsertWithoutAdsInput)
    upsert?: InstanceType<typeof AdvertiserUpsertWithoutAdsInput>;
    @Field(() => AdvertiserWhereUniqueInput, {nullable:true})
    @Type(() => AdvertiserWhereUniqueInput)
    connect?: Prisma.AtLeast<AdvertiserWhereUniqueInput, 'id'>;
    @Field(() => AdvertiserUpdateToOneWithWhereWithoutAdsInput, {nullable:true})
    @Type(() => AdvertiserUpdateToOneWithWhereWithoutAdsInput)
    update?: InstanceType<typeof AdvertiserUpdateToOneWithWhereWithoutAdsInput>;
}

@InputType()
export class AdvertiserUpdateToOneWithWhereWithoutAdsInput {
    @Field(() => AdvertiserWhereInput, {nullable:true})
    @Type(() => AdvertiserWhereInput)
    where?: InstanceType<typeof AdvertiserWhereInput>;
    @Field(() => AdvertiserUpdateWithoutAdsInput, {nullable:false})
    @Type(() => AdvertiserUpdateWithoutAdsInput)
    data!: InstanceType<typeof AdvertiserUpdateWithoutAdsInput>;
}

@InputType()
export class AdvertiserUpdateWithoutAdsInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    companyName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    companyWebsiteUrl?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    logo?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    address1?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    address2?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    city?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    state?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    zip?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => AdvertiserPOCUpdateEnvelopeInput, {nullable:true})
    pointOfContact?: InstanceType<typeof AdvertiserPOCUpdateEnvelopeInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class AdvertiserUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    companyName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    companyWebsiteUrl?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    logo?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    address1?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    address2?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    city?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    state?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    zip?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => AdvertiserPOCUpdateEnvelopeInput, {nullable:true})
    pointOfContact?: InstanceType<typeof AdvertiserPOCUpdateEnvelopeInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => AdUpdateManyWithoutAdvertiserNestedInput, {nullable:true})
    ads?: InstanceType<typeof AdUpdateManyWithoutAdvertiserNestedInput>;
}

@InputType()
export class AdvertiserUpsertWithoutAdsInput {
    @Field(() => AdvertiserUpdateWithoutAdsInput, {nullable:false})
    @Type(() => AdvertiserUpdateWithoutAdsInput)
    update!: InstanceType<typeof AdvertiserUpdateWithoutAdsInput>;
    @Field(() => AdvertiserCreateWithoutAdsInput, {nullable:false})
    @Type(() => AdvertiserCreateWithoutAdsInput)
    create!: InstanceType<typeof AdvertiserCreateWithoutAdsInput>;
    @Field(() => AdvertiserWhereInput, {nullable:true})
    @Type(() => AdvertiserWhereInput)
    where?: InstanceType<typeof AdvertiserWhereInput>;
}

@InputType()
export class AdvertiserWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => [AdvertiserWhereInput], {nullable:true})
    AND?: Array<AdvertiserWhereInput>;
    @Field(() => [AdvertiserWhereInput], {nullable:true})
    OR?: Array<AdvertiserWhereInput>;
    @Field(() => [AdvertiserWhereInput], {nullable:true})
    NOT?: Array<AdvertiserWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    companyName?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    companyWebsiteUrl?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    logo?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    address1?: InstanceType<typeof StringFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    address2?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringFilter, {nullable:true})
    city?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    state?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    zip?: InstanceType<typeof StringFilter>;
    @Field(() => AdvertiserPOCCompositeFilter, {nullable:true})
    pointOfContact?: InstanceType<typeof AdvertiserPOCCompositeFilter>;
    @Field(() => BoolFilter, {nullable:true})
    active?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => AdListRelationFilter, {nullable:true})
    ads?: InstanceType<typeof AdListRelationFilter>;
}

@InputType()
export class AdvertiserWhereInput {
    @Field(() => [AdvertiserWhereInput], {nullable:true})
    AND?: Array<AdvertiserWhereInput>;
    @Field(() => [AdvertiserWhereInput], {nullable:true})
    OR?: Array<AdvertiserWhereInput>;
    @Field(() => [AdvertiserWhereInput], {nullable:true})
    NOT?: Array<AdvertiserWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    companyName?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    companyWebsiteUrl?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    logo?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    address1?: InstanceType<typeof StringFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    address2?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringFilter, {nullable:true})
    city?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    state?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    zip?: InstanceType<typeof StringFilter>;
    @Field(() => AdvertiserPOCCompositeFilter, {nullable:true})
    pointOfContact?: InstanceType<typeof AdvertiserPOCCompositeFilter>;
    @Field(() => BoolFilter, {nullable:true})
    active?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => AdListRelationFilter, {nullable:true})
    ads?: InstanceType<typeof AdListRelationFilter>;
}

@ObjectType()
export class Advertiser {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    companyName!: string;
    @Field(() => String, {nullable:false})
    companyWebsiteUrl!: string;
    @Field(() => String, {nullable:false})
    logo!: string;
    @Field(() => String, {nullable:false})
    address1!: string;
    @Field(() => String, {nullable:true})
    address2!: string | null;
    @Field(() => String, {nullable:false})
    city!: string;
    @Field(() => String, {nullable:false})
    state!: string;
    @Field(() => String, {nullable:false})
    zip!: string;
    @Field(() => AdvertiserPOC, {nullable:false})
    pointOfContact?: InstanceType<typeof AdvertiserPOC>;
    @Field(() => Boolean, {nullable:false})
    active!: boolean;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
    @Field(() => Date, {nullable:false})
    updatedAt!: Date;
    @Field(() => [Ad], {nullable:true})
    ads?: Array<Ad>;
}

@ArgsType()
export class CreateManyAdvertiserArgs {
    @Field(() => [AdvertiserCreateManyInput], {nullable:false})
    @Type(() => AdvertiserCreateManyInput)
    data!: Array<AdvertiserCreateManyInput>;
}

@ArgsType()
export class CreateOneAdvertiserArgs {
    @Field(() => AdvertiserCreateInput, {nullable:false})
    @Type(() => AdvertiserCreateInput)
    data!: InstanceType<typeof AdvertiserCreateInput>;
}

@ArgsType()
export class DeleteManyAdvertiserArgs {
    @Field(() => AdvertiserWhereInput, {nullable:true})
    @Type(() => AdvertiserWhereInput)
    where?: InstanceType<typeof AdvertiserWhereInput>;
}

@ArgsType()
export class DeleteOneAdvertiserArgs {
    @Field(() => AdvertiserWhereUniqueInput, {nullable:false})
    @Type(() => AdvertiserWhereUniqueInput)
    where!: Prisma.AtLeast<AdvertiserWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindFirstAdvertiserOrThrowArgs {
    @Field(() => AdvertiserWhereInput, {nullable:true})
    @Type(() => AdvertiserWhereInput)
    where?: InstanceType<typeof AdvertiserWhereInput>;
    @Field(() => [AdvertiserOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<AdvertiserOrderByWithRelationInput>;
    @Field(() => AdvertiserWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<AdvertiserWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [AdvertiserScalarFieldEnum], {nullable:true})
    distinct?: Array<`${AdvertiserScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstAdvertiserArgs {
    @Field(() => AdvertiserWhereInput, {nullable:true})
    @Type(() => AdvertiserWhereInput)
    where?: InstanceType<typeof AdvertiserWhereInput>;
    @Field(() => [AdvertiserOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<AdvertiserOrderByWithRelationInput>;
    @Field(() => AdvertiserWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<AdvertiserWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [AdvertiserScalarFieldEnum], {nullable:true})
    distinct?: Array<`${AdvertiserScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyAdvertiserArgs {
    @Field(() => AdvertiserWhereInput, {nullable:true})
    @Type(() => AdvertiserWhereInput)
    where?: InstanceType<typeof AdvertiserWhereInput>;
    @Field(() => [AdvertiserOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<AdvertiserOrderByWithRelationInput>;
    @Field(() => AdvertiserWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<AdvertiserWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [AdvertiserScalarFieldEnum], {nullable:true})
    distinct?: Array<`${AdvertiserScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniqueAdvertiserOrThrowArgs {
    @Field(() => AdvertiserWhereUniqueInput, {nullable:false})
    @Type(() => AdvertiserWhereUniqueInput)
    where!: Prisma.AtLeast<AdvertiserWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindUniqueAdvertiserArgs {
    @Field(() => AdvertiserWhereUniqueInput, {nullable:false})
    @Type(() => AdvertiserWhereUniqueInput)
    where!: Prisma.AtLeast<AdvertiserWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpdateManyAdvertiserArgs {
    @Field(() => AdvertiserUpdateManyMutationInput, {nullable:false})
    @Type(() => AdvertiserUpdateManyMutationInput)
    data!: InstanceType<typeof AdvertiserUpdateManyMutationInput>;
    @Field(() => AdvertiserWhereInput, {nullable:true})
    @Type(() => AdvertiserWhereInput)
    where?: InstanceType<typeof AdvertiserWhereInput>;
}

@ArgsType()
export class UpdateOneAdvertiserArgs {
    @Field(() => AdvertiserUpdateInput, {nullable:false})
    @Type(() => AdvertiserUpdateInput)
    data!: InstanceType<typeof AdvertiserUpdateInput>;
    @Field(() => AdvertiserWhereUniqueInput, {nullable:false})
    @Type(() => AdvertiserWhereUniqueInput)
    where!: Prisma.AtLeast<AdvertiserWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpsertOneAdvertiserArgs {
    @Field(() => AdvertiserWhereUniqueInput, {nullable:false})
    @Type(() => AdvertiserWhereUniqueInput)
    where!: Prisma.AtLeast<AdvertiserWhereUniqueInput, 'id'>;
    @Field(() => AdvertiserCreateInput, {nullable:false})
    @Type(() => AdvertiserCreateInput)
    create!: InstanceType<typeof AdvertiserCreateInput>;
    @Field(() => AdvertiserUpdateInput, {nullable:false})
    @Type(() => AdvertiserUpdateInput)
    update!: InstanceType<typeof AdvertiserUpdateInput>;
}

@InputType()
export class AdvertiserPOCCreateEnvelopeInput {
    @Field(() => AdvertiserPOCCreateInput, {nullable:true})
    @Type(() => AdvertiserPOCCreateInput)
    set?: InstanceType<typeof AdvertiserPOCCreateInput>;
}

@InputType()
export class AdvertiserPOCCreateInput {
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    phoneNumber!: string;
    @Field(() => String, {nullable:false})
    email!: string;
}

@InputType()
export class AdvertiserPOCOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    phoneNumber?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    email?: `${SortOrder}`;
}

@InputType()
export class AdvertiserPOCUpdateEnvelopeInput {
    @Field(() => AdvertiserPOCCreateInput, {nullable:true})
    @Type(() => AdvertiserPOCCreateInput)
    set?: InstanceType<typeof AdvertiserPOCCreateInput>;
    @Field(() => AdvertiserPOCUpdateInput, {nullable:true})
    @Type(() => AdvertiserPOCUpdateInput)
    update?: InstanceType<typeof AdvertiserPOCUpdateInput>;
}

@InputType()
export class AdvertiserPOCUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    phoneNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}

@InputType()
export class AdvertiserPOCWhereInput {
    @Field(() => [AdvertiserPOCWhereInput], {nullable:true})
    AND?: Array<AdvertiserPOCWhereInput>;
    @Field(() => [AdvertiserPOCWhereInput], {nullable:true})
    OR?: Array<AdvertiserPOCWhereInput>;
    @Field(() => [AdvertiserPOCWhereInput], {nullable:true})
    NOT?: Array<AdvertiserPOCWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    name?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    phoneNumber?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    email?: InstanceType<typeof StringFilter>;
}

@ObjectType()
export class AdvertiserPOC {
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    phoneNumber!: string;
    @Field(() => String, {nullable:false})
    email!: string;
}

@InputType()
export class AltSignupCreateInput {
    @Field(() => String, {nullable:false})
    idProof!: string;
    @Field(() => Date, {nullable:true})
    uploadedAt?: Date | string;
    @Field(() => String, {nullable:false})
    tempEmailAllotted!: string;
    @Field(() => String, {nullable:false})
    emailClaimed!: string;
    @Field(() => AltSignupStatus, {nullable:false})
    status!: `${AltSignupStatus}`;
    @Field(() => String, {nullable:false})
    remarks!: string;
}

@InputType()
export class AltSignupOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    idProof?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    uploadedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    tempEmailAllotted?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    emailClaimed?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    status?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    remarks?: `${SortOrder}`;
}

@InputType()
export class AltSignupUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    idProof?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    uploadedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    tempEmailAllotted?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    emailClaimed?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumAltSignupStatusFieldUpdateOperationsInput, {nullable:true})
    status?: InstanceType<typeof EnumAltSignupStatusFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    remarks?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}

@InputType()
export class AltSignupWhereInput {
    @Field(() => [AltSignupWhereInput], {nullable:true})
    AND?: Array<AltSignupWhereInput>;
    @Field(() => [AltSignupWhereInput], {nullable:true})
    OR?: Array<AltSignupWhereInput>;
    @Field(() => [AltSignupWhereInput], {nullable:true})
    NOT?: Array<AltSignupWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    idProof?: InstanceType<typeof StringFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    uploadedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => StringFilter, {nullable:true})
    tempEmailAllotted?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    emailClaimed?: InstanceType<typeof StringFilter>;
    @Field(() => EnumAltSignupStatusFilter, {nullable:true})
    status?: InstanceType<typeof EnumAltSignupStatusFilter>;
    @Field(() => StringFilter, {nullable:true})
    remarks?: InstanceType<typeof StringFilter>;
}

@ObjectType()
export class AltSignup {
    @Field(() => String, {nullable:false})
    idProof!: string;
    @Field(() => Date, {nullable:false})
    uploadedAt!: Date;
    @Field(() => String, {nullable:false})
    tempEmailAllotted!: string;
    @Field(() => String, {nullable:false})
    emailClaimed!: string;
    @Field(() => AltSignupStatus, {nullable:false})
    status!: `${AltSignupStatus}`;
    @Field(() => String, {nullable:false})
    remarks!: string;
}

@ArgsType()
export class AnnouncementBannerAggregateArgs {
    @Field(() => AnnouncementBannerWhereInput, {nullable:true})
    @Type(() => AnnouncementBannerWhereInput)
    where?: InstanceType<typeof AnnouncementBannerWhereInput>;
    @Field(() => [AnnouncementBannerOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<AnnouncementBannerOrderByWithRelationInput>;
    @Field(() => AnnouncementBannerWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<AnnouncementBannerWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class AnnouncementBannerCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    position?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    hasInternalCTA?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    internalCTA?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    image?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class AnnouncementBannerCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => AnnouncementBannerPosition, {nullable:false})
    position!: `${AnnouncementBannerPosition}`;
    @Field(() => Boolean, {nullable:false})
    hasInternalCTA!: boolean;
    @Field(() => InternalCTA, {nullable:true})
    internalCTA?: `${InternalCTA}`;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => Boolean, {nullable:false})
    active!: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class AnnouncementBannerCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => AnnouncementBannerPosition, {nullable:false})
    position!: `${AnnouncementBannerPosition}`;
    @Field(() => Boolean, {nullable:false})
    hasInternalCTA!: boolean;
    @Field(() => InternalCTA, {nullable:true})
    internalCTA?: `${InternalCTA}`;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => Boolean, {nullable:false})
    active!: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@ArgsType()
export class AnnouncementBannerGroupByArgs {
    @Field(() => AnnouncementBannerWhereInput, {nullable:true})
    @Type(() => AnnouncementBannerWhereInput)
    where?: InstanceType<typeof AnnouncementBannerWhereInput>;
    @Field(() => [AnnouncementBannerOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<AnnouncementBannerOrderByWithAggregationInput>;
    @Field(() => [AnnouncementBannerScalarFieldEnum], {nullable:false})
    by!: Array<`${AnnouncementBannerScalarFieldEnum}`>;
    @Field(() => AnnouncementBannerScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof AnnouncementBannerScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class AnnouncementBannerMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    position?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    hasInternalCTA?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    internalCTA?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    image?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class AnnouncementBannerMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    position?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    hasInternalCTA?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    internalCTA?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    image?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class AnnouncementBannerOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    position?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    hasInternalCTA?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    internalCTA?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    image?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => AnnouncementBannerCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof AnnouncementBannerCountOrderByAggregateInput>;
    @Field(() => AnnouncementBannerMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof AnnouncementBannerMaxOrderByAggregateInput>;
    @Field(() => AnnouncementBannerMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof AnnouncementBannerMinOrderByAggregateInput>;
}

@InputType()
export class AnnouncementBannerOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    position?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    hasInternalCTA?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    internalCTA?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    image?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class AnnouncementBannerScalarWhereWithAggregatesInput {
    @Field(() => [AnnouncementBannerScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<AnnouncementBannerScalarWhereWithAggregatesInput>;
    @Field(() => [AnnouncementBannerScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<AnnouncementBannerScalarWhereWithAggregatesInput>;
    @Field(() => [AnnouncementBannerScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<AnnouncementBannerScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    name?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => EnumAnnouncementBannerPositionWithAggregatesFilter, {nullable:true})
    position?: InstanceType<typeof EnumAnnouncementBannerPositionWithAggregatesFilter>;
    @Field(() => BoolWithAggregatesFilter, {nullable:true})
    hasInternalCTA?: InstanceType<typeof BoolWithAggregatesFilter>;
    @Field(() => EnumInternalCTANullableWithAggregatesFilter, {nullable:true})
    internalCTA?: InstanceType<typeof EnumInternalCTANullableWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    image?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => BoolWithAggregatesFilter, {nullable:true})
    active?: InstanceType<typeof BoolWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
}

@InputType()
export class AnnouncementBannerUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => AnnouncementBannerPosition, {nullable:false})
    position!: `${AnnouncementBannerPosition}`;
    @Field(() => Boolean, {nullable:false})
    hasInternalCTA!: boolean;
    @Field(() => InternalCTA, {nullable:true})
    internalCTA?: `${InternalCTA}`;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => Boolean, {nullable:false})
    active!: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class AnnouncementBannerUncheckedUpdateManyInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumAnnouncementBannerPositionFieldUpdateOperationsInput, {nullable:true})
    position?: InstanceType<typeof EnumAnnouncementBannerPositionFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    hasInternalCTA?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableEnumInternalCTAFieldUpdateOperationsInput, {nullable:true})
    internalCTA?: InstanceType<typeof NullableEnumInternalCTAFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class AnnouncementBannerUncheckedUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumAnnouncementBannerPositionFieldUpdateOperationsInput, {nullable:true})
    position?: InstanceType<typeof EnumAnnouncementBannerPositionFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    hasInternalCTA?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableEnumInternalCTAFieldUpdateOperationsInput, {nullable:true})
    internalCTA?: InstanceType<typeof NullableEnumInternalCTAFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class AnnouncementBannerUpdateManyMutationInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumAnnouncementBannerPositionFieldUpdateOperationsInput, {nullable:true})
    position?: InstanceType<typeof EnumAnnouncementBannerPositionFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    hasInternalCTA?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableEnumInternalCTAFieldUpdateOperationsInput, {nullable:true})
    internalCTA?: InstanceType<typeof NullableEnumInternalCTAFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class AnnouncementBannerUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumAnnouncementBannerPositionFieldUpdateOperationsInput, {nullable:true})
    position?: InstanceType<typeof EnumAnnouncementBannerPositionFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    hasInternalCTA?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableEnumInternalCTAFieldUpdateOperationsInput, {nullable:true})
    internalCTA?: InstanceType<typeof NullableEnumInternalCTAFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class AnnouncementBannerWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => [AnnouncementBannerWhereInput], {nullable:true})
    AND?: Array<AnnouncementBannerWhereInput>;
    @Field(() => [AnnouncementBannerWhereInput], {nullable:true})
    OR?: Array<AnnouncementBannerWhereInput>;
    @Field(() => [AnnouncementBannerWhereInput], {nullable:true})
    NOT?: Array<AnnouncementBannerWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    name?: InstanceType<typeof StringFilter>;
    @Field(() => EnumAnnouncementBannerPositionFilter, {nullable:true})
    position?: InstanceType<typeof EnumAnnouncementBannerPositionFilter>;
    @Field(() => BoolFilter, {nullable:true})
    hasInternalCTA?: InstanceType<typeof BoolFilter>;
    @Field(() => EnumInternalCTANullableFilter, {nullable:true})
    internalCTA?: InstanceType<typeof EnumInternalCTANullableFilter>;
    @Field(() => StringFilter, {nullable:true})
    image?: InstanceType<typeof StringFilter>;
    @Field(() => BoolFilter, {nullable:true})
    active?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@InputType()
export class AnnouncementBannerWhereInput {
    @Field(() => [AnnouncementBannerWhereInput], {nullable:true})
    AND?: Array<AnnouncementBannerWhereInput>;
    @Field(() => [AnnouncementBannerWhereInput], {nullable:true})
    OR?: Array<AnnouncementBannerWhereInput>;
    @Field(() => [AnnouncementBannerWhereInput], {nullable:true})
    NOT?: Array<AnnouncementBannerWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    name?: InstanceType<typeof StringFilter>;
    @Field(() => EnumAnnouncementBannerPositionFilter, {nullable:true})
    position?: InstanceType<typeof EnumAnnouncementBannerPositionFilter>;
    @Field(() => BoolFilter, {nullable:true})
    hasInternalCTA?: InstanceType<typeof BoolFilter>;
    @Field(() => EnumInternalCTANullableFilter, {nullable:true})
    internalCTA?: InstanceType<typeof EnumInternalCTANullableFilter>;
    @Field(() => StringFilter, {nullable:true})
    image?: InstanceType<typeof StringFilter>;
    @Field(() => BoolFilter, {nullable:true})
    active?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@ObjectType()
export class AnnouncementBanner {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => AnnouncementBannerPosition, {nullable:false})
    position!: `${AnnouncementBannerPosition}`;
    @Field(() => Boolean, {nullable:false})
    hasInternalCTA!: boolean;
    @Field(() => InternalCTA, {nullable:true})
    internalCTA!: `${InternalCTA}` | null;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => Boolean, {nullable:false})
    active!: boolean;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
    @Field(() => Date, {nullable:false})
    updatedAt!: Date;
}

@ArgsType()
export class CreateManyAnnouncementBannerArgs {
    @Field(() => [AnnouncementBannerCreateManyInput], {nullable:false})
    @Type(() => AnnouncementBannerCreateManyInput)
    data!: Array<AnnouncementBannerCreateManyInput>;
}

@ArgsType()
export class CreateOneAnnouncementBannerArgs {
    @Field(() => AnnouncementBannerCreateInput, {nullable:false})
    @Type(() => AnnouncementBannerCreateInput)
    data!: InstanceType<typeof AnnouncementBannerCreateInput>;
}

@ArgsType()
export class DeleteManyAnnouncementBannerArgs {
    @Field(() => AnnouncementBannerWhereInput, {nullable:true})
    @Type(() => AnnouncementBannerWhereInput)
    where?: InstanceType<typeof AnnouncementBannerWhereInput>;
}

@ArgsType()
export class DeleteOneAnnouncementBannerArgs {
    @Field(() => AnnouncementBannerWhereUniqueInput, {nullable:false})
    @Type(() => AnnouncementBannerWhereUniqueInput)
    where!: Prisma.AtLeast<AnnouncementBannerWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindFirstAnnouncementBannerOrThrowArgs {
    @Field(() => AnnouncementBannerWhereInput, {nullable:true})
    @Type(() => AnnouncementBannerWhereInput)
    where?: InstanceType<typeof AnnouncementBannerWhereInput>;
    @Field(() => [AnnouncementBannerOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<AnnouncementBannerOrderByWithRelationInput>;
    @Field(() => AnnouncementBannerWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<AnnouncementBannerWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [AnnouncementBannerScalarFieldEnum], {nullable:true})
    distinct?: Array<`${AnnouncementBannerScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstAnnouncementBannerArgs {
    @Field(() => AnnouncementBannerWhereInput, {nullable:true})
    @Type(() => AnnouncementBannerWhereInput)
    where?: InstanceType<typeof AnnouncementBannerWhereInput>;
    @Field(() => [AnnouncementBannerOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<AnnouncementBannerOrderByWithRelationInput>;
    @Field(() => AnnouncementBannerWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<AnnouncementBannerWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [AnnouncementBannerScalarFieldEnum], {nullable:true})
    distinct?: Array<`${AnnouncementBannerScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyAnnouncementBannerArgs {
    @Field(() => AnnouncementBannerWhereInput, {nullable:true})
    @Type(() => AnnouncementBannerWhereInput)
    where?: InstanceType<typeof AnnouncementBannerWhereInput>;
    @Field(() => [AnnouncementBannerOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<AnnouncementBannerOrderByWithRelationInput>;
    @Field(() => AnnouncementBannerWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<AnnouncementBannerWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [AnnouncementBannerScalarFieldEnum], {nullable:true})
    distinct?: Array<`${AnnouncementBannerScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniqueAnnouncementBannerOrThrowArgs {
    @Field(() => AnnouncementBannerWhereUniqueInput, {nullable:false})
    @Type(() => AnnouncementBannerWhereUniqueInput)
    where!: Prisma.AtLeast<AnnouncementBannerWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindUniqueAnnouncementBannerArgs {
    @Field(() => AnnouncementBannerWhereUniqueInput, {nullable:false})
    @Type(() => AnnouncementBannerWhereUniqueInput)
    where!: Prisma.AtLeast<AnnouncementBannerWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpdateManyAnnouncementBannerArgs {
    @Field(() => AnnouncementBannerUpdateManyMutationInput, {nullable:false})
    @Type(() => AnnouncementBannerUpdateManyMutationInput)
    data!: InstanceType<typeof AnnouncementBannerUpdateManyMutationInput>;
    @Field(() => AnnouncementBannerWhereInput, {nullable:true})
    @Type(() => AnnouncementBannerWhereInput)
    where?: InstanceType<typeof AnnouncementBannerWhereInput>;
}

@ArgsType()
export class UpdateOneAnnouncementBannerArgs {
    @Field(() => AnnouncementBannerUpdateInput, {nullable:false})
    @Type(() => AnnouncementBannerUpdateInput)
    data!: InstanceType<typeof AnnouncementBannerUpdateInput>;
    @Field(() => AnnouncementBannerWhereUniqueInput, {nullable:false})
    @Type(() => AnnouncementBannerWhereUniqueInput)
    where!: Prisma.AtLeast<AnnouncementBannerWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpsertOneAnnouncementBannerArgs {
    @Field(() => AnnouncementBannerWhereUniqueInput, {nullable:false})
    @Type(() => AnnouncementBannerWhereUniqueInput)
    where!: Prisma.AtLeast<AnnouncementBannerWhereUniqueInput, 'id'>;
    @Field(() => AnnouncementBannerCreateInput, {nullable:false})
    @Type(() => AnnouncementBannerCreateInput)
    create!: InstanceType<typeof AnnouncementBannerCreateInput>;
    @Field(() => AnnouncementBannerUpdateInput, {nullable:false})
    @Type(() => AnnouncementBannerUpdateInput)
    update!: InstanceType<typeof AnnouncementBannerUpdateInput>;
}

@ArgsType()
export class AppLovinAggregateArgs {
    @Field(() => AppLovinWhereInput, {nullable:true})
    @Type(() => AppLovinWhereInput)
    where?: InstanceType<typeof AppLovinWhereInput>;
    @Field(() => [AppLovinOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<AppLovinOrderByWithRelationInput>;
    @Field(() => AppLovinWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<AppLovinWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class AppLovinCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    alias?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    adUnitId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    position?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class AppLovinCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    alias!: string;
    @Field(() => String, {nullable:false})
    adUnitId!: string;
    @Field(() => AppLovingAdType, {nullable:false})
    type!: `${AppLovingAdType}`;
    @Field(() => AppLovinPosition, {nullable:false})
    position!: `${AppLovinPosition}`;
    @Field(() => Boolean, {nullable:false})
    active!: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class AppLovinCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    alias!: string;
    @Field(() => String, {nullable:false})
    adUnitId!: string;
    @Field(() => AppLovingAdType, {nullable:false})
    type!: `${AppLovingAdType}`;
    @Field(() => AppLovinPosition, {nullable:false})
    position!: `${AppLovinPosition}`;
    @Field(() => Boolean, {nullable:false})
    active!: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@ArgsType()
export class AppLovinGroupByArgs {
    @Field(() => AppLovinWhereInput, {nullable:true})
    @Type(() => AppLovinWhereInput)
    where?: InstanceType<typeof AppLovinWhereInput>;
    @Field(() => [AppLovinOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<AppLovinOrderByWithAggregationInput>;
    @Field(() => [AppLovinScalarFieldEnum], {nullable:false})
    by!: Array<`${AppLovinScalarFieldEnum}`>;
    @Field(() => AppLovinScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof AppLovinScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class AppLovinMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    alias?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    adUnitId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    position?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class AppLovinMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    alias?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    adUnitId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    position?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class AppLovinOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    alias?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    adUnitId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    position?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => AppLovinCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof AppLovinCountOrderByAggregateInput>;
    @Field(() => AppLovinMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof AppLovinMaxOrderByAggregateInput>;
    @Field(() => AppLovinMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof AppLovinMinOrderByAggregateInput>;
}

@InputType()
export class AppLovinOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    alias?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    adUnitId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    position?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class AppLovinScalarWhereWithAggregatesInput {
    @Field(() => [AppLovinScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<AppLovinScalarWhereWithAggregatesInput>;
    @Field(() => [AppLovinScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<AppLovinScalarWhereWithAggregatesInput>;
    @Field(() => [AppLovinScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<AppLovinScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    alias?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    adUnitId?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => EnumAppLovingAdTypeWithAggregatesFilter, {nullable:true})
    type?: InstanceType<typeof EnumAppLovingAdTypeWithAggregatesFilter>;
    @Field(() => EnumAppLovinPositionWithAggregatesFilter, {nullable:true})
    position?: InstanceType<typeof EnumAppLovinPositionWithAggregatesFilter>;
    @Field(() => BoolWithAggregatesFilter, {nullable:true})
    active?: InstanceType<typeof BoolWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
}

@InputType()
export class AppLovinUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    alias!: string;
    @Field(() => String, {nullable:false})
    adUnitId!: string;
    @Field(() => AppLovingAdType, {nullable:false})
    type!: `${AppLovingAdType}`;
    @Field(() => AppLovinPosition, {nullable:false})
    position!: `${AppLovinPosition}`;
    @Field(() => Boolean, {nullable:false})
    active!: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class AppLovinUncheckedUpdateManyInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    alias?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    adUnitId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumAppLovingAdTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumAppLovingAdTypeFieldUpdateOperationsInput>;
    @Field(() => EnumAppLovinPositionFieldUpdateOperationsInput, {nullable:true})
    position?: InstanceType<typeof EnumAppLovinPositionFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class AppLovinUncheckedUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    alias?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    adUnitId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumAppLovingAdTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumAppLovingAdTypeFieldUpdateOperationsInput>;
    @Field(() => EnumAppLovinPositionFieldUpdateOperationsInput, {nullable:true})
    position?: InstanceType<typeof EnumAppLovinPositionFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class AppLovinUpdateManyMutationInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    alias?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    adUnitId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumAppLovingAdTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumAppLovingAdTypeFieldUpdateOperationsInput>;
    @Field(() => EnumAppLovinPositionFieldUpdateOperationsInput, {nullable:true})
    position?: InstanceType<typeof EnumAppLovinPositionFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class AppLovinUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    alias?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    adUnitId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumAppLovingAdTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumAppLovingAdTypeFieldUpdateOperationsInput>;
    @Field(() => EnumAppLovinPositionFieldUpdateOperationsInput, {nullable:true})
    position?: InstanceType<typeof EnumAppLovinPositionFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class AppLovinWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => [AppLovinWhereInput], {nullable:true})
    AND?: Array<AppLovinWhereInput>;
    @Field(() => [AppLovinWhereInput], {nullable:true})
    OR?: Array<AppLovinWhereInput>;
    @Field(() => [AppLovinWhereInput], {nullable:true})
    NOT?: Array<AppLovinWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    alias?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    adUnitId?: InstanceType<typeof StringFilter>;
    @Field(() => EnumAppLovingAdTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumAppLovingAdTypeFilter>;
    @Field(() => EnumAppLovinPositionFilter, {nullable:true})
    position?: InstanceType<typeof EnumAppLovinPositionFilter>;
    @Field(() => BoolFilter, {nullable:true})
    active?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@InputType()
export class AppLovinWhereInput {
    @Field(() => [AppLovinWhereInput], {nullable:true})
    AND?: Array<AppLovinWhereInput>;
    @Field(() => [AppLovinWhereInput], {nullable:true})
    OR?: Array<AppLovinWhereInput>;
    @Field(() => [AppLovinWhereInput], {nullable:true})
    NOT?: Array<AppLovinWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    alias?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    adUnitId?: InstanceType<typeof StringFilter>;
    @Field(() => EnumAppLovingAdTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumAppLovingAdTypeFilter>;
    @Field(() => EnumAppLovinPositionFilter, {nullable:true})
    position?: InstanceType<typeof EnumAppLovinPositionFilter>;
    @Field(() => BoolFilter, {nullable:true})
    active?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@ObjectType()
export class AppLovin {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    alias!: string;
    @Field(() => String, {nullable:false})
    adUnitId!: string;
    @Field(() => AppLovingAdType, {nullable:false})
    type!: `${AppLovingAdType}`;
    @Field(() => AppLovinPosition, {nullable:false})
    position!: `${AppLovinPosition}`;
    @Field(() => Boolean, {nullable:false})
    active!: boolean;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
    @Field(() => Date, {nullable:false})
    updatedAt!: Date;
}

@ArgsType()
export class CreateManyAppLovinArgs {
    @Field(() => [AppLovinCreateManyInput], {nullable:false})
    @Type(() => AppLovinCreateManyInput)
    data!: Array<AppLovinCreateManyInput>;
}

@ArgsType()
export class CreateOneAppLovinArgs {
    @Field(() => AppLovinCreateInput, {nullable:false})
    @Type(() => AppLovinCreateInput)
    data!: InstanceType<typeof AppLovinCreateInput>;
}

@ArgsType()
export class DeleteManyAppLovinArgs {
    @Field(() => AppLovinWhereInput, {nullable:true})
    @Type(() => AppLovinWhereInput)
    where?: InstanceType<typeof AppLovinWhereInput>;
}

@ArgsType()
export class DeleteOneAppLovinArgs {
    @Field(() => AppLovinWhereUniqueInput, {nullable:false})
    @Type(() => AppLovinWhereUniqueInput)
    where!: Prisma.AtLeast<AppLovinWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindFirstAppLovinOrThrowArgs {
    @Field(() => AppLovinWhereInput, {nullable:true})
    @Type(() => AppLovinWhereInput)
    where?: InstanceType<typeof AppLovinWhereInput>;
    @Field(() => [AppLovinOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<AppLovinOrderByWithRelationInput>;
    @Field(() => AppLovinWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<AppLovinWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [AppLovinScalarFieldEnum], {nullable:true})
    distinct?: Array<`${AppLovinScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstAppLovinArgs {
    @Field(() => AppLovinWhereInput, {nullable:true})
    @Type(() => AppLovinWhereInput)
    where?: InstanceType<typeof AppLovinWhereInput>;
    @Field(() => [AppLovinOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<AppLovinOrderByWithRelationInput>;
    @Field(() => AppLovinWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<AppLovinWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [AppLovinScalarFieldEnum], {nullable:true})
    distinct?: Array<`${AppLovinScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyAppLovinArgs {
    @Field(() => AppLovinWhereInput, {nullable:true})
    @Type(() => AppLovinWhereInput)
    where?: InstanceType<typeof AppLovinWhereInput>;
    @Field(() => [AppLovinOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<AppLovinOrderByWithRelationInput>;
    @Field(() => AppLovinWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<AppLovinWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [AppLovinScalarFieldEnum], {nullable:true})
    distinct?: Array<`${AppLovinScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniqueAppLovinOrThrowArgs {
    @Field(() => AppLovinWhereUniqueInput, {nullable:false})
    @Type(() => AppLovinWhereUniqueInput)
    where!: Prisma.AtLeast<AppLovinWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindUniqueAppLovinArgs {
    @Field(() => AppLovinWhereUniqueInput, {nullable:false})
    @Type(() => AppLovinWhereUniqueInput)
    where!: Prisma.AtLeast<AppLovinWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpdateManyAppLovinArgs {
    @Field(() => AppLovinUpdateManyMutationInput, {nullable:false})
    @Type(() => AppLovinUpdateManyMutationInput)
    data!: InstanceType<typeof AppLovinUpdateManyMutationInput>;
    @Field(() => AppLovinWhereInput, {nullable:true})
    @Type(() => AppLovinWhereInput)
    where?: InstanceType<typeof AppLovinWhereInput>;
}

@ArgsType()
export class UpdateOneAppLovinArgs {
    @Field(() => AppLovinUpdateInput, {nullable:false})
    @Type(() => AppLovinUpdateInput)
    data!: InstanceType<typeof AppLovinUpdateInput>;
    @Field(() => AppLovinWhereUniqueInput, {nullable:false})
    @Type(() => AppLovinWhereUniqueInput)
    where!: Prisma.AtLeast<AppLovinWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpsertOneAppLovinArgs {
    @Field(() => AppLovinWhereUniqueInput, {nullable:false})
    @Type(() => AppLovinWhereUniqueInput)
    where!: Prisma.AtLeast<AppLovinWhereUniqueInput, 'id'>;
    @Field(() => AppLovinCreateInput, {nullable:false})
    @Type(() => AppLovinCreateInput)
    create!: InstanceType<typeof AppLovinCreateInput>;
    @Field(() => AppLovinUpdateInput, {nullable:false})
    @Type(() => AppLovinUpdateInput)
    update!: InstanceType<typeof AppLovinUpdateInput>;
}

@ArgsType()
export class AppPopupAggregateArgs {
    @Field(() => AppPopupWhereInput, {nullable:true})
    @Type(() => AppPopupWhereInput)
    where?: InstanceType<typeof AppPopupWhereInput>;
    @Field(() => [AppPopupOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<AppPopupOrderByWithRelationInput>;
    @Field(() => AppPopupWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<AppPopupWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class AppPopupAvgOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    frequency?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    delayInSeconds?: `${SortOrder}`;
}

@InputType()
export class AppPopupCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    frequency?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    selectionListType?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    template?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    image?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    description?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    ctaUrl?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    ctaText?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    couponCode?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    delayInSeconds?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class AppPopupCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => Int, {nullable:false})
    frequency!: number;
    @Field(() => EduSelectionListType, {nullable:false})
    selectionListType!: `${EduSelectionListType}`;
    @Field(() => [EduInstituteSelectOptionCreateInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionCreateInput>;
    @Field(() => AppPopupFiltersCreateEnvelopeInput, {nullable:false})
    filters!: InstanceType<typeof AppPopupFiltersCreateEnvelopeInput>;
    @Field(() => AppPopupTemplate, {nullable:false})
    template!: `${AppPopupTemplate}`;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => String, {nullable:false})
    description!: string;
    @Field(() => String, {nullable:false})
    ctaUrl!: string;
    @Field(() => String, {nullable:false})
    ctaText!: string;
    @Field(() => String, {nullable:true})
    couponCode?: string;
    @Field(() => Int, {nullable:false})
    delayInSeconds!: number;
    @Field(() => Boolean, {nullable:false})
    active!: boolean;
    @Field(() => DateRangeCreateEnvelopeInput, {nullable:false})
    validity!: InstanceType<typeof DateRangeCreateEnvelopeInput>;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class AppPopupCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => Int, {nullable:false})
    frequency!: number;
    @Field(() => EduSelectionListType, {nullable:false})
    selectionListType!: `${EduSelectionListType}`;
    @Field(() => [EduInstituteSelectOptionCreateInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionCreateInput>;
    @Field(() => AppPopupFiltersCreateEnvelopeInput, {nullable:false})
    filters!: InstanceType<typeof AppPopupFiltersCreateEnvelopeInput>;
    @Field(() => AppPopupTemplate, {nullable:false})
    template!: `${AppPopupTemplate}`;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => String, {nullable:false})
    description!: string;
    @Field(() => String, {nullable:false})
    ctaUrl!: string;
    @Field(() => String, {nullable:false})
    ctaText!: string;
    @Field(() => String, {nullable:true})
    couponCode?: string;
    @Field(() => Int, {nullable:false})
    delayInSeconds!: number;
    @Field(() => Boolean, {nullable:false})
    active!: boolean;
    @Field(() => DateRangeCreateEnvelopeInput, {nullable:false})
    validity!: InstanceType<typeof DateRangeCreateEnvelopeInput>;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class AppPopupFiltersCompositeFilter {
    @Field(() => AppPopupFiltersObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof AppPopupFiltersObjectEqualityInput>;
    @Field(() => AppPopupFiltersWhereInput, {nullable:true})
    is?: InstanceType<typeof AppPopupFiltersWhereInput>;
    @Field(() => AppPopupFiltersWhereInput, {nullable:true})
    isNot?: InstanceType<typeof AppPopupFiltersWhereInput>;
}

@InputType()
export class AppPopupFiltersCreateEnvelopeInput {
    @Field(() => AppPopupFiltersCreateInput, {nullable:true})
    @Type(() => AppPopupFiltersCreateInput)
    set?: InstanceType<typeof AppPopupFiltersCreateInput>;
}

@InputType()
export class AppPopupFiltersObjectEqualityInput {
    @Field(() => UserGenderFilter, {nullable:false})
    userGender!: `${UserGenderFilter}`;
}

@InputType()
export class AppPopupFiltersUpdateEnvelopeInput {
    @Field(() => AppPopupFiltersCreateInput, {nullable:true})
    @Type(() => AppPopupFiltersCreateInput)
    set?: InstanceType<typeof AppPopupFiltersCreateInput>;
    @Field(() => AppPopupFiltersUpdateInput, {nullable:true})
    @Type(() => AppPopupFiltersUpdateInput)
    update?: InstanceType<typeof AppPopupFiltersUpdateInput>;
}

@ArgsType()
export class AppPopupGroupByArgs {
    @Field(() => AppPopupWhereInput, {nullable:true})
    @Type(() => AppPopupWhereInput)
    where?: InstanceType<typeof AppPopupWhereInput>;
    @Field(() => [AppPopupOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<AppPopupOrderByWithAggregationInput>;
    @Field(() => [AppPopupScalarFieldEnum], {nullable:false})
    by!: Array<`${AppPopupScalarFieldEnum}`>;
    @Field(() => AppPopupScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof AppPopupScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class AppPopupMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    frequency?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    selectionListType?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    template?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    image?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    description?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    ctaUrl?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    ctaText?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    couponCode?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    delayInSeconds?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class AppPopupMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    frequency?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    selectionListType?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    template?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    image?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    description?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    ctaUrl?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    ctaText?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    couponCode?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    delayInSeconds?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class AppPopupOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    frequency?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    selectionListType?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    template?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    image?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    description?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    ctaUrl?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    ctaText?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    couponCode?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    delayInSeconds?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => AppPopupCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof AppPopupCountOrderByAggregateInput>;
    @Field(() => AppPopupAvgOrderByAggregateInput, {nullable:true})
    _avg?: InstanceType<typeof AppPopupAvgOrderByAggregateInput>;
    @Field(() => AppPopupMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof AppPopupMaxOrderByAggregateInput>;
    @Field(() => AppPopupMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof AppPopupMinOrderByAggregateInput>;
    @Field(() => AppPopupSumOrderByAggregateInput, {nullable:true})
    _sum?: InstanceType<typeof AppPopupSumOrderByAggregateInput>;
}

@InputType()
export class AppPopupOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    frequency?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    selectionListType?: `${SortOrder}`;
    @Field(() => EduInstituteSelectOptionOrderByCompositeAggregateInput, {nullable:true})
    selectedEduInstitutes?: InstanceType<typeof EduInstituteSelectOptionOrderByCompositeAggregateInput>;
    @Field(() => AppPopupFiltersOrderByInput, {nullable:true})
    filters?: InstanceType<typeof AppPopupFiltersOrderByInput>;
    @Field(() => SortOrder, {nullable:true})
    template?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    image?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    description?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    ctaUrl?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    ctaText?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    couponCode?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    delayInSeconds?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => DateRangeOrderByInput, {nullable:true})
    validity?: InstanceType<typeof DateRangeOrderByInput>;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class AppPopupScalarWhereWithAggregatesInput {
    @Field(() => [AppPopupScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<AppPopupScalarWhereWithAggregatesInput>;
    @Field(() => [AppPopupScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<AppPopupScalarWhereWithAggregatesInput>;
    @Field(() => [AppPopupScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<AppPopupScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    name?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => IntWithAggregatesFilter, {nullable:true})
    frequency?: InstanceType<typeof IntWithAggregatesFilter>;
    @Field(() => EnumEduSelectionListTypeWithAggregatesFilter, {nullable:true})
    selectionListType?: InstanceType<typeof EnumEduSelectionListTypeWithAggregatesFilter>;
    @Field(() => EnumAppPopupTemplateWithAggregatesFilter, {nullable:true})
    template?: InstanceType<typeof EnumAppPopupTemplateWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    image?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    description?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    ctaUrl?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    ctaText?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    couponCode?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => IntWithAggregatesFilter, {nullable:true})
    delayInSeconds?: InstanceType<typeof IntWithAggregatesFilter>;
    @Field(() => BoolWithAggregatesFilter, {nullable:true})
    active?: InstanceType<typeof BoolWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
}

@InputType()
export class AppPopupSumOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    frequency?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    delayInSeconds?: `${SortOrder}`;
}

@InputType()
export class AppPopupUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => Int, {nullable:false})
    frequency!: number;
    @Field(() => EduSelectionListType, {nullable:false})
    selectionListType!: `${EduSelectionListType}`;
    @Field(() => [EduInstituteSelectOptionCreateInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionCreateInput>;
    @Field(() => AppPopupFiltersCreateEnvelopeInput, {nullable:false})
    filters!: InstanceType<typeof AppPopupFiltersCreateEnvelopeInput>;
    @Field(() => AppPopupTemplate, {nullable:false})
    template!: `${AppPopupTemplate}`;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => String, {nullable:false})
    description!: string;
    @Field(() => String, {nullable:false})
    ctaUrl!: string;
    @Field(() => String, {nullable:false})
    ctaText!: string;
    @Field(() => String, {nullable:true})
    couponCode?: string;
    @Field(() => Int, {nullable:false})
    delayInSeconds!: number;
    @Field(() => Boolean, {nullable:false})
    active!: boolean;
    @Field(() => DateRangeCreateEnvelopeInput, {nullable:false})
    validity!: InstanceType<typeof DateRangeCreateEnvelopeInput>;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class AppPopupUncheckedUpdateManyInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    frequency?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => EnumEduSelectionListTypeFieldUpdateOperationsInput, {nullable:true})
    selectionListType?: InstanceType<typeof EnumEduSelectionListTypeFieldUpdateOperationsInput>;
    @Field(() => [EduInstituteSelectOptionCreateInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionCreateInput>;
    @Field(() => AppPopupFiltersUpdateEnvelopeInput, {nullable:true})
    filters?: InstanceType<typeof AppPopupFiltersUpdateEnvelopeInput>;
    @Field(() => EnumAppPopupTemplateFieldUpdateOperationsInput, {nullable:true})
    template?: InstanceType<typeof EnumAppPopupTemplateFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    ctaUrl?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    ctaText?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    couponCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    delayInSeconds?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateRangeUpdateEnvelopeInput, {nullable:true})
    validity?: InstanceType<typeof DateRangeUpdateEnvelopeInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class AppPopupUncheckedUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    frequency?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => EnumEduSelectionListTypeFieldUpdateOperationsInput, {nullable:true})
    selectionListType?: InstanceType<typeof EnumEduSelectionListTypeFieldUpdateOperationsInput>;
    @Field(() => [EduInstituteSelectOptionCreateInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionCreateInput>;
    @Field(() => AppPopupFiltersUpdateEnvelopeInput, {nullable:true})
    filters?: InstanceType<typeof AppPopupFiltersUpdateEnvelopeInput>;
    @Field(() => EnumAppPopupTemplateFieldUpdateOperationsInput, {nullable:true})
    template?: InstanceType<typeof EnumAppPopupTemplateFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    ctaUrl?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    ctaText?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    couponCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    delayInSeconds?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateRangeUpdateEnvelopeInput, {nullable:true})
    validity?: InstanceType<typeof DateRangeUpdateEnvelopeInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class AppPopupUpdateManyMutationInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    frequency?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => EnumEduSelectionListTypeFieldUpdateOperationsInput, {nullable:true})
    selectionListType?: InstanceType<typeof EnumEduSelectionListTypeFieldUpdateOperationsInput>;
    @Field(() => [EduInstituteSelectOptionCreateInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionCreateInput>;
    @Field(() => AppPopupFiltersUpdateEnvelopeInput, {nullable:true})
    filters?: InstanceType<typeof AppPopupFiltersUpdateEnvelopeInput>;
    @Field(() => EnumAppPopupTemplateFieldUpdateOperationsInput, {nullable:true})
    template?: InstanceType<typeof EnumAppPopupTemplateFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    ctaUrl?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    ctaText?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    couponCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    delayInSeconds?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateRangeUpdateEnvelopeInput, {nullable:true})
    validity?: InstanceType<typeof DateRangeUpdateEnvelopeInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class AppPopupUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    frequency?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => EnumEduSelectionListTypeFieldUpdateOperationsInput, {nullable:true})
    selectionListType?: InstanceType<typeof EnumEduSelectionListTypeFieldUpdateOperationsInput>;
    @Field(() => [EduInstituteSelectOptionCreateInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionCreateInput>;
    @Field(() => AppPopupFiltersUpdateEnvelopeInput, {nullable:true})
    filters?: InstanceType<typeof AppPopupFiltersUpdateEnvelopeInput>;
    @Field(() => EnumAppPopupTemplateFieldUpdateOperationsInput, {nullable:true})
    template?: InstanceType<typeof EnumAppPopupTemplateFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    ctaUrl?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    ctaText?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    couponCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    delayInSeconds?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateRangeUpdateEnvelopeInput, {nullable:true})
    validity?: InstanceType<typeof DateRangeUpdateEnvelopeInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class AppPopupWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => [AppPopupWhereInput], {nullable:true})
    AND?: Array<AppPopupWhereInput>;
    @Field(() => [AppPopupWhereInput], {nullable:true})
    OR?: Array<AppPopupWhereInput>;
    @Field(() => [AppPopupWhereInput], {nullable:true})
    NOT?: Array<AppPopupWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    name?: InstanceType<typeof StringFilter>;
    @Field(() => IntFilter, {nullable:true})
    frequency?: InstanceType<typeof IntFilter>;
    @Field(() => EnumEduSelectionListTypeFilter, {nullable:true})
    selectionListType?: InstanceType<typeof EnumEduSelectionListTypeFilter>;
    @Field(() => [EduInstituteSelectOptionObjectEqualityInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionObjectEqualityInput>;
    @Field(() => AppPopupFiltersCompositeFilter, {nullable:true})
    filters?: InstanceType<typeof AppPopupFiltersCompositeFilter>;
    @Field(() => EnumAppPopupTemplateFilter, {nullable:true})
    template?: InstanceType<typeof EnumAppPopupTemplateFilter>;
    @Field(() => StringFilter, {nullable:true})
    image?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    description?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    ctaUrl?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    ctaText?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    couponCode?: InstanceType<typeof StringFilter>;
    @Field(() => IntFilter, {nullable:true})
    delayInSeconds?: InstanceType<typeof IntFilter>;
    @Field(() => BoolFilter, {nullable:true})
    active?: InstanceType<typeof BoolFilter>;
    @Field(() => DateRangeCompositeFilter, {nullable:true})
    validity?: InstanceType<typeof DateRangeCompositeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@InputType()
export class AppPopupWhereInput {
    @Field(() => [AppPopupWhereInput], {nullable:true})
    AND?: Array<AppPopupWhereInput>;
    @Field(() => [AppPopupWhereInput], {nullable:true})
    OR?: Array<AppPopupWhereInput>;
    @Field(() => [AppPopupWhereInput], {nullable:true})
    NOT?: Array<AppPopupWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    name?: InstanceType<typeof StringFilter>;
    @Field(() => IntFilter, {nullable:true})
    frequency?: InstanceType<typeof IntFilter>;
    @Field(() => EnumEduSelectionListTypeFilter, {nullable:true})
    selectionListType?: InstanceType<typeof EnumEduSelectionListTypeFilter>;
    @Field(() => [EduInstituteSelectOptionObjectEqualityInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionObjectEqualityInput>;
    @Field(() => AppPopupFiltersCompositeFilter, {nullable:true})
    filters?: InstanceType<typeof AppPopupFiltersCompositeFilter>;
    @Field(() => EnumAppPopupTemplateFilter, {nullable:true})
    template?: InstanceType<typeof EnumAppPopupTemplateFilter>;
    @Field(() => StringFilter, {nullable:true})
    image?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    description?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    ctaUrl?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    ctaText?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    couponCode?: InstanceType<typeof StringFilter>;
    @Field(() => IntFilter, {nullable:true})
    delayInSeconds?: InstanceType<typeof IntFilter>;
    @Field(() => BoolFilter, {nullable:true})
    active?: InstanceType<typeof BoolFilter>;
    @Field(() => DateRangeCompositeFilter, {nullable:true})
    validity?: InstanceType<typeof DateRangeCompositeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@ObjectType()
export class AppPopup {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => Int, {nullable:false})
    frequency!: number;
    @Field(() => EduSelectionListType, {nullable:false})
    selectionListType!: `${EduSelectionListType}`;
    @Field(() => [EduInstituteSelectOption], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOption>;
    @Field(() => AppPopupFilters, {nullable:false})
    filters?: InstanceType<typeof AppPopupFilters>;
    @Field(() => AppPopupTemplate, {nullable:false})
    template!: `${AppPopupTemplate}`;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => String, {nullable:false})
    description!: string;
    @Field(() => String, {nullable:false})
    ctaUrl!: string;
    @Field(() => String, {nullable:false})
    ctaText!: string;
    @Field(() => String, {defaultValue:'',nullable:false})
    couponCode!: string;
    @Field(() => Int, {nullable:false})
    delayInSeconds!: number;
    @Field(() => Boolean, {nullable:false})
    active!: boolean;
    @Field(() => DateRange, {nullable:false})
    validity?: InstanceType<typeof DateRange>;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
    @Field(() => Date, {nullable:false})
    updatedAt!: Date;
}

@ArgsType()
export class CreateManyAppPopupArgs {
    @Field(() => [AppPopupCreateManyInput], {nullable:false})
    @Type(() => AppPopupCreateManyInput)
    data!: Array<AppPopupCreateManyInput>;
}

@ArgsType()
export class CreateOneAppPopupArgs {
    @Field(() => AppPopupCreateInput, {nullable:false})
    @Type(() => AppPopupCreateInput)
    data!: InstanceType<typeof AppPopupCreateInput>;
}

@ArgsType()
export class DeleteManyAppPopupArgs {
    @Field(() => AppPopupWhereInput, {nullable:true})
    @Type(() => AppPopupWhereInput)
    where?: InstanceType<typeof AppPopupWhereInput>;
}

@ArgsType()
export class DeleteOneAppPopupArgs {
    @Field(() => AppPopupWhereUniqueInput, {nullable:false})
    @Type(() => AppPopupWhereUniqueInput)
    where!: Prisma.AtLeast<AppPopupWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindFirstAppPopupOrThrowArgs {
    @Field(() => AppPopupWhereInput, {nullable:true})
    @Type(() => AppPopupWhereInput)
    where?: InstanceType<typeof AppPopupWhereInput>;
    @Field(() => [AppPopupOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<AppPopupOrderByWithRelationInput>;
    @Field(() => AppPopupWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<AppPopupWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [AppPopupScalarFieldEnum], {nullable:true})
    distinct?: Array<`${AppPopupScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstAppPopupArgs {
    @Field(() => AppPopupWhereInput, {nullable:true})
    @Type(() => AppPopupWhereInput)
    where?: InstanceType<typeof AppPopupWhereInput>;
    @Field(() => [AppPopupOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<AppPopupOrderByWithRelationInput>;
    @Field(() => AppPopupWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<AppPopupWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [AppPopupScalarFieldEnum], {nullable:true})
    distinct?: Array<`${AppPopupScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyAppPopupArgs {
    @Field(() => AppPopupWhereInput, {nullable:true})
    @Type(() => AppPopupWhereInput)
    where?: InstanceType<typeof AppPopupWhereInput>;
    @Field(() => [AppPopupOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<AppPopupOrderByWithRelationInput>;
    @Field(() => AppPopupWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<AppPopupWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [AppPopupScalarFieldEnum], {nullable:true})
    distinct?: Array<`${AppPopupScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniqueAppPopupOrThrowArgs {
    @Field(() => AppPopupWhereUniqueInput, {nullable:false})
    @Type(() => AppPopupWhereUniqueInput)
    where!: Prisma.AtLeast<AppPopupWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindUniqueAppPopupArgs {
    @Field(() => AppPopupWhereUniqueInput, {nullable:false})
    @Type(() => AppPopupWhereUniqueInput)
    where!: Prisma.AtLeast<AppPopupWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpdateManyAppPopupArgs {
    @Field(() => AppPopupUpdateManyMutationInput, {nullable:false})
    @Type(() => AppPopupUpdateManyMutationInput)
    data!: InstanceType<typeof AppPopupUpdateManyMutationInput>;
    @Field(() => AppPopupWhereInput, {nullable:true})
    @Type(() => AppPopupWhereInput)
    where?: InstanceType<typeof AppPopupWhereInput>;
}

@ArgsType()
export class UpdateOneAppPopupArgs {
    @Field(() => AppPopupUpdateInput, {nullable:false})
    @Type(() => AppPopupUpdateInput)
    data!: InstanceType<typeof AppPopupUpdateInput>;
    @Field(() => AppPopupWhereUniqueInput, {nullable:false})
    @Type(() => AppPopupWhereUniqueInput)
    where!: Prisma.AtLeast<AppPopupWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpsertOneAppPopupArgs {
    @Field(() => AppPopupWhereUniqueInput, {nullable:false})
    @Type(() => AppPopupWhereUniqueInput)
    where!: Prisma.AtLeast<AppPopupWhereUniqueInput, 'id'>;
    @Field(() => AppPopupCreateInput, {nullable:false})
    @Type(() => AppPopupCreateInput)
    create!: InstanceType<typeof AppPopupCreateInput>;
    @Field(() => AppPopupUpdateInput, {nullable:false})
    @Type(() => AppPopupUpdateInput)
    update!: InstanceType<typeof AppPopupUpdateInput>;
}

@InputType()
export class AppPopupFiltersCreateInput {
    @Field(() => UserGenderFilter, {nullable:false})
    userGender!: `${UserGenderFilter}`;
}

@InputType()
export class AppPopupFiltersOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    userGender?: `${SortOrder}`;
}

@InputType()
export class AppPopupFiltersUpdateInput {
    @Field(() => EnumUserGenderFilterFieldUpdateOperationsInput, {nullable:true})
    userGender?: InstanceType<typeof EnumUserGenderFilterFieldUpdateOperationsInput>;
}

@InputType()
export class AppPopupFiltersWhereInput {
    @Field(() => [AppPopupFiltersWhereInput], {nullable:true})
    AND?: Array<AppPopupFiltersWhereInput>;
    @Field(() => [AppPopupFiltersWhereInput], {nullable:true})
    OR?: Array<AppPopupFiltersWhereInput>;
    @Field(() => [AppPopupFiltersWhereInput], {nullable:true})
    NOT?: Array<AppPopupFiltersWhereInput>;
    @Field(() => EnumUserGenderFilterFilter, {nullable:true})
    userGender?: InstanceType<typeof EnumUserGenderFilterFilter>;
}

@ObjectType()
export class AppPopupFilters {
    @Field(() => UserGenderFilter, {nullable:false})
    userGender!: `${UserGenderFilter}`;
}

@ArgsType()
export class BannedWordAggregateArgs {
    @Field(() => BannedWordWhereInput, {nullable:true})
    @Type(() => BannedWordWhereInput)
    where?: InstanceType<typeof BannedWordWhereInput>;
    @Field(() => [BannedWordOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<BannedWordOrderByWithRelationInput>;
    @Field(() => BannedWordWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<BannedWordWhereUniqueInput, 'id' | 'word'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class BannedWordCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    word?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    categoryId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class BannedWordCreateManyCategoryInputEnvelope {
    @Field(() => [BannedWordCreateManyCategoryInput], {nullable:false})
    @Type(() => BannedWordCreateManyCategoryInput)
    data!: Array<BannedWordCreateManyCategoryInput>;
}

@InputType()
export class BannedWordCreateManyCategoryInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    word!: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class BannedWordCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    word!: string;
    @Field(() => String, {nullable:false})
    categoryId!: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class BannedWordCreateNestedManyWithoutCategoryInput {
    @Field(() => [BannedWordCreateWithoutCategoryInput], {nullable:true})
    @Type(() => BannedWordCreateWithoutCategoryInput)
    create?: Array<BannedWordCreateWithoutCategoryInput>;
    @Field(() => [BannedWordCreateOrConnectWithoutCategoryInput], {nullable:true})
    @Type(() => BannedWordCreateOrConnectWithoutCategoryInput)
    connectOrCreate?: Array<BannedWordCreateOrConnectWithoutCategoryInput>;
    @Field(() => BannedWordCreateManyCategoryInputEnvelope, {nullable:true})
    @Type(() => BannedWordCreateManyCategoryInputEnvelope)
    createMany?: InstanceType<typeof BannedWordCreateManyCategoryInputEnvelope>;
    @Field(() => [BannedWordWhereUniqueInput], {nullable:true})
    @Type(() => BannedWordWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<BannedWordWhereUniqueInput, 'id' | 'word'>>;
}

@InputType()
export class BannedWordCreateOrConnectWithoutCategoryInput {
    @Field(() => BannedWordWhereUniqueInput, {nullable:false})
    @Type(() => BannedWordWhereUniqueInput)
    where!: Prisma.AtLeast<BannedWordWhereUniqueInput, 'id' | 'word'>;
    @Field(() => BannedWordCreateWithoutCategoryInput, {nullable:false})
    @Type(() => BannedWordCreateWithoutCategoryInput)
    create!: InstanceType<typeof BannedWordCreateWithoutCategoryInput>;
}

@InputType()
export class BannedWordCreateWithoutCategoryInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    word!: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class BannedWordCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    word!: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => BannedWordsCategoryCreateNestedOneWithoutWordsInput, {nullable:false})
    category!: InstanceType<typeof BannedWordsCategoryCreateNestedOneWithoutWordsInput>;
}

@ArgsType()
export class BannedWordGroupByArgs {
    @Field(() => BannedWordWhereInput, {nullable:true})
    @Type(() => BannedWordWhereInput)
    where?: InstanceType<typeof BannedWordWhereInput>;
    @Field(() => [BannedWordOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<BannedWordOrderByWithAggregationInput>;
    @Field(() => [BannedWordScalarFieldEnum], {nullable:false})
    by!: Array<`${BannedWordScalarFieldEnum}`>;
    @Field(() => BannedWordScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof BannedWordScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class BannedWordListRelationFilter {
    @Field(() => BannedWordWhereInput, {nullable:true})
    every?: InstanceType<typeof BannedWordWhereInput>;
    @Field(() => BannedWordWhereInput, {nullable:true})
    some?: InstanceType<typeof BannedWordWhereInput>;
    @Field(() => BannedWordWhereInput, {nullable:true})
    none?: InstanceType<typeof BannedWordWhereInput>;
}

@InputType()
export class BannedWordMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    word?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    categoryId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class BannedWordMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    word?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    categoryId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class BannedWordOrderByRelationAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    _count?: `${SortOrder}`;
}

@InputType()
export class BannedWordOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    word?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    categoryId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => BannedWordCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof BannedWordCountOrderByAggregateInput>;
    @Field(() => BannedWordMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof BannedWordMaxOrderByAggregateInput>;
    @Field(() => BannedWordMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof BannedWordMinOrderByAggregateInput>;
}

@InputType()
export class BannedWordOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    word?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    categoryId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => BannedWordsCategoryOrderByWithRelationInput, {nullable:true})
    category?: InstanceType<typeof BannedWordsCategoryOrderByWithRelationInput>;
}

@InputType()
export class BannedWordScalarWhereWithAggregatesInput {
    @Field(() => [BannedWordScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<BannedWordScalarWhereWithAggregatesInput>;
    @Field(() => [BannedWordScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<BannedWordScalarWhereWithAggregatesInput>;
    @Field(() => [BannedWordScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<BannedWordScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    word?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    categoryId?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => BoolWithAggregatesFilter, {nullable:true})
    active?: InstanceType<typeof BoolWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
}

@InputType()
export class BannedWordScalarWhereInput {
    @Field(() => [BannedWordScalarWhereInput], {nullable:true})
    AND?: Array<BannedWordScalarWhereInput>;
    @Field(() => [BannedWordScalarWhereInput], {nullable:true})
    OR?: Array<BannedWordScalarWhereInput>;
    @Field(() => [BannedWordScalarWhereInput], {nullable:true})
    NOT?: Array<BannedWordScalarWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    word?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    categoryId?: InstanceType<typeof StringFilter>;
    @Field(() => BoolFilter, {nullable:true})
    active?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@InputType()
export class BannedWordUncheckedCreateNestedManyWithoutCategoryInput {
    @Field(() => [BannedWordCreateWithoutCategoryInput], {nullable:true})
    @Type(() => BannedWordCreateWithoutCategoryInput)
    create?: Array<BannedWordCreateWithoutCategoryInput>;
    @Field(() => [BannedWordCreateOrConnectWithoutCategoryInput], {nullable:true})
    @Type(() => BannedWordCreateOrConnectWithoutCategoryInput)
    connectOrCreate?: Array<BannedWordCreateOrConnectWithoutCategoryInput>;
    @Field(() => BannedWordCreateManyCategoryInputEnvelope, {nullable:true})
    @Type(() => BannedWordCreateManyCategoryInputEnvelope)
    createMany?: InstanceType<typeof BannedWordCreateManyCategoryInputEnvelope>;
    @Field(() => [BannedWordWhereUniqueInput], {nullable:true})
    @Type(() => BannedWordWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<BannedWordWhereUniqueInput, 'id' | 'word'>>;
}

@InputType()
export class BannedWordUncheckedCreateWithoutCategoryInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    word!: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class BannedWordUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    word!: string;
    @Field(() => String, {nullable:false})
    categoryId!: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class BannedWordUncheckedUpdateManyWithoutCategoryNestedInput {
    @Field(() => [BannedWordCreateWithoutCategoryInput], {nullable:true})
    @Type(() => BannedWordCreateWithoutCategoryInput)
    create?: Array<BannedWordCreateWithoutCategoryInput>;
    @Field(() => [BannedWordCreateOrConnectWithoutCategoryInput], {nullable:true})
    @Type(() => BannedWordCreateOrConnectWithoutCategoryInput)
    connectOrCreate?: Array<BannedWordCreateOrConnectWithoutCategoryInput>;
    @Field(() => [BannedWordUpsertWithWhereUniqueWithoutCategoryInput], {nullable:true})
    @Type(() => BannedWordUpsertWithWhereUniqueWithoutCategoryInput)
    upsert?: Array<BannedWordUpsertWithWhereUniqueWithoutCategoryInput>;
    @Field(() => BannedWordCreateManyCategoryInputEnvelope, {nullable:true})
    @Type(() => BannedWordCreateManyCategoryInputEnvelope)
    createMany?: InstanceType<typeof BannedWordCreateManyCategoryInputEnvelope>;
    @Field(() => [BannedWordWhereUniqueInput], {nullable:true})
    @Type(() => BannedWordWhereUniqueInput)
    set?: Array<Prisma.AtLeast<BannedWordWhereUniqueInput, 'id' | 'word'>>;
    @Field(() => [BannedWordWhereUniqueInput], {nullable:true})
    @Type(() => BannedWordWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<BannedWordWhereUniqueInput, 'id' | 'word'>>;
    @Field(() => [BannedWordWhereUniqueInput], {nullable:true})
    @Type(() => BannedWordWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<BannedWordWhereUniqueInput, 'id' | 'word'>>;
    @Field(() => [BannedWordWhereUniqueInput], {nullable:true})
    @Type(() => BannedWordWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<BannedWordWhereUniqueInput, 'id' | 'word'>>;
    @Field(() => [BannedWordUpdateWithWhereUniqueWithoutCategoryInput], {nullable:true})
    @Type(() => BannedWordUpdateWithWhereUniqueWithoutCategoryInput)
    update?: Array<BannedWordUpdateWithWhereUniqueWithoutCategoryInput>;
    @Field(() => [BannedWordUpdateManyWithWhereWithoutCategoryInput], {nullable:true})
    @Type(() => BannedWordUpdateManyWithWhereWithoutCategoryInput)
    updateMany?: Array<BannedWordUpdateManyWithWhereWithoutCategoryInput>;
    @Field(() => [BannedWordScalarWhereInput], {nullable:true})
    @Type(() => BannedWordScalarWhereInput)
    deleteMany?: Array<BannedWordScalarWhereInput>;
}

@InputType()
export class BannedWordUncheckedUpdateManyWithoutCategoryInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    word?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class BannedWordUncheckedUpdateManyInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    word?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    categoryId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class BannedWordUncheckedUpdateWithoutCategoryInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    word?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class BannedWordUncheckedUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    word?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    categoryId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class BannedWordUpdateManyMutationInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    word?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class BannedWordUpdateManyWithWhereWithoutCategoryInput {
    @Field(() => BannedWordScalarWhereInput, {nullable:false})
    @Type(() => BannedWordScalarWhereInput)
    where!: InstanceType<typeof BannedWordScalarWhereInput>;
    @Field(() => BannedWordUpdateManyMutationInput, {nullable:false})
    @Type(() => BannedWordUpdateManyMutationInput)
    data!: InstanceType<typeof BannedWordUpdateManyMutationInput>;
}

@InputType()
export class BannedWordUpdateManyWithoutCategoryNestedInput {
    @Field(() => [BannedWordCreateWithoutCategoryInput], {nullable:true})
    @Type(() => BannedWordCreateWithoutCategoryInput)
    create?: Array<BannedWordCreateWithoutCategoryInput>;
    @Field(() => [BannedWordCreateOrConnectWithoutCategoryInput], {nullable:true})
    @Type(() => BannedWordCreateOrConnectWithoutCategoryInput)
    connectOrCreate?: Array<BannedWordCreateOrConnectWithoutCategoryInput>;
    @Field(() => [BannedWordUpsertWithWhereUniqueWithoutCategoryInput], {nullable:true})
    @Type(() => BannedWordUpsertWithWhereUniqueWithoutCategoryInput)
    upsert?: Array<BannedWordUpsertWithWhereUniqueWithoutCategoryInput>;
    @Field(() => BannedWordCreateManyCategoryInputEnvelope, {nullable:true})
    @Type(() => BannedWordCreateManyCategoryInputEnvelope)
    createMany?: InstanceType<typeof BannedWordCreateManyCategoryInputEnvelope>;
    @Field(() => [BannedWordWhereUniqueInput], {nullable:true})
    @Type(() => BannedWordWhereUniqueInput)
    set?: Array<Prisma.AtLeast<BannedWordWhereUniqueInput, 'id' | 'word'>>;
    @Field(() => [BannedWordWhereUniqueInput], {nullable:true})
    @Type(() => BannedWordWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<BannedWordWhereUniqueInput, 'id' | 'word'>>;
    @Field(() => [BannedWordWhereUniqueInput], {nullable:true})
    @Type(() => BannedWordWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<BannedWordWhereUniqueInput, 'id' | 'word'>>;
    @Field(() => [BannedWordWhereUniqueInput], {nullable:true})
    @Type(() => BannedWordWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<BannedWordWhereUniqueInput, 'id' | 'word'>>;
    @Field(() => [BannedWordUpdateWithWhereUniqueWithoutCategoryInput], {nullable:true})
    @Type(() => BannedWordUpdateWithWhereUniqueWithoutCategoryInput)
    update?: Array<BannedWordUpdateWithWhereUniqueWithoutCategoryInput>;
    @Field(() => [BannedWordUpdateManyWithWhereWithoutCategoryInput], {nullable:true})
    @Type(() => BannedWordUpdateManyWithWhereWithoutCategoryInput)
    updateMany?: Array<BannedWordUpdateManyWithWhereWithoutCategoryInput>;
    @Field(() => [BannedWordScalarWhereInput], {nullable:true})
    @Type(() => BannedWordScalarWhereInput)
    deleteMany?: Array<BannedWordScalarWhereInput>;
}

@InputType()
export class BannedWordUpdateWithWhereUniqueWithoutCategoryInput {
    @Field(() => BannedWordWhereUniqueInput, {nullable:false})
    @Type(() => BannedWordWhereUniqueInput)
    where!: Prisma.AtLeast<BannedWordWhereUniqueInput, 'id' | 'word'>;
    @Field(() => BannedWordUpdateWithoutCategoryInput, {nullable:false})
    @Type(() => BannedWordUpdateWithoutCategoryInput)
    data!: InstanceType<typeof BannedWordUpdateWithoutCategoryInput>;
}

@InputType()
export class BannedWordUpdateWithoutCategoryInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    word?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class BannedWordUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    word?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => BannedWordsCategoryUpdateOneRequiredWithoutWordsNestedInput, {nullable:true})
    category?: InstanceType<typeof BannedWordsCategoryUpdateOneRequiredWithoutWordsNestedInput>;
}

@InputType()
export class BannedWordUpsertWithWhereUniqueWithoutCategoryInput {
    @Field(() => BannedWordWhereUniqueInput, {nullable:false})
    @Type(() => BannedWordWhereUniqueInput)
    where!: Prisma.AtLeast<BannedWordWhereUniqueInput, 'id' | 'word'>;
    @Field(() => BannedWordUpdateWithoutCategoryInput, {nullable:false})
    @Type(() => BannedWordUpdateWithoutCategoryInput)
    update!: InstanceType<typeof BannedWordUpdateWithoutCategoryInput>;
    @Field(() => BannedWordCreateWithoutCategoryInput, {nullable:false})
    @Type(() => BannedWordCreateWithoutCategoryInput)
    create!: InstanceType<typeof BannedWordCreateWithoutCategoryInput>;
}

@InputType()
export class BannedWordWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:true})
    word?: string;
    @Field(() => [BannedWordWhereInput], {nullable:true})
    AND?: Array<BannedWordWhereInput>;
    @Field(() => [BannedWordWhereInput], {nullable:true})
    OR?: Array<BannedWordWhereInput>;
    @Field(() => [BannedWordWhereInput], {nullable:true})
    NOT?: Array<BannedWordWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    categoryId?: InstanceType<typeof StringFilter>;
    @Field(() => BoolFilter, {nullable:true})
    active?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => BannedWordsCategoryRelationFilter, {nullable:true})
    category?: InstanceType<typeof BannedWordsCategoryRelationFilter>;
}

@InputType()
export class BannedWordWhereInput {
    @Field(() => [BannedWordWhereInput], {nullable:true})
    AND?: Array<BannedWordWhereInput>;
    @Field(() => [BannedWordWhereInput], {nullable:true})
    OR?: Array<BannedWordWhereInput>;
    @Field(() => [BannedWordWhereInput], {nullable:true})
    NOT?: Array<BannedWordWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    word?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    categoryId?: InstanceType<typeof StringFilter>;
    @Field(() => BoolFilter, {nullable:true})
    active?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => BannedWordsCategoryRelationFilter, {nullable:true})
    category?: InstanceType<typeof BannedWordsCategoryRelationFilter>;
}

@ObjectType()
export class BannedWord {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    word!: string;
    @Field(() => String, {nullable:false})
    categoryId!: string;
    @Field(() => Boolean, {defaultValue:true,nullable:false})
    active!: boolean;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
    @Field(() => Date, {nullable:false})
    updatedAt!: Date;
    @Field(() => BannedWordsCategory, {nullable:false})
    category?: InstanceType<typeof BannedWordsCategory>;
}

@ArgsType()
export class CreateManyBannedWordArgs {
    @Field(() => [BannedWordCreateManyInput], {nullable:false})
    @Type(() => BannedWordCreateManyInput)
    data!: Array<BannedWordCreateManyInput>;
}

@ArgsType()
export class CreateOneBannedWordArgs {
    @Field(() => BannedWordCreateInput, {nullable:false})
    @Type(() => BannedWordCreateInput)
    data!: InstanceType<typeof BannedWordCreateInput>;
}

@ArgsType()
export class DeleteManyBannedWordArgs {
    @Field(() => BannedWordWhereInput, {nullable:true})
    @Type(() => BannedWordWhereInput)
    where?: InstanceType<typeof BannedWordWhereInput>;
}

@ArgsType()
export class DeleteOneBannedWordArgs {
    @Field(() => BannedWordWhereUniqueInput, {nullable:false})
    @Type(() => BannedWordWhereUniqueInput)
    where!: Prisma.AtLeast<BannedWordWhereUniqueInput, 'id' | 'word'>;
}

@ArgsType()
export class FindFirstBannedWordOrThrowArgs {
    @Field(() => BannedWordWhereInput, {nullable:true})
    @Type(() => BannedWordWhereInput)
    where?: InstanceType<typeof BannedWordWhereInput>;
    @Field(() => [BannedWordOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<BannedWordOrderByWithRelationInput>;
    @Field(() => BannedWordWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<BannedWordWhereUniqueInput, 'id' | 'word'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [BannedWordScalarFieldEnum], {nullable:true})
    distinct?: Array<`${BannedWordScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstBannedWordArgs {
    @Field(() => BannedWordWhereInput, {nullable:true})
    @Type(() => BannedWordWhereInput)
    where?: InstanceType<typeof BannedWordWhereInput>;
    @Field(() => [BannedWordOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<BannedWordOrderByWithRelationInput>;
    @Field(() => BannedWordWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<BannedWordWhereUniqueInput, 'id' | 'word'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [BannedWordScalarFieldEnum], {nullable:true})
    distinct?: Array<`${BannedWordScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyBannedWordArgs {
    @Field(() => BannedWordWhereInput, {nullable:true})
    @Type(() => BannedWordWhereInput)
    where?: InstanceType<typeof BannedWordWhereInput>;
    @Field(() => [BannedWordOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<BannedWordOrderByWithRelationInput>;
    @Field(() => BannedWordWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<BannedWordWhereUniqueInput, 'id' | 'word'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [BannedWordScalarFieldEnum], {nullable:true})
    distinct?: Array<`${BannedWordScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniqueBannedWordOrThrowArgs {
    @Field(() => BannedWordWhereUniqueInput, {nullable:false})
    @Type(() => BannedWordWhereUniqueInput)
    where!: Prisma.AtLeast<BannedWordWhereUniqueInput, 'id' | 'word'>;
}

@ArgsType()
export class FindUniqueBannedWordArgs {
    @Field(() => BannedWordWhereUniqueInput, {nullable:false})
    @Type(() => BannedWordWhereUniqueInput)
    where!: Prisma.AtLeast<BannedWordWhereUniqueInput, 'id' | 'word'>;
}

@ArgsType()
export class UpdateManyBannedWordArgs {
    @Field(() => BannedWordUpdateManyMutationInput, {nullable:false})
    @Type(() => BannedWordUpdateManyMutationInput)
    data!: InstanceType<typeof BannedWordUpdateManyMutationInput>;
    @Field(() => BannedWordWhereInput, {nullable:true})
    @Type(() => BannedWordWhereInput)
    where?: InstanceType<typeof BannedWordWhereInput>;
}

@ArgsType()
export class UpdateOneBannedWordArgs {
    @Field(() => BannedWordUpdateInput, {nullable:false})
    @Type(() => BannedWordUpdateInput)
    data!: InstanceType<typeof BannedWordUpdateInput>;
    @Field(() => BannedWordWhereUniqueInput, {nullable:false})
    @Type(() => BannedWordWhereUniqueInput)
    where!: Prisma.AtLeast<BannedWordWhereUniqueInput, 'id' | 'word'>;
}

@ArgsType()
export class UpsertOneBannedWordArgs {
    @Field(() => BannedWordWhereUniqueInput, {nullable:false})
    @Type(() => BannedWordWhereUniqueInput)
    where!: Prisma.AtLeast<BannedWordWhereUniqueInput, 'id' | 'word'>;
    @Field(() => BannedWordCreateInput, {nullable:false})
    @Type(() => BannedWordCreateInput)
    create!: InstanceType<typeof BannedWordCreateInput>;
    @Field(() => BannedWordUpdateInput, {nullable:false})
    @Type(() => BannedWordUpdateInput)
    update!: InstanceType<typeof BannedWordUpdateInput>;
}

@ArgsType()
export class BannedWordsCategoryAggregateArgs {
    @Field(() => BannedWordsCategoryWhereInput, {nullable:true})
    @Type(() => BannedWordsCategoryWhereInput)
    where?: InstanceType<typeof BannedWordsCategoryWhereInput>;
    @Field(() => [BannedWordsCategoryOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<BannedWordsCategoryOrderByWithRelationInput>;
    @Field(() => BannedWordsCategoryWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<BannedWordsCategoryWhereUniqueInput, 'id' | 'name'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class BannedWordsCategoryAvgOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    severity?: `${SortOrder}`;
}

@InputType()
export class BannedWordsCategoryCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    description?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    severity?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class BannedWordsCategoryCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:true})
    description?: string;
    @Field(() => Int, {nullable:true})
    severity?: number;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class BannedWordsCategoryCreateNestedOneWithoutWordsInput {
    @Field(() => BannedWordsCategoryCreateWithoutWordsInput, {nullable:true})
    @Type(() => BannedWordsCategoryCreateWithoutWordsInput)
    create?: InstanceType<typeof BannedWordsCategoryCreateWithoutWordsInput>;
    @Field(() => BannedWordsCategoryCreateOrConnectWithoutWordsInput, {nullable:true})
    @Type(() => BannedWordsCategoryCreateOrConnectWithoutWordsInput)
    connectOrCreate?: InstanceType<typeof BannedWordsCategoryCreateOrConnectWithoutWordsInput>;
    @Field(() => BannedWordsCategoryWhereUniqueInput, {nullable:true})
    @Type(() => BannedWordsCategoryWhereUniqueInput)
    connect?: Prisma.AtLeast<BannedWordsCategoryWhereUniqueInput, 'id' | 'name'>;
}

@InputType()
export class BannedWordsCategoryCreateOrConnectWithoutWordsInput {
    @Field(() => BannedWordsCategoryWhereUniqueInput, {nullable:false})
    @Type(() => BannedWordsCategoryWhereUniqueInput)
    where!: Prisma.AtLeast<BannedWordsCategoryWhereUniqueInput, 'id' | 'name'>;
    @Field(() => BannedWordsCategoryCreateWithoutWordsInput, {nullable:false})
    @Type(() => BannedWordsCategoryCreateWithoutWordsInput)
    create!: InstanceType<typeof BannedWordsCategoryCreateWithoutWordsInput>;
}

@InputType()
export class BannedWordsCategoryCreateWithoutWordsInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:true})
    description?: string;
    @Field(() => Int, {nullable:true})
    severity?: number;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class BannedWordsCategoryCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:true})
    description?: string;
    @Field(() => Int, {nullable:true})
    severity?: number;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => BannedWordCreateNestedManyWithoutCategoryInput, {nullable:true})
    words?: InstanceType<typeof BannedWordCreateNestedManyWithoutCategoryInput>;
}

@ArgsType()
export class BannedWordsCategoryGroupByArgs {
    @Field(() => BannedWordsCategoryWhereInput, {nullable:true})
    @Type(() => BannedWordsCategoryWhereInput)
    where?: InstanceType<typeof BannedWordsCategoryWhereInput>;
    @Field(() => [BannedWordsCategoryOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<BannedWordsCategoryOrderByWithAggregationInput>;
    @Field(() => [BannedWordsCategoryScalarFieldEnum], {nullable:false})
    by!: Array<`${BannedWordsCategoryScalarFieldEnum}`>;
    @Field(() => BannedWordsCategoryScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof BannedWordsCategoryScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class BannedWordsCategoryMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    description?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    severity?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class BannedWordsCategoryMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    description?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    severity?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class BannedWordsCategoryOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    description?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    severity?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => BannedWordsCategoryCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof BannedWordsCategoryCountOrderByAggregateInput>;
    @Field(() => BannedWordsCategoryAvgOrderByAggregateInput, {nullable:true})
    _avg?: InstanceType<typeof BannedWordsCategoryAvgOrderByAggregateInput>;
    @Field(() => BannedWordsCategoryMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof BannedWordsCategoryMaxOrderByAggregateInput>;
    @Field(() => BannedWordsCategoryMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof BannedWordsCategoryMinOrderByAggregateInput>;
    @Field(() => BannedWordsCategorySumOrderByAggregateInput, {nullable:true})
    _sum?: InstanceType<typeof BannedWordsCategorySumOrderByAggregateInput>;
}

@InputType()
export class BannedWordsCategoryOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    description?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    severity?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => BannedWordOrderByRelationAggregateInput, {nullable:true})
    words?: InstanceType<typeof BannedWordOrderByRelationAggregateInput>;
}

@InputType()
export class BannedWordsCategoryRelationFilter {
    @Field(() => BannedWordsCategoryWhereInput, {nullable:true})
    is?: InstanceType<typeof BannedWordsCategoryWhereInput>;
    @Field(() => BannedWordsCategoryWhereInput, {nullable:true})
    isNot?: InstanceType<typeof BannedWordsCategoryWhereInput>;
}

@InputType()
export class BannedWordsCategoryScalarWhereWithAggregatesInput {
    @Field(() => [BannedWordsCategoryScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<BannedWordsCategoryScalarWhereWithAggregatesInput>;
    @Field(() => [BannedWordsCategoryScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<BannedWordsCategoryScalarWhereWithAggregatesInput>;
    @Field(() => [BannedWordsCategoryScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<BannedWordsCategoryScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    name?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    description?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => IntWithAggregatesFilter, {nullable:true})
    severity?: InstanceType<typeof IntWithAggregatesFilter>;
    @Field(() => BoolWithAggregatesFilter, {nullable:true})
    active?: InstanceType<typeof BoolWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
}

@InputType()
export class BannedWordsCategorySumOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    severity?: `${SortOrder}`;
}

@InputType()
export class BannedWordsCategoryUncheckedCreateWithoutWordsInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:true})
    description?: string;
    @Field(() => Int, {nullable:true})
    severity?: number;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class BannedWordsCategoryUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:true})
    description?: string;
    @Field(() => Int, {nullable:true})
    severity?: number;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => BannedWordUncheckedCreateNestedManyWithoutCategoryInput, {nullable:true})
    words?: InstanceType<typeof BannedWordUncheckedCreateNestedManyWithoutCategoryInput>;
}

@InputType()
export class BannedWordsCategoryUncheckedUpdateManyInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    severity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class BannedWordsCategoryUncheckedUpdateWithoutWordsInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    severity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class BannedWordsCategoryUncheckedUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    severity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => BannedWordUncheckedUpdateManyWithoutCategoryNestedInput, {nullable:true})
    words?: InstanceType<typeof BannedWordUncheckedUpdateManyWithoutCategoryNestedInput>;
}

@InputType()
export class BannedWordsCategoryUpdateManyMutationInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    severity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class BannedWordsCategoryUpdateOneRequiredWithoutWordsNestedInput {
    @Field(() => BannedWordsCategoryCreateWithoutWordsInput, {nullable:true})
    @Type(() => BannedWordsCategoryCreateWithoutWordsInput)
    create?: InstanceType<typeof BannedWordsCategoryCreateWithoutWordsInput>;
    @Field(() => BannedWordsCategoryCreateOrConnectWithoutWordsInput, {nullable:true})
    @Type(() => BannedWordsCategoryCreateOrConnectWithoutWordsInput)
    connectOrCreate?: InstanceType<typeof BannedWordsCategoryCreateOrConnectWithoutWordsInput>;
    @Field(() => BannedWordsCategoryUpsertWithoutWordsInput, {nullable:true})
    @Type(() => BannedWordsCategoryUpsertWithoutWordsInput)
    upsert?: InstanceType<typeof BannedWordsCategoryUpsertWithoutWordsInput>;
    @Field(() => BannedWordsCategoryWhereUniqueInput, {nullable:true})
    @Type(() => BannedWordsCategoryWhereUniqueInput)
    connect?: Prisma.AtLeast<BannedWordsCategoryWhereUniqueInput, 'id' | 'name'>;
    @Field(() => BannedWordsCategoryUpdateToOneWithWhereWithoutWordsInput, {nullable:true})
    @Type(() => BannedWordsCategoryUpdateToOneWithWhereWithoutWordsInput)
    update?: InstanceType<typeof BannedWordsCategoryUpdateToOneWithWhereWithoutWordsInput>;
}

@InputType()
export class BannedWordsCategoryUpdateToOneWithWhereWithoutWordsInput {
    @Field(() => BannedWordsCategoryWhereInput, {nullable:true})
    @Type(() => BannedWordsCategoryWhereInput)
    where?: InstanceType<typeof BannedWordsCategoryWhereInput>;
    @Field(() => BannedWordsCategoryUpdateWithoutWordsInput, {nullable:false})
    @Type(() => BannedWordsCategoryUpdateWithoutWordsInput)
    data!: InstanceType<typeof BannedWordsCategoryUpdateWithoutWordsInput>;
}

@InputType()
export class BannedWordsCategoryUpdateWithoutWordsInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    severity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class BannedWordsCategoryUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    severity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => BannedWordUpdateManyWithoutCategoryNestedInput, {nullable:true})
    words?: InstanceType<typeof BannedWordUpdateManyWithoutCategoryNestedInput>;
}

@InputType()
export class BannedWordsCategoryUpsertWithoutWordsInput {
    @Field(() => BannedWordsCategoryUpdateWithoutWordsInput, {nullable:false})
    @Type(() => BannedWordsCategoryUpdateWithoutWordsInput)
    update!: InstanceType<typeof BannedWordsCategoryUpdateWithoutWordsInput>;
    @Field(() => BannedWordsCategoryCreateWithoutWordsInput, {nullable:false})
    @Type(() => BannedWordsCategoryCreateWithoutWordsInput)
    create!: InstanceType<typeof BannedWordsCategoryCreateWithoutWordsInput>;
    @Field(() => BannedWordsCategoryWhereInput, {nullable:true})
    @Type(() => BannedWordsCategoryWhereInput)
    where?: InstanceType<typeof BannedWordsCategoryWhereInput>;
}

@InputType()
export class BannedWordsCategoryWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:true})
    name?: string;
    @Field(() => [BannedWordsCategoryWhereInput], {nullable:true})
    AND?: Array<BannedWordsCategoryWhereInput>;
    @Field(() => [BannedWordsCategoryWhereInput], {nullable:true})
    OR?: Array<BannedWordsCategoryWhereInput>;
    @Field(() => [BannedWordsCategoryWhereInput], {nullable:true})
    NOT?: Array<BannedWordsCategoryWhereInput>;
    @Field(() => StringNullableFilter, {nullable:true})
    description?: InstanceType<typeof StringNullableFilter>;
    @Field(() => IntFilter, {nullable:true})
    severity?: InstanceType<typeof IntFilter>;
    @Field(() => BoolFilter, {nullable:true})
    active?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => BannedWordListRelationFilter, {nullable:true})
    words?: InstanceType<typeof BannedWordListRelationFilter>;
}

@InputType()
export class BannedWordsCategoryWhereInput {
    @Field(() => [BannedWordsCategoryWhereInput], {nullable:true})
    AND?: Array<BannedWordsCategoryWhereInput>;
    @Field(() => [BannedWordsCategoryWhereInput], {nullable:true})
    OR?: Array<BannedWordsCategoryWhereInput>;
    @Field(() => [BannedWordsCategoryWhereInput], {nullable:true})
    NOT?: Array<BannedWordsCategoryWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    name?: InstanceType<typeof StringFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    description?: InstanceType<typeof StringNullableFilter>;
    @Field(() => IntFilter, {nullable:true})
    severity?: InstanceType<typeof IntFilter>;
    @Field(() => BoolFilter, {nullable:true})
    active?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => BannedWordListRelationFilter, {nullable:true})
    words?: InstanceType<typeof BannedWordListRelationFilter>;
}

@ObjectType()
export class BannedWordsCategory {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:true})
    description!: string | null;
    @Field(() => Int, {defaultValue:1,nullable:false})
    severity!: number;
    @Field(() => Boolean, {defaultValue:true,nullable:false})
    active!: boolean;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
    @Field(() => Date, {nullable:false})
    updatedAt!: Date;
    @Field(() => [BannedWord], {nullable:true})
    words?: Array<BannedWord>;
}

@ArgsType()
export class CreateManyBannedWordsCategoryArgs {
    @Field(() => [BannedWordsCategoryCreateManyInput], {nullable:false})
    @Type(() => BannedWordsCategoryCreateManyInput)
    data!: Array<BannedWordsCategoryCreateManyInput>;
}

@ArgsType()
export class CreateOneBannedWordsCategoryArgs {
    @Field(() => BannedWordsCategoryCreateInput, {nullable:false})
    @Type(() => BannedWordsCategoryCreateInput)
    data!: InstanceType<typeof BannedWordsCategoryCreateInput>;
}

@ArgsType()
export class DeleteManyBannedWordsCategoryArgs {
    @Field(() => BannedWordsCategoryWhereInput, {nullable:true})
    @Type(() => BannedWordsCategoryWhereInput)
    where?: InstanceType<typeof BannedWordsCategoryWhereInput>;
}

@ArgsType()
export class DeleteOneBannedWordsCategoryArgs {
    @Field(() => BannedWordsCategoryWhereUniqueInput, {nullable:false})
    @Type(() => BannedWordsCategoryWhereUniqueInput)
    where!: Prisma.AtLeast<BannedWordsCategoryWhereUniqueInput, 'id' | 'name'>;
}

@ArgsType()
export class FindFirstBannedWordsCategoryOrThrowArgs {
    @Field(() => BannedWordsCategoryWhereInput, {nullable:true})
    @Type(() => BannedWordsCategoryWhereInput)
    where?: InstanceType<typeof BannedWordsCategoryWhereInput>;
    @Field(() => [BannedWordsCategoryOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<BannedWordsCategoryOrderByWithRelationInput>;
    @Field(() => BannedWordsCategoryWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<BannedWordsCategoryWhereUniqueInput, 'id' | 'name'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [BannedWordsCategoryScalarFieldEnum], {nullable:true})
    distinct?: Array<`${BannedWordsCategoryScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstBannedWordsCategoryArgs {
    @Field(() => BannedWordsCategoryWhereInput, {nullable:true})
    @Type(() => BannedWordsCategoryWhereInput)
    where?: InstanceType<typeof BannedWordsCategoryWhereInput>;
    @Field(() => [BannedWordsCategoryOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<BannedWordsCategoryOrderByWithRelationInput>;
    @Field(() => BannedWordsCategoryWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<BannedWordsCategoryWhereUniqueInput, 'id' | 'name'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [BannedWordsCategoryScalarFieldEnum], {nullable:true})
    distinct?: Array<`${BannedWordsCategoryScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyBannedWordsCategoryArgs {
    @Field(() => BannedWordsCategoryWhereInput, {nullable:true})
    @Type(() => BannedWordsCategoryWhereInput)
    where?: InstanceType<typeof BannedWordsCategoryWhereInput>;
    @Field(() => [BannedWordsCategoryOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<BannedWordsCategoryOrderByWithRelationInput>;
    @Field(() => BannedWordsCategoryWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<BannedWordsCategoryWhereUniqueInput, 'id' | 'name'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [BannedWordsCategoryScalarFieldEnum], {nullable:true})
    distinct?: Array<`${BannedWordsCategoryScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniqueBannedWordsCategoryOrThrowArgs {
    @Field(() => BannedWordsCategoryWhereUniqueInput, {nullable:false})
    @Type(() => BannedWordsCategoryWhereUniqueInput)
    where!: Prisma.AtLeast<BannedWordsCategoryWhereUniqueInput, 'id' | 'name'>;
}

@ArgsType()
export class FindUniqueBannedWordsCategoryArgs {
    @Field(() => BannedWordsCategoryWhereUniqueInput, {nullable:false})
    @Type(() => BannedWordsCategoryWhereUniqueInput)
    where!: Prisma.AtLeast<BannedWordsCategoryWhereUniqueInput, 'id' | 'name'>;
}

@ArgsType()
export class UpdateManyBannedWordsCategoryArgs {
    @Field(() => BannedWordsCategoryUpdateManyMutationInput, {nullable:false})
    @Type(() => BannedWordsCategoryUpdateManyMutationInput)
    data!: InstanceType<typeof BannedWordsCategoryUpdateManyMutationInput>;
    @Field(() => BannedWordsCategoryWhereInput, {nullable:true})
    @Type(() => BannedWordsCategoryWhereInput)
    where?: InstanceType<typeof BannedWordsCategoryWhereInput>;
}

@ArgsType()
export class UpdateOneBannedWordsCategoryArgs {
    @Field(() => BannedWordsCategoryUpdateInput, {nullable:false})
    @Type(() => BannedWordsCategoryUpdateInput)
    data!: InstanceType<typeof BannedWordsCategoryUpdateInput>;
    @Field(() => BannedWordsCategoryWhereUniqueInput, {nullable:false})
    @Type(() => BannedWordsCategoryWhereUniqueInput)
    where!: Prisma.AtLeast<BannedWordsCategoryWhereUniqueInput, 'id' | 'name'>;
}

@ArgsType()
export class UpsertOneBannedWordsCategoryArgs {
    @Field(() => BannedWordsCategoryWhereUniqueInput, {nullable:false})
    @Type(() => BannedWordsCategoryWhereUniqueInput)
    where!: Prisma.AtLeast<BannedWordsCategoryWhereUniqueInput, 'id' | 'name'>;
    @Field(() => BannedWordsCategoryCreateInput, {nullable:false})
    @Type(() => BannedWordsCategoryCreateInput)
    create!: InstanceType<typeof BannedWordsCategoryCreateInput>;
    @Field(() => BannedWordsCategoryUpdateInput, {nullable:false})
    @Type(() => BannedWordsCategoryUpdateInput)
    update!: InstanceType<typeof BannedWordsCategoryUpdateInput>;
}

@ArgsType()
export class BannerAggregateArgs {
    @Field(() => BannerWhereInput, {nullable:true})
    @Type(() => BannerWhereInput)
    where?: InstanceType<typeof BannerWhereInput>;
    @Field(() => [BannerOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<BannerOrderByWithRelationInput>;
    @Field(() => BannerWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<BannerWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class BannerCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    positions?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class BannerCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => BannerType, {nullable:false})
    type!: `${BannerType}`;
    @Field(() => BannerImageCreateEnvelopeInput, {nullable:false})
    image!: InstanceType<typeof BannerImageCreateEnvelopeInput>;
    @Field(() => [BannerImageCreateInput], {nullable:true})
    images?: Array<BannerImageCreateInput>;
    @Field(() => DateRangeCreateEnvelopeInput, {nullable:false})
    validity!: InstanceType<typeof DateRangeCreateEnvelopeInput>;
    @Field(() => BannerCreatepositionsInput, {nullable:true})
    positions?: InstanceType<typeof BannerCreatepositionsInput>;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class BannerCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => BannerType, {nullable:false})
    type!: `${BannerType}`;
    @Field(() => BannerImageCreateEnvelopeInput, {nullable:false})
    image!: InstanceType<typeof BannerImageCreateEnvelopeInput>;
    @Field(() => [BannerImageCreateInput], {nullable:true})
    images?: Array<BannerImageCreateInput>;
    @Field(() => DateRangeCreateEnvelopeInput, {nullable:false})
    validity!: InstanceType<typeof DateRangeCreateEnvelopeInput>;
    @Field(() => BannerCreatepositionsInput, {nullable:true})
    positions?: InstanceType<typeof BannerCreatepositionsInput>;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class BannerCreatepositionsInput {
    @Field(() => [BannerPosition], {nullable:false})
    set!: Array<`${BannerPosition}`>;
}

@ArgsType()
export class BannerGroupByArgs {
    @Field(() => BannerWhereInput, {nullable:true})
    @Type(() => BannerWhereInput)
    where?: InstanceType<typeof BannerWhereInput>;
    @Field(() => [BannerOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<BannerOrderByWithAggregationInput>;
    @Field(() => [BannerScalarFieldEnum], {nullable:false})
    by!: Array<`${BannerScalarFieldEnum}`>;
    @Field(() => BannerScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof BannerScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class BannerMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class BannerMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class BannerOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    positions?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => BannerCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof BannerCountOrderByAggregateInput>;
    @Field(() => BannerMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof BannerMaxOrderByAggregateInput>;
    @Field(() => BannerMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof BannerMinOrderByAggregateInput>;
}

@InputType()
export class BannerOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => BannerImageOrderByInput, {nullable:true})
    image?: InstanceType<typeof BannerImageOrderByInput>;
    @Field(() => BannerImageOrderByCompositeAggregateInput, {nullable:true})
    images?: InstanceType<typeof BannerImageOrderByCompositeAggregateInput>;
    @Field(() => DateRangeOrderByInput, {nullable:true})
    validity?: InstanceType<typeof DateRangeOrderByInput>;
    @Field(() => SortOrder, {nullable:true})
    positions?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class BannerScalarWhereWithAggregatesInput {
    @Field(() => [BannerScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<BannerScalarWhereWithAggregatesInput>;
    @Field(() => [BannerScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<BannerScalarWhereWithAggregatesInput>;
    @Field(() => [BannerScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<BannerScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    name?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => EnumBannerTypeWithAggregatesFilter, {nullable:true})
    type?: InstanceType<typeof EnumBannerTypeWithAggregatesFilter>;
    @Field(() => EnumBannerPositionNullableListFilter, {nullable:true})
    positions?: InstanceType<typeof EnumBannerPositionNullableListFilter>;
    @Field(() => BoolWithAggregatesFilter, {nullable:true})
    active?: InstanceType<typeof BoolWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
}

@InputType()
export class BannerUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => BannerType, {nullable:false})
    type!: `${BannerType}`;
    @Field(() => BannerImageCreateEnvelopeInput, {nullable:false})
    image!: InstanceType<typeof BannerImageCreateEnvelopeInput>;
    @Field(() => [BannerImageCreateInput], {nullable:true})
    images?: Array<BannerImageCreateInput>;
    @Field(() => DateRangeCreateEnvelopeInput, {nullable:false})
    validity!: InstanceType<typeof DateRangeCreateEnvelopeInput>;
    @Field(() => BannerCreatepositionsInput, {nullable:true})
    positions?: InstanceType<typeof BannerCreatepositionsInput>;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class BannerUncheckedUpdateManyInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumBannerTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumBannerTypeFieldUpdateOperationsInput>;
    @Field(() => BannerImageUpdateEnvelopeInput, {nullable:true})
    image?: InstanceType<typeof BannerImageUpdateEnvelopeInput>;
    @Field(() => [BannerImageCreateInput], {nullable:true})
    images?: Array<BannerImageCreateInput>;
    @Field(() => DateRangeUpdateEnvelopeInput, {nullable:true})
    validity?: InstanceType<typeof DateRangeUpdateEnvelopeInput>;
    @Field(() => BannerUpdatepositionsInput, {nullable:true})
    positions?: InstanceType<typeof BannerUpdatepositionsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class BannerUncheckedUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumBannerTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumBannerTypeFieldUpdateOperationsInput>;
    @Field(() => BannerImageUpdateEnvelopeInput, {nullable:true})
    image?: InstanceType<typeof BannerImageUpdateEnvelopeInput>;
    @Field(() => [BannerImageCreateInput], {nullable:true})
    images?: Array<BannerImageCreateInput>;
    @Field(() => DateRangeUpdateEnvelopeInput, {nullable:true})
    validity?: InstanceType<typeof DateRangeUpdateEnvelopeInput>;
    @Field(() => BannerUpdatepositionsInput, {nullable:true})
    positions?: InstanceType<typeof BannerUpdatepositionsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class BannerUpdateManyMutationInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumBannerTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumBannerTypeFieldUpdateOperationsInput>;
    @Field(() => BannerImageUpdateEnvelopeInput, {nullable:true})
    image?: InstanceType<typeof BannerImageUpdateEnvelopeInput>;
    @Field(() => [BannerImageCreateInput], {nullable:true})
    images?: Array<BannerImageCreateInput>;
    @Field(() => DateRangeUpdateEnvelopeInput, {nullable:true})
    validity?: InstanceType<typeof DateRangeUpdateEnvelopeInput>;
    @Field(() => BannerUpdatepositionsInput, {nullable:true})
    positions?: InstanceType<typeof BannerUpdatepositionsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class BannerUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumBannerTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumBannerTypeFieldUpdateOperationsInput>;
    @Field(() => BannerImageUpdateEnvelopeInput, {nullable:true})
    image?: InstanceType<typeof BannerImageUpdateEnvelopeInput>;
    @Field(() => [BannerImageCreateInput], {nullable:true})
    images?: Array<BannerImageCreateInput>;
    @Field(() => DateRangeUpdateEnvelopeInput, {nullable:true})
    validity?: InstanceType<typeof DateRangeUpdateEnvelopeInput>;
    @Field(() => BannerUpdatepositionsInput, {nullable:true})
    positions?: InstanceType<typeof BannerUpdatepositionsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class BannerUpdatepositionsInput {
    @Field(() => [BannerPosition], {nullable:true})
    set?: Array<`${BannerPosition}`>;
    @Field(() => [BannerPosition], {nullable:true})
    push?: Array<`${BannerPosition}`>;
}

@InputType()
export class BannerWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => [BannerWhereInput], {nullable:true})
    AND?: Array<BannerWhereInput>;
    @Field(() => [BannerWhereInput], {nullable:true})
    OR?: Array<BannerWhereInput>;
    @Field(() => [BannerWhereInput], {nullable:true})
    NOT?: Array<BannerWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    name?: InstanceType<typeof StringFilter>;
    @Field(() => EnumBannerTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumBannerTypeFilter>;
    @Field(() => BannerImageCompositeFilter, {nullable:true})
    image?: InstanceType<typeof BannerImageCompositeFilter>;
    @Field(() => [BannerImageObjectEqualityInput], {nullable:true})
    images?: Array<BannerImageObjectEqualityInput>;
    @Field(() => DateRangeCompositeFilter, {nullable:true})
    validity?: InstanceType<typeof DateRangeCompositeFilter>;
    @Field(() => EnumBannerPositionNullableListFilter, {nullable:true})
    positions?: InstanceType<typeof EnumBannerPositionNullableListFilter>;
    @Field(() => BoolFilter, {nullable:true})
    active?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@InputType()
export class BannerWhereInput {
    @Field(() => [BannerWhereInput], {nullable:true})
    AND?: Array<BannerWhereInput>;
    @Field(() => [BannerWhereInput], {nullable:true})
    OR?: Array<BannerWhereInput>;
    @Field(() => [BannerWhereInput], {nullable:true})
    NOT?: Array<BannerWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    name?: InstanceType<typeof StringFilter>;
    @Field(() => EnumBannerTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumBannerTypeFilter>;
    @Field(() => BannerImageCompositeFilter, {nullable:true})
    image?: InstanceType<typeof BannerImageCompositeFilter>;
    @Field(() => [BannerImageObjectEqualityInput], {nullable:true})
    images?: Array<BannerImageObjectEqualityInput>;
    @Field(() => DateRangeCompositeFilter, {nullable:true})
    validity?: InstanceType<typeof DateRangeCompositeFilter>;
    @Field(() => EnumBannerPositionNullableListFilter, {nullable:true})
    positions?: InstanceType<typeof EnumBannerPositionNullableListFilter>;
    @Field(() => BoolFilter, {nullable:true})
    active?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@ObjectType()
export class Banner {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => BannerType, {nullable:false})
    type!: `${BannerType}`;
    @Field(() => BannerImage, {nullable:false})
    image?: InstanceType<typeof BannerImage>;
    @Field(() => [BannerImage], {nullable:true})
    images?: Array<BannerImage>;
    @Field(() => DateRange, {nullable:false})
    validity?: InstanceType<typeof DateRange>;
    @Field(() => [BannerPosition], {nullable:true})
    positions!: Array<`${BannerPosition}`>;
    @Field(() => Boolean, {defaultValue:false,nullable:false})
    active!: boolean;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
    @Field(() => Date, {nullable:false})
    updatedAt!: Date;
}

@ArgsType()
export class CreateManyBannerArgs {
    @Field(() => [BannerCreateManyInput], {nullable:false})
    @Type(() => BannerCreateManyInput)
    data!: Array<BannerCreateManyInput>;
}

@ArgsType()
export class CreateOneBannerArgs {
    @Field(() => BannerCreateInput, {nullable:false})
    @Type(() => BannerCreateInput)
    data!: InstanceType<typeof BannerCreateInput>;
}

@ArgsType()
export class DeleteManyBannerArgs {
    @Field(() => BannerWhereInput, {nullable:true})
    @Type(() => BannerWhereInput)
    where?: InstanceType<typeof BannerWhereInput>;
}

@ArgsType()
export class DeleteOneBannerArgs {
    @Field(() => BannerWhereUniqueInput, {nullable:false})
    @Type(() => BannerWhereUniqueInput)
    where!: Prisma.AtLeast<BannerWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindFirstBannerOrThrowArgs {
    @Field(() => BannerWhereInput, {nullable:true})
    @Type(() => BannerWhereInput)
    where?: InstanceType<typeof BannerWhereInput>;
    @Field(() => [BannerOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<BannerOrderByWithRelationInput>;
    @Field(() => BannerWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<BannerWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [BannerScalarFieldEnum], {nullable:true})
    distinct?: Array<`${BannerScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstBannerArgs {
    @Field(() => BannerWhereInput, {nullable:true})
    @Type(() => BannerWhereInput)
    where?: InstanceType<typeof BannerWhereInput>;
    @Field(() => [BannerOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<BannerOrderByWithRelationInput>;
    @Field(() => BannerWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<BannerWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [BannerScalarFieldEnum], {nullable:true})
    distinct?: Array<`${BannerScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyBannerArgs {
    @Field(() => BannerWhereInput, {nullable:true})
    @Type(() => BannerWhereInput)
    where?: InstanceType<typeof BannerWhereInput>;
    @Field(() => [BannerOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<BannerOrderByWithRelationInput>;
    @Field(() => BannerWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<BannerWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [BannerScalarFieldEnum], {nullable:true})
    distinct?: Array<`${BannerScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniqueBannerOrThrowArgs {
    @Field(() => BannerWhereUniqueInput, {nullable:false})
    @Type(() => BannerWhereUniqueInput)
    where!: Prisma.AtLeast<BannerWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindUniqueBannerArgs {
    @Field(() => BannerWhereUniqueInput, {nullable:false})
    @Type(() => BannerWhereUniqueInput)
    where!: Prisma.AtLeast<BannerWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpdateManyBannerArgs {
    @Field(() => BannerUpdateManyMutationInput, {nullable:false})
    @Type(() => BannerUpdateManyMutationInput)
    data!: InstanceType<typeof BannerUpdateManyMutationInput>;
    @Field(() => BannerWhereInput, {nullable:true})
    @Type(() => BannerWhereInput)
    where?: InstanceType<typeof BannerWhereInput>;
}

@ArgsType()
export class UpdateOneBannerArgs {
    @Field(() => BannerUpdateInput, {nullable:false})
    @Type(() => BannerUpdateInput)
    data!: InstanceType<typeof BannerUpdateInput>;
    @Field(() => BannerWhereUniqueInput, {nullable:false})
    @Type(() => BannerWhereUniqueInput)
    where!: Prisma.AtLeast<BannerWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpsertOneBannerArgs {
    @Field(() => BannerWhereUniqueInput, {nullable:false})
    @Type(() => BannerWhereUniqueInput)
    where!: Prisma.AtLeast<BannerWhereUniqueInput, 'id'>;
    @Field(() => BannerCreateInput, {nullable:false})
    @Type(() => BannerCreateInput)
    create!: InstanceType<typeof BannerCreateInput>;
    @Field(() => BannerUpdateInput, {nullable:false})
    @Type(() => BannerUpdateInput)
    update!: InstanceType<typeof BannerUpdateInput>;
}

@InputType()
export class BannerImageCreateEnvelopeInput {
    @Field(() => BannerImageCreateInput, {nullable:true})
    @Type(() => BannerImageCreateInput)
    set?: InstanceType<typeof BannerImageCreateInput>;
}

@InputType()
export class BannerImageCreateInput {
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => CTAType, {nullable:false})
    CTAType!: `${CTAType}`;
    @Field(() => String, {nullable:false})
    CTAPayload!: string;
}

@InputType()
export class BannerImageOrderByCompositeAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    _count?: `${SortOrder}`;
}

@InputType()
export class BannerImageOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    CTAType?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    CTAPayload?: `${SortOrder}`;
}

@InputType()
export class BannerImageUpdateEnvelopeInput {
    @Field(() => BannerImageCreateInput, {nullable:true})
    @Type(() => BannerImageCreateInput)
    set?: InstanceType<typeof BannerImageCreateInput>;
    @Field(() => BannerImageUpdateInput, {nullable:true})
    @Type(() => BannerImageUpdateInput)
    update?: InstanceType<typeof BannerImageUpdateInput>;
}

@InputType()
export class BannerImageUpdateManyInput {
    @Field(() => BannerImageWhereInput, {nullable:false})
    @Type(() => BannerImageWhereInput)
    where!: InstanceType<typeof BannerImageWhereInput>;
    @Field(() => BannerImageUpdateInput, {nullable:false})
    @Type(() => BannerImageUpdateInput)
    data!: InstanceType<typeof BannerImageUpdateInput>;
}

@InputType()
export class BannerImageUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumCTATypeFieldUpdateOperationsInput, {nullable:true})
    CTAType?: InstanceType<typeof EnumCTATypeFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    CTAPayload?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}

@InputType()
export class BannerImageWhereInput {
    @Field(() => [BannerImageWhereInput], {nullable:true})
    AND?: Array<BannerImageWhereInput>;
    @Field(() => [BannerImageWhereInput], {nullable:true})
    OR?: Array<BannerImageWhereInput>;
    @Field(() => [BannerImageWhereInput], {nullable:true})
    NOT?: Array<BannerImageWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    name?: InstanceType<typeof StringFilter>;
    @Field(() => EnumCTATypeFilter, {nullable:true})
    CTAType?: InstanceType<typeof EnumCTATypeFilter>;
    @Field(() => StringFilter, {nullable:true})
    CTAPayload?: InstanceType<typeof StringFilter>;
}

@ObjectType()
export class BannerImage {
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => CTAType, {nullable:false})
    CTAType!: `${CTAType}`;
    @Field(() => String, {nullable:false})
    CTAPayload!: string;
}

@ArgsType()
export class BrandAggregateArgs {
    @Field(() => BrandWhereInput, {nullable:true})
    @Type(() => BrandWhereInput)
    where?: InstanceType<typeof BrandWhereInput>;
    @Field(() => [BrandOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<BrandOrderByWithRelationInput>;
    @Field(() => BrandWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<BrandWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class BrandCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    image?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    featured?: `${SortOrder}`;
}

@InputType()
export class BrandCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:true})
    image?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => Boolean, {nullable:true})
    featured?: boolean;
}

@InputType()
export class BrandCreateNestedOneWithoutProductListingInput {
    @Field(() => BrandCreateWithoutProductListingInput, {nullable:true})
    @Type(() => BrandCreateWithoutProductListingInput)
    create?: InstanceType<typeof BrandCreateWithoutProductListingInput>;
    @Field(() => BrandCreateOrConnectWithoutProductListingInput, {nullable:true})
    @Type(() => BrandCreateOrConnectWithoutProductListingInput)
    connectOrCreate?: InstanceType<typeof BrandCreateOrConnectWithoutProductListingInput>;
    @Field(() => BrandWhereUniqueInput, {nullable:true})
    @Type(() => BrandWhereUniqueInput)
    connect?: Prisma.AtLeast<BrandWhereUniqueInput, 'id'>;
}

@InputType()
export class BrandCreateOrConnectWithoutProductListingInput {
    @Field(() => BrandWhereUniqueInput, {nullable:false})
    @Type(() => BrandWhereUniqueInput)
    where!: Prisma.AtLeast<BrandWhereUniqueInput, 'id'>;
    @Field(() => BrandCreateWithoutProductListingInput, {nullable:false})
    @Type(() => BrandCreateWithoutProductListingInput)
    create!: InstanceType<typeof BrandCreateWithoutProductListingInput>;
}

@InputType()
export class BrandCreateWithoutProductListingInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:true})
    image?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => Boolean, {nullable:true})
    featured?: boolean;
}

@InputType()
export class BrandCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:true})
    image?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => Boolean, {nullable:true})
    featured?: boolean;
    @Field(() => ProductListingCreateNestedManyWithoutBrandInput, {nullable:true})
    ProductListing?: InstanceType<typeof ProductListingCreateNestedManyWithoutBrandInput>;
}

@ArgsType()
export class BrandGroupByArgs {
    @Field(() => BrandWhereInput, {nullable:true})
    @Type(() => BrandWhereInput)
    where?: InstanceType<typeof BrandWhereInput>;
    @Field(() => [BrandOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<BrandOrderByWithAggregationInput>;
    @Field(() => [BrandScalarFieldEnum], {nullable:false})
    by!: Array<`${BrandScalarFieldEnum}`>;
    @Field(() => BrandScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof BrandScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class BrandMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    image?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    featured?: `${SortOrder}`;
}

@InputType()
export class BrandMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    image?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    featured?: `${SortOrder}`;
}

@InputType()
export class BrandNullableRelationFilter {
    @Field(() => BrandWhereInput, {nullable:true})
    is?: InstanceType<typeof BrandWhereInput>;
    @Field(() => BrandWhereInput, {nullable:true})
    isNot?: InstanceType<typeof BrandWhereInput>;
}

@InputType()
export class BrandOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    image?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    featured?: `${SortOrder}`;
    @Field(() => BrandCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof BrandCountOrderByAggregateInput>;
    @Field(() => BrandMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof BrandMaxOrderByAggregateInput>;
    @Field(() => BrandMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof BrandMinOrderByAggregateInput>;
}

@InputType()
export class BrandOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    image?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    featured?: `${SortOrder}`;
    @Field(() => ProductListingOrderByRelationAggregateInput, {nullable:true})
    ProductListing?: InstanceType<typeof ProductListingOrderByRelationAggregateInput>;
}

@InputType()
export class BrandScalarWhereWithAggregatesInput {
    @Field(() => [BrandScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<BrandScalarWhereWithAggregatesInput>;
    @Field(() => [BrandScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<BrandScalarWhereWithAggregatesInput>;
    @Field(() => [BrandScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<BrandScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    name?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    image?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => BoolWithAggregatesFilter, {nullable:true})
    active?: InstanceType<typeof BoolWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => BoolWithAggregatesFilter, {nullable:true})
    featured?: InstanceType<typeof BoolWithAggregatesFilter>;
}

@InputType()
export class BrandUncheckedCreateWithoutProductListingInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:true})
    image?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => Boolean, {nullable:true})
    featured?: boolean;
}

@InputType()
export class BrandUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:true})
    image?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => Boolean, {nullable:true})
    featured?: boolean;
    @Field(() => ProductListingUncheckedCreateNestedManyWithoutBrandInput, {nullable:true})
    ProductListing?: InstanceType<typeof ProductListingUncheckedCreateNestedManyWithoutBrandInput>;
}

@InputType()
export class BrandUncheckedUpdateManyInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    featured?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
}

@InputType()
export class BrandUncheckedUpdateWithoutProductListingInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    featured?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
}

@InputType()
export class BrandUncheckedUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    featured?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => ProductListingUncheckedUpdateManyWithoutBrandNestedInput, {nullable:true})
    ProductListing?: InstanceType<typeof ProductListingUncheckedUpdateManyWithoutBrandNestedInput>;
}

@InputType()
export class BrandUpdateManyMutationInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    featured?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
}

@InputType()
export class BrandUpdateOneWithoutProductListingNestedInput {
    @Field(() => BrandCreateWithoutProductListingInput, {nullable:true})
    @Type(() => BrandCreateWithoutProductListingInput)
    create?: InstanceType<typeof BrandCreateWithoutProductListingInput>;
    @Field(() => BrandCreateOrConnectWithoutProductListingInput, {nullable:true})
    @Type(() => BrandCreateOrConnectWithoutProductListingInput)
    connectOrCreate?: InstanceType<typeof BrandCreateOrConnectWithoutProductListingInput>;
    @Field(() => BrandUpsertWithoutProductListingInput, {nullable:true})
    @Type(() => BrandUpsertWithoutProductListingInput)
    upsert?: InstanceType<typeof BrandUpsertWithoutProductListingInput>;
    @Field(() => Boolean, {nullable:true})
    disconnect?: boolean;
    @Field(() => BrandWhereInput, {nullable:true})
    @Type(() => BrandWhereInput)
    delete?: InstanceType<typeof BrandWhereInput>;
    @Field(() => BrandWhereUniqueInput, {nullable:true})
    @Type(() => BrandWhereUniqueInput)
    connect?: Prisma.AtLeast<BrandWhereUniqueInput, 'id'>;
    @Field(() => BrandUpdateToOneWithWhereWithoutProductListingInput, {nullable:true})
    @Type(() => BrandUpdateToOneWithWhereWithoutProductListingInput)
    update?: InstanceType<typeof BrandUpdateToOneWithWhereWithoutProductListingInput>;
}

@InputType()
export class BrandUpdateToOneWithWhereWithoutProductListingInput {
    @Field(() => BrandWhereInput, {nullable:true})
    @Type(() => BrandWhereInput)
    where?: InstanceType<typeof BrandWhereInput>;
    @Field(() => BrandUpdateWithoutProductListingInput, {nullable:false})
    @Type(() => BrandUpdateWithoutProductListingInput)
    data!: InstanceType<typeof BrandUpdateWithoutProductListingInput>;
}

@InputType()
export class BrandUpdateWithoutProductListingInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    featured?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
}

@InputType()
export class BrandUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    featured?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => ProductListingUpdateManyWithoutBrandNestedInput, {nullable:true})
    ProductListing?: InstanceType<typeof ProductListingUpdateManyWithoutBrandNestedInput>;
}

@InputType()
export class BrandUpsertWithoutProductListingInput {
    @Field(() => BrandUpdateWithoutProductListingInput, {nullable:false})
    @Type(() => BrandUpdateWithoutProductListingInput)
    update!: InstanceType<typeof BrandUpdateWithoutProductListingInput>;
    @Field(() => BrandCreateWithoutProductListingInput, {nullable:false})
    @Type(() => BrandCreateWithoutProductListingInput)
    create!: InstanceType<typeof BrandCreateWithoutProductListingInput>;
    @Field(() => BrandWhereInput, {nullable:true})
    @Type(() => BrandWhereInput)
    where?: InstanceType<typeof BrandWhereInput>;
}

@InputType()
export class BrandWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => [BrandWhereInput], {nullable:true})
    AND?: Array<BrandWhereInput>;
    @Field(() => [BrandWhereInput], {nullable:true})
    OR?: Array<BrandWhereInput>;
    @Field(() => [BrandWhereInput], {nullable:true})
    NOT?: Array<BrandWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    name?: InstanceType<typeof StringFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    image?: InstanceType<typeof StringNullableFilter>;
    @Field(() => BoolFilter, {nullable:true})
    active?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => BoolFilter, {nullable:true})
    featured?: InstanceType<typeof BoolFilter>;
    @Field(() => ProductListingListRelationFilter, {nullable:true})
    ProductListing?: InstanceType<typeof ProductListingListRelationFilter>;
}

@InputType()
export class BrandWhereInput {
    @Field(() => [BrandWhereInput], {nullable:true})
    AND?: Array<BrandWhereInput>;
    @Field(() => [BrandWhereInput], {nullable:true})
    OR?: Array<BrandWhereInput>;
    @Field(() => [BrandWhereInput], {nullable:true})
    NOT?: Array<BrandWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    name?: InstanceType<typeof StringFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    image?: InstanceType<typeof StringNullableFilter>;
    @Field(() => BoolFilter, {nullable:true})
    active?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => BoolFilter, {nullable:true})
    featured?: InstanceType<typeof BoolFilter>;
    @Field(() => ProductListingListRelationFilter, {nullable:true})
    ProductListing?: InstanceType<typeof ProductListingListRelationFilter>;
}

@ObjectType()
export class Brand {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:true})
    image!: string | null;
    @Field(() => Boolean, {defaultValue:false,nullable:false})
    active!: boolean;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
    @Field(() => Date, {nullable:false})
    updatedAt!: Date;
    @Field(() => Boolean, {defaultValue:false,nullable:false})
    featured!: boolean;
    @Field(() => [ProductListing], {nullable:true})
    ProductListing?: Array<ProductListing>;
}

@ArgsType()
export class CreateManyBrandArgs {
    @Field(() => [BrandCreateManyInput], {nullable:false})
    @Type(() => BrandCreateManyInput)
    data!: Array<BrandCreateManyInput>;
}

@ArgsType()
export class CreateOneBrandArgs {
    @Field(() => BrandCreateInput, {nullable:false})
    @Type(() => BrandCreateInput)
    data!: InstanceType<typeof BrandCreateInput>;
}

@ArgsType()
export class DeleteManyBrandArgs {
    @Field(() => BrandWhereInput, {nullable:true})
    @Type(() => BrandWhereInput)
    where?: InstanceType<typeof BrandWhereInput>;
}

@ArgsType()
export class DeleteOneBrandArgs {
    @Field(() => BrandWhereUniqueInput, {nullable:false})
    @Type(() => BrandWhereUniqueInput)
    where!: Prisma.AtLeast<BrandWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindFirstBrandOrThrowArgs {
    @Field(() => BrandWhereInput, {nullable:true})
    @Type(() => BrandWhereInput)
    where?: InstanceType<typeof BrandWhereInput>;
    @Field(() => [BrandOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<BrandOrderByWithRelationInput>;
    @Field(() => BrandWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<BrandWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [BrandScalarFieldEnum], {nullable:true})
    distinct?: Array<`${BrandScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstBrandArgs {
    @Field(() => BrandWhereInput, {nullable:true})
    @Type(() => BrandWhereInput)
    where?: InstanceType<typeof BrandWhereInput>;
    @Field(() => [BrandOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<BrandOrderByWithRelationInput>;
    @Field(() => BrandWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<BrandWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [BrandScalarFieldEnum], {nullable:true})
    distinct?: Array<`${BrandScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyBrandArgs {
    @Field(() => BrandWhereInput, {nullable:true})
    @Type(() => BrandWhereInput)
    where?: InstanceType<typeof BrandWhereInput>;
    @Field(() => [BrandOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<BrandOrderByWithRelationInput>;
    @Field(() => BrandWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<BrandWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [BrandScalarFieldEnum], {nullable:true})
    distinct?: Array<`${BrandScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniqueBrandOrThrowArgs {
    @Field(() => BrandWhereUniqueInput, {nullable:false})
    @Type(() => BrandWhereUniqueInput)
    where!: Prisma.AtLeast<BrandWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindUniqueBrandArgs {
    @Field(() => BrandWhereUniqueInput, {nullable:false})
    @Type(() => BrandWhereUniqueInput)
    where!: Prisma.AtLeast<BrandWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpdateManyBrandArgs {
    @Field(() => BrandUpdateManyMutationInput, {nullable:false})
    @Type(() => BrandUpdateManyMutationInput)
    data!: InstanceType<typeof BrandUpdateManyMutationInput>;
    @Field(() => BrandWhereInput, {nullable:true})
    @Type(() => BrandWhereInput)
    where?: InstanceType<typeof BrandWhereInput>;
}

@ArgsType()
export class UpdateOneBrandArgs {
    @Field(() => BrandUpdateInput, {nullable:false})
    @Type(() => BrandUpdateInput)
    data!: InstanceType<typeof BrandUpdateInput>;
    @Field(() => BrandWhereUniqueInput, {nullable:false})
    @Type(() => BrandWhereUniqueInput)
    where!: Prisma.AtLeast<BrandWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpsertOneBrandArgs {
    @Field(() => BrandWhereUniqueInput, {nullable:false})
    @Type(() => BrandWhereUniqueInput)
    where!: Prisma.AtLeast<BrandWhereUniqueInput, 'id'>;
    @Field(() => BrandCreateInput, {nullable:false})
    @Type(() => BrandCreateInput)
    create!: InstanceType<typeof BrandCreateInput>;
    @Field(() => BrandUpdateInput, {nullable:false})
    @Type(() => BrandUpdateInput)
    update!: InstanceType<typeof BrandUpdateInput>;
}

@ArgsType()
export class CampaignAggregateArgs {
    @Field(() => CampaignWhereInput, {nullable:true})
    @Type(() => CampaignWhereInput)
    where?: InstanceType<typeof CampaignWhereInput>;
    @Field(() => [CampaignOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<CampaignOrderByWithRelationInput>;
    @Field(() => CampaignWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<CampaignWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class CampaignAvgOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    campaignStartAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    campaignEndAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    campaignDuration?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    eventDayTime?: `${SortOrder}`;
}

@InputType()
export class CampaignCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    title?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    url?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    location?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    locationCoordinates?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    tag?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    localistId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    campaignImage?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    campaignStartAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    campaignEndAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    campaignDuration?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    eventDayTime?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    showOnApp?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class CampaignCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => String, {nullable:true})
    url?: string;
    @Field(() => String, {nullable:true})
    location?: string;
    @Field(() => String, {nullable:true})
    locationCoordinates?: string;
    @Field(() => CampaignCreatetypeInput, {nullable:true})
    type?: InstanceType<typeof CampaignCreatetypeInput>;
    @Field(() => Tag, {nullable:false})
    tag!: `${Tag}`;
    @Field(() => String, {nullable:true})
    localistId?: string;
    @Field(() => String, {nullable:true})
    campaignImage?: string;
    @Field(() => Int, {nullable:false})
    campaignStartAt!: number;
    @Field(() => Int, {nullable:false})
    campaignEndAt!: number;
    @Field(() => Int, {nullable:false})
    campaignDuration!: number;
    @Field(() => Int, {nullable:false})
    eventDayTime!: number;
    @Field(() => Boolean, {nullable:true})
    showOnApp?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class CampaignCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => String, {nullable:true})
    url?: string;
    @Field(() => String, {nullable:true})
    location?: string;
    @Field(() => String, {nullable:true})
    locationCoordinates?: string;
    @Field(() => CampaignCreatetypeInput, {nullable:true})
    type?: InstanceType<typeof CampaignCreatetypeInput>;
    @Field(() => Tag, {nullable:false})
    tag!: `${Tag}`;
    @Field(() => String, {nullable:true})
    localistId?: string;
    @Field(() => String, {nullable:true})
    campaignImage?: string;
    @Field(() => Int, {nullable:false})
    campaignStartAt!: number;
    @Field(() => Int, {nullable:false})
    campaignEndAt!: number;
    @Field(() => Int, {nullable:false})
    campaignDuration!: number;
    @Field(() => Int, {nullable:false})
    eventDayTime!: number;
    @Field(() => Boolean, {nullable:true})
    showOnApp?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class CampaignCreatetypeInput {
    @Field(() => [CampaignType], {nullable:false})
    set!: Array<`${CampaignType}`>;
}

@ArgsType()
export class CampaignGroupByArgs {
    @Field(() => CampaignWhereInput, {nullable:true})
    @Type(() => CampaignWhereInput)
    where?: InstanceType<typeof CampaignWhereInput>;
    @Field(() => [CampaignOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<CampaignOrderByWithAggregationInput>;
    @Field(() => [CampaignScalarFieldEnum], {nullable:false})
    by!: Array<`${CampaignScalarFieldEnum}`>;
    @Field(() => CampaignScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof CampaignScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class CampaignMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    title?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    url?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    location?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    locationCoordinates?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    tag?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    localistId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    campaignImage?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    campaignStartAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    campaignEndAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    campaignDuration?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    eventDayTime?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    showOnApp?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class CampaignMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    title?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    url?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    location?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    locationCoordinates?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    tag?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    localistId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    campaignImage?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    campaignStartAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    campaignEndAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    campaignDuration?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    eventDayTime?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    showOnApp?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class CampaignOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    title?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    url?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    location?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    locationCoordinates?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    tag?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    localistId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    campaignImage?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    campaignStartAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    campaignEndAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    campaignDuration?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    eventDayTime?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    showOnApp?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => CampaignCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof CampaignCountOrderByAggregateInput>;
    @Field(() => CampaignAvgOrderByAggregateInput, {nullable:true})
    _avg?: InstanceType<typeof CampaignAvgOrderByAggregateInput>;
    @Field(() => CampaignMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof CampaignMaxOrderByAggregateInput>;
    @Field(() => CampaignMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof CampaignMinOrderByAggregateInput>;
    @Field(() => CampaignSumOrderByAggregateInput, {nullable:true})
    _sum?: InstanceType<typeof CampaignSumOrderByAggregateInput>;
}

@InputType()
export class CampaignOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    title?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    url?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    location?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    locationCoordinates?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    tag?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    localistId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    campaignImage?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    campaignStartAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    campaignEndAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    campaignDuration?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    eventDayTime?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    showOnApp?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class CampaignScalarWhereWithAggregatesInput {
    @Field(() => [CampaignScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<CampaignScalarWhereWithAggregatesInput>;
    @Field(() => [CampaignScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<CampaignScalarWhereWithAggregatesInput>;
    @Field(() => [CampaignScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<CampaignScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    userId?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    title?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    url?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    location?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    locationCoordinates?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => EnumCampaignTypeNullableListFilter, {nullable:true})
    type?: InstanceType<typeof EnumCampaignTypeNullableListFilter>;
    @Field(() => EnumTagWithAggregatesFilter, {nullable:true})
    tag?: InstanceType<typeof EnumTagWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    localistId?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    campaignImage?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => IntWithAggregatesFilter, {nullable:true})
    campaignStartAt?: InstanceType<typeof IntWithAggregatesFilter>;
    @Field(() => IntWithAggregatesFilter, {nullable:true})
    campaignEndAt?: InstanceType<typeof IntWithAggregatesFilter>;
    @Field(() => IntWithAggregatesFilter, {nullable:true})
    campaignDuration?: InstanceType<typeof IntWithAggregatesFilter>;
    @Field(() => IntWithAggregatesFilter, {nullable:true})
    eventDayTime?: InstanceType<typeof IntWithAggregatesFilter>;
    @Field(() => BoolWithAggregatesFilter, {nullable:true})
    showOnApp?: InstanceType<typeof BoolWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
}

@InputType()
export class CampaignSumOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    campaignStartAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    campaignEndAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    campaignDuration?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    eventDayTime?: `${SortOrder}`;
}

@InputType()
export class CampaignUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => String, {nullable:true})
    url?: string;
    @Field(() => String, {nullable:true})
    location?: string;
    @Field(() => String, {nullable:true})
    locationCoordinates?: string;
    @Field(() => CampaignCreatetypeInput, {nullable:true})
    type?: InstanceType<typeof CampaignCreatetypeInput>;
    @Field(() => Tag, {nullable:false})
    tag!: `${Tag}`;
    @Field(() => String, {nullable:true})
    localistId?: string;
    @Field(() => String, {nullable:true})
    campaignImage?: string;
    @Field(() => Int, {nullable:false})
    campaignStartAt!: number;
    @Field(() => Int, {nullable:false})
    campaignEndAt!: number;
    @Field(() => Int, {nullable:false})
    campaignDuration!: number;
    @Field(() => Int, {nullable:false})
    eventDayTime!: number;
    @Field(() => Boolean, {nullable:true})
    showOnApp?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class CampaignUncheckedUpdateManyInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    url?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    location?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    locationCoordinates?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => CampaignUpdatetypeInput, {nullable:true})
    type?: InstanceType<typeof CampaignUpdatetypeInput>;
    @Field(() => EnumTagFieldUpdateOperationsInput, {nullable:true})
    tag?: InstanceType<typeof EnumTagFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    localistId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    campaignImage?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    campaignStartAt?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    campaignEndAt?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    campaignDuration?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    eventDayTime?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    showOnApp?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class CampaignUncheckedUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    url?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    location?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    locationCoordinates?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => CampaignUpdatetypeInput, {nullable:true})
    type?: InstanceType<typeof CampaignUpdatetypeInput>;
    @Field(() => EnumTagFieldUpdateOperationsInput, {nullable:true})
    tag?: InstanceType<typeof EnumTagFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    localistId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    campaignImage?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    campaignStartAt?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    campaignEndAt?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    campaignDuration?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    eventDayTime?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    showOnApp?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class CampaignUpdateManyMutationInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    url?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    location?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    locationCoordinates?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => CampaignUpdatetypeInput, {nullable:true})
    type?: InstanceType<typeof CampaignUpdatetypeInput>;
    @Field(() => EnumTagFieldUpdateOperationsInput, {nullable:true})
    tag?: InstanceType<typeof EnumTagFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    localistId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    campaignImage?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    campaignStartAt?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    campaignEndAt?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    campaignDuration?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    eventDayTime?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    showOnApp?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class CampaignUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    url?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    location?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    locationCoordinates?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => CampaignUpdatetypeInput, {nullable:true})
    type?: InstanceType<typeof CampaignUpdatetypeInput>;
    @Field(() => EnumTagFieldUpdateOperationsInput, {nullable:true})
    tag?: InstanceType<typeof EnumTagFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    localistId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    campaignImage?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    campaignStartAt?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    campaignEndAt?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    campaignDuration?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    eventDayTime?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    showOnApp?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class CampaignUpdatetypeInput {
    @Field(() => [CampaignType], {nullable:true})
    set?: Array<`${CampaignType}`>;
    @Field(() => [CampaignType], {nullable:true})
    push?: Array<`${CampaignType}`>;
}

@InputType()
export class CampaignWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => [CampaignWhereInput], {nullable:true})
    AND?: Array<CampaignWhereInput>;
    @Field(() => [CampaignWhereInput], {nullable:true})
    OR?: Array<CampaignWhereInput>;
    @Field(() => [CampaignWhereInput], {nullable:true})
    NOT?: Array<CampaignWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    userId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    title?: InstanceType<typeof StringFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    url?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    location?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    locationCoordinates?: InstanceType<typeof StringNullableFilter>;
    @Field(() => EnumCampaignTypeNullableListFilter, {nullable:true})
    type?: InstanceType<typeof EnumCampaignTypeNullableListFilter>;
    @Field(() => EnumTagFilter, {nullable:true})
    tag?: InstanceType<typeof EnumTagFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    localistId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    campaignImage?: InstanceType<typeof StringNullableFilter>;
    @Field(() => IntFilter, {nullable:true})
    campaignStartAt?: InstanceType<typeof IntFilter>;
    @Field(() => IntFilter, {nullable:true})
    campaignEndAt?: InstanceType<typeof IntFilter>;
    @Field(() => IntFilter, {nullable:true})
    campaignDuration?: InstanceType<typeof IntFilter>;
    @Field(() => IntFilter, {nullable:true})
    eventDayTime?: InstanceType<typeof IntFilter>;
    @Field(() => BoolFilter, {nullable:true})
    showOnApp?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@InputType()
export class CampaignWhereInput {
    @Field(() => [CampaignWhereInput], {nullable:true})
    AND?: Array<CampaignWhereInput>;
    @Field(() => [CampaignWhereInput], {nullable:true})
    OR?: Array<CampaignWhereInput>;
    @Field(() => [CampaignWhereInput], {nullable:true})
    NOT?: Array<CampaignWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    userId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    title?: InstanceType<typeof StringFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    url?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    location?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    locationCoordinates?: InstanceType<typeof StringNullableFilter>;
    @Field(() => EnumCampaignTypeNullableListFilter, {nullable:true})
    type?: InstanceType<typeof EnumCampaignTypeNullableListFilter>;
    @Field(() => EnumTagFilter, {nullable:true})
    tag?: InstanceType<typeof EnumTagFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    localistId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    campaignImage?: InstanceType<typeof StringNullableFilter>;
    @Field(() => IntFilter, {nullable:true})
    campaignStartAt?: InstanceType<typeof IntFilter>;
    @Field(() => IntFilter, {nullable:true})
    campaignEndAt?: InstanceType<typeof IntFilter>;
    @Field(() => IntFilter, {nullable:true})
    campaignDuration?: InstanceType<typeof IntFilter>;
    @Field(() => IntFilter, {nullable:true})
    eventDayTime?: InstanceType<typeof IntFilter>;
    @Field(() => BoolFilter, {nullable:true})
    showOnApp?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@ObjectType()
export class Campaign {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => String, {nullable:true})
    url!: string | null;
    @Field(() => String, {nullable:true})
    location!: string | null;
    @Field(() => String, {nullable:true})
    locationCoordinates!: string | null;
    @Field(() => [CampaignType], {nullable:true})
    type!: Array<`${CampaignType}`>;
    @Field(() => Tag, {nullable:false})
    tag!: `${Tag}`;
    @Field(() => String, {nullable:true})
    localistId!: string | null;
    @Field(() => String, {nullable:true})
    campaignImage!: string | null;
    @Field(() => Int, {nullable:false})
    campaignStartAt!: number;
    @Field(() => Int, {nullable:false})
    campaignEndAt!: number;
    @Field(() => Int, {nullable:false})
    campaignDuration!: number;
    @Field(() => Int, {nullable:false})
    eventDayTime!: number;
    @Field(() => Boolean, {defaultValue:false,nullable:false})
    showOnApp!: boolean;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
    @Field(() => Date, {nullable:false})
    updatedAt!: Date;
}

@ArgsType()
export class CreateManyCampaignArgs {
    @Field(() => [CampaignCreateManyInput], {nullable:false})
    @Type(() => CampaignCreateManyInput)
    data!: Array<CampaignCreateManyInput>;
}

@ArgsType()
export class CreateOneCampaignArgs {
    @Field(() => CampaignCreateInput, {nullable:false})
    @Type(() => CampaignCreateInput)
    data!: InstanceType<typeof CampaignCreateInput>;
}

@ArgsType()
export class DeleteManyCampaignArgs {
    @Field(() => CampaignWhereInput, {nullable:true})
    @Type(() => CampaignWhereInput)
    where?: InstanceType<typeof CampaignWhereInput>;
}

@ArgsType()
export class DeleteOneCampaignArgs {
    @Field(() => CampaignWhereUniqueInput, {nullable:false})
    @Type(() => CampaignWhereUniqueInput)
    where!: Prisma.AtLeast<CampaignWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindFirstCampaignOrThrowArgs {
    @Field(() => CampaignWhereInput, {nullable:true})
    @Type(() => CampaignWhereInput)
    where?: InstanceType<typeof CampaignWhereInput>;
    @Field(() => [CampaignOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<CampaignOrderByWithRelationInput>;
    @Field(() => CampaignWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<CampaignWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [CampaignScalarFieldEnum], {nullable:true})
    distinct?: Array<`${CampaignScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstCampaignArgs {
    @Field(() => CampaignWhereInput, {nullable:true})
    @Type(() => CampaignWhereInput)
    where?: InstanceType<typeof CampaignWhereInput>;
    @Field(() => [CampaignOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<CampaignOrderByWithRelationInput>;
    @Field(() => CampaignWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<CampaignWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [CampaignScalarFieldEnum], {nullable:true})
    distinct?: Array<`${CampaignScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyCampaignArgs {
    @Field(() => CampaignWhereInput, {nullable:true})
    @Type(() => CampaignWhereInput)
    where?: InstanceType<typeof CampaignWhereInput>;
    @Field(() => [CampaignOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<CampaignOrderByWithRelationInput>;
    @Field(() => CampaignWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<CampaignWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [CampaignScalarFieldEnum], {nullable:true})
    distinct?: Array<`${CampaignScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniqueCampaignOrThrowArgs {
    @Field(() => CampaignWhereUniqueInput, {nullable:false})
    @Type(() => CampaignWhereUniqueInput)
    where!: Prisma.AtLeast<CampaignWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindUniqueCampaignArgs {
    @Field(() => CampaignWhereUniqueInput, {nullable:false})
    @Type(() => CampaignWhereUniqueInput)
    where!: Prisma.AtLeast<CampaignWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpdateManyCampaignArgs {
    @Field(() => CampaignUpdateManyMutationInput, {nullable:false})
    @Type(() => CampaignUpdateManyMutationInput)
    data!: InstanceType<typeof CampaignUpdateManyMutationInput>;
    @Field(() => CampaignWhereInput, {nullable:true})
    @Type(() => CampaignWhereInput)
    where?: InstanceType<typeof CampaignWhereInput>;
}

@ArgsType()
export class UpdateOneCampaignArgs {
    @Field(() => CampaignUpdateInput, {nullable:false})
    @Type(() => CampaignUpdateInput)
    data!: InstanceType<typeof CampaignUpdateInput>;
    @Field(() => CampaignWhereUniqueInput, {nullable:false})
    @Type(() => CampaignWhereUniqueInput)
    where!: Prisma.AtLeast<CampaignWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpsertOneCampaignArgs {
    @Field(() => CampaignWhereUniqueInput, {nullable:false})
    @Type(() => CampaignWhereUniqueInput)
    where!: Prisma.AtLeast<CampaignWhereUniqueInput, 'id'>;
    @Field(() => CampaignCreateInput, {nullable:false})
    @Type(() => CampaignCreateInput)
    create!: InstanceType<typeof CampaignCreateInput>;
    @Field(() => CampaignUpdateInput, {nullable:false})
    @Type(() => CampaignUpdateInput)
    update!: InstanceType<typeof CampaignUpdateInput>;
}

@ArgsType()
export class CampusChatAggregateArgs {
    @Field(() => CampusChatWhereInput, {nullable:true})
    @Type(() => CampusChatWhereInput)
    where?: InstanceType<typeof CampusChatWhereInput>;
    @Field(() => [CampusChatOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<CampusChatOrderByWithRelationInput>;
    @Field(() => CampusChatWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<CampusChatWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class CampusChatCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    eduInstituteId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    description?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class CampusChatCreateManyEduInstituteInputEnvelope {
    @Field(() => [CampusChatCreateManyEduInstituteInput], {nullable:false})
    @Type(() => CampusChatCreateManyEduInstituteInput)
    data!: Array<CampusChatCreateManyEduInstituteInput>;
}

@InputType()
export class CampusChatCreateManyEduInstituteInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => CampusChatType, {nullable:false})
    type!: `${CampusChatType}`;
    @Field(() => String, {nullable:true})
    description?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class CampusChatCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    eduInstituteId!: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => CampusChatType, {nullable:false})
    type!: `${CampusChatType}`;
    @Field(() => String, {nullable:true})
    description?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class CampusChatCreateNestedManyWithoutEduInstituteInput {
    @Field(() => [CampusChatCreateWithoutEduInstituteInput], {nullable:true})
    @Type(() => CampusChatCreateWithoutEduInstituteInput)
    create?: Array<CampusChatCreateWithoutEduInstituteInput>;
    @Field(() => [CampusChatCreateOrConnectWithoutEduInstituteInput], {nullable:true})
    @Type(() => CampusChatCreateOrConnectWithoutEduInstituteInput)
    connectOrCreate?: Array<CampusChatCreateOrConnectWithoutEduInstituteInput>;
    @Field(() => CampusChatCreateManyEduInstituteInputEnvelope, {nullable:true})
    @Type(() => CampusChatCreateManyEduInstituteInputEnvelope)
    createMany?: InstanceType<typeof CampusChatCreateManyEduInstituteInputEnvelope>;
    @Field(() => [CampusChatWhereUniqueInput], {nullable:true})
    @Type(() => CampusChatWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<CampusChatWhereUniqueInput, 'id'>>;
}

@InputType()
export class CampusChatCreateOrConnectWithoutEduInstituteInput {
    @Field(() => CampusChatWhereUniqueInput, {nullable:false})
    @Type(() => CampusChatWhereUniqueInput)
    where!: Prisma.AtLeast<CampusChatWhereUniqueInput, 'id'>;
    @Field(() => CampusChatCreateWithoutEduInstituteInput, {nullable:false})
    @Type(() => CampusChatCreateWithoutEduInstituteInput)
    create!: InstanceType<typeof CampusChatCreateWithoutEduInstituteInput>;
}

@InputType()
export class CampusChatCreateWithoutEduInstituteInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => CampusChatType, {nullable:false})
    type!: `${CampusChatType}`;
    @Field(() => String, {nullable:true})
    description?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class CampusChatCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => CampusChatType, {nullable:false})
    type!: `${CampusChatType}`;
    @Field(() => String, {nullable:true})
    description?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => EduInstituteCreateNestedOneWithoutCampusChatsInput, {nullable:false})
    eduInstitute!: InstanceType<typeof EduInstituteCreateNestedOneWithoutCampusChatsInput>;
}

@ArgsType()
export class CampusChatGroupByArgs {
    @Field(() => CampusChatWhereInput, {nullable:true})
    @Type(() => CampusChatWhereInput)
    where?: InstanceType<typeof CampusChatWhereInput>;
    @Field(() => [CampusChatOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<CampusChatOrderByWithAggregationInput>;
    @Field(() => [CampusChatScalarFieldEnum], {nullable:false})
    by!: Array<`${CampusChatScalarFieldEnum}`>;
    @Field(() => CampusChatScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof CampusChatScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class CampusChatListRelationFilter {
    @Field(() => CampusChatWhereInput, {nullable:true})
    every?: InstanceType<typeof CampusChatWhereInput>;
    @Field(() => CampusChatWhereInput, {nullable:true})
    some?: InstanceType<typeof CampusChatWhereInput>;
    @Field(() => CampusChatWhereInput, {nullable:true})
    none?: InstanceType<typeof CampusChatWhereInput>;
}

@InputType()
export class CampusChatMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    eduInstituteId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    description?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class CampusChatMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    eduInstituteId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    description?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class CampusChatOrderByRelationAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    _count?: `${SortOrder}`;
}

@InputType()
export class CampusChatOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    eduInstituteId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    description?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => CampusChatCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof CampusChatCountOrderByAggregateInput>;
    @Field(() => CampusChatMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof CampusChatMaxOrderByAggregateInput>;
    @Field(() => CampusChatMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof CampusChatMinOrderByAggregateInput>;
}

@InputType()
export class CampusChatOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    eduInstituteId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    description?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => EduInstituteOrderByWithRelationInput, {nullable:true})
    eduInstitute?: InstanceType<typeof EduInstituteOrderByWithRelationInput>;
}

@InputType()
export class CampusChatScalarWhereWithAggregatesInput {
    @Field(() => [CampusChatScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<CampusChatScalarWhereWithAggregatesInput>;
    @Field(() => [CampusChatScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<CampusChatScalarWhereWithAggregatesInput>;
    @Field(() => [CampusChatScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<CampusChatScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    eduInstituteId?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    name?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => EnumCampusChatTypeWithAggregatesFilter, {nullable:true})
    type?: InstanceType<typeof EnumCampusChatTypeWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    description?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => BoolWithAggregatesFilter, {nullable:true})
    active?: InstanceType<typeof BoolWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
}

@InputType()
export class CampusChatScalarWhereInput {
    @Field(() => [CampusChatScalarWhereInput], {nullable:true})
    AND?: Array<CampusChatScalarWhereInput>;
    @Field(() => [CampusChatScalarWhereInput], {nullable:true})
    OR?: Array<CampusChatScalarWhereInput>;
    @Field(() => [CampusChatScalarWhereInput], {nullable:true})
    NOT?: Array<CampusChatScalarWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    eduInstituteId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    name?: InstanceType<typeof StringFilter>;
    @Field(() => EnumCampusChatTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumCampusChatTypeFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    description?: InstanceType<typeof StringNullableFilter>;
    @Field(() => BoolFilter, {nullable:true})
    active?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@InputType()
export class CampusChatUncheckedCreateNestedManyWithoutEduInstituteInput {
    @Field(() => [CampusChatCreateWithoutEduInstituteInput], {nullable:true})
    @Type(() => CampusChatCreateWithoutEduInstituteInput)
    create?: Array<CampusChatCreateWithoutEduInstituteInput>;
    @Field(() => [CampusChatCreateOrConnectWithoutEduInstituteInput], {nullable:true})
    @Type(() => CampusChatCreateOrConnectWithoutEduInstituteInput)
    connectOrCreate?: Array<CampusChatCreateOrConnectWithoutEduInstituteInput>;
    @Field(() => CampusChatCreateManyEduInstituteInputEnvelope, {nullable:true})
    @Type(() => CampusChatCreateManyEduInstituteInputEnvelope)
    createMany?: InstanceType<typeof CampusChatCreateManyEduInstituteInputEnvelope>;
    @Field(() => [CampusChatWhereUniqueInput], {nullable:true})
    @Type(() => CampusChatWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<CampusChatWhereUniqueInput, 'id'>>;
}

@InputType()
export class CampusChatUncheckedCreateWithoutEduInstituteInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => CampusChatType, {nullable:false})
    type!: `${CampusChatType}`;
    @Field(() => String, {nullable:true})
    description?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class CampusChatUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    eduInstituteId!: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => CampusChatType, {nullable:false})
    type!: `${CampusChatType}`;
    @Field(() => String, {nullable:true})
    description?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class CampusChatUncheckedUpdateManyWithoutEduInstituteNestedInput {
    @Field(() => [CampusChatCreateWithoutEduInstituteInput], {nullable:true})
    @Type(() => CampusChatCreateWithoutEduInstituteInput)
    create?: Array<CampusChatCreateWithoutEduInstituteInput>;
    @Field(() => [CampusChatCreateOrConnectWithoutEduInstituteInput], {nullable:true})
    @Type(() => CampusChatCreateOrConnectWithoutEduInstituteInput)
    connectOrCreate?: Array<CampusChatCreateOrConnectWithoutEduInstituteInput>;
    @Field(() => [CampusChatUpsertWithWhereUniqueWithoutEduInstituteInput], {nullable:true})
    @Type(() => CampusChatUpsertWithWhereUniqueWithoutEduInstituteInput)
    upsert?: Array<CampusChatUpsertWithWhereUniqueWithoutEduInstituteInput>;
    @Field(() => CampusChatCreateManyEduInstituteInputEnvelope, {nullable:true})
    @Type(() => CampusChatCreateManyEduInstituteInputEnvelope)
    createMany?: InstanceType<typeof CampusChatCreateManyEduInstituteInputEnvelope>;
    @Field(() => [CampusChatWhereUniqueInput], {nullable:true})
    @Type(() => CampusChatWhereUniqueInput)
    set?: Array<Prisma.AtLeast<CampusChatWhereUniqueInput, 'id'>>;
    @Field(() => [CampusChatWhereUniqueInput], {nullable:true})
    @Type(() => CampusChatWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<CampusChatWhereUniqueInput, 'id'>>;
    @Field(() => [CampusChatWhereUniqueInput], {nullable:true})
    @Type(() => CampusChatWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<CampusChatWhereUniqueInput, 'id'>>;
    @Field(() => [CampusChatWhereUniqueInput], {nullable:true})
    @Type(() => CampusChatWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<CampusChatWhereUniqueInput, 'id'>>;
    @Field(() => [CampusChatUpdateWithWhereUniqueWithoutEduInstituteInput], {nullable:true})
    @Type(() => CampusChatUpdateWithWhereUniqueWithoutEduInstituteInput)
    update?: Array<CampusChatUpdateWithWhereUniqueWithoutEduInstituteInput>;
    @Field(() => [CampusChatUpdateManyWithWhereWithoutEduInstituteInput], {nullable:true})
    @Type(() => CampusChatUpdateManyWithWhereWithoutEduInstituteInput)
    updateMany?: Array<CampusChatUpdateManyWithWhereWithoutEduInstituteInput>;
    @Field(() => [CampusChatScalarWhereInput], {nullable:true})
    @Type(() => CampusChatScalarWhereInput)
    deleteMany?: Array<CampusChatScalarWhereInput>;
}

@InputType()
export class CampusChatUncheckedUpdateManyWithoutEduInstituteInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumCampusChatTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumCampusChatTypeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class CampusChatUncheckedUpdateManyInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    eduInstituteId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumCampusChatTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumCampusChatTypeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class CampusChatUncheckedUpdateWithoutEduInstituteInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumCampusChatTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumCampusChatTypeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class CampusChatUncheckedUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    eduInstituteId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumCampusChatTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumCampusChatTypeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class CampusChatUpdateManyMutationInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumCampusChatTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumCampusChatTypeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class CampusChatUpdateManyWithWhereWithoutEduInstituteInput {
    @Field(() => CampusChatScalarWhereInput, {nullable:false})
    @Type(() => CampusChatScalarWhereInput)
    where!: InstanceType<typeof CampusChatScalarWhereInput>;
    @Field(() => CampusChatUpdateManyMutationInput, {nullable:false})
    @Type(() => CampusChatUpdateManyMutationInput)
    data!: InstanceType<typeof CampusChatUpdateManyMutationInput>;
}

@InputType()
export class CampusChatUpdateManyWithoutEduInstituteNestedInput {
    @Field(() => [CampusChatCreateWithoutEduInstituteInput], {nullable:true})
    @Type(() => CampusChatCreateWithoutEduInstituteInput)
    create?: Array<CampusChatCreateWithoutEduInstituteInput>;
    @Field(() => [CampusChatCreateOrConnectWithoutEduInstituteInput], {nullable:true})
    @Type(() => CampusChatCreateOrConnectWithoutEduInstituteInput)
    connectOrCreate?: Array<CampusChatCreateOrConnectWithoutEduInstituteInput>;
    @Field(() => [CampusChatUpsertWithWhereUniqueWithoutEduInstituteInput], {nullable:true})
    @Type(() => CampusChatUpsertWithWhereUniqueWithoutEduInstituteInput)
    upsert?: Array<CampusChatUpsertWithWhereUniqueWithoutEduInstituteInput>;
    @Field(() => CampusChatCreateManyEduInstituteInputEnvelope, {nullable:true})
    @Type(() => CampusChatCreateManyEduInstituteInputEnvelope)
    createMany?: InstanceType<typeof CampusChatCreateManyEduInstituteInputEnvelope>;
    @Field(() => [CampusChatWhereUniqueInput], {nullable:true})
    @Type(() => CampusChatWhereUniqueInput)
    set?: Array<Prisma.AtLeast<CampusChatWhereUniqueInput, 'id'>>;
    @Field(() => [CampusChatWhereUniqueInput], {nullable:true})
    @Type(() => CampusChatWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<CampusChatWhereUniqueInput, 'id'>>;
    @Field(() => [CampusChatWhereUniqueInput], {nullable:true})
    @Type(() => CampusChatWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<CampusChatWhereUniqueInput, 'id'>>;
    @Field(() => [CampusChatWhereUniqueInput], {nullable:true})
    @Type(() => CampusChatWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<CampusChatWhereUniqueInput, 'id'>>;
    @Field(() => [CampusChatUpdateWithWhereUniqueWithoutEduInstituteInput], {nullable:true})
    @Type(() => CampusChatUpdateWithWhereUniqueWithoutEduInstituteInput)
    update?: Array<CampusChatUpdateWithWhereUniqueWithoutEduInstituteInput>;
    @Field(() => [CampusChatUpdateManyWithWhereWithoutEduInstituteInput], {nullable:true})
    @Type(() => CampusChatUpdateManyWithWhereWithoutEduInstituteInput)
    updateMany?: Array<CampusChatUpdateManyWithWhereWithoutEduInstituteInput>;
    @Field(() => [CampusChatScalarWhereInput], {nullable:true})
    @Type(() => CampusChatScalarWhereInput)
    deleteMany?: Array<CampusChatScalarWhereInput>;
}

@InputType()
export class CampusChatUpdateWithWhereUniqueWithoutEduInstituteInput {
    @Field(() => CampusChatWhereUniqueInput, {nullable:false})
    @Type(() => CampusChatWhereUniqueInput)
    where!: Prisma.AtLeast<CampusChatWhereUniqueInput, 'id'>;
    @Field(() => CampusChatUpdateWithoutEduInstituteInput, {nullable:false})
    @Type(() => CampusChatUpdateWithoutEduInstituteInput)
    data!: InstanceType<typeof CampusChatUpdateWithoutEduInstituteInput>;
}

@InputType()
export class CampusChatUpdateWithoutEduInstituteInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumCampusChatTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumCampusChatTypeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class CampusChatUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumCampusChatTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumCampusChatTypeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => EduInstituteUpdateOneRequiredWithoutCampusChatsNestedInput, {nullable:true})
    eduInstitute?: InstanceType<typeof EduInstituteUpdateOneRequiredWithoutCampusChatsNestedInput>;
}

@InputType()
export class CampusChatUpsertWithWhereUniqueWithoutEduInstituteInput {
    @Field(() => CampusChatWhereUniqueInput, {nullable:false})
    @Type(() => CampusChatWhereUniqueInput)
    where!: Prisma.AtLeast<CampusChatWhereUniqueInput, 'id'>;
    @Field(() => CampusChatUpdateWithoutEduInstituteInput, {nullable:false})
    @Type(() => CampusChatUpdateWithoutEduInstituteInput)
    update!: InstanceType<typeof CampusChatUpdateWithoutEduInstituteInput>;
    @Field(() => CampusChatCreateWithoutEduInstituteInput, {nullable:false})
    @Type(() => CampusChatCreateWithoutEduInstituteInput)
    create!: InstanceType<typeof CampusChatCreateWithoutEduInstituteInput>;
}

@InputType()
export class CampusChatWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => [CampusChatWhereInput], {nullable:true})
    AND?: Array<CampusChatWhereInput>;
    @Field(() => [CampusChatWhereInput], {nullable:true})
    OR?: Array<CampusChatWhereInput>;
    @Field(() => [CampusChatWhereInput], {nullable:true})
    NOT?: Array<CampusChatWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    eduInstituteId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    name?: InstanceType<typeof StringFilter>;
    @Field(() => EnumCampusChatTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumCampusChatTypeFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    description?: InstanceType<typeof StringNullableFilter>;
    @Field(() => BoolFilter, {nullable:true})
    active?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => EduInstituteRelationFilter, {nullable:true})
    eduInstitute?: InstanceType<typeof EduInstituteRelationFilter>;
}

@InputType()
export class CampusChatWhereInput {
    @Field(() => [CampusChatWhereInput], {nullable:true})
    AND?: Array<CampusChatWhereInput>;
    @Field(() => [CampusChatWhereInput], {nullable:true})
    OR?: Array<CampusChatWhereInput>;
    @Field(() => [CampusChatWhereInput], {nullable:true})
    NOT?: Array<CampusChatWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    eduInstituteId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    name?: InstanceType<typeof StringFilter>;
    @Field(() => EnumCampusChatTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumCampusChatTypeFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    description?: InstanceType<typeof StringNullableFilter>;
    @Field(() => BoolFilter, {nullable:true})
    active?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => EduInstituteRelationFilter, {nullable:true})
    eduInstitute?: InstanceType<typeof EduInstituteRelationFilter>;
}

@ObjectType()
export class CampusChat {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    eduInstituteId!: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => CampusChatType, {nullable:false})
    type!: `${CampusChatType}`;
    @Field(() => String, {nullable:true})
    description!: string | null;
    @Field(() => Boolean, {defaultValue:true,nullable:false})
    active!: boolean;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
    @Field(() => Date, {nullable:false})
    updatedAt!: Date;
    @Field(() => EduInstitute, {nullable:false})
    eduInstitute?: InstanceType<typeof EduInstitute>;
}

@ArgsType()
export class CreateManyCampusChatArgs {
    @Field(() => [CampusChatCreateManyInput], {nullable:false})
    @Type(() => CampusChatCreateManyInput)
    data!: Array<CampusChatCreateManyInput>;
}

@ArgsType()
export class CreateOneCampusChatArgs {
    @Field(() => CampusChatCreateInput, {nullable:false})
    @Type(() => CampusChatCreateInput)
    data!: InstanceType<typeof CampusChatCreateInput>;
}

@ArgsType()
export class DeleteManyCampusChatArgs {
    @Field(() => CampusChatWhereInput, {nullable:true})
    @Type(() => CampusChatWhereInput)
    where?: InstanceType<typeof CampusChatWhereInput>;
}

@ArgsType()
export class DeleteOneCampusChatArgs {
    @Field(() => CampusChatWhereUniqueInput, {nullable:false})
    @Type(() => CampusChatWhereUniqueInput)
    where!: Prisma.AtLeast<CampusChatWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindFirstCampusChatOrThrowArgs {
    @Field(() => CampusChatWhereInput, {nullable:true})
    @Type(() => CampusChatWhereInput)
    where?: InstanceType<typeof CampusChatWhereInput>;
    @Field(() => [CampusChatOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<CampusChatOrderByWithRelationInput>;
    @Field(() => CampusChatWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<CampusChatWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [CampusChatScalarFieldEnum], {nullable:true})
    distinct?: Array<`${CampusChatScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstCampusChatArgs {
    @Field(() => CampusChatWhereInput, {nullable:true})
    @Type(() => CampusChatWhereInput)
    where?: InstanceType<typeof CampusChatWhereInput>;
    @Field(() => [CampusChatOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<CampusChatOrderByWithRelationInput>;
    @Field(() => CampusChatWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<CampusChatWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [CampusChatScalarFieldEnum], {nullable:true})
    distinct?: Array<`${CampusChatScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyCampusChatArgs {
    @Field(() => CampusChatWhereInput, {nullable:true})
    @Type(() => CampusChatWhereInput)
    where?: InstanceType<typeof CampusChatWhereInput>;
    @Field(() => [CampusChatOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<CampusChatOrderByWithRelationInput>;
    @Field(() => CampusChatWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<CampusChatWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [CampusChatScalarFieldEnum], {nullable:true})
    distinct?: Array<`${CampusChatScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniqueCampusChatOrThrowArgs {
    @Field(() => CampusChatWhereUniqueInput, {nullable:false})
    @Type(() => CampusChatWhereUniqueInput)
    where!: Prisma.AtLeast<CampusChatWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindUniqueCampusChatArgs {
    @Field(() => CampusChatWhereUniqueInput, {nullable:false})
    @Type(() => CampusChatWhereUniqueInput)
    where!: Prisma.AtLeast<CampusChatWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpdateManyCampusChatArgs {
    @Field(() => CampusChatUpdateManyMutationInput, {nullable:false})
    @Type(() => CampusChatUpdateManyMutationInput)
    data!: InstanceType<typeof CampusChatUpdateManyMutationInput>;
    @Field(() => CampusChatWhereInput, {nullable:true})
    @Type(() => CampusChatWhereInput)
    where?: InstanceType<typeof CampusChatWhereInput>;
}

@ArgsType()
export class UpdateOneCampusChatArgs {
    @Field(() => CampusChatUpdateInput, {nullable:false})
    @Type(() => CampusChatUpdateInput)
    data!: InstanceType<typeof CampusChatUpdateInput>;
    @Field(() => CampusChatWhereUniqueInput, {nullable:false})
    @Type(() => CampusChatWhereUniqueInput)
    where!: Prisma.AtLeast<CampusChatWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpsertOneCampusChatArgs {
    @Field(() => CampusChatWhereUniqueInput, {nullable:false})
    @Type(() => CampusChatWhereUniqueInput)
    where!: Prisma.AtLeast<CampusChatWhereUniqueInput, 'id'>;
    @Field(() => CampusChatCreateInput, {nullable:false})
    @Type(() => CampusChatCreateInput)
    create!: InstanceType<typeof CampusChatCreateInput>;
    @Field(() => CampusChatUpdateInput, {nullable:false})
    @Type(() => CampusChatUpdateInput)
    update!: InstanceType<typeof CampusChatUpdateInput>;
}

@InputType()
export class CampusChatCommentCreateInput {
    @Field(() => String, {nullable:false})
    clientId!: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => String, {nullable:false})
    text!: string;
    @Field(() => Date, {nullable:true})
    deletedAt?: Date | string;
    @Field(() => Date, {nullable:false})
    createdAt!: Date | string;
}

@InputType()
export class CampusChatCommentOrderByCompositeAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    _count?: `${SortOrder}`;
}

@InputType()
export class CampusChatCommentUpdateManyInput {
    @Field(() => CampusChatCommentWhereInput, {nullable:false})
    @Type(() => CampusChatCommentWhereInput)
    where!: InstanceType<typeof CampusChatCommentWhereInput>;
    @Field(() => CampusChatCommentUpdateInput, {nullable:false})
    @Type(() => CampusChatCommentUpdateInput)
    data!: InstanceType<typeof CampusChatCommentUpdateInput>;
}

@InputType()
export class CampusChatCommentUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    clientId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    text?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableDateTimeFieldUpdateOperationsInput, {nullable:true})
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class CampusChatCommentWhereInput {
    @Field(() => [CampusChatCommentWhereInput], {nullable:true})
    AND?: Array<CampusChatCommentWhereInput>;
    @Field(() => [CampusChatCommentWhereInput], {nullable:true})
    OR?: Array<CampusChatCommentWhereInput>;
    @Field(() => [CampusChatCommentWhereInput], {nullable:true})
    NOT?: Array<CampusChatCommentWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    clientId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    userId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    text?: InstanceType<typeof StringFilter>;
    @Field(() => DateTimeNullableFilter, {nullable:true})
    deletedAt?: InstanceType<typeof DateTimeNullableFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
}

@ObjectType()
export class CampusChatComment {
    @Field(() => String, {nullable:false})
    clientId!: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => String, {nullable:false})
    text!: string;
    @Field(() => Date, {nullable:true})
    deletedAt!: Date | null;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
}

@ArgsType()
export class CampusChatMessageAggregateArgs {
    @Field(() => CampusChatMessageWhereInput, {nullable:true})
    @Type(() => CampusChatMessageWhereInput)
    where?: InstanceType<typeof CampusChatMessageWhereInput>;
    @Field(() => [CampusChatMessageOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<CampusChatMessageOrderByWithRelationInput>;
    @Field(() => CampusChatMessageWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<CampusChatMessageWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class CampusChatMessageAvgOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    reportCount?: `${SortOrder}`;
}

@InputType()
export class CampusChatMessageCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    chatId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    clientId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    content?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    reportCount?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    flagged?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    flaggedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    flaggedBy?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    deletedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class CampusChatMessageCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    chatId!: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => String, {nullable:false})
    clientId!: string;
    @Field(() => CampusChatMessageType, {nullable:false})
    type!: `${CampusChatMessageType}`;
    @Field(() => GraphQLJSON, {nullable:false})
    content!: any;
    @Field(() => [CampusChatCommentCreateInput], {nullable:true})
    comments?: Array<CampusChatCommentCreateInput>;
    @Field(() => [CampusChatReactionCreateInput], {nullable:true})
    reactions?: Array<CampusChatReactionCreateInput>;
    @Field(() => Int, {nullable:true})
    reportCount?: number;
    @Field(() => Boolean, {nullable:true})
    flagged?: boolean;
    @Field(() => Date, {nullable:true})
    flaggedAt?: Date | string;
    @Field(() => CampusChatMessageFlaggedBy, {nullable:true})
    flaggedBy?: `${CampusChatMessageFlaggedBy}`;
    @Field(() => Date, {nullable:true})
    deletedAt?: Date | string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class CampusChatMessageCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    chatId!: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => String, {nullable:false})
    clientId!: string;
    @Field(() => CampusChatMessageType, {nullable:false})
    type!: `${CampusChatMessageType}`;
    @Field(() => GraphQLJSON, {nullable:false})
    content!: any;
    @Field(() => [CampusChatCommentCreateInput], {nullable:true})
    comments?: Array<CampusChatCommentCreateInput>;
    @Field(() => [CampusChatReactionCreateInput], {nullable:true})
    reactions?: Array<CampusChatReactionCreateInput>;
    @Field(() => Int, {nullable:true})
    reportCount?: number;
    @Field(() => Boolean, {nullable:true})
    flagged?: boolean;
    @Field(() => Date, {nullable:true})
    flaggedAt?: Date | string;
    @Field(() => CampusChatMessageFlaggedBy, {nullable:true})
    flaggedBy?: `${CampusChatMessageFlaggedBy}`;
    @Field(() => Date, {nullable:true})
    deletedAt?: Date | string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@ArgsType()
export class CampusChatMessageGroupByArgs {
    @Field(() => CampusChatMessageWhereInput, {nullable:true})
    @Type(() => CampusChatMessageWhereInput)
    where?: InstanceType<typeof CampusChatMessageWhereInput>;
    @Field(() => [CampusChatMessageOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<CampusChatMessageOrderByWithAggregationInput>;
    @Field(() => [CampusChatMessageScalarFieldEnum], {nullable:false})
    by!: Array<`${CampusChatMessageScalarFieldEnum}`>;
    @Field(() => CampusChatMessageScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof CampusChatMessageScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class CampusChatMessageMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    chatId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    clientId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    reportCount?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    flagged?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    flaggedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    flaggedBy?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    deletedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class CampusChatMessageMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    chatId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    clientId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    reportCount?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    flagged?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    flaggedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    flaggedBy?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    deletedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class CampusChatMessageOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    chatId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    clientId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    content?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    reportCount?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    flagged?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    flaggedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    flaggedBy?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    deletedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => CampusChatMessageCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof CampusChatMessageCountOrderByAggregateInput>;
    @Field(() => CampusChatMessageAvgOrderByAggregateInput, {nullable:true})
    _avg?: InstanceType<typeof CampusChatMessageAvgOrderByAggregateInput>;
    @Field(() => CampusChatMessageMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof CampusChatMessageMaxOrderByAggregateInput>;
    @Field(() => CampusChatMessageMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof CampusChatMessageMinOrderByAggregateInput>;
    @Field(() => CampusChatMessageSumOrderByAggregateInput, {nullable:true})
    _sum?: InstanceType<typeof CampusChatMessageSumOrderByAggregateInput>;
}

@InputType()
export class CampusChatMessageOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    chatId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    clientId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    content?: `${SortOrder}`;
    @Field(() => CampusChatCommentOrderByCompositeAggregateInput, {nullable:true})
    comments?: InstanceType<typeof CampusChatCommentOrderByCompositeAggregateInput>;
    @Field(() => CampusChatReactionOrderByCompositeAggregateInput, {nullable:true})
    reactions?: InstanceType<typeof CampusChatReactionOrderByCompositeAggregateInput>;
    @Field(() => SortOrder, {nullable:true})
    reportCount?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    flagged?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    flaggedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    flaggedBy?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    deletedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class CampusChatMessageScalarWhereWithAggregatesInput {
    @Field(() => [CampusChatMessageScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<CampusChatMessageScalarWhereWithAggregatesInput>;
    @Field(() => [CampusChatMessageScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<CampusChatMessageScalarWhereWithAggregatesInput>;
    @Field(() => [CampusChatMessageScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<CampusChatMessageScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    chatId?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    userId?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    clientId?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => EnumCampusChatMessageTypeWithAggregatesFilter, {nullable:true})
    type?: InstanceType<typeof EnumCampusChatMessageTypeWithAggregatesFilter>;
    @Field(() => JsonWithAggregatesFilter, {nullable:true})
    content?: InstanceType<typeof JsonWithAggregatesFilter>;
    @Field(() => IntWithAggregatesFilter, {nullable:true})
    reportCount?: InstanceType<typeof IntWithAggregatesFilter>;
    @Field(() => BoolWithAggregatesFilter, {nullable:true})
    flagged?: InstanceType<typeof BoolWithAggregatesFilter>;
    @Field(() => DateTimeNullableWithAggregatesFilter, {nullable:true})
    flaggedAt?: InstanceType<typeof DateTimeNullableWithAggregatesFilter>;
    @Field(() => EnumCampusChatMessageFlaggedByNullableWithAggregatesFilter, {nullable:true})
    flaggedBy?: InstanceType<typeof EnumCampusChatMessageFlaggedByNullableWithAggregatesFilter>;
    @Field(() => DateTimeNullableWithAggregatesFilter, {nullable:true})
    deletedAt?: InstanceType<typeof DateTimeNullableWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
}

@InputType()
export class CampusChatMessageSumOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    reportCount?: `${SortOrder}`;
}

@InputType()
export class CampusChatMessageUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    chatId!: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => String, {nullable:false})
    clientId!: string;
    @Field(() => CampusChatMessageType, {nullable:false})
    type!: `${CampusChatMessageType}`;
    @Field(() => GraphQLJSON, {nullable:false})
    content!: any;
    @Field(() => [CampusChatCommentCreateInput], {nullable:true})
    comments?: Array<CampusChatCommentCreateInput>;
    @Field(() => [CampusChatReactionCreateInput], {nullable:true})
    reactions?: Array<CampusChatReactionCreateInput>;
    @Field(() => Int, {nullable:true})
    reportCount?: number;
    @Field(() => Boolean, {nullable:true})
    flagged?: boolean;
    @Field(() => Date, {nullable:true})
    flaggedAt?: Date | string;
    @Field(() => CampusChatMessageFlaggedBy, {nullable:true})
    flaggedBy?: `${CampusChatMessageFlaggedBy}`;
    @Field(() => Date, {nullable:true})
    deletedAt?: Date | string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class CampusChatMessageUncheckedUpdateManyInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    chatId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    clientId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumCampusChatMessageTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumCampusChatMessageTypeFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    content?: any;
    @Field(() => [CampusChatCommentCreateInput], {nullable:true})
    comments?: Array<CampusChatCommentCreateInput>;
    @Field(() => [CampusChatReactionCreateInput], {nullable:true})
    reactions?: Array<CampusChatReactionCreateInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    reportCount?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    flagged?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableDateTimeFieldUpdateOperationsInput, {nullable:true})
    flaggedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    @Field(() => NullableEnumCampusChatMessageFlaggedByFieldUpdateOperationsInput, {nullable:true})
    flaggedBy?: InstanceType<typeof NullableEnumCampusChatMessageFlaggedByFieldUpdateOperationsInput>;
    @Field(() => NullableDateTimeFieldUpdateOperationsInput, {nullable:true})
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class CampusChatMessageUncheckedUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    chatId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    clientId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumCampusChatMessageTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumCampusChatMessageTypeFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    content?: any;
    @Field(() => [CampusChatCommentCreateInput], {nullable:true})
    comments?: Array<CampusChatCommentCreateInput>;
    @Field(() => [CampusChatReactionCreateInput], {nullable:true})
    reactions?: Array<CampusChatReactionCreateInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    reportCount?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    flagged?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableDateTimeFieldUpdateOperationsInput, {nullable:true})
    flaggedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    @Field(() => NullableEnumCampusChatMessageFlaggedByFieldUpdateOperationsInput, {nullable:true})
    flaggedBy?: InstanceType<typeof NullableEnumCampusChatMessageFlaggedByFieldUpdateOperationsInput>;
    @Field(() => NullableDateTimeFieldUpdateOperationsInput, {nullable:true})
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class CampusChatMessageUpdateManyMutationInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    chatId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    clientId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumCampusChatMessageTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumCampusChatMessageTypeFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    content?: any;
    @Field(() => [CampusChatCommentCreateInput], {nullable:true})
    comments?: Array<CampusChatCommentCreateInput>;
    @Field(() => [CampusChatReactionCreateInput], {nullable:true})
    reactions?: Array<CampusChatReactionCreateInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    reportCount?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    flagged?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableDateTimeFieldUpdateOperationsInput, {nullable:true})
    flaggedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    @Field(() => NullableEnumCampusChatMessageFlaggedByFieldUpdateOperationsInput, {nullable:true})
    flaggedBy?: InstanceType<typeof NullableEnumCampusChatMessageFlaggedByFieldUpdateOperationsInput>;
    @Field(() => NullableDateTimeFieldUpdateOperationsInput, {nullable:true})
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class CampusChatMessageUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    chatId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    clientId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumCampusChatMessageTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumCampusChatMessageTypeFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    content?: any;
    @Field(() => [CampusChatCommentCreateInput], {nullable:true})
    comments?: Array<CampusChatCommentCreateInput>;
    @Field(() => [CampusChatReactionCreateInput], {nullable:true})
    reactions?: Array<CampusChatReactionCreateInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    reportCount?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    flagged?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableDateTimeFieldUpdateOperationsInput, {nullable:true})
    flaggedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    @Field(() => NullableEnumCampusChatMessageFlaggedByFieldUpdateOperationsInput, {nullable:true})
    flaggedBy?: InstanceType<typeof NullableEnumCampusChatMessageFlaggedByFieldUpdateOperationsInput>;
    @Field(() => NullableDateTimeFieldUpdateOperationsInput, {nullable:true})
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class CampusChatMessageWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => [CampusChatMessageWhereInput], {nullable:true})
    AND?: Array<CampusChatMessageWhereInput>;
    @Field(() => [CampusChatMessageWhereInput], {nullable:true})
    OR?: Array<CampusChatMessageWhereInput>;
    @Field(() => [CampusChatMessageWhereInput], {nullable:true})
    NOT?: Array<CampusChatMessageWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    chatId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    userId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    clientId?: InstanceType<typeof StringFilter>;
    @Field(() => EnumCampusChatMessageTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumCampusChatMessageTypeFilter>;
    @Field(() => JsonFilter, {nullable:true})
    content?: InstanceType<typeof JsonFilter>;
    @Field(() => [CampusChatCommentObjectEqualityInput], {nullable:true})
    comments?: Array<CampusChatCommentObjectEqualityInput>;
    @Field(() => [CampusChatReactionObjectEqualityInput], {nullable:true})
    reactions?: Array<CampusChatReactionObjectEqualityInput>;
    @Field(() => IntFilter, {nullable:true})
    reportCount?: InstanceType<typeof IntFilter>;
    @Field(() => BoolFilter, {nullable:true})
    flagged?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeNullableFilter, {nullable:true})
    flaggedAt?: InstanceType<typeof DateTimeNullableFilter>;
    @Field(() => EnumCampusChatMessageFlaggedByNullableFilter, {nullable:true})
    flaggedBy?: InstanceType<typeof EnumCampusChatMessageFlaggedByNullableFilter>;
    @Field(() => DateTimeNullableFilter, {nullable:true})
    deletedAt?: InstanceType<typeof DateTimeNullableFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@InputType()
export class CampusChatMessageWhereInput {
    @Field(() => [CampusChatMessageWhereInput], {nullable:true})
    AND?: Array<CampusChatMessageWhereInput>;
    @Field(() => [CampusChatMessageWhereInput], {nullable:true})
    OR?: Array<CampusChatMessageWhereInput>;
    @Field(() => [CampusChatMessageWhereInput], {nullable:true})
    NOT?: Array<CampusChatMessageWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    chatId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    userId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    clientId?: InstanceType<typeof StringFilter>;
    @Field(() => EnumCampusChatMessageTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumCampusChatMessageTypeFilter>;
    @Field(() => JsonFilter, {nullable:true})
    content?: InstanceType<typeof JsonFilter>;
    @Field(() => [CampusChatCommentObjectEqualityInput], {nullable:true})
    comments?: Array<CampusChatCommentObjectEqualityInput>;
    @Field(() => [CampusChatReactionObjectEqualityInput], {nullable:true})
    reactions?: Array<CampusChatReactionObjectEqualityInput>;
    @Field(() => IntFilter, {nullable:true})
    reportCount?: InstanceType<typeof IntFilter>;
    @Field(() => BoolFilter, {nullable:true})
    flagged?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeNullableFilter, {nullable:true})
    flaggedAt?: InstanceType<typeof DateTimeNullableFilter>;
    @Field(() => EnumCampusChatMessageFlaggedByNullableFilter, {nullable:true})
    flaggedBy?: InstanceType<typeof EnumCampusChatMessageFlaggedByNullableFilter>;
    @Field(() => DateTimeNullableFilter, {nullable:true})
    deletedAt?: InstanceType<typeof DateTimeNullableFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@ObjectType()
export class CampusChatMessage {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    chatId!: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => String, {nullable:false})
    clientId!: string;
    @Field(() => CampusChatMessageType, {nullable:false})
    type!: `${CampusChatMessageType}`;
    @Field(() => GraphQLJSON, {nullable:false})
    content!: any;
    @Field(() => [CampusChatComment], {nullable:true})
    comments?: Array<CampusChatComment>;
    @Field(() => [CampusChatReaction], {nullable:true})
    reactions?: Array<CampusChatReaction>;
    @Field(() => Int, {defaultValue:0,nullable:false})
    reportCount!: number;
    @Field(() => Boolean, {defaultValue:false,nullable:false})
    flagged!: boolean;
    @Field(() => Date, {nullable:true})
    flaggedAt!: Date | null;
    @Field(() => CampusChatMessageFlaggedBy, {nullable:true})
    flaggedBy!: `${CampusChatMessageFlaggedBy}` | null;
    @Field(() => Date, {nullable:true})
    deletedAt!: Date | null;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
    @Field(() => Date, {nullable:false})
    updatedAt!: Date;
}

@ArgsType()
export class CreateManyCampusChatMessageArgs {
    @Field(() => [CampusChatMessageCreateManyInput], {nullable:false})
    @Type(() => CampusChatMessageCreateManyInput)
    data!: Array<CampusChatMessageCreateManyInput>;
}

@ArgsType()
export class CreateOneCampusChatMessageArgs {
    @Field(() => CampusChatMessageCreateInput, {nullable:false})
    @Type(() => CampusChatMessageCreateInput)
    data!: InstanceType<typeof CampusChatMessageCreateInput>;
}

@ArgsType()
export class DeleteManyCampusChatMessageArgs {
    @Field(() => CampusChatMessageWhereInput, {nullable:true})
    @Type(() => CampusChatMessageWhereInput)
    where?: InstanceType<typeof CampusChatMessageWhereInput>;
}

@ArgsType()
export class DeleteOneCampusChatMessageArgs {
    @Field(() => CampusChatMessageWhereUniqueInput, {nullable:false})
    @Type(() => CampusChatMessageWhereUniqueInput)
    where!: Prisma.AtLeast<CampusChatMessageWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindFirstCampusChatMessageOrThrowArgs {
    @Field(() => CampusChatMessageWhereInput, {nullable:true})
    @Type(() => CampusChatMessageWhereInput)
    where?: InstanceType<typeof CampusChatMessageWhereInput>;
    @Field(() => [CampusChatMessageOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<CampusChatMessageOrderByWithRelationInput>;
    @Field(() => CampusChatMessageWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<CampusChatMessageWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [CampusChatMessageScalarFieldEnum], {nullable:true})
    distinct?: Array<`${CampusChatMessageScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstCampusChatMessageArgs {
    @Field(() => CampusChatMessageWhereInput, {nullable:true})
    @Type(() => CampusChatMessageWhereInput)
    where?: InstanceType<typeof CampusChatMessageWhereInput>;
    @Field(() => [CampusChatMessageOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<CampusChatMessageOrderByWithRelationInput>;
    @Field(() => CampusChatMessageWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<CampusChatMessageWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [CampusChatMessageScalarFieldEnum], {nullable:true})
    distinct?: Array<`${CampusChatMessageScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyCampusChatMessageArgs {
    @Field(() => CampusChatMessageWhereInput, {nullable:true})
    @Type(() => CampusChatMessageWhereInput)
    where?: InstanceType<typeof CampusChatMessageWhereInput>;
    @Field(() => [CampusChatMessageOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<CampusChatMessageOrderByWithRelationInput>;
    @Field(() => CampusChatMessageWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<CampusChatMessageWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [CampusChatMessageScalarFieldEnum], {nullable:true})
    distinct?: Array<`${CampusChatMessageScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniqueCampusChatMessageOrThrowArgs {
    @Field(() => CampusChatMessageWhereUniqueInput, {nullable:false})
    @Type(() => CampusChatMessageWhereUniqueInput)
    where!: Prisma.AtLeast<CampusChatMessageWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindUniqueCampusChatMessageArgs {
    @Field(() => CampusChatMessageWhereUniqueInput, {nullable:false})
    @Type(() => CampusChatMessageWhereUniqueInput)
    where!: Prisma.AtLeast<CampusChatMessageWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpdateManyCampusChatMessageArgs {
    @Field(() => CampusChatMessageUpdateManyMutationInput, {nullable:false})
    @Type(() => CampusChatMessageUpdateManyMutationInput)
    data!: InstanceType<typeof CampusChatMessageUpdateManyMutationInput>;
    @Field(() => CampusChatMessageWhereInput, {nullable:true})
    @Type(() => CampusChatMessageWhereInput)
    where?: InstanceType<typeof CampusChatMessageWhereInput>;
}

@ArgsType()
export class UpdateOneCampusChatMessageArgs {
    @Field(() => CampusChatMessageUpdateInput, {nullable:false})
    @Type(() => CampusChatMessageUpdateInput)
    data!: InstanceType<typeof CampusChatMessageUpdateInput>;
    @Field(() => CampusChatMessageWhereUniqueInput, {nullable:false})
    @Type(() => CampusChatMessageWhereUniqueInput)
    where!: Prisma.AtLeast<CampusChatMessageWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpsertOneCampusChatMessageArgs {
    @Field(() => CampusChatMessageWhereUniqueInput, {nullable:false})
    @Type(() => CampusChatMessageWhereUniqueInput)
    where!: Prisma.AtLeast<CampusChatMessageWhereUniqueInput, 'id'>;
    @Field(() => CampusChatMessageCreateInput, {nullable:false})
    @Type(() => CampusChatMessageCreateInput)
    create!: InstanceType<typeof CampusChatMessageCreateInput>;
    @Field(() => CampusChatMessageUpdateInput, {nullable:false})
    @Type(() => CampusChatMessageUpdateInput)
    update!: InstanceType<typeof CampusChatMessageUpdateInput>;
}

@ArgsType()
export class CampusChatMessagePayloadAggregateArgs {
    @Field(() => CampusChatMessagePayloadWhereInput, {nullable:true})
    @Type(() => CampusChatMessagePayloadWhereInput)
    where?: InstanceType<typeof CampusChatMessagePayloadWhereInput>;
    @Field(() => [CampusChatMessagePayloadOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<CampusChatMessagePayloadOrderByWithRelationInput>;
    @Field(() => CampusChatMessagePayloadWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<CampusChatMessagePayloadWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class CampusChatMessagePayloadCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
}

@InputType()
export class CampusChatMessagePayloadCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => TextCampusChatPayloadCreateEnvelopeInput, {nullable:false})
    text!: InstanceType<typeof TextCampusChatPayloadCreateEnvelopeInput>;
    @Field(() => ProductShareCampusChatPayloadCreateEnvelopeInput, {nullable:false})
    productShare!: InstanceType<typeof ProductShareCampusChatPayloadCreateEnvelopeInput>;
}

@InputType()
export class CampusChatMessagePayloadCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => TextCampusChatPayloadCreateEnvelopeInput, {nullable:false})
    text!: InstanceType<typeof TextCampusChatPayloadCreateEnvelopeInput>;
    @Field(() => ProductShareCampusChatPayloadCreateEnvelopeInput, {nullable:false})
    productShare!: InstanceType<typeof ProductShareCampusChatPayloadCreateEnvelopeInput>;
}

@ArgsType()
export class CampusChatMessagePayloadGroupByArgs {
    @Field(() => CampusChatMessagePayloadWhereInput, {nullable:true})
    @Type(() => CampusChatMessagePayloadWhereInput)
    where?: InstanceType<typeof CampusChatMessagePayloadWhereInput>;
    @Field(() => [CampusChatMessagePayloadOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<CampusChatMessagePayloadOrderByWithAggregationInput>;
    @Field(() => [CampusChatMessagePayloadScalarFieldEnum], {nullable:false})
    by!: Array<`${CampusChatMessagePayloadScalarFieldEnum}`>;
    @Field(() => CampusChatMessagePayloadScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof CampusChatMessagePayloadScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class CampusChatMessagePayloadMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
}

@InputType()
export class CampusChatMessagePayloadMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
}

@InputType()
export class CampusChatMessagePayloadOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => CampusChatMessagePayloadCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof CampusChatMessagePayloadCountOrderByAggregateInput>;
    @Field(() => CampusChatMessagePayloadMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof CampusChatMessagePayloadMaxOrderByAggregateInput>;
    @Field(() => CampusChatMessagePayloadMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof CampusChatMessagePayloadMinOrderByAggregateInput>;
}

@InputType()
export class CampusChatMessagePayloadOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => TextCampusChatPayloadOrderByInput, {nullable:true})
    text?: InstanceType<typeof TextCampusChatPayloadOrderByInput>;
    @Field(() => ProductShareCampusChatPayloadOrderByInput, {nullable:true})
    productShare?: InstanceType<typeof ProductShareCampusChatPayloadOrderByInput>;
}

@InputType()
export class CampusChatMessagePayloadScalarWhereWithAggregatesInput {
    @Field(() => [CampusChatMessagePayloadScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<CampusChatMessagePayloadScalarWhereWithAggregatesInput>;
    @Field(() => [CampusChatMessagePayloadScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<CampusChatMessagePayloadScalarWhereWithAggregatesInput>;
    @Field(() => [CampusChatMessagePayloadScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<CampusChatMessagePayloadScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
}

@InputType()
export class CampusChatMessagePayloadUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => TextCampusChatPayloadCreateEnvelopeInput, {nullable:false})
    text!: InstanceType<typeof TextCampusChatPayloadCreateEnvelopeInput>;
    @Field(() => ProductShareCampusChatPayloadCreateEnvelopeInput, {nullable:false})
    productShare!: InstanceType<typeof ProductShareCampusChatPayloadCreateEnvelopeInput>;
}

@InputType()
export class CampusChatMessagePayloadUncheckedUpdateManyInput {
    @Field(() => TextCampusChatPayloadUpdateEnvelopeInput, {nullable:true})
    text?: InstanceType<typeof TextCampusChatPayloadUpdateEnvelopeInput>;
    @Field(() => ProductShareCampusChatPayloadUpdateEnvelopeInput, {nullable:true})
    productShare?: InstanceType<typeof ProductShareCampusChatPayloadUpdateEnvelopeInput>;
}

@InputType()
export class CampusChatMessagePayloadUncheckedUpdateInput {
    @Field(() => TextCampusChatPayloadUpdateEnvelopeInput, {nullable:true})
    text?: InstanceType<typeof TextCampusChatPayloadUpdateEnvelopeInput>;
    @Field(() => ProductShareCampusChatPayloadUpdateEnvelopeInput, {nullable:true})
    productShare?: InstanceType<typeof ProductShareCampusChatPayloadUpdateEnvelopeInput>;
}

@InputType()
export class CampusChatMessagePayloadUpdateManyMutationInput {
    @Field(() => TextCampusChatPayloadUpdateEnvelopeInput, {nullable:true})
    text?: InstanceType<typeof TextCampusChatPayloadUpdateEnvelopeInput>;
    @Field(() => ProductShareCampusChatPayloadUpdateEnvelopeInput, {nullable:true})
    productShare?: InstanceType<typeof ProductShareCampusChatPayloadUpdateEnvelopeInput>;
}

@InputType()
export class CampusChatMessagePayloadUpdateInput {
    @Field(() => TextCampusChatPayloadUpdateEnvelopeInput, {nullable:true})
    text?: InstanceType<typeof TextCampusChatPayloadUpdateEnvelopeInput>;
    @Field(() => ProductShareCampusChatPayloadUpdateEnvelopeInput, {nullable:true})
    productShare?: InstanceType<typeof ProductShareCampusChatPayloadUpdateEnvelopeInput>;
}

@InputType()
export class CampusChatMessagePayloadWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => [CampusChatMessagePayloadWhereInput], {nullable:true})
    AND?: Array<CampusChatMessagePayloadWhereInput>;
    @Field(() => [CampusChatMessagePayloadWhereInput], {nullable:true})
    OR?: Array<CampusChatMessagePayloadWhereInput>;
    @Field(() => [CampusChatMessagePayloadWhereInput], {nullable:true})
    NOT?: Array<CampusChatMessagePayloadWhereInput>;
    @Field(() => TextCampusChatPayloadCompositeFilter, {nullable:true})
    text?: InstanceType<typeof TextCampusChatPayloadCompositeFilter>;
    @Field(() => ProductShareCampusChatPayloadCompositeFilter, {nullable:true})
    productShare?: InstanceType<typeof ProductShareCampusChatPayloadCompositeFilter>;
}

@InputType()
export class CampusChatMessagePayloadWhereInput {
    @Field(() => [CampusChatMessagePayloadWhereInput], {nullable:true})
    AND?: Array<CampusChatMessagePayloadWhereInput>;
    @Field(() => [CampusChatMessagePayloadWhereInput], {nullable:true})
    OR?: Array<CampusChatMessagePayloadWhereInput>;
    @Field(() => [CampusChatMessagePayloadWhereInput], {nullable:true})
    NOT?: Array<CampusChatMessagePayloadWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => TextCampusChatPayloadCompositeFilter, {nullable:true})
    text?: InstanceType<typeof TextCampusChatPayloadCompositeFilter>;
    @Field(() => ProductShareCampusChatPayloadCompositeFilter, {nullable:true})
    productShare?: InstanceType<typeof ProductShareCampusChatPayloadCompositeFilter>;
}

@ObjectType()
export class CampusChatMessagePayload {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => TextCampusChatPayload, {nullable:false})
    text?: InstanceType<typeof TextCampusChatPayload>;
    @Field(() => ProductShareCampusChatPayload, {nullable:false})
    productShare?: InstanceType<typeof ProductShareCampusChatPayload>;
}

@ArgsType()
export class CreateManyCampusChatMessagePayloadArgs {
    @Field(() => [CampusChatMessagePayloadCreateManyInput], {nullable:false})
    @Type(() => CampusChatMessagePayloadCreateManyInput)
    data!: Array<CampusChatMessagePayloadCreateManyInput>;
}

@ArgsType()
export class CreateOneCampusChatMessagePayloadArgs {
    @Field(() => CampusChatMessagePayloadCreateInput, {nullable:false})
    @Type(() => CampusChatMessagePayloadCreateInput)
    data!: InstanceType<typeof CampusChatMessagePayloadCreateInput>;
}

@ArgsType()
export class DeleteManyCampusChatMessagePayloadArgs {
    @Field(() => CampusChatMessagePayloadWhereInput, {nullable:true})
    @Type(() => CampusChatMessagePayloadWhereInput)
    where?: InstanceType<typeof CampusChatMessagePayloadWhereInput>;
}

@ArgsType()
export class DeleteOneCampusChatMessagePayloadArgs {
    @Field(() => CampusChatMessagePayloadWhereUniqueInput, {nullable:false})
    @Type(() => CampusChatMessagePayloadWhereUniqueInput)
    where!: Prisma.AtLeast<CampusChatMessagePayloadWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindFirstCampusChatMessagePayloadOrThrowArgs {
    @Field(() => CampusChatMessagePayloadWhereInput, {nullable:true})
    @Type(() => CampusChatMessagePayloadWhereInput)
    where?: InstanceType<typeof CampusChatMessagePayloadWhereInput>;
    @Field(() => [CampusChatMessagePayloadOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<CampusChatMessagePayloadOrderByWithRelationInput>;
    @Field(() => CampusChatMessagePayloadWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<CampusChatMessagePayloadWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [CampusChatMessagePayloadScalarFieldEnum], {nullable:true})
    distinct?: Array<`${CampusChatMessagePayloadScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstCampusChatMessagePayloadArgs {
    @Field(() => CampusChatMessagePayloadWhereInput, {nullable:true})
    @Type(() => CampusChatMessagePayloadWhereInput)
    where?: InstanceType<typeof CampusChatMessagePayloadWhereInput>;
    @Field(() => [CampusChatMessagePayloadOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<CampusChatMessagePayloadOrderByWithRelationInput>;
    @Field(() => CampusChatMessagePayloadWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<CampusChatMessagePayloadWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [CampusChatMessagePayloadScalarFieldEnum], {nullable:true})
    distinct?: Array<`${CampusChatMessagePayloadScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyCampusChatMessagePayloadArgs {
    @Field(() => CampusChatMessagePayloadWhereInput, {nullable:true})
    @Type(() => CampusChatMessagePayloadWhereInput)
    where?: InstanceType<typeof CampusChatMessagePayloadWhereInput>;
    @Field(() => [CampusChatMessagePayloadOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<CampusChatMessagePayloadOrderByWithRelationInput>;
    @Field(() => CampusChatMessagePayloadWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<CampusChatMessagePayloadWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [CampusChatMessagePayloadScalarFieldEnum], {nullable:true})
    distinct?: Array<`${CampusChatMessagePayloadScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniqueCampusChatMessagePayloadOrThrowArgs {
    @Field(() => CampusChatMessagePayloadWhereUniqueInput, {nullable:false})
    @Type(() => CampusChatMessagePayloadWhereUniqueInput)
    where!: Prisma.AtLeast<CampusChatMessagePayloadWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindUniqueCampusChatMessagePayloadArgs {
    @Field(() => CampusChatMessagePayloadWhereUniqueInput, {nullable:false})
    @Type(() => CampusChatMessagePayloadWhereUniqueInput)
    where!: Prisma.AtLeast<CampusChatMessagePayloadWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpdateManyCampusChatMessagePayloadArgs {
    @Field(() => CampusChatMessagePayloadUpdateManyMutationInput, {nullable:false})
    @Type(() => CampusChatMessagePayloadUpdateManyMutationInput)
    data!: InstanceType<typeof CampusChatMessagePayloadUpdateManyMutationInput>;
    @Field(() => CampusChatMessagePayloadWhereInput, {nullable:true})
    @Type(() => CampusChatMessagePayloadWhereInput)
    where?: InstanceType<typeof CampusChatMessagePayloadWhereInput>;
}

@ArgsType()
export class UpdateOneCampusChatMessagePayloadArgs {
    @Field(() => CampusChatMessagePayloadUpdateInput, {nullable:false})
    @Type(() => CampusChatMessagePayloadUpdateInput)
    data!: InstanceType<typeof CampusChatMessagePayloadUpdateInput>;
    @Field(() => CampusChatMessagePayloadWhereUniqueInput, {nullable:false})
    @Type(() => CampusChatMessagePayloadWhereUniqueInput)
    where!: Prisma.AtLeast<CampusChatMessagePayloadWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpsertOneCampusChatMessagePayloadArgs {
    @Field(() => CampusChatMessagePayloadWhereUniqueInput, {nullable:false})
    @Type(() => CampusChatMessagePayloadWhereUniqueInput)
    where!: Prisma.AtLeast<CampusChatMessagePayloadWhereUniqueInput, 'id'>;
    @Field(() => CampusChatMessagePayloadCreateInput, {nullable:false})
    @Type(() => CampusChatMessagePayloadCreateInput)
    create!: InstanceType<typeof CampusChatMessagePayloadCreateInput>;
    @Field(() => CampusChatMessagePayloadUpdateInput, {nullable:false})
    @Type(() => CampusChatMessagePayloadUpdateInput)
    update!: InstanceType<typeof CampusChatMessagePayloadUpdateInput>;
}

@InputType()
export class CampusChatReactionCreateInput {
    @Field(() => ReactionType, {nullable:false})
    type!: `${ReactionType}`;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => Date, {nullable:false})
    createdAt!: Date | string;
}

@InputType()
export class CampusChatReactionOrderByCompositeAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    _count?: `${SortOrder}`;
}

@InputType()
export class CampusChatReactionUpdateManyInput {
    @Field(() => CampusChatReactionWhereInput, {nullable:false})
    @Type(() => CampusChatReactionWhereInput)
    where!: InstanceType<typeof CampusChatReactionWhereInput>;
    @Field(() => CampusChatReactionUpdateInput, {nullable:false})
    @Type(() => CampusChatReactionUpdateInput)
    data!: InstanceType<typeof CampusChatReactionUpdateInput>;
}

@InputType()
export class CampusChatReactionUpdateInput {
    @Field(() => EnumReactionTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumReactionTypeFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class CampusChatReactionWhereInput {
    @Field(() => [CampusChatReactionWhereInput], {nullable:true})
    AND?: Array<CampusChatReactionWhereInput>;
    @Field(() => [CampusChatReactionWhereInput], {nullable:true})
    OR?: Array<CampusChatReactionWhereInput>;
    @Field(() => [CampusChatReactionWhereInput], {nullable:true})
    NOT?: Array<CampusChatReactionWhereInput>;
    @Field(() => EnumReactionTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumReactionTypeFilter>;
    @Field(() => StringFilter, {nullable:true})
    userId?: InstanceType<typeof StringFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
}

@ObjectType()
export class CampusChatReaction {
    @Field(() => ReactionType, {nullable:false})
    type!: `${ReactionType}`;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
}

@InputType()
export class CampusChatReplyNotficationPayloadCreateEnvelopeInput {
    @Field(() => CampusChatReplyNotficationPayloadCreateInput, {nullable:true})
    @Type(() => CampusChatReplyNotficationPayloadCreateInput)
    set?: InstanceType<typeof CampusChatReplyNotficationPayloadCreateInput>;
}

@InputType()
export class CampusChatReplyNotficationPayloadCreateInput {
    @Field(() => String, {nullable:false})
    messageId!: string;
    @Field(() => String, {nullable:false})
    commentId!: string;
    @Field(() => String, {nullable:false})
    commentedBy!: string;
    @Field(() => String, {nullable:false})
    commentExcerpt!: string;
}

@InputType()
export class CampusChatReplyNotficationPayloadOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    messageId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    commentId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    commentedBy?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    commentExcerpt?: `${SortOrder}`;
}

@InputType()
export class CampusChatReplyNotficationPayloadUpdateEnvelopeInput {
    @Field(() => CampusChatReplyNotficationPayloadCreateInput, {nullable:true})
    @Type(() => CampusChatReplyNotficationPayloadCreateInput)
    set?: InstanceType<typeof CampusChatReplyNotficationPayloadCreateInput>;
    @Field(() => CampusChatReplyNotficationPayloadUpdateInput, {nullable:true})
    @Type(() => CampusChatReplyNotficationPayloadUpdateInput)
    update?: InstanceType<typeof CampusChatReplyNotficationPayloadUpdateInput>;
}

@InputType()
export class CampusChatReplyNotficationPayloadUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    messageId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    commentId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    commentedBy?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    commentExcerpt?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}

@InputType()
export class CampusChatReplyNotficationPayloadWhereInput {
    @Field(() => [CampusChatReplyNotficationPayloadWhereInput], {nullable:true})
    AND?: Array<CampusChatReplyNotficationPayloadWhereInput>;
    @Field(() => [CampusChatReplyNotficationPayloadWhereInput], {nullable:true})
    OR?: Array<CampusChatReplyNotficationPayloadWhereInput>;
    @Field(() => [CampusChatReplyNotficationPayloadWhereInput], {nullable:true})
    NOT?: Array<CampusChatReplyNotficationPayloadWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    messageId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    commentId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    commentedBy?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    commentExcerpt?: InstanceType<typeof StringFilter>;
}

@ObjectType()
export class CampusChatReplyNotficationPayload {
    @Field(() => String, {nullable:false})
    messageId!: string;
    @Field(() => String, {nullable:false})
    commentId!: string;
    @Field(() => String, {nullable:false})
    commentedBy!: string;
    @Field(() => String, {nullable:false})
    commentExcerpt!: string;
}

@ArgsType()
export class CampusChatReportAggregateArgs {
    @Field(() => CampusChatReportWhereInput, {nullable:true})
    @Type(() => CampusChatReportWhereInput)
    where?: InstanceType<typeof CampusChatReportWhereInput>;
    @Field(() => [CampusChatReportOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<CampusChatReportOrderByWithRelationInput>;
    @Field(() => CampusChatReportWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<CampusChatReportWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class CampusChatReportCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    messageId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    commentId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    reporterId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    reason?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    details?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class CampusChatReportCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    messageId!: string;
    @Field(() => String, {nullable:true})
    commentId?: string;
    @Field(() => String, {nullable:false})
    reporterId!: string;
    @Field(() => CampusChatReportReason, {nullable:false})
    reason!: `${CampusChatReportReason}`;
    @Field(() => String, {nullable:true})
    details?: string;
    @Field(() => CampusChatReportStatusCreateEnvelopeInput, {nullable:false})
    status!: InstanceType<typeof CampusChatReportStatusCreateEnvelopeInput>;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class CampusChatReportCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    messageId!: string;
    @Field(() => String, {nullable:true})
    commentId?: string;
    @Field(() => String, {nullable:false})
    reporterId!: string;
    @Field(() => CampusChatReportReason, {nullable:false})
    reason!: `${CampusChatReportReason}`;
    @Field(() => String, {nullable:true})
    details?: string;
    @Field(() => CampusChatReportStatusCreateEnvelopeInput, {nullable:false})
    status!: InstanceType<typeof CampusChatReportStatusCreateEnvelopeInput>;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@ArgsType()
export class CampusChatReportGroupByArgs {
    @Field(() => CampusChatReportWhereInput, {nullable:true})
    @Type(() => CampusChatReportWhereInput)
    where?: InstanceType<typeof CampusChatReportWhereInput>;
    @Field(() => [CampusChatReportOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<CampusChatReportOrderByWithAggregationInput>;
    @Field(() => [CampusChatReportScalarFieldEnum], {nullable:false})
    by!: Array<`${CampusChatReportScalarFieldEnum}`>;
    @Field(() => CampusChatReportScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof CampusChatReportScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class CampusChatReportMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    messageId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    commentId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    reporterId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    reason?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    details?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class CampusChatReportMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    messageId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    commentId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    reporterId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    reason?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    details?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class CampusChatReportOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    messageId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    commentId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    reporterId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    reason?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    details?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => CampusChatReportCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof CampusChatReportCountOrderByAggregateInput>;
    @Field(() => CampusChatReportMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof CampusChatReportMaxOrderByAggregateInput>;
    @Field(() => CampusChatReportMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof CampusChatReportMinOrderByAggregateInput>;
}

@InputType()
export class CampusChatReportOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    messageId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    commentId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    reporterId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    reason?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    details?: `${SortOrder}`;
    @Field(() => CampusChatReportStatusOrderByInput, {nullable:true})
    status?: InstanceType<typeof CampusChatReportStatusOrderByInput>;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class CampusChatReportScalarWhereWithAggregatesInput {
    @Field(() => [CampusChatReportScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<CampusChatReportScalarWhereWithAggregatesInput>;
    @Field(() => [CampusChatReportScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<CampusChatReportScalarWhereWithAggregatesInput>;
    @Field(() => [CampusChatReportScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<CampusChatReportScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    messageId?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    commentId?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    reporterId?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => EnumCampusChatReportReasonWithAggregatesFilter, {nullable:true})
    reason?: InstanceType<typeof EnumCampusChatReportReasonWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    details?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
}

@InputType()
export class CampusChatReportUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    messageId!: string;
    @Field(() => String, {nullable:true})
    commentId?: string;
    @Field(() => String, {nullable:false})
    reporterId!: string;
    @Field(() => CampusChatReportReason, {nullable:false})
    reason!: `${CampusChatReportReason}`;
    @Field(() => String, {nullable:true})
    details?: string;
    @Field(() => CampusChatReportStatusCreateEnvelopeInput, {nullable:false})
    status!: InstanceType<typeof CampusChatReportStatusCreateEnvelopeInput>;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class CampusChatReportUncheckedUpdateManyInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    messageId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    commentId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    reporterId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumCampusChatReportReasonFieldUpdateOperationsInput, {nullable:true})
    reason?: InstanceType<typeof EnumCampusChatReportReasonFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    details?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => CampusChatReportStatusUpdateEnvelopeInput, {nullable:true})
    status?: InstanceType<typeof CampusChatReportStatusUpdateEnvelopeInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class CampusChatReportUncheckedUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    messageId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    commentId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    reporterId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumCampusChatReportReasonFieldUpdateOperationsInput, {nullable:true})
    reason?: InstanceType<typeof EnumCampusChatReportReasonFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    details?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => CampusChatReportStatusUpdateEnvelopeInput, {nullable:true})
    status?: InstanceType<typeof CampusChatReportStatusUpdateEnvelopeInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class CampusChatReportUpdateManyMutationInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    messageId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    commentId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    reporterId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumCampusChatReportReasonFieldUpdateOperationsInput, {nullable:true})
    reason?: InstanceType<typeof EnumCampusChatReportReasonFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    details?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => CampusChatReportStatusUpdateEnvelopeInput, {nullable:true})
    status?: InstanceType<typeof CampusChatReportStatusUpdateEnvelopeInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class CampusChatReportUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    messageId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    commentId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    reporterId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumCampusChatReportReasonFieldUpdateOperationsInput, {nullable:true})
    reason?: InstanceType<typeof EnumCampusChatReportReasonFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    details?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => CampusChatReportStatusUpdateEnvelopeInput, {nullable:true})
    status?: InstanceType<typeof CampusChatReportStatusUpdateEnvelopeInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class CampusChatReportWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => [CampusChatReportWhereInput], {nullable:true})
    AND?: Array<CampusChatReportWhereInput>;
    @Field(() => [CampusChatReportWhereInput], {nullable:true})
    OR?: Array<CampusChatReportWhereInput>;
    @Field(() => [CampusChatReportWhereInput], {nullable:true})
    NOT?: Array<CampusChatReportWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    messageId?: InstanceType<typeof StringFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    commentId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringFilter, {nullable:true})
    reporterId?: InstanceType<typeof StringFilter>;
    @Field(() => EnumCampusChatReportReasonFilter, {nullable:true})
    reason?: InstanceType<typeof EnumCampusChatReportReasonFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    details?: InstanceType<typeof StringNullableFilter>;
    @Field(() => CampusChatReportStatusCompositeFilter, {nullable:true})
    status?: InstanceType<typeof CampusChatReportStatusCompositeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@InputType()
export class CampusChatReportWhereInput {
    @Field(() => [CampusChatReportWhereInput], {nullable:true})
    AND?: Array<CampusChatReportWhereInput>;
    @Field(() => [CampusChatReportWhereInput], {nullable:true})
    OR?: Array<CampusChatReportWhereInput>;
    @Field(() => [CampusChatReportWhereInput], {nullable:true})
    NOT?: Array<CampusChatReportWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    messageId?: InstanceType<typeof StringFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    commentId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringFilter, {nullable:true})
    reporterId?: InstanceType<typeof StringFilter>;
    @Field(() => EnumCampusChatReportReasonFilter, {nullable:true})
    reason?: InstanceType<typeof EnumCampusChatReportReasonFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    details?: InstanceType<typeof StringNullableFilter>;
    @Field(() => CampusChatReportStatusCompositeFilter, {nullable:true})
    status?: InstanceType<typeof CampusChatReportStatusCompositeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@ObjectType()
export class CampusChatReport {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    messageId!: string;
    @Field(() => String, {nullable:true})
    commentId!: string | null;
    @Field(() => String, {nullable:false})
    reporterId!: string;
    @Field(() => CampusChatReportReason, {nullable:false})
    reason!: `${CampusChatReportReason}`;
    @Field(() => String, {nullable:true})
    details!: string | null;
    @Field(() => CampusChatReportStatus, {nullable:false})
    status?: InstanceType<typeof CampusChatReportStatus>;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
    @Field(() => Date, {nullable:false})
    updatedAt!: Date;
}

@ArgsType()
export class CreateManyCampusChatReportArgs {
    @Field(() => [CampusChatReportCreateManyInput], {nullable:false})
    @Type(() => CampusChatReportCreateManyInput)
    data!: Array<CampusChatReportCreateManyInput>;
}

@ArgsType()
export class CreateOneCampusChatReportArgs {
    @Field(() => CampusChatReportCreateInput, {nullable:false})
    @Type(() => CampusChatReportCreateInput)
    data!: InstanceType<typeof CampusChatReportCreateInput>;
}

@ArgsType()
export class DeleteManyCampusChatReportArgs {
    @Field(() => CampusChatReportWhereInput, {nullable:true})
    @Type(() => CampusChatReportWhereInput)
    where?: InstanceType<typeof CampusChatReportWhereInput>;
}

@ArgsType()
export class DeleteOneCampusChatReportArgs {
    @Field(() => CampusChatReportWhereUniqueInput, {nullable:false})
    @Type(() => CampusChatReportWhereUniqueInput)
    where!: Prisma.AtLeast<CampusChatReportWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindFirstCampusChatReportOrThrowArgs {
    @Field(() => CampusChatReportWhereInput, {nullable:true})
    @Type(() => CampusChatReportWhereInput)
    where?: InstanceType<typeof CampusChatReportWhereInput>;
    @Field(() => [CampusChatReportOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<CampusChatReportOrderByWithRelationInput>;
    @Field(() => CampusChatReportWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<CampusChatReportWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [CampusChatReportScalarFieldEnum], {nullable:true})
    distinct?: Array<`${CampusChatReportScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstCampusChatReportArgs {
    @Field(() => CampusChatReportWhereInput, {nullable:true})
    @Type(() => CampusChatReportWhereInput)
    where?: InstanceType<typeof CampusChatReportWhereInput>;
    @Field(() => [CampusChatReportOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<CampusChatReportOrderByWithRelationInput>;
    @Field(() => CampusChatReportWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<CampusChatReportWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [CampusChatReportScalarFieldEnum], {nullable:true})
    distinct?: Array<`${CampusChatReportScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyCampusChatReportArgs {
    @Field(() => CampusChatReportWhereInput, {nullable:true})
    @Type(() => CampusChatReportWhereInput)
    where?: InstanceType<typeof CampusChatReportWhereInput>;
    @Field(() => [CampusChatReportOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<CampusChatReportOrderByWithRelationInput>;
    @Field(() => CampusChatReportWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<CampusChatReportWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [CampusChatReportScalarFieldEnum], {nullable:true})
    distinct?: Array<`${CampusChatReportScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniqueCampusChatReportOrThrowArgs {
    @Field(() => CampusChatReportWhereUniqueInput, {nullable:false})
    @Type(() => CampusChatReportWhereUniqueInput)
    where!: Prisma.AtLeast<CampusChatReportWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindUniqueCampusChatReportArgs {
    @Field(() => CampusChatReportWhereUniqueInput, {nullable:false})
    @Type(() => CampusChatReportWhereUniqueInput)
    where!: Prisma.AtLeast<CampusChatReportWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpdateManyCampusChatReportArgs {
    @Field(() => CampusChatReportUpdateManyMutationInput, {nullable:false})
    @Type(() => CampusChatReportUpdateManyMutationInput)
    data!: InstanceType<typeof CampusChatReportUpdateManyMutationInput>;
    @Field(() => CampusChatReportWhereInput, {nullable:true})
    @Type(() => CampusChatReportWhereInput)
    where?: InstanceType<typeof CampusChatReportWhereInput>;
}

@ArgsType()
export class UpdateOneCampusChatReportArgs {
    @Field(() => CampusChatReportUpdateInput, {nullable:false})
    @Type(() => CampusChatReportUpdateInput)
    data!: InstanceType<typeof CampusChatReportUpdateInput>;
    @Field(() => CampusChatReportWhereUniqueInput, {nullable:false})
    @Type(() => CampusChatReportWhereUniqueInput)
    where!: Prisma.AtLeast<CampusChatReportWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpsertOneCampusChatReportArgs {
    @Field(() => CampusChatReportWhereUniqueInput, {nullable:false})
    @Type(() => CampusChatReportWhereUniqueInput)
    where!: Prisma.AtLeast<CampusChatReportWhereUniqueInput, 'id'>;
    @Field(() => CampusChatReportCreateInput, {nullable:false})
    @Type(() => CampusChatReportCreateInput)
    create!: InstanceType<typeof CampusChatReportCreateInput>;
    @Field(() => CampusChatReportUpdateInput, {nullable:false})
    @Type(() => CampusChatReportUpdateInput)
    update!: InstanceType<typeof CampusChatReportUpdateInput>;
}

@InputType()
export class CampusChatReportStatusCreateEnvelopeInput {
    @Field(() => CampusChatReportStatusCreateInput, {nullable:true})
    @Type(() => CampusChatReportStatusCreateInput)
    set?: InstanceType<typeof CampusChatReportStatusCreateInput>;
}

@InputType()
export class CampusChatReportStatusCreateInput {
    @Field(() => Boolean, {nullable:true})
    reviewed?: boolean;
    @Field(() => Date, {nullable:true})
    reviewedAt?: Date | string;
    @Field(() => String, {nullable:true})
    reviewedBy?: string;
    @Field(() => CampusChatReportAction, {nullable:true})
    action?: `${CampusChatReportAction}`;
}

@InputType()
export class CampusChatReportStatusOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    reviewed?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    reviewedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    reviewedBy?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    action?: `${SortOrder}`;
}

@InputType()
export class CampusChatReportStatusUpdateEnvelopeInput {
    @Field(() => CampusChatReportStatusCreateInput, {nullable:true})
    @Type(() => CampusChatReportStatusCreateInput)
    set?: InstanceType<typeof CampusChatReportStatusCreateInput>;
    @Field(() => CampusChatReportStatusUpdateInput, {nullable:true})
    @Type(() => CampusChatReportStatusUpdateInput)
    update?: InstanceType<typeof CampusChatReportStatusUpdateInput>;
}

@InputType()
export class CampusChatReportStatusUpdateInput {
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    reviewed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableDateTimeFieldUpdateOperationsInput, {nullable:true})
    reviewedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    reviewedBy?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableEnumCampusChatReportActionFieldUpdateOperationsInput, {nullable:true})
    action?: InstanceType<typeof NullableEnumCampusChatReportActionFieldUpdateOperationsInput>;
}

@InputType()
export class CampusChatReportStatusWhereInput {
    @Field(() => [CampusChatReportStatusWhereInput], {nullable:true})
    AND?: Array<CampusChatReportStatusWhereInput>;
    @Field(() => [CampusChatReportStatusWhereInput], {nullable:true})
    OR?: Array<CampusChatReportStatusWhereInput>;
    @Field(() => [CampusChatReportStatusWhereInput], {nullable:true})
    NOT?: Array<CampusChatReportStatusWhereInput>;
    @Field(() => BoolFilter, {nullable:true})
    reviewed?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeNullableFilter, {nullable:true})
    reviewedAt?: InstanceType<typeof DateTimeNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    reviewedBy?: InstanceType<typeof StringNullableFilter>;
    @Field(() => EnumCampusChatReportActionNullableFilter, {nullable:true})
    action?: InstanceType<typeof EnumCampusChatReportActionNullableFilter>;
}

@ObjectType()
export class CampusChatReportStatus {
    @Field(() => Boolean, {defaultValue:false,nullable:false})
    reviewed!: boolean;
    @Field(() => Date, {nullable:true})
    reviewedAt!: Date | null;
    @Field(() => String, {nullable:true})
    reviewedBy!: string | null;
    @Field(() => CampusChatReportAction, {nullable:true})
    action!: `${CampusChatReportAction}` | null;
}

@ArgsType()
export class ChatBubblesAggregateArgs {
    @Field(() => ChatBubblesWhereInput, {nullable:true})
    @Type(() => ChatBubblesWhereInput)
    where?: InstanceType<typeof ChatBubblesWhereInput>;
    @Field(() => [ChatBubblesOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<ChatBubblesOrderByWithRelationInput>;
    @Field(() => ChatBubblesWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<ChatBubblesWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class ChatBubblesCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
}

@InputType()
export class ChatBubblesCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => ProductBubbleCreateEnvelopeInput, {nullable:false})
    productBubble!: InstanceType<typeof ProductBubbleCreateEnvelopeInput>;
    @Field(() => DealMeetupOfferBubbleCreateEnvelopeInput, {nullable:false})
    dealMeetupOfferBubble!: InstanceType<typeof DealMeetupOfferBubbleCreateEnvelopeInput>;
    @Field(() => DealOfferBubbleCreateEnvelopeInput, {nullable:false})
    dealOfferBubble!: InstanceType<typeof DealOfferBubbleCreateEnvelopeInput>;
    @Field(() => CounterSellerOfferBubbleCreateEnvelopeInput, {nullable:false})
    counterSellerOfferBubble!: InstanceType<typeof CounterSellerOfferBubbleCreateEnvelopeInput>;
    @Field(() => RentOfferBubbleCreateEnvelopeInput, {nullable:false})
    rentOfferBubble!: InstanceType<typeof RentOfferBubbleCreateEnvelopeInput>;
    @Field(() => InfoSystemMessageCreateEnvelopeInput, {nullable:false})
    infoSystemMessage!: InstanceType<typeof InfoSystemMessageCreateEnvelopeInput>;
    @Field(() => PaymentConfirmationSystemMessageCreateEnvelopeInput, {nullable:false})
    paymentConfirationSystemMessage!: InstanceType<typeof PaymentConfirmationSystemMessageCreateEnvelopeInput>;
    @Field(() => OrderUpdateSystemMessageCreateEnvelopeInput, {nullable:false})
    orderUpdateSystemMessage!: InstanceType<typeof OrderUpdateSystemMessageCreateEnvelopeInput>;
    @Field(() => PaymentLinkMessageCreateEnvelopeInput, {nullable:false})
    paymentLinkMessage!: InstanceType<typeof PaymentLinkMessageCreateEnvelopeInput>;
    @Field(() => PaymentLinkUpdateMessageCreateEnvelopeInput, {nullable:false})
    paymentLinkUpdateMessage!: InstanceType<typeof PaymentLinkUpdateMessageCreateEnvelopeInput>;
    @Field(() => LocalOrderUpdateMessageCreateEnvelopeInput, {nullable:false})
    localOrderUpdateMessage!: InstanceType<typeof LocalOrderUpdateMessageCreateEnvelopeInput>;
    @Field(() => LocalOrderHandedOverMessageCreateEnvelopeInput, {nullable:false})
    localOrderHandedOverMessage!: InstanceType<typeof LocalOrderHandedOverMessageCreateEnvelopeInput>;
}

@InputType()
export class ChatBubblesCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => ProductBubbleCreateEnvelopeInput, {nullable:false})
    productBubble!: InstanceType<typeof ProductBubbleCreateEnvelopeInput>;
    @Field(() => DealMeetupOfferBubbleCreateEnvelopeInput, {nullable:false})
    dealMeetupOfferBubble!: InstanceType<typeof DealMeetupOfferBubbleCreateEnvelopeInput>;
    @Field(() => DealOfferBubbleCreateEnvelopeInput, {nullable:false})
    dealOfferBubble!: InstanceType<typeof DealOfferBubbleCreateEnvelopeInput>;
    @Field(() => CounterSellerOfferBubbleCreateEnvelopeInput, {nullable:false})
    counterSellerOfferBubble!: InstanceType<typeof CounterSellerOfferBubbleCreateEnvelopeInput>;
    @Field(() => RentOfferBubbleCreateEnvelopeInput, {nullable:false})
    rentOfferBubble!: InstanceType<typeof RentOfferBubbleCreateEnvelopeInput>;
    @Field(() => InfoSystemMessageCreateEnvelopeInput, {nullable:false})
    infoSystemMessage!: InstanceType<typeof InfoSystemMessageCreateEnvelopeInput>;
    @Field(() => PaymentConfirmationSystemMessageCreateEnvelopeInput, {nullable:false})
    paymentConfirationSystemMessage!: InstanceType<typeof PaymentConfirmationSystemMessageCreateEnvelopeInput>;
    @Field(() => OrderUpdateSystemMessageCreateEnvelopeInput, {nullable:false})
    orderUpdateSystemMessage!: InstanceType<typeof OrderUpdateSystemMessageCreateEnvelopeInput>;
    @Field(() => PaymentLinkMessageCreateEnvelopeInput, {nullable:false})
    paymentLinkMessage!: InstanceType<typeof PaymentLinkMessageCreateEnvelopeInput>;
    @Field(() => PaymentLinkUpdateMessageCreateEnvelopeInput, {nullable:false})
    paymentLinkUpdateMessage!: InstanceType<typeof PaymentLinkUpdateMessageCreateEnvelopeInput>;
    @Field(() => LocalOrderUpdateMessageCreateEnvelopeInput, {nullable:false})
    localOrderUpdateMessage!: InstanceType<typeof LocalOrderUpdateMessageCreateEnvelopeInput>;
    @Field(() => LocalOrderHandedOverMessageCreateEnvelopeInput, {nullable:false})
    localOrderHandedOverMessage!: InstanceType<typeof LocalOrderHandedOverMessageCreateEnvelopeInput>;
}

@ArgsType()
export class ChatBubblesGroupByArgs {
    @Field(() => ChatBubblesWhereInput, {nullable:true})
    @Type(() => ChatBubblesWhereInput)
    where?: InstanceType<typeof ChatBubblesWhereInput>;
    @Field(() => [ChatBubblesOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<ChatBubblesOrderByWithAggregationInput>;
    @Field(() => [ChatBubblesScalarFieldEnum], {nullable:false})
    by!: Array<`${ChatBubblesScalarFieldEnum}`>;
    @Field(() => ChatBubblesScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof ChatBubblesScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class ChatBubblesMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
}

@InputType()
export class ChatBubblesMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
}

@InputType()
export class ChatBubblesOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => ChatBubblesCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof ChatBubblesCountOrderByAggregateInput>;
    @Field(() => ChatBubblesMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof ChatBubblesMaxOrderByAggregateInput>;
    @Field(() => ChatBubblesMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof ChatBubblesMinOrderByAggregateInput>;
}

@InputType()
export class ChatBubblesOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => ProductBubbleOrderByInput, {nullable:true})
    productBubble?: InstanceType<typeof ProductBubbleOrderByInput>;
    @Field(() => DealMeetupOfferBubbleOrderByInput, {nullable:true})
    dealMeetupOfferBubble?: InstanceType<typeof DealMeetupOfferBubbleOrderByInput>;
    @Field(() => DealOfferBubbleOrderByInput, {nullable:true})
    dealOfferBubble?: InstanceType<typeof DealOfferBubbleOrderByInput>;
    @Field(() => CounterSellerOfferBubbleOrderByInput, {nullable:true})
    counterSellerOfferBubble?: InstanceType<typeof CounterSellerOfferBubbleOrderByInput>;
    @Field(() => RentOfferBubbleOrderByInput, {nullable:true})
    rentOfferBubble?: InstanceType<typeof RentOfferBubbleOrderByInput>;
    @Field(() => InfoSystemMessageOrderByInput, {nullable:true})
    infoSystemMessage?: InstanceType<typeof InfoSystemMessageOrderByInput>;
    @Field(() => PaymentConfirmationSystemMessageOrderByInput, {nullable:true})
    paymentConfirationSystemMessage?: InstanceType<typeof PaymentConfirmationSystemMessageOrderByInput>;
    @Field(() => OrderUpdateSystemMessageOrderByInput, {nullable:true})
    orderUpdateSystemMessage?: InstanceType<typeof OrderUpdateSystemMessageOrderByInput>;
    @Field(() => PaymentLinkMessageOrderByInput, {nullable:true})
    paymentLinkMessage?: InstanceType<typeof PaymentLinkMessageOrderByInput>;
    @Field(() => PaymentLinkUpdateMessageOrderByInput, {nullable:true})
    paymentLinkUpdateMessage?: InstanceType<typeof PaymentLinkUpdateMessageOrderByInput>;
    @Field(() => LocalOrderUpdateMessageOrderByInput, {nullable:true})
    localOrderUpdateMessage?: InstanceType<typeof LocalOrderUpdateMessageOrderByInput>;
    @Field(() => LocalOrderHandedOverMessageOrderByInput, {nullable:true})
    localOrderHandedOverMessage?: InstanceType<typeof LocalOrderHandedOverMessageOrderByInput>;
}

@InputType()
export class ChatBubblesScalarWhereWithAggregatesInput {
    @Field(() => [ChatBubblesScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<ChatBubblesScalarWhereWithAggregatesInput>;
    @Field(() => [ChatBubblesScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<ChatBubblesScalarWhereWithAggregatesInput>;
    @Field(() => [ChatBubblesScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<ChatBubblesScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
}

@InputType()
export class ChatBubblesUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => ProductBubbleCreateEnvelopeInput, {nullable:false})
    productBubble!: InstanceType<typeof ProductBubbleCreateEnvelopeInput>;
    @Field(() => DealMeetupOfferBubbleCreateEnvelopeInput, {nullable:false})
    dealMeetupOfferBubble!: InstanceType<typeof DealMeetupOfferBubbleCreateEnvelopeInput>;
    @Field(() => DealOfferBubbleCreateEnvelopeInput, {nullable:false})
    dealOfferBubble!: InstanceType<typeof DealOfferBubbleCreateEnvelopeInput>;
    @Field(() => CounterSellerOfferBubbleCreateEnvelopeInput, {nullable:false})
    counterSellerOfferBubble!: InstanceType<typeof CounterSellerOfferBubbleCreateEnvelopeInput>;
    @Field(() => RentOfferBubbleCreateEnvelopeInput, {nullable:false})
    rentOfferBubble!: InstanceType<typeof RentOfferBubbleCreateEnvelopeInput>;
    @Field(() => InfoSystemMessageCreateEnvelopeInput, {nullable:false})
    infoSystemMessage!: InstanceType<typeof InfoSystemMessageCreateEnvelopeInput>;
    @Field(() => PaymentConfirmationSystemMessageCreateEnvelopeInput, {nullable:false})
    paymentConfirationSystemMessage!: InstanceType<typeof PaymentConfirmationSystemMessageCreateEnvelopeInput>;
    @Field(() => OrderUpdateSystemMessageCreateEnvelopeInput, {nullable:false})
    orderUpdateSystemMessage!: InstanceType<typeof OrderUpdateSystemMessageCreateEnvelopeInput>;
    @Field(() => PaymentLinkMessageCreateEnvelopeInput, {nullable:false})
    paymentLinkMessage!: InstanceType<typeof PaymentLinkMessageCreateEnvelopeInput>;
    @Field(() => PaymentLinkUpdateMessageCreateEnvelopeInput, {nullable:false})
    paymentLinkUpdateMessage!: InstanceType<typeof PaymentLinkUpdateMessageCreateEnvelopeInput>;
    @Field(() => LocalOrderUpdateMessageCreateEnvelopeInput, {nullable:false})
    localOrderUpdateMessage!: InstanceType<typeof LocalOrderUpdateMessageCreateEnvelopeInput>;
    @Field(() => LocalOrderHandedOverMessageCreateEnvelopeInput, {nullable:false})
    localOrderHandedOverMessage!: InstanceType<typeof LocalOrderHandedOverMessageCreateEnvelopeInput>;
}

@InputType()
export class ChatBubblesUncheckedUpdateManyInput {
    @Field(() => ProductBubbleUpdateEnvelopeInput, {nullable:true})
    productBubble?: InstanceType<typeof ProductBubbleUpdateEnvelopeInput>;
    @Field(() => DealMeetupOfferBubbleUpdateEnvelopeInput, {nullable:true})
    dealMeetupOfferBubble?: InstanceType<typeof DealMeetupOfferBubbleUpdateEnvelopeInput>;
    @Field(() => DealOfferBubbleUpdateEnvelopeInput, {nullable:true})
    dealOfferBubble?: InstanceType<typeof DealOfferBubbleUpdateEnvelopeInput>;
    @Field(() => CounterSellerOfferBubbleUpdateEnvelopeInput, {nullable:true})
    counterSellerOfferBubble?: InstanceType<typeof CounterSellerOfferBubbleUpdateEnvelopeInput>;
    @Field(() => RentOfferBubbleUpdateEnvelopeInput, {nullable:true})
    rentOfferBubble?: InstanceType<typeof RentOfferBubbleUpdateEnvelopeInput>;
    @Field(() => InfoSystemMessageUpdateEnvelopeInput, {nullable:true})
    infoSystemMessage?: InstanceType<typeof InfoSystemMessageUpdateEnvelopeInput>;
    @Field(() => PaymentConfirmationSystemMessageUpdateEnvelopeInput, {nullable:true})
    paymentConfirationSystemMessage?: InstanceType<typeof PaymentConfirmationSystemMessageUpdateEnvelopeInput>;
    @Field(() => OrderUpdateSystemMessageUpdateEnvelopeInput, {nullable:true})
    orderUpdateSystemMessage?: InstanceType<typeof OrderUpdateSystemMessageUpdateEnvelopeInput>;
    @Field(() => PaymentLinkMessageUpdateEnvelopeInput, {nullable:true})
    paymentLinkMessage?: InstanceType<typeof PaymentLinkMessageUpdateEnvelopeInput>;
    @Field(() => PaymentLinkUpdateMessageUpdateEnvelopeInput, {nullable:true})
    paymentLinkUpdateMessage?: InstanceType<typeof PaymentLinkUpdateMessageUpdateEnvelopeInput>;
    @Field(() => LocalOrderUpdateMessageUpdateEnvelopeInput, {nullable:true})
    localOrderUpdateMessage?: InstanceType<typeof LocalOrderUpdateMessageUpdateEnvelopeInput>;
    @Field(() => LocalOrderHandedOverMessageUpdateEnvelopeInput, {nullable:true})
    localOrderHandedOverMessage?: InstanceType<typeof LocalOrderHandedOverMessageUpdateEnvelopeInput>;
}

@InputType()
export class ChatBubblesUncheckedUpdateInput {
    @Field(() => ProductBubbleUpdateEnvelopeInput, {nullable:true})
    productBubble?: InstanceType<typeof ProductBubbleUpdateEnvelopeInput>;
    @Field(() => DealMeetupOfferBubbleUpdateEnvelopeInput, {nullable:true})
    dealMeetupOfferBubble?: InstanceType<typeof DealMeetupOfferBubbleUpdateEnvelopeInput>;
    @Field(() => DealOfferBubbleUpdateEnvelopeInput, {nullable:true})
    dealOfferBubble?: InstanceType<typeof DealOfferBubbleUpdateEnvelopeInput>;
    @Field(() => CounterSellerOfferBubbleUpdateEnvelopeInput, {nullable:true})
    counterSellerOfferBubble?: InstanceType<typeof CounterSellerOfferBubbleUpdateEnvelopeInput>;
    @Field(() => RentOfferBubbleUpdateEnvelopeInput, {nullable:true})
    rentOfferBubble?: InstanceType<typeof RentOfferBubbleUpdateEnvelopeInput>;
    @Field(() => InfoSystemMessageUpdateEnvelopeInput, {nullable:true})
    infoSystemMessage?: InstanceType<typeof InfoSystemMessageUpdateEnvelopeInput>;
    @Field(() => PaymentConfirmationSystemMessageUpdateEnvelopeInput, {nullable:true})
    paymentConfirationSystemMessage?: InstanceType<typeof PaymentConfirmationSystemMessageUpdateEnvelopeInput>;
    @Field(() => OrderUpdateSystemMessageUpdateEnvelopeInput, {nullable:true})
    orderUpdateSystemMessage?: InstanceType<typeof OrderUpdateSystemMessageUpdateEnvelopeInput>;
    @Field(() => PaymentLinkMessageUpdateEnvelopeInput, {nullable:true})
    paymentLinkMessage?: InstanceType<typeof PaymentLinkMessageUpdateEnvelopeInput>;
    @Field(() => PaymentLinkUpdateMessageUpdateEnvelopeInput, {nullable:true})
    paymentLinkUpdateMessage?: InstanceType<typeof PaymentLinkUpdateMessageUpdateEnvelopeInput>;
    @Field(() => LocalOrderUpdateMessageUpdateEnvelopeInput, {nullable:true})
    localOrderUpdateMessage?: InstanceType<typeof LocalOrderUpdateMessageUpdateEnvelopeInput>;
    @Field(() => LocalOrderHandedOverMessageUpdateEnvelopeInput, {nullable:true})
    localOrderHandedOverMessage?: InstanceType<typeof LocalOrderHandedOverMessageUpdateEnvelopeInput>;
}

@InputType()
export class ChatBubblesUpdateManyMutationInput {
    @Field(() => ProductBubbleUpdateEnvelopeInput, {nullable:true})
    productBubble?: InstanceType<typeof ProductBubbleUpdateEnvelopeInput>;
    @Field(() => DealMeetupOfferBubbleUpdateEnvelopeInput, {nullable:true})
    dealMeetupOfferBubble?: InstanceType<typeof DealMeetupOfferBubbleUpdateEnvelopeInput>;
    @Field(() => DealOfferBubbleUpdateEnvelopeInput, {nullable:true})
    dealOfferBubble?: InstanceType<typeof DealOfferBubbleUpdateEnvelopeInput>;
    @Field(() => CounterSellerOfferBubbleUpdateEnvelopeInput, {nullable:true})
    counterSellerOfferBubble?: InstanceType<typeof CounterSellerOfferBubbleUpdateEnvelopeInput>;
    @Field(() => RentOfferBubbleUpdateEnvelopeInput, {nullable:true})
    rentOfferBubble?: InstanceType<typeof RentOfferBubbleUpdateEnvelopeInput>;
    @Field(() => InfoSystemMessageUpdateEnvelopeInput, {nullable:true})
    infoSystemMessage?: InstanceType<typeof InfoSystemMessageUpdateEnvelopeInput>;
    @Field(() => PaymentConfirmationSystemMessageUpdateEnvelopeInput, {nullable:true})
    paymentConfirationSystemMessage?: InstanceType<typeof PaymentConfirmationSystemMessageUpdateEnvelopeInput>;
    @Field(() => OrderUpdateSystemMessageUpdateEnvelopeInput, {nullable:true})
    orderUpdateSystemMessage?: InstanceType<typeof OrderUpdateSystemMessageUpdateEnvelopeInput>;
    @Field(() => PaymentLinkMessageUpdateEnvelopeInput, {nullable:true})
    paymentLinkMessage?: InstanceType<typeof PaymentLinkMessageUpdateEnvelopeInput>;
    @Field(() => PaymentLinkUpdateMessageUpdateEnvelopeInput, {nullable:true})
    paymentLinkUpdateMessage?: InstanceType<typeof PaymentLinkUpdateMessageUpdateEnvelopeInput>;
    @Field(() => LocalOrderUpdateMessageUpdateEnvelopeInput, {nullable:true})
    localOrderUpdateMessage?: InstanceType<typeof LocalOrderUpdateMessageUpdateEnvelopeInput>;
    @Field(() => LocalOrderHandedOverMessageUpdateEnvelopeInput, {nullable:true})
    localOrderHandedOverMessage?: InstanceType<typeof LocalOrderHandedOverMessageUpdateEnvelopeInput>;
}

@InputType()
export class ChatBubblesUpdateInput {
    @Field(() => ProductBubbleUpdateEnvelopeInput, {nullable:true})
    productBubble?: InstanceType<typeof ProductBubbleUpdateEnvelopeInput>;
    @Field(() => DealMeetupOfferBubbleUpdateEnvelopeInput, {nullable:true})
    dealMeetupOfferBubble?: InstanceType<typeof DealMeetupOfferBubbleUpdateEnvelopeInput>;
    @Field(() => DealOfferBubbleUpdateEnvelopeInput, {nullable:true})
    dealOfferBubble?: InstanceType<typeof DealOfferBubbleUpdateEnvelopeInput>;
    @Field(() => CounterSellerOfferBubbleUpdateEnvelopeInput, {nullable:true})
    counterSellerOfferBubble?: InstanceType<typeof CounterSellerOfferBubbleUpdateEnvelopeInput>;
    @Field(() => RentOfferBubbleUpdateEnvelopeInput, {nullable:true})
    rentOfferBubble?: InstanceType<typeof RentOfferBubbleUpdateEnvelopeInput>;
    @Field(() => InfoSystemMessageUpdateEnvelopeInput, {nullable:true})
    infoSystemMessage?: InstanceType<typeof InfoSystemMessageUpdateEnvelopeInput>;
    @Field(() => PaymentConfirmationSystemMessageUpdateEnvelopeInput, {nullable:true})
    paymentConfirationSystemMessage?: InstanceType<typeof PaymentConfirmationSystemMessageUpdateEnvelopeInput>;
    @Field(() => OrderUpdateSystemMessageUpdateEnvelopeInput, {nullable:true})
    orderUpdateSystemMessage?: InstanceType<typeof OrderUpdateSystemMessageUpdateEnvelopeInput>;
    @Field(() => PaymentLinkMessageUpdateEnvelopeInput, {nullable:true})
    paymentLinkMessage?: InstanceType<typeof PaymentLinkMessageUpdateEnvelopeInput>;
    @Field(() => PaymentLinkUpdateMessageUpdateEnvelopeInput, {nullable:true})
    paymentLinkUpdateMessage?: InstanceType<typeof PaymentLinkUpdateMessageUpdateEnvelopeInput>;
    @Field(() => LocalOrderUpdateMessageUpdateEnvelopeInput, {nullable:true})
    localOrderUpdateMessage?: InstanceType<typeof LocalOrderUpdateMessageUpdateEnvelopeInput>;
    @Field(() => LocalOrderHandedOverMessageUpdateEnvelopeInput, {nullable:true})
    localOrderHandedOverMessage?: InstanceType<typeof LocalOrderHandedOverMessageUpdateEnvelopeInput>;
}

@InputType()
export class ChatBubblesWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => [ChatBubblesWhereInput], {nullable:true})
    AND?: Array<ChatBubblesWhereInput>;
    @Field(() => [ChatBubblesWhereInput], {nullable:true})
    OR?: Array<ChatBubblesWhereInput>;
    @Field(() => [ChatBubblesWhereInput], {nullable:true})
    NOT?: Array<ChatBubblesWhereInput>;
    @Field(() => ProductBubbleCompositeFilter, {nullable:true})
    productBubble?: InstanceType<typeof ProductBubbleCompositeFilter>;
    @Field(() => DealMeetupOfferBubbleCompositeFilter, {nullable:true})
    dealMeetupOfferBubble?: InstanceType<typeof DealMeetupOfferBubbleCompositeFilter>;
    @Field(() => DealOfferBubbleCompositeFilter, {nullable:true})
    dealOfferBubble?: InstanceType<typeof DealOfferBubbleCompositeFilter>;
    @Field(() => CounterSellerOfferBubbleCompositeFilter, {nullable:true})
    counterSellerOfferBubble?: InstanceType<typeof CounterSellerOfferBubbleCompositeFilter>;
    @Field(() => RentOfferBubbleCompositeFilter, {nullable:true})
    rentOfferBubble?: InstanceType<typeof RentOfferBubbleCompositeFilter>;
    @Field(() => InfoSystemMessageCompositeFilter, {nullable:true})
    infoSystemMessage?: InstanceType<typeof InfoSystemMessageCompositeFilter>;
    @Field(() => PaymentConfirmationSystemMessageCompositeFilter, {nullable:true})
    paymentConfirationSystemMessage?: InstanceType<typeof PaymentConfirmationSystemMessageCompositeFilter>;
    @Field(() => OrderUpdateSystemMessageCompositeFilter, {nullable:true})
    orderUpdateSystemMessage?: InstanceType<typeof OrderUpdateSystemMessageCompositeFilter>;
    @Field(() => PaymentLinkMessageCompositeFilter, {nullable:true})
    paymentLinkMessage?: InstanceType<typeof PaymentLinkMessageCompositeFilter>;
    @Field(() => PaymentLinkUpdateMessageCompositeFilter, {nullable:true})
    paymentLinkUpdateMessage?: InstanceType<typeof PaymentLinkUpdateMessageCompositeFilter>;
    @Field(() => LocalOrderUpdateMessageCompositeFilter, {nullable:true})
    localOrderUpdateMessage?: InstanceType<typeof LocalOrderUpdateMessageCompositeFilter>;
    @Field(() => LocalOrderHandedOverMessageCompositeFilter, {nullable:true})
    localOrderHandedOverMessage?: InstanceType<typeof LocalOrderHandedOverMessageCompositeFilter>;
}

@InputType()
export class ChatBubblesWhereInput {
    @Field(() => [ChatBubblesWhereInput], {nullable:true})
    AND?: Array<ChatBubblesWhereInput>;
    @Field(() => [ChatBubblesWhereInput], {nullable:true})
    OR?: Array<ChatBubblesWhereInput>;
    @Field(() => [ChatBubblesWhereInput], {nullable:true})
    NOT?: Array<ChatBubblesWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => ProductBubbleCompositeFilter, {nullable:true})
    productBubble?: InstanceType<typeof ProductBubbleCompositeFilter>;
    @Field(() => DealMeetupOfferBubbleCompositeFilter, {nullable:true})
    dealMeetupOfferBubble?: InstanceType<typeof DealMeetupOfferBubbleCompositeFilter>;
    @Field(() => DealOfferBubbleCompositeFilter, {nullable:true})
    dealOfferBubble?: InstanceType<typeof DealOfferBubbleCompositeFilter>;
    @Field(() => CounterSellerOfferBubbleCompositeFilter, {nullable:true})
    counterSellerOfferBubble?: InstanceType<typeof CounterSellerOfferBubbleCompositeFilter>;
    @Field(() => RentOfferBubbleCompositeFilter, {nullable:true})
    rentOfferBubble?: InstanceType<typeof RentOfferBubbleCompositeFilter>;
    @Field(() => InfoSystemMessageCompositeFilter, {nullable:true})
    infoSystemMessage?: InstanceType<typeof InfoSystemMessageCompositeFilter>;
    @Field(() => PaymentConfirmationSystemMessageCompositeFilter, {nullable:true})
    paymentConfirationSystemMessage?: InstanceType<typeof PaymentConfirmationSystemMessageCompositeFilter>;
    @Field(() => OrderUpdateSystemMessageCompositeFilter, {nullable:true})
    orderUpdateSystemMessage?: InstanceType<typeof OrderUpdateSystemMessageCompositeFilter>;
    @Field(() => PaymentLinkMessageCompositeFilter, {nullable:true})
    paymentLinkMessage?: InstanceType<typeof PaymentLinkMessageCompositeFilter>;
    @Field(() => PaymentLinkUpdateMessageCompositeFilter, {nullable:true})
    paymentLinkUpdateMessage?: InstanceType<typeof PaymentLinkUpdateMessageCompositeFilter>;
    @Field(() => LocalOrderUpdateMessageCompositeFilter, {nullable:true})
    localOrderUpdateMessage?: InstanceType<typeof LocalOrderUpdateMessageCompositeFilter>;
    @Field(() => LocalOrderHandedOverMessageCompositeFilter, {nullable:true})
    localOrderHandedOverMessage?: InstanceType<typeof LocalOrderHandedOverMessageCompositeFilter>;
}

@ObjectType()
export class ChatBubbles {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => ProductBubble, {nullable:false})
    productBubble?: InstanceType<typeof ProductBubble>;
    @Field(() => DealMeetupOfferBubble, {nullable:false})
    dealMeetupOfferBubble?: InstanceType<typeof DealMeetupOfferBubble>;
    @Field(() => DealOfferBubble, {nullable:false})
    dealOfferBubble?: InstanceType<typeof DealOfferBubble>;
    @Field(() => CounterSellerOfferBubble, {nullable:false})
    counterSellerOfferBubble?: InstanceType<typeof CounterSellerOfferBubble>;
    @Field(() => RentOfferBubble, {nullable:false})
    rentOfferBubble?: InstanceType<typeof RentOfferBubble>;
    @Field(() => InfoSystemMessage, {nullable:false})
    infoSystemMessage?: InstanceType<typeof InfoSystemMessage>;
    @Field(() => PaymentConfirmationSystemMessage, {nullable:false})
    paymentConfirationSystemMessage?: InstanceType<typeof PaymentConfirmationSystemMessage>;
    @Field(() => OrderUpdateSystemMessage, {nullable:false})
    orderUpdateSystemMessage?: InstanceType<typeof OrderUpdateSystemMessage>;
    @Field(() => PaymentLinkMessage, {nullable:false})
    paymentLinkMessage?: InstanceType<typeof PaymentLinkMessage>;
    @Field(() => PaymentLinkUpdateMessage, {nullable:false})
    paymentLinkUpdateMessage?: InstanceType<typeof PaymentLinkUpdateMessage>;
    @Field(() => LocalOrderUpdateMessage, {nullable:false})
    localOrderUpdateMessage?: InstanceType<typeof LocalOrderUpdateMessage>;
    @Field(() => LocalOrderHandedOverMessage, {nullable:false})
    localOrderHandedOverMessage?: InstanceType<typeof LocalOrderHandedOverMessage>;
}

@ArgsType()
export class CreateManyChatBubblesArgs {
    @Field(() => [ChatBubblesCreateManyInput], {nullable:false})
    @Type(() => ChatBubblesCreateManyInput)
    data!: Array<ChatBubblesCreateManyInput>;
}

@ArgsType()
export class CreateOneChatBubblesArgs {
    @Field(() => ChatBubblesCreateInput, {nullable:false})
    @Type(() => ChatBubblesCreateInput)
    data!: InstanceType<typeof ChatBubblesCreateInput>;
}

@ArgsType()
export class DeleteManyChatBubblesArgs {
    @Field(() => ChatBubblesWhereInput, {nullable:true})
    @Type(() => ChatBubblesWhereInput)
    where?: InstanceType<typeof ChatBubblesWhereInput>;
}

@ArgsType()
export class DeleteOneChatBubblesArgs {
    @Field(() => ChatBubblesWhereUniqueInput, {nullable:false})
    @Type(() => ChatBubblesWhereUniqueInput)
    where!: Prisma.AtLeast<ChatBubblesWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindFirstChatBubblesOrThrowArgs {
    @Field(() => ChatBubblesWhereInput, {nullable:true})
    @Type(() => ChatBubblesWhereInput)
    where?: InstanceType<typeof ChatBubblesWhereInput>;
    @Field(() => [ChatBubblesOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<ChatBubblesOrderByWithRelationInput>;
    @Field(() => ChatBubblesWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<ChatBubblesWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [ChatBubblesScalarFieldEnum], {nullable:true})
    distinct?: Array<`${ChatBubblesScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstChatBubblesArgs {
    @Field(() => ChatBubblesWhereInput, {nullable:true})
    @Type(() => ChatBubblesWhereInput)
    where?: InstanceType<typeof ChatBubblesWhereInput>;
    @Field(() => [ChatBubblesOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<ChatBubblesOrderByWithRelationInput>;
    @Field(() => ChatBubblesWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<ChatBubblesWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [ChatBubblesScalarFieldEnum], {nullable:true})
    distinct?: Array<`${ChatBubblesScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyChatBubblesArgs {
    @Field(() => ChatBubblesWhereInput, {nullable:true})
    @Type(() => ChatBubblesWhereInput)
    where?: InstanceType<typeof ChatBubblesWhereInput>;
    @Field(() => [ChatBubblesOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<ChatBubblesOrderByWithRelationInput>;
    @Field(() => ChatBubblesWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<ChatBubblesWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [ChatBubblesScalarFieldEnum], {nullable:true})
    distinct?: Array<`${ChatBubblesScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniqueChatBubblesOrThrowArgs {
    @Field(() => ChatBubblesWhereUniqueInput, {nullable:false})
    @Type(() => ChatBubblesWhereUniqueInput)
    where!: Prisma.AtLeast<ChatBubblesWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindUniqueChatBubblesArgs {
    @Field(() => ChatBubblesWhereUniqueInput, {nullable:false})
    @Type(() => ChatBubblesWhereUniqueInput)
    where!: Prisma.AtLeast<ChatBubblesWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpdateManyChatBubblesArgs {
    @Field(() => ChatBubblesUpdateManyMutationInput, {nullable:false})
    @Type(() => ChatBubblesUpdateManyMutationInput)
    data!: InstanceType<typeof ChatBubblesUpdateManyMutationInput>;
    @Field(() => ChatBubblesWhereInput, {nullable:true})
    @Type(() => ChatBubblesWhereInput)
    where?: InstanceType<typeof ChatBubblesWhereInput>;
}

@ArgsType()
export class UpdateOneChatBubblesArgs {
    @Field(() => ChatBubblesUpdateInput, {nullable:false})
    @Type(() => ChatBubblesUpdateInput)
    data!: InstanceType<typeof ChatBubblesUpdateInput>;
    @Field(() => ChatBubblesWhereUniqueInput, {nullable:false})
    @Type(() => ChatBubblesWhereUniqueInput)
    where!: Prisma.AtLeast<ChatBubblesWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpsertOneChatBubblesArgs {
    @Field(() => ChatBubblesWhereUniqueInput, {nullable:false})
    @Type(() => ChatBubblesWhereUniqueInput)
    where!: Prisma.AtLeast<ChatBubblesWhereUniqueInput, 'id'>;
    @Field(() => ChatBubblesCreateInput, {nullable:false})
    @Type(() => ChatBubblesCreateInput)
    create!: InstanceType<typeof ChatBubblesCreateInput>;
    @Field(() => ChatBubblesUpdateInput, {nullable:false})
    @Type(() => ChatBubblesUpdateInput)
    update!: InstanceType<typeof ChatBubblesUpdateInput>;
}

@ArgsType()
export class ColorAggregateArgs {
    @Field(() => ColorWhereInput, {nullable:true})
    @Type(() => ColorWhereInput)
    where?: InstanceType<typeof ColorWhereInput>;
    @Field(() => [ColorOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<ColorOrderByWithRelationInput>;
    @Field(() => ColorWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<ColorWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class ColorCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    hex?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class ColorCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    hex!: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class ColorCreateNestedOneWithoutProductListingInput {
    @Field(() => ColorCreateWithoutProductListingInput, {nullable:true})
    @Type(() => ColorCreateWithoutProductListingInput)
    create?: InstanceType<typeof ColorCreateWithoutProductListingInput>;
    @Field(() => ColorCreateOrConnectWithoutProductListingInput, {nullable:true})
    @Type(() => ColorCreateOrConnectWithoutProductListingInput)
    connectOrCreate?: InstanceType<typeof ColorCreateOrConnectWithoutProductListingInput>;
    @Field(() => ColorWhereUniqueInput, {nullable:true})
    @Type(() => ColorWhereUniqueInput)
    connect?: Prisma.AtLeast<ColorWhereUniqueInput, 'id'>;
}

@InputType()
export class ColorCreateOrConnectWithoutProductListingInput {
    @Field(() => ColorWhereUniqueInput, {nullable:false})
    @Type(() => ColorWhereUniqueInput)
    where!: Prisma.AtLeast<ColorWhereUniqueInput, 'id'>;
    @Field(() => ColorCreateWithoutProductListingInput, {nullable:false})
    @Type(() => ColorCreateWithoutProductListingInput)
    create!: InstanceType<typeof ColorCreateWithoutProductListingInput>;
}

@InputType()
export class ColorCreateWithoutProductListingInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    hex!: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class ColorCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    hex!: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => ProductListingCreateNestedManyWithoutColorInput, {nullable:true})
    ProductListing?: InstanceType<typeof ProductListingCreateNestedManyWithoutColorInput>;
}

@ArgsType()
export class ColorGroupByArgs {
    @Field(() => ColorWhereInput, {nullable:true})
    @Type(() => ColorWhereInput)
    where?: InstanceType<typeof ColorWhereInput>;
    @Field(() => [ColorOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<ColorOrderByWithAggregationInput>;
    @Field(() => [ColorScalarFieldEnum], {nullable:false})
    by!: Array<`${ColorScalarFieldEnum}`>;
    @Field(() => ColorScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof ColorScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class ColorMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    hex?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class ColorMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    hex?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class ColorNullableRelationFilter {
    @Field(() => ColorWhereInput, {nullable:true})
    is?: InstanceType<typeof ColorWhereInput>;
    @Field(() => ColorWhereInput, {nullable:true})
    isNot?: InstanceType<typeof ColorWhereInput>;
}

@InputType()
export class ColorOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    hex?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => ColorCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof ColorCountOrderByAggregateInput>;
    @Field(() => ColorMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof ColorMaxOrderByAggregateInput>;
    @Field(() => ColorMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof ColorMinOrderByAggregateInput>;
}

@InputType()
export class ColorOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    hex?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => ProductListingOrderByRelationAggregateInput, {nullable:true})
    ProductListing?: InstanceType<typeof ProductListingOrderByRelationAggregateInput>;
}

@InputType()
export class ColorScalarWhereWithAggregatesInput {
    @Field(() => [ColorScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<ColorScalarWhereWithAggregatesInput>;
    @Field(() => [ColorScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<ColorScalarWhereWithAggregatesInput>;
    @Field(() => [ColorScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<ColorScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    name?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    hex?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => BoolWithAggregatesFilter, {nullable:true})
    active?: InstanceType<typeof BoolWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
}

@InputType()
export class ColorUncheckedCreateWithoutProductListingInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    hex!: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class ColorUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    hex!: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => ProductListingUncheckedCreateNestedManyWithoutColorInput, {nullable:true})
    ProductListing?: InstanceType<typeof ProductListingUncheckedCreateNestedManyWithoutColorInput>;
}

@InputType()
export class ColorUncheckedUpdateManyInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    hex?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class ColorUncheckedUpdateWithoutProductListingInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    hex?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class ColorUncheckedUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    hex?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => ProductListingUncheckedUpdateManyWithoutColorNestedInput, {nullable:true})
    ProductListing?: InstanceType<typeof ProductListingUncheckedUpdateManyWithoutColorNestedInput>;
}

@InputType()
export class ColorUpdateManyMutationInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    hex?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class ColorUpdateOneWithoutProductListingNestedInput {
    @Field(() => ColorCreateWithoutProductListingInput, {nullable:true})
    @Type(() => ColorCreateWithoutProductListingInput)
    create?: InstanceType<typeof ColorCreateWithoutProductListingInput>;
    @Field(() => ColorCreateOrConnectWithoutProductListingInput, {nullable:true})
    @Type(() => ColorCreateOrConnectWithoutProductListingInput)
    connectOrCreate?: InstanceType<typeof ColorCreateOrConnectWithoutProductListingInput>;
    @Field(() => ColorUpsertWithoutProductListingInput, {nullable:true})
    @Type(() => ColorUpsertWithoutProductListingInput)
    upsert?: InstanceType<typeof ColorUpsertWithoutProductListingInput>;
    @Field(() => Boolean, {nullable:true})
    disconnect?: boolean;
    @Field(() => ColorWhereInput, {nullable:true})
    @Type(() => ColorWhereInput)
    delete?: InstanceType<typeof ColorWhereInput>;
    @Field(() => ColorWhereUniqueInput, {nullable:true})
    @Type(() => ColorWhereUniqueInput)
    connect?: Prisma.AtLeast<ColorWhereUniqueInput, 'id'>;
    @Field(() => ColorUpdateToOneWithWhereWithoutProductListingInput, {nullable:true})
    @Type(() => ColorUpdateToOneWithWhereWithoutProductListingInput)
    update?: InstanceType<typeof ColorUpdateToOneWithWhereWithoutProductListingInput>;
}

@InputType()
export class ColorUpdateToOneWithWhereWithoutProductListingInput {
    @Field(() => ColorWhereInput, {nullable:true})
    @Type(() => ColorWhereInput)
    where?: InstanceType<typeof ColorWhereInput>;
    @Field(() => ColorUpdateWithoutProductListingInput, {nullable:false})
    @Type(() => ColorUpdateWithoutProductListingInput)
    data!: InstanceType<typeof ColorUpdateWithoutProductListingInput>;
}

@InputType()
export class ColorUpdateWithoutProductListingInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    hex?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class ColorUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    hex?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => ProductListingUpdateManyWithoutColorNestedInput, {nullable:true})
    ProductListing?: InstanceType<typeof ProductListingUpdateManyWithoutColorNestedInput>;
}

@InputType()
export class ColorUpsertWithoutProductListingInput {
    @Field(() => ColorUpdateWithoutProductListingInput, {nullable:false})
    @Type(() => ColorUpdateWithoutProductListingInput)
    update!: InstanceType<typeof ColorUpdateWithoutProductListingInput>;
    @Field(() => ColorCreateWithoutProductListingInput, {nullable:false})
    @Type(() => ColorCreateWithoutProductListingInput)
    create!: InstanceType<typeof ColorCreateWithoutProductListingInput>;
    @Field(() => ColorWhereInput, {nullable:true})
    @Type(() => ColorWhereInput)
    where?: InstanceType<typeof ColorWhereInput>;
}

@InputType()
export class ColorWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => [ColorWhereInput], {nullable:true})
    AND?: Array<ColorWhereInput>;
    @Field(() => [ColorWhereInput], {nullable:true})
    OR?: Array<ColorWhereInput>;
    @Field(() => [ColorWhereInput], {nullable:true})
    NOT?: Array<ColorWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    name?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    hex?: InstanceType<typeof StringFilter>;
    @Field(() => BoolFilter, {nullable:true})
    active?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => ProductListingListRelationFilter, {nullable:true})
    ProductListing?: InstanceType<typeof ProductListingListRelationFilter>;
}

@InputType()
export class ColorWhereInput {
    @Field(() => [ColorWhereInput], {nullable:true})
    AND?: Array<ColorWhereInput>;
    @Field(() => [ColorWhereInput], {nullable:true})
    OR?: Array<ColorWhereInput>;
    @Field(() => [ColorWhereInput], {nullable:true})
    NOT?: Array<ColorWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    name?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    hex?: InstanceType<typeof StringFilter>;
    @Field(() => BoolFilter, {nullable:true})
    active?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => ProductListingListRelationFilter, {nullable:true})
    ProductListing?: InstanceType<typeof ProductListingListRelationFilter>;
}

@ObjectType()
export class Color {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    hex!: string;
    @Field(() => Boolean, {defaultValue:false,nullable:false})
    active!: boolean;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
    @Field(() => Date, {nullable:false})
    updatedAt!: Date;
    @Field(() => [ProductListing], {nullable:true})
    ProductListing?: Array<ProductListing>;
}

@ArgsType()
export class CreateManyColorArgs {
    @Field(() => [ColorCreateManyInput], {nullable:false})
    @Type(() => ColorCreateManyInput)
    data!: Array<ColorCreateManyInput>;
}

@ArgsType()
export class CreateOneColorArgs {
    @Field(() => ColorCreateInput, {nullable:false})
    @Type(() => ColorCreateInput)
    data!: InstanceType<typeof ColorCreateInput>;
}

@ArgsType()
export class DeleteManyColorArgs {
    @Field(() => ColorWhereInput, {nullable:true})
    @Type(() => ColorWhereInput)
    where?: InstanceType<typeof ColorWhereInput>;
}

@ArgsType()
export class DeleteOneColorArgs {
    @Field(() => ColorWhereUniqueInput, {nullable:false})
    @Type(() => ColorWhereUniqueInput)
    where!: Prisma.AtLeast<ColorWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindFirstColorOrThrowArgs {
    @Field(() => ColorWhereInput, {nullable:true})
    @Type(() => ColorWhereInput)
    where?: InstanceType<typeof ColorWhereInput>;
    @Field(() => [ColorOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<ColorOrderByWithRelationInput>;
    @Field(() => ColorWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<ColorWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [ColorScalarFieldEnum], {nullable:true})
    distinct?: Array<`${ColorScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstColorArgs {
    @Field(() => ColorWhereInput, {nullable:true})
    @Type(() => ColorWhereInput)
    where?: InstanceType<typeof ColorWhereInput>;
    @Field(() => [ColorOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<ColorOrderByWithRelationInput>;
    @Field(() => ColorWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<ColorWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [ColorScalarFieldEnum], {nullable:true})
    distinct?: Array<`${ColorScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyColorArgs {
    @Field(() => ColorWhereInput, {nullable:true})
    @Type(() => ColorWhereInput)
    where?: InstanceType<typeof ColorWhereInput>;
    @Field(() => [ColorOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<ColorOrderByWithRelationInput>;
    @Field(() => ColorWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<ColorWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [ColorScalarFieldEnum], {nullable:true})
    distinct?: Array<`${ColorScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniqueColorOrThrowArgs {
    @Field(() => ColorWhereUniqueInput, {nullable:false})
    @Type(() => ColorWhereUniqueInput)
    where!: Prisma.AtLeast<ColorWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindUniqueColorArgs {
    @Field(() => ColorWhereUniqueInput, {nullable:false})
    @Type(() => ColorWhereUniqueInput)
    where!: Prisma.AtLeast<ColorWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpdateManyColorArgs {
    @Field(() => ColorUpdateManyMutationInput, {nullable:false})
    @Type(() => ColorUpdateManyMutationInput)
    data!: InstanceType<typeof ColorUpdateManyMutationInput>;
    @Field(() => ColorWhereInput, {nullable:true})
    @Type(() => ColorWhereInput)
    where?: InstanceType<typeof ColorWhereInput>;
}

@ArgsType()
export class UpdateOneColorArgs {
    @Field(() => ColorUpdateInput, {nullable:false})
    @Type(() => ColorUpdateInput)
    data!: InstanceType<typeof ColorUpdateInput>;
    @Field(() => ColorWhereUniqueInput, {nullable:false})
    @Type(() => ColorWhereUniqueInput)
    where!: Prisma.AtLeast<ColorWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpsertOneColorArgs {
    @Field(() => ColorWhereUniqueInput, {nullable:false})
    @Type(() => ColorWhereUniqueInput)
    where!: Prisma.AtLeast<ColorWhereUniqueInput, 'id'>;
    @Field(() => ColorCreateInput, {nullable:false})
    @Type(() => ColorCreateInput)
    create!: InstanceType<typeof ColorCreateInput>;
    @Field(() => ColorUpdateInput, {nullable:false})
    @Type(() => ColorUpdateInput)
    update!: InstanceType<typeof ColorUpdateInput>;
}

@ArgsType()
export class ConversationAggregateArgs {
    @Field(() => ConversationWhereInput, {nullable:true})
    @Type(() => ConversationWhereInput)
    where?: InstanceType<typeof ConversationWhereInput>;
    @Field(() => [ConversationOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<ConversationOrderByWithRelationInput>;
    @Field(() => ConversationWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<ConversationWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class ConversationAvgOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    paymentLinkCount?: `${SortOrder}`;
}

@InputType()
export class ConversationCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    productId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    initiatedBy?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    participantIds?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    lastMessageId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    valid?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    enabled?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    preferredPaymentMethod?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    preferredAddressId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    paymentLinkSent?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    deliveryConfirmedBySeller?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    paymentLinkCount?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    orderId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    payload?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    consumersLastSeen?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    providersLastSeen?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class ConversationCreateManyProductInputEnvelope {
    @Field(() => [ConversationCreateManyProductInput], {nullable:false})
    @Type(() => ConversationCreateManyProductInput)
    data!: Array<ConversationCreateManyProductInput>;
}

@InputType()
export class ConversationCreateManyProductInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    initiatedBy!: string;
    @Field(() => ConversationCreateparticipantIdsInput, {nullable:true})
    participantIds?: InstanceType<typeof ConversationCreateparticipantIdsInput>;
    @Field(() => String, {nullable:true})
    lastMessageId?: string;
    @Field(() => Boolean, {nullable:true})
    valid?: boolean;
    @Field(() => Boolean, {nullable:true})
    enabled?: boolean;
    @Field(() => ConversationType, {nullable:false})
    type!: `${ConversationType}`;
    @Field(() => String, {nullable:true})
    preferredPaymentMethod?: string;
    @Field(() => String, {nullable:true})
    preferredAddressId?: string;
    @Field(() => Boolean, {nullable:true})
    paymentLinkSent?: boolean;
    @Field(() => Boolean, {nullable:true})
    deliveryConfirmedBySeller?: boolean;
    @Field(() => Int, {nullable:true})
    paymentLinkCount?: number;
    @Field(() => String, {nullable:true})
    orderId?: string;
    @Field(() => String, {nullable:true})
    payload?: string;
    @Field(() => String, {nullable:true})
    consumersLastSeen?: string;
    @Field(() => String, {nullable:true})
    providersLastSeen?: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class ConversationCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    productId!: string;
    @Field(() => String, {nullable:false})
    initiatedBy!: string;
    @Field(() => ConversationCreateparticipantIdsInput, {nullable:true})
    participantIds?: InstanceType<typeof ConversationCreateparticipantIdsInput>;
    @Field(() => String, {nullable:true})
    lastMessageId?: string;
    @Field(() => Boolean, {nullable:true})
    valid?: boolean;
    @Field(() => Boolean, {nullable:true})
    enabled?: boolean;
    @Field(() => ConversationType, {nullable:false})
    type!: `${ConversationType}`;
    @Field(() => String, {nullable:true})
    preferredPaymentMethod?: string;
    @Field(() => String, {nullable:true})
    preferredAddressId?: string;
    @Field(() => Boolean, {nullable:true})
    paymentLinkSent?: boolean;
    @Field(() => Boolean, {nullable:true})
    deliveryConfirmedBySeller?: boolean;
    @Field(() => Int, {nullable:true})
    paymentLinkCount?: number;
    @Field(() => String, {nullable:true})
    orderId?: string;
    @Field(() => String, {nullable:true})
    payload?: string;
    @Field(() => String, {nullable:true})
    consumersLastSeen?: string;
    @Field(() => String, {nullable:true})
    providersLastSeen?: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class ConversationCreateNestedManyWithoutParticipantsInput {
    @Field(() => [ConversationCreateWithoutParticipantsInput], {nullable:true})
    @Type(() => ConversationCreateWithoutParticipantsInput)
    create?: Array<ConversationCreateWithoutParticipantsInput>;
    @Field(() => [ConversationCreateOrConnectWithoutParticipantsInput], {nullable:true})
    @Type(() => ConversationCreateOrConnectWithoutParticipantsInput)
    connectOrCreate?: Array<ConversationCreateOrConnectWithoutParticipantsInput>;
    @Field(() => [ConversationWhereUniqueInput], {nullable:true})
    @Type(() => ConversationWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ConversationWhereUniqueInput, 'id'>>;
}

@InputType()
export class ConversationCreateNestedManyWithoutProductInput {
    @Field(() => [ConversationCreateWithoutProductInput], {nullable:true})
    @Type(() => ConversationCreateWithoutProductInput)
    create?: Array<ConversationCreateWithoutProductInput>;
    @Field(() => [ConversationCreateOrConnectWithoutProductInput], {nullable:true})
    @Type(() => ConversationCreateOrConnectWithoutProductInput)
    connectOrCreate?: Array<ConversationCreateOrConnectWithoutProductInput>;
    @Field(() => ConversationCreateManyProductInputEnvelope, {nullable:true})
    @Type(() => ConversationCreateManyProductInputEnvelope)
    createMany?: InstanceType<typeof ConversationCreateManyProductInputEnvelope>;
    @Field(() => [ConversationWhereUniqueInput], {nullable:true})
    @Type(() => ConversationWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ConversationWhereUniqueInput, 'id'>>;
}

@InputType()
export class ConversationCreateOrConnectWithoutParticipantsInput {
    @Field(() => ConversationWhereUniqueInput, {nullable:false})
    @Type(() => ConversationWhereUniqueInput)
    where!: Prisma.AtLeast<ConversationWhereUniqueInput, 'id'>;
    @Field(() => ConversationCreateWithoutParticipantsInput, {nullable:false})
    @Type(() => ConversationCreateWithoutParticipantsInput)
    create!: InstanceType<typeof ConversationCreateWithoutParticipantsInput>;
}

@InputType()
export class ConversationCreateOrConnectWithoutProductInput {
    @Field(() => ConversationWhereUniqueInput, {nullable:false})
    @Type(() => ConversationWhereUniqueInput)
    where!: Prisma.AtLeast<ConversationWhereUniqueInput, 'id'>;
    @Field(() => ConversationCreateWithoutProductInput, {nullable:false})
    @Type(() => ConversationCreateWithoutProductInput)
    create!: InstanceType<typeof ConversationCreateWithoutProductInput>;
}

@InputType()
export class ConversationCreateWithoutParticipantsInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    initiatedBy!: string;
    @Field(() => String, {nullable:true})
    lastMessageId?: string;
    @Field(() => Boolean, {nullable:true})
    valid?: boolean;
    @Field(() => Boolean, {nullable:true})
    enabled?: boolean;
    @Field(() => ConversationType, {nullable:false})
    type!: `${ConversationType}`;
    @Field(() => String, {nullable:true})
    preferredPaymentMethod?: string;
    @Field(() => String, {nullable:true})
    preferredAddressId?: string;
    @Field(() => Boolean, {nullable:true})
    paymentLinkSent?: boolean;
    @Field(() => Boolean, {nullable:true})
    deliveryConfirmedBySeller?: boolean;
    @Field(() => Int, {nullable:true})
    paymentLinkCount?: number;
    @Field(() => String, {nullable:true})
    orderId?: string;
    @Field(() => String, {nullable:true})
    payload?: string;
    @Field(() => String, {nullable:true})
    consumersLastSeen?: string;
    @Field(() => String, {nullable:true})
    providersLastSeen?: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => ProductListingCreateNestedOneWithoutConversationsInput, {nullable:false})
    product!: InstanceType<typeof ProductListingCreateNestedOneWithoutConversationsInput>;
}

@InputType()
export class ConversationCreateWithoutProductInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    initiatedBy!: string;
    @Field(() => String, {nullable:true})
    lastMessageId?: string;
    @Field(() => Boolean, {nullable:true})
    valid?: boolean;
    @Field(() => Boolean, {nullable:true})
    enabled?: boolean;
    @Field(() => ConversationType, {nullable:false})
    type!: `${ConversationType}`;
    @Field(() => String, {nullable:true})
    preferredPaymentMethod?: string;
    @Field(() => String, {nullable:true})
    preferredAddressId?: string;
    @Field(() => Boolean, {nullable:true})
    paymentLinkSent?: boolean;
    @Field(() => Boolean, {nullable:true})
    deliveryConfirmedBySeller?: boolean;
    @Field(() => Int, {nullable:true})
    paymentLinkCount?: number;
    @Field(() => String, {nullable:true})
    orderId?: string;
    @Field(() => String, {nullable:true})
    payload?: string;
    @Field(() => String, {nullable:true})
    consumersLastSeen?: string;
    @Field(() => String, {nullable:true})
    providersLastSeen?: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => UserCreateNestedManyWithoutConversationsInput, {nullable:true})
    participants?: InstanceType<typeof UserCreateNestedManyWithoutConversationsInput>;
}

@InputType()
export class ConversationCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    initiatedBy!: string;
    @Field(() => String, {nullable:true})
    lastMessageId?: string;
    @Field(() => Boolean, {nullable:true})
    valid?: boolean;
    @Field(() => Boolean, {nullable:true})
    enabled?: boolean;
    @Field(() => ConversationType, {nullable:false})
    type!: `${ConversationType}`;
    @Field(() => String, {nullable:true})
    preferredPaymentMethod?: string;
    @Field(() => String, {nullable:true})
    preferredAddressId?: string;
    @Field(() => Boolean, {nullable:true})
    paymentLinkSent?: boolean;
    @Field(() => Boolean, {nullable:true})
    deliveryConfirmedBySeller?: boolean;
    @Field(() => Int, {nullable:true})
    paymentLinkCount?: number;
    @Field(() => String, {nullable:true})
    orderId?: string;
    @Field(() => String, {nullable:true})
    payload?: string;
    @Field(() => String, {nullable:true})
    consumersLastSeen?: string;
    @Field(() => String, {nullable:true})
    providersLastSeen?: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => ProductListingCreateNestedOneWithoutConversationsInput, {nullable:false})
    product!: InstanceType<typeof ProductListingCreateNestedOneWithoutConversationsInput>;
    @Field(() => UserCreateNestedManyWithoutConversationsInput, {nullable:true})
    participants?: InstanceType<typeof UserCreateNestedManyWithoutConversationsInput>;
}

@InputType()
export class ConversationCreateparticipantIdsInput {
    @Field(() => [String], {nullable:false})
    set!: Array<string>;
}

@ArgsType()
export class ConversationGroupByArgs {
    @Field(() => ConversationWhereInput, {nullable:true})
    @Type(() => ConversationWhereInput)
    where?: InstanceType<typeof ConversationWhereInput>;
    @Field(() => [ConversationOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<ConversationOrderByWithAggregationInput>;
    @Field(() => [ConversationScalarFieldEnum], {nullable:false})
    by!: Array<`${ConversationScalarFieldEnum}`>;
    @Field(() => ConversationScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof ConversationScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class ConversationListRelationFilter {
    @Field(() => ConversationWhereInput, {nullable:true})
    every?: InstanceType<typeof ConversationWhereInput>;
    @Field(() => ConversationWhereInput, {nullable:true})
    some?: InstanceType<typeof ConversationWhereInput>;
    @Field(() => ConversationWhereInput, {nullable:true})
    none?: InstanceType<typeof ConversationWhereInput>;
}

@InputType()
export class ConversationMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    productId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    initiatedBy?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    lastMessageId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    valid?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    enabled?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    preferredPaymentMethod?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    preferredAddressId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    paymentLinkSent?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    deliveryConfirmedBySeller?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    paymentLinkCount?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    orderId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    payload?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    consumersLastSeen?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    providersLastSeen?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class ConversationMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    productId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    initiatedBy?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    lastMessageId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    valid?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    enabled?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    preferredPaymentMethod?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    preferredAddressId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    paymentLinkSent?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    deliveryConfirmedBySeller?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    paymentLinkCount?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    orderId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    payload?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    consumersLastSeen?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    providersLastSeen?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class ConversationOrderByRelationAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    _count?: `${SortOrder}`;
}

@InputType()
export class ConversationOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    productId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    initiatedBy?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    participantIds?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    lastMessageId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    valid?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    enabled?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    preferredPaymentMethod?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    preferredAddressId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    paymentLinkSent?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    deliveryConfirmedBySeller?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    paymentLinkCount?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    orderId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    payload?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    consumersLastSeen?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    providersLastSeen?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => ConversationCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof ConversationCountOrderByAggregateInput>;
    @Field(() => ConversationAvgOrderByAggregateInput, {nullable:true})
    _avg?: InstanceType<typeof ConversationAvgOrderByAggregateInput>;
    @Field(() => ConversationMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof ConversationMaxOrderByAggregateInput>;
    @Field(() => ConversationMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof ConversationMinOrderByAggregateInput>;
    @Field(() => ConversationSumOrderByAggregateInput, {nullable:true})
    _sum?: InstanceType<typeof ConversationSumOrderByAggregateInput>;
}

@InputType()
export class ConversationOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    productId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    initiatedBy?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    participantIds?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    lastMessageId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    valid?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    enabled?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    preferredPaymentMethod?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    preferredAddressId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    paymentLinkSent?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    deliveryConfirmedBySeller?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    paymentLinkCount?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    orderId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    payload?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    consumersLastSeen?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    providersLastSeen?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => ProductListingOrderByWithRelationInput, {nullable:true})
    product?: InstanceType<typeof ProductListingOrderByWithRelationInput>;
    @Field(() => UserOrderByRelationAggregateInput, {nullable:true})
    participants?: InstanceType<typeof UserOrderByRelationAggregateInput>;
}

@InputType()
export class ConversationScalarWhereWithAggregatesInput {
    @Field(() => [ConversationScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<ConversationScalarWhereWithAggregatesInput>;
    @Field(() => [ConversationScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<ConversationScalarWhereWithAggregatesInput>;
    @Field(() => [ConversationScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<ConversationScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    productId?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    initiatedBy?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    participantIds?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    lastMessageId?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => BoolWithAggregatesFilter, {nullable:true})
    valid?: InstanceType<typeof BoolWithAggregatesFilter>;
    @Field(() => BoolWithAggregatesFilter, {nullable:true})
    enabled?: InstanceType<typeof BoolWithAggregatesFilter>;
    @Field(() => EnumConversationTypeWithAggregatesFilter, {nullable:true})
    type?: InstanceType<typeof EnumConversationTypeWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    preferredPaymentMethod?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    preferredAddressId?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => BoolNullableWithAggregatesFilter, {nullable:true})
    paymentLinkSent?: InstanceType<typeof BoolNullableWithAggregatesFilter>;
    @Field(() => BoolNullableWithAggregatesFilter, {nullable:true})
    deliveryConfirmedBySeller?: InstanceType<typeof BoolNullableWithAggregatesFilter>;
    @Field(() => IntNullableWithAggregatesFilter, {nullable:true})
    paymentLinkCount?: InstanceType<typeof IntNullableWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    orderId?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    payload?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    consumersLastSeen?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    providersLastSeen?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
}

@InputType()
export class ConversationScalarWhereInput {
    @Field(() => [ConversationScalarWhereInput], {nullable:true})
    AND?: Array<ConversationScalarWhereInput>;
    @Field(() => [ConversationScalarWhereInput], {nullable:true})
    OR?: Array<ConversationScalarWhereInput>;
    @Field(() => [ConversationScalarWhereInput], {nullable:true})
    NOT?: Array<ConversationScalarWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    productId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    initiatedBy?: InstanceType<typeof StringFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    participantIds?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    lastMessageId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => BoolFilter, {nullable:true})
    valid?: InstanceType<typeof BoolFilter>;
    @Field(() => BoolFilter, {nullable:true})
    enabled?: InstanceType<typeof BoolFilter>;
    @Field(() => EnumConversationTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumConversationTypeFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    preferredPaymentMethod?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    preferredAddressId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => BoolNullableFilter, {nullable:true})
    paymentLinkSent?: InstanceType<typeof BoolNullableFilter>;
    @Field(() => BoolNullableFilter, {nullable:true})
    deliveryConfirmedBySeller?: InstanceType<typeof BoolNullableFilter>;
    @Field(() => IntNullableFilter, {nullable:true})
    paymentLinkCount?: InstanceType<typeof IntNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    orderId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    payload?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    consumersLastSeen?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    providersLastSeen?: InstanceType<typeof StringNullableFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@InputType()
export class ConversationSumOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    paymentLinkCount?: `${SortOrder}`;
}

@InputType()
export class ConversationUncheckedCreateNestedManyWithoutParticipantsInput {
    @Field(() => [ConversationCreateWithoutParticipantsInput], {nullable:true})
    @Type(() => ConversationCreateWithoutParticipantsInput)
    create?: Array<ConversationCreateWithoutParticipantsInput>;
    @Field(() => [ConversationCreateOrConnectWithoutParticipantsInput], {nullable:true})
    @Type(() => ConversationCreateOrConnectWithoutParticipantsInput)
    connectOrCreate?: Array<ConversationCreateOrConnectWithoutParticipantsInput>;
    @Field(() => [ConversationWhereUniqueInput], {nullable:true})
    @Type(() => ConversationWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ConversationWhereUniqueInput, 'id'>>;
}

@InputType()
export class ConversationUncheckedCreateNestedManyWithoutProductInput {
    @Field(() => [ConversationCreateWithoutProductInput], {nullable:true})
    @Type(() => ConversationCreateWithoutProductInput)
    create?: Array<ConversationCreateWithoutProductInput>;
    @Field(() => [ConversationCreateOrConnectWithoutProductInput], {nullable:true})
    @Type(() => ConversationCreateOrConnectWithoutProductInput)
    connectOrCreate?: Array<ConversationCreateOrConnectWithoutProductInput>;
    @Field(() => ConversationCreateManyProductInputEnvelope, {nullable:true})
    @Type(() => ConversationCreateManyProductInputEnvelope)
    createMany?: InstanceType<typeof ConversationCreateManyProductInputEnvelope>;
    @Field(() => [ConversationWhereUniqueInput], {nullable:true})
    @Type(() => ConversationWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ConversationWhereUniqueInput, 'id'>>;
}

@InputType()
export class ConversationUncheckedCreateWithoutParticipantsInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    productId!: string;
    @Field(() => String, {nullable:false})
    initiatedBy!: string;
    @Field(() => ConversationCreateparticipantIdsInput, {nullable:true})
    participantIds?: InstanceType<typeof ConversationCreateparticipantIdsInput>;
    @Field(() => String, {nullable:true})
    lastMessageId?: string;
    @Field(() => Boolean, {nullable:true})
    valid?: boolean;
    @Field(() => Boolean, {nullable:true})
    enabled?: boolean;
    @Field(() => ConversationType, {nullable:false})
    type!: `${ConversationType}`;
    @Field(() => String, {nullable:true})
    preferredPaymentMethod?: string;
    @Field(() => String, {nullable:true})
    preferredAddressId?: string;
    @Field(() => Boolean, {nullable:true})
    paymentLinkSent?: boolean;
    @Field(() => Boolean, {nullable:true})
    deliveryConfirmedBySeller?: boolean;
    @Field(() => Int, {nullable:true})
    paymentLinkCount?: number;
    @Field(() => String, {nullable:true})
    orderId?: string;
    @Field(() => String, {nullable:true})
    payload?: string;
    @Field(() => String, {nullable:true})
    consumersLastSeen?: string;
    @Field(() => String, {nullable:true})
    providersLastSeen?: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class ConversationUncheckedCreateWithoutProductInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    initiatedBy!: string;
    @Field(() => ConversationCreateparticipantIdsInput, {nullable:true})
    participantIds?: InstanceType<typeof ConversationCreateparticipantIdsInput>;
    @Field(() => String, {nullable:true})
    lastMessageId?: string;
    @Field(() => Boolean, {nullable:true})
    valid?: boolean;
    @Field(() => Boolean, {nullable:true})
    enabled?: boolean;
    @Field(() => ConversationType, {nullable:false})
    type!: `${ConversationType}`;
    @Field(() => String, {nullable:true})
    preferredPaymentMethod?: string;
    @Field(() => String, {nullable:true})
    preferredAddressId?: string;
    @Field(() => Boolean, {nullable:true})
    paymentLinkSent?: boolean;
    @Field(() => Boolean, {nullable:true})
    deliveryConfirmedBySeller?: boolean;
    @Field(() => Int, {nullable:true})
    paymentLinkCount?: number;
    @Field(() => String, {nullable:true})
    orderId?: string;
    @Field(() => String, {nullable:true})
    payload?: string;
    @Field(() => String, {nullable:true})
    consumersLastSeen?: string;
    @Field(() => String, {nullable:true})
    providersLastSeen?: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => UserUncheckedCreateNestedManyWithoutConversationsInput, {nullable:true})
    participants?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutConversationsInput>;
}

@InputType()
export class ConversationUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    productId!: string;
    @Field(() => String, {nullable:false})
    initiatedBy!: string;
    @Field(() => ConversationCreateparticipantIdsInput, {nullable:true})
    participantIds?: InstanceType<typeof ConversationCreateparticipantIdsInput>;
    @Field(() => String, {nullable:true})
    lastMessageId?: string;
    @Field(() => Boolean, {nullable:true})
    valid?: boolean;
    @Field(() => Boolean, {nullable:true})
    enabled?: boolean;
    @Field(() => ConversationType, {nullable:false})
    type!: `${ConversationType}`;
    @Field(() => String, {nullable:true})
    preferredPaymentMethod?: string;
    @Field(() => String, {nullable:true})
    preferredAddressId?: string;
    @Field(() => Boolean, {nullable:true})
    paymentLinkSent?: boolean;
    @Field(() => Boolean, {nullable:true})
    deliveryConfirmedBySeller?: boolean;
    @Field(() => Int, {nullable:true})
    paymentLinkCount?: number;
    @Field(() => String, {nullable:true})
    orderId?: string;
    @Field(() => String, {nullable:true})
    payload?: string;
    @Field(() => String, {nullable:true})
    consumersLastSeen?: string;
    @Field(() => String, {nullable:true})
    providersLastSeen?: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => UserUncheckedCreateNestedManyWithoutConversationsInput, {nullable:true})
    participants?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutConversationsInput>;
}

@InputType()
export class ConversationUncheckedUpdateManyWithoutParticipantsNestedInput {
    @Field(() => [ConversationCreateWithoutParticipantsInput], {nullable:true})
    @Type(() => ConversationCreateWithoutParticipantsInput)
    create?: Array<ConversationCreateWithoutParticipantsInput>;
    @Field(() => [ConversationCreateOrConnectWithoutParticipantsInput], {nullable:true})
    @Type(() => ConversationCreateOrConnectWithoutParticipantsInput)
    connectOrCreate?: Array<ConversationCreateOrConnectWithoutParticipantsInput>;
    @Field(() => [ConversationUpsertWithWhereUniqueWithoutParticipantsInput], {nullable:true})
    @Type(() => ConversationUpsertWithWhereUniqueWithoutParticipantsInput)
    upsert?: Array<ConversationUpsertWithWhereUniqueWithoutParticipantsInput>;
    @Field(() => [ConversationWhereUniqueInput], {nullable:true})
    @Type(() => ConversationWhereUniqueInput)
    set?: Array<Prisma.AtLeast<ConversationWhereUniqueInput, 'id'>>;
    @Field(() => [ConversationWhereUniqueInput], {nullable:true})
    @Type(() => ConversationWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<ConversationWhereUniqueInput, 'id'>>;
    @Field(() => [ConversationWhereUniqueInput], {nullable:true})
    @Type(() => ConversationWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<ConversationWhereUniqueInput, 'id'>>;
    @Field(() => [ConversationWhereUniqueInput], {nullable:true})
    @Type(() => ConversationWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ConversationWhereUniqueInput, 'id'>>;
    @Field(() => [ConversationUpdateWithWhereUniqueWithoutParticipantsInput], {nullable:true})
    @Type(() => ConversationUpdateWithWhereUniqueWithoutParticipantsInput)
    update?: Array<ConversationUpdateWithWhereUniqueWithoutParticipantsInput>;
    @Field(() => [ConversationUpdateManyWithWhereWithoutParticipantsInput], {nullable:true})
    @Type(() => ConversationUpdateManyWithWhereWithoutParticipantsInput)
    updateMany?: Array<ConversationUpdateManyWithWhereWithoutParticipantsInput>;
    @Field(() => [ConversationScalarWhereInput], {nullable:true})
    @Type(() => ConversationScalarWhereInput)
    deleteMany?: Array<ConversationScalarWhereInput>;
}

@InputType()
export class ConversationUncheckedUpdateManyWithoutParticipantsInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    productId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    initiatedBy?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => ConversationUpdateparticipantIdsInput, {nullable:true})
    participantIds?: InstanceType<typeof ConversationUpdateparticipantIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    lastMessageId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    valid?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    enabled?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => EnumConversationTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumConversationTypeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    preferredPaymentMethod?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    preferredAddressId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    paymentLinkSent?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    deliveryConfirmedBySeller?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableIntFieldUpdateOperationsInput, {nullable:true})
    paymentLinkCount?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    orderId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    payload?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    consumersLastSeen?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    providersLastSeen?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class ConversationUncheckedUpdateManyWithoutProductNestedInput {
    @Field(() => [ConversationCreateWithoutProductInput], {nullable:true})
    @Type(() => ConversationCreateWithoutProductInput)
    create?: Array<ConversationCreateWithoutProductInput>;
    @Field(() => [ConversationCreateOrConnectWithoutProductInput], {nullable:true})
    @Type(() => ConversationCreateOrConnectWithoutProductInput)
    connectOrCreate?: Array<ConversationCreateOrConnectWithoutProductInput>;
    @Field(() => [ConversationUpsertWithWhereUniqueWithoutProductInput], {nullable:true})
    @Type(() => ConversationUpsertWithWhereUniqueWithoutProductInput)
    upsert?: Array<ConversationUpsertWithWhereUniqueWithoutProductInput>;
    @Field(() => ConversationCreateManyProductInputEnvelope, {nullable:true})
    @Type(() => ConversationCreateManyProductInputEnvelope)
    createMany?: InstanceType<typeof ConversationCreateManyProductInputEnvelope>;
    @Field(() => [ConversationWhereUniqueInput], {nullable:true})
    @Type(() => ConversationWhereUniqueInput)
    set?: Array<Prisma.AtLeast<ConversationWhereUniqueInput, 'id'>>;
    @Field(() => [ConversationWhereUniqueInput], {nullable:true})
    @Type(() => ConversationWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<ConversationWhereUniqueInput, 'id'>>;
    @Field(() => [ConversationWhereUniqueInput], {nullable:true})
    @Type(() => ConversationWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<ConversationWhereUniqueInput, 'id'>>;
    @Field(() => [ConversationWhereUniqueInput], {nullable:true})
    @Type(() => ConversationWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ConversationWhereUniqueInput, 'id'>>;
    @Field(() => [ConversationUpdateWithWhereUniqueWithoutProductInput], {nullable:true})
    @Type(() => ConversationUpdateWithWhereUniqueWithoutProductInput)
    update?: Array<ConversationUpdateWithWhereUniqueWithoutProductInput>;
    @Field(() => [ConversationUpdateManyWithWhereWithoutProductInput], {nullable:true})
    @Type(() => ConversationUpdateManyWithWhereWithoutProductInput)
    updateMany?: Array<ConversationUpdateManyWithWhereWithoutProductInput>;
    @Field(() => [ConversationScalarWhereInput], {nullable:true})
    @Type(() => ConversationScalarWhereInput)
    deleteMany?: Array<ConversationScalarWhereInput>;
}

@InputType()
export class ConversationUncheckedUpdateManyWithoutProductInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    initiatedBy?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => ConversationUpdateparticipantIdsInput, {nullable:true})
    participantIds?: InstanceType<typeof ConversationUpdateparticipantIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    lastMessageId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    valid?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    enabled?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => EnumConversationTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumConversationTypeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    preferredPaymentMethod?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    preferredAddressId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    paymentLinkSent?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    deliveryConfirmedBySeller?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableIntFieldUpdateOperationsInput, {nullable:true})
    paymentLinkCount?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    orderId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    payload?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    consumersLastSeen?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    providersLastSeen?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class ConversationUncheckedUpdateManyInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    productId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    initiatedBy?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => ConversationUpdateparticipantIdsInput, {nullable:true})
    participantIds?: InstanceType<typeof ConversationUpdateparticipantIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    lastMessageId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    valid?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    enabled?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => EnumConversationTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumConversationTypeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    preferredPaymentMethod?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    preferredAddressId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    paymentLinkSent?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    deliveryConfirmedBySeller?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableIntFieldUpdateOperationsInput, {nullable:true})
    paymentLinkCount?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    orderId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    payload?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    consumersLastSeen?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    providersLastSeen?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class ConversationUncheckedUpdateWithoutParticipantsInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    productId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    initiatedBy?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => ConversationUpdateparticipantIdsInput, {nullable:true})
    participantIds?: InstanceType<typeof ConversationUpdateparticipantIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    lastMessageId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    valid?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    enabled?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => EnumConversationTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumConversationTypeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    preferredPaymentMethod?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    preferredAddressId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    paymentLinkSent?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    deliveryConfirmedBySeller?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableIntFieldUpdateOperationsInput, {nullable:true})
    paymentLinkCount?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    orderId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    payload?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    consumersLastSeen?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    providersLastSeen?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class ConversationUncheckedUpdateWithoutProductInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    initiatedBy?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => ConversationUpdateparticipantIdsInput, {nullable:true})
    participantIds?: InstanceType<typeof ConversationUpdateparticipantIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    lastMessageId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    valid?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    enabled?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => EnumConversationTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumConversationTypeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    preferredPaymentMethod?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    preferredAddressId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    paymentLinkSent?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    deliveryConfirmedBySeller?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableIntFieldUpdateOperationsInput, {nullable:true})
    paymentLinkCount?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    orderId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    payload?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    consumersLastSeen?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    providersLastSeen?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => UserUncheckedUpdateManyWithoutConversationsNestedInput, {nullable:true})
    participants?: InstanceType<typeof UserUncheckedUpdateManyWithoutConversationsNestedInput>;
}

@InputType()
export class ConversationUncheckedUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    productId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    initiatedBy?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => ConversationUpdateparticipantIdsInput, {nullable:true})
    participantIds?: InstanceType<typeof ConversationUpdateparticipantIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    lastMessageId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    valid?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    enabled?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => EnumConversationTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumConversationTypeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    preferredPaymentMethod?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    preferredAddressId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    paymentLinkSent?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    deliveryConfirmedBySeller?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableIntFieldUpdateOperationsInput, {nullable:true})
    paymentLinkCount?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    orderId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    payload?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    consumersLastSeen?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    providersLastSeen?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => UserUncheckedUpdateManyWithoutConversationsNestedInput, {nullable:true})
    participants?: InstanceType<typeof UserUncheckedUpdateManyWithoutConversationsNestedInput>;
}

@InputType()
export class ConversationUpdateManyMutationInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    initiatedBy?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    lastMessageId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    valid?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    enabled?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => EnumConversationTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumConversationTypeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    preferredPaymentMethod?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    preferredAddressId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    paymentLinkSent?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    deliveryConfirmedBySeller?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableIntFieldUpdateOperationsInput, {nullable:true})
    paymentLinkCount?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    orderId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    payload?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    consumersLastSeen?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    providersLastSeen?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class ConversationUpdateManyWithWhereWithoutParticipantsInput {
    @Field(() => ConversationScalarWhereInput, {nullable:false})
    @Type(() => ConversationScalarWhereInput)
    where!: InstanceType<typeof ConversationScalarWhereInput>;
    @Field(() => ConversationUpdateManyMutationInput, {nullable:false})
    @Type(() => ConversationUpdateManyMutationInput)
    data!: InstanceType<typeof ConversationUpdateManyMutationInput>;
}

@InputType()
export class ConversationUpdateManyWithWhereWithoutProductInput {
    @Field(() => ConversationScalarWhereInput, {nullable:false})
    @Type(() => ConversationScalarWhereInput)
    where!: InstanceType<typeof ConversationScalarWhereInput>;
    @Field(() => ConversationUpdateManyMutationInput, {nullable:false})
    @Type(() => ConversationUpdateManyMutationInput)
    data!: InstanceType<typeof ConversationUpdateManyMutationInput>;
}

@InputType()
export class ConversationUpdateManyWithoutParticipantsNestedInput {
    @Field(() => [ConversationCreateWithoutParticipantsInput], {nullable:true})
    @Type(() => ConversationCreateWithoutParticipantsInput)
    create?: Array<ConversationCreateWithoutParticipantsInput>;
    @Field(() => [ConversationCreateOrConnectWithoutParticipantsInput], {nullable:true})
    @Type(() => ConversationCreateOrConnectWithoutParticipantsInput)
    connectOrCreate?: Array<ConversationCreateOrConnectWithoutParticipantsInput>;
    @Field(() => [ConversationUpsertWithWhereUniqueWithoutParticipantsInput], {nullable:true})
    @Type(() => ConversationUpsertWithWhereUniqueWithoutParticipantsInput)
    upsert?: Array<ConversationUpsertWithWhereUniqueWithoutParticipantsInput>;
    @Field(() => [ConversationWhereUniqueInput], {nullable:true})
    @Type(() => ConversationWhereUniqueInput)
    set?: Array<Prisma.AtLeast<ConversationWhereUniqueInput, 'id'>>;
    @Field(() => [ConversationWhereUniqueInput], {nullable:true})
    @Type(() => ConversationWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<ConversationWhereUniqueInput, 'id'>>;
    @Field(() => [ConversationWhereUniqueInput], {nullable:true})
    @Type(() => ConversationWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<ConversationWhereUniqueInput, 'id'>>;
    @Field(() => [ConversationWhereUniqueInput], {nullable:true})
    @Type(() => ConversationWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ConversationWhereUniqueInput, 'id'>>;
    @Field(() => [ConversationUpdateWithWhereUniqueWithoutParticipantsInput], {nullable:true})
    @Type(() => ConversationUpdateWithWhereUniqueWithoutParticipantsInput)
    update?: Array<ConversationUpdateWithWhereUniqueWithoutParticipantsInput>;
    @Field(() => [ConversationUpdateManyWithWhereWithoutParticipantsInput], {nullable:true})
    @Type(() => ConversationUpdateManyWithWhereWithoutParticipantsInput)
    updateMany?: Array<ConversationUpdateManyWithWhereWithoutParticipantsInput>;
    @Field(() => [ConversationScalarWhereInput], {nullable:true})
    @Type(() => ConversationScalarWhereInput)
    deleteMany?: Array<ConversationScalarWhereInput>;
}

@InputType()
export class ConversationUpdateManyWithoutProductNestedInput {
    @Field(() => [ConversationCreateWithoutProductInput], {nullable:true})
    @Type(() => ConversationCreateWithoutProductInput)
    create?: Array<ConversationCreateWithoutProductInput>;
    @Field(() => [ConversationCreateOrConnectWithoutProductInput], {nullable:true})
    @Type(() => ConversationCreateOrConnectWithoutProductInput)
    connectOrCreate?: Array<ConversationCreateOrConnectWithoutProductInput>;
    @Field(() => [ConversationUpsertWithWhereUniqueWithoutProductInput], {nullable:true})
    @Type(() => ConversationUpsertWithWhereUniqueWithoutProductInput)
    upsert?: Array<ConversationUpsertWithWhereUniqueWithoutProductInput>;
    @Field(() => ConversationCreateManyProductInputEnvelope, {nullable:true})
    @Type(() => ConversationCreateManyProductInputEnvelope)
    createMany?: InstanceType<typeof ConversationCreateManyProductInputEnvelope>;
    @Field(() => [ConversationWhereUniqueInput], {nullable:true})
    @Type(() => ConversationWhereUniqueInput)
    set?: Array<Prisma.AtLeast<ConversationWhereUniqueInput, 'id'>>;
    @Field(() => [ConversationWhereUniqueInput], {nullable:true})
    @Type(() => ConversationWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<ConversationWhereUniqueInput, 'id'>>;
    @Field(() => [ConversationWhereUniqueInput], {nullable:true})
    @Type(() => ConversationWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<ConversationWhereUniqueInput, 'id'>>;
    @Field(() => [ConversationWhereUniqueInput], {nullable:true})
    @Type(() => ConversationWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ConversationWhereUniqueInput, 'id'>>;
    @Field(() => [ConversationUpdateWithWhereUniqueWithoutProductInput], {nullable:true})
    @Type(() => ConversationUpdateWithWhereUniqueWithoutProductInput)
    update?: Array<ConversationUpdateWithWhereUniqueWithoutProductInput>;
    @Field(() => [ConversationUpdateManyWithWhereWithoutProductInput], {nullable:true})
    @Type(() => ConversationUpdateManyWithWhereWithoutProductInput)
    updateMany?: Array<ConversationUpdateManyWithWhereWithoutProductInput>;
    @Field(() => [ConversationScalarWhereInput], {nullable:true})
    @Type(() => ConversationScalarWhereInput)
    deleteMany?: Array<ConversationScalarWhereInput>;
}

@InputType()
export class ConversationUpdateWithWhereUniqueWithoutParticipantsInput {
    @Field(() => ConversationWhereUniqueInput, {nullable:false})
    @Type(() => ConversationWhereUniqueInput)
    where!: Prisma.AtLeast<ConversationWhereUniqueInput, 'id'>;
    @Field(() => ConversationUpdateWithoutParticipantsInput, {nullable:false})
    @Type(() => ConversationUpdateWithoutParticipantsInput)
    data!: InstanceType<typeof ConversationUpdateWithoutParticipantsInput>;
}

@InputType()
export class ConversationUpdateWithWhereUniqueWithoutProductInput {
    @Field(() => ConversationWhereUniqueInput, {nullable:false})
    @Type(() => ConversationWhereUniqueInput)
    where!: Prisma.AtLeast<ConversationWhereUniqueInput, 'id'>;
    @Field(() => ConversationUpdateWithoutProductInput, {nullable:false})
    @Type(() => ConversationUpdateWithoutProductInput)
    data!: InstanceType<typeof ConversationUpdateWithoutProductInput>;
}

@InputType()
export class ConversationUpdateWithoutParticipantsInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    initiatedBy?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    lastMessageId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    valid?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    enabled?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => EnumConversationTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumConversationTypeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    preferredPaymentMethod?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    preferredAddressId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    paymentLinkSent?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    deliveryConfirmedBySeller?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableIntFieldUpdateOperationsInput, {nullable:true})
    paymentLinkCount?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    orderId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    payload?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    consumersLastSeen?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    providersLastSeen?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => ProductListingUpdateOneRequiredWithoutConversationsNestedInput, {nullable:true})
    product?: InstanceType<typeof ProductListingUpdateOneRequiredWithoutConversationsNestedInput>;
}

@InputType()
export class ConversationUpdateWithoutProductInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    initiatedBy?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    lastMessageId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    valid?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    enabled?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => EnumConversationTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumConversationTypeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    preferredPaymentMethod?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    preferredAddressId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    paymentLinkSent?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    deliveryConfirmedBySeller?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableIntFieldUpdateOperationsInput, {nullable:true})
    paymentLinkCount?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    orderId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    payload?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    consumersLastSeen?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    providersLastSeen?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => UserUpdateManyWithoutConversationsNestedInput, {nullable:true})
    participants?: InstanceType<typeof UserUpdateManyWithoutConversationsNestedInput>;
}

@InputType()
export class ConversationUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    initiatedBy?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    lastMessageId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    valid?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    enabled?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => EnumConversationTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumConversationTypeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    preferredPaymentMethod?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    preferredAddressId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    paymentLinkSent?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    deliveryConfirmedBySeller?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableIntFieldUpdateOperationsInput, {nullable:true})
    paymentLinkCount?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    orderId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    payload?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    consumersLastSeen?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    providersLastSeen?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => ProductListingUpdateOneRequiredWithoutConversationsNestedInput, {nullable:true})
    product?: InstanceType<typeof ProductListingUpdateOneRequiredWithoutConversationsNestedInput>;
    @Field(() => UserUpdateManyWithoutConversationsNestedInput, {nullable:true})
    participants?: InstanceType<typeof UserUpdateManyWithoutConversationsNestedInput>;
}

@InputType()
export class ConversationUpdateparticipantIdsInput {
    @Field(() => [String], {nullable:true})
    set?: Array<string>;
    @Field(() => [String], {nullable:true})
    push?: Array<string>;
}

@InputType()
export class ConversationUpsertWithWhereUniqueWithoutParticipantsInput {
    @Field(() => ConversationWhereUniqueInput, {nullable:false})
    @Type(() => ConversationWhereUniqueInput)
    where!: Prisma.AtLeast<ConversationWhereUniqueInput, 'id'>;
    @Field(() => ConversationUpdateWithoutParticipantsInput, {nullable:false})
    @Type(() => ConversationUpdateWithoutParticipantsInput)
    update!: InstanceType<typeof ConversationUpdateWithoutParticipantsInput>;
    @Field(() => ConversationCreateWithoutParticipantsInput, {nullable:false})
    @Type(() => ConversationCreateWithoutParticipantsInput)
    create!: InstanceType<typeof ConversationCreateWithoutParticipantsInput>;
}

@InputType()
export class ConversationUpsertWithWhereUniqueWithoutProductInput {
    @Field(() => ConversationWhereUniqueInput, {nullable:false})
    @Type(() => ConversationWhereUniqueInput)
    where!: Prisma.AtLeast<ConversationWhereUniqueInput, 'id'>;
    @Field(() => ConversationUpdateWithoutProductInput, {nullable:false})
    @Type(() => ConversationUpdateWithoutProductInput)
    update!: InstanceType<typeof ConversationUpdateWithoutProductInput>;
    @Field(() => ConversationCreateWithoutProductInput, {nullable:false})
    @Type(() => ConversationCreateWithoutProductInput)
    create!: InstanceType<typeof ConversationCreateWithoutProductInput>;
}

@InputType()
export class ConversationWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => [ConversationWhereInput], {nullable:true})
    AND?: Array<ConversationWhereInput>;
    @Field(() => [ConversationWhereInput], {nullable:true})
    OR?: Array<ConversationWhereInput>;
    @Field(() => [ConversationWhereInput], {nullable:true})
    NOT?: Array<ConversationWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    productId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    initiatedBy?: InstanceType<typeof StringFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    participantIds?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    lastMessageId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => BoolFilter, {nullable:true})
    valid?: InstanceType<typeof BoolFilter>;
    @Field(() => BoolFilter, {nullable:true})
    enabled?: InstanceType<typeof BoolFilter>;
    @Field(() => EnumConversationTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumConversationTypeFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    preferredPaymentMethod?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    preferredAddressId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => BoolNullableFilter, {nullable:true})
    paymentLinkSent?: InstanceType<typeof BoolNullableFilter>;
    @Field(() => BoolNullableFilter, {nullable:true})
    deliveryConfirmedBySeller?: InstanceType<typeof BoolNullableFilter>;
    @Field(() => IntNullableFilter, {nullable:true})
    paymentLinkCount?: InstanceType<typeof IntNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    orderId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    payload?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    consumersLastSeen?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    providersLastSeen?: InstanceType<typeof StringNullableFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => ProductListingRelationFilter, {nullable:true})
    product?: InstanceType<typeof ProductListingRelationFilter>;
    @Field(() => UserListRelationFilter, {nullable:true})
    participants?: InstanceType<typeof UserListRelationFilter>;
}

@InputType()
export class ConversationWhereInput {
    @Field(() => [ConversationWhereInput], {nullable:true})
    AND?: Array<ConversationWhereInput>;
    @Field(() => [ConversationWhereInput], {nullable:true})
    OR?: Array<ConversationWhereInput>;
    @Field(() => [ConversationWhereInput], {nullable:true})
    NOT?: Array<ConversationWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    productId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    initiatedBy?: InstanceType<typeof StringFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    participantIds?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    lastMessageId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => BoolFilter, {nullable:true})
    valid?: InstanceType<typeof BoolFilter>;
    @Field(() => BoolFilter, {nullable:true})
    enabled?: InstanceType<typeof BoolFilter>;
    @Field(() => EnumConversationTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumConversationTypeFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    preferredPaymentMethod?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    preferredAddressId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => BoolNullableFilter, {nullable:true})
    paymentLinkSent?: InstanceType<typeof BoolNullableFilter>;
    @Field(() => BoolNullableFilter, {nullable:true})
    deliveryConfirmedBySeller?: InstanceType<typeof BoolNullableFilter>;
    @Field(() => IntNullableFilter, {nullable:true})
    paymentLinkCount?: InstanceType<typeof IntNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    orderId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    payload?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    consumersLastSeen?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    providersLastSeen?: InstanceType<typeof StringNullableFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => ProductListingRelationFilter, {nullable:true})
    product?: InstanceType<typeof ProductListingRelationFilter>;
    @Field(() => UserListRelationFilter, {nullable:true})
    participants?: InstanceType<typeof UserListRelationFilter>;
}

@ObjectType()
export class Conversation {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    productId!: string;
    @Field(() => String, {nullable:false})
    initiatedBy!: string;
    @Field(() => [String], {nullable:true})
    participantIds!: Array<string>;
    @Field(() => String, {nullable:true})
    lastMessageId!: string | null;
    @Field(() => Boolean, {defaultValue:true,nullable:false})
    valid!: boolean;
    @Field(() => Boolean, {defaultValue:false,nullable:false})
    enabled!: boolean;
    @Field(() => ConversationType, {nullable:false})
    type!: `${ConversationType}`;
    @Field(() => String, {nullable:true})
    preferredPaymentMethod!: string | null;
    @Field(() => String, {nullable:true})
    preferredAddressId!: string | null;
    @Field(() => Boolean, {nullable:true})
    paymentLinkSent!: boolean | null;
    @Field(() => Boolean, {nullable:true})
    deliveryConfirmedBySeller!: boolean | null;
    @Field(() => Int, {nullable:true})
    paymentLinkCount!: number | null;
    @Field(() => String, {nullable:true})
    orderId!: string | null;
    @Field(() => String, {nullable:true})
    payload!: string | null;
    @Field(() => String, {defaultValue:'DEFAULT',nullable:true})
    consumersLastSeen!: string | null;
    @Field(() => String, {defaultValue:'DEFAULT',nullable:true})
    providersLastSeen!: string | null;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
    @Field(() => Date, {nullable:false})
    updatedAt!: Date;
    @Field(() => ProductListing, {nullable:false})
    product?: InstanceType<typeof ProductListing>;
    @Field(() => [User], {nullable:true})
    participants?: Array<User>;
}

@ArgsType()
export class CreateManyConversationArgs {
    @Field(() => [ConversationCreateManyInput], {nullable:false})
    @Type(() => ConversationCreateManyInput)
    data!: Array<ConversationCreateManyInput>;
}

@ArgsType()
export class CreateOneConversationArgs {
    @Field(() => ConversationCreateInput, {nullable:false})
    @Type(() => ConversationCreateInput)
    data!: InstanceType<typeof ConversationCreateInput>;
}

@ArgsType()
export class DeleteManyConversationArgs {
    @Field(() => ConversationWhereInput, {nullable:true})
    @Type(() => ConversationWhereInput)
    where?: InstanceType<typeof ConversationWhereInput>;
}

@ArgsType()
export class DeleteOneConversationArgs {
    @Field(() => ConversationWhereUniqueInput, {nullable:false})
    @Type(() => ConversationWhereUniqueInput)
    where!: Prisma.AtLeast<ConversationWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindFirstConversationOrThrowArgs {
    @Field(() => ConversationWhereInput, {nullable:true})
    @Type(() => ConversationWhereInput)
    where?: InstanceType<typeof ConversationWhereInput>;
    @Field(() => [ConversationOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<ConversationOrderByWithRelationInput>;
    @Field(() => ConversationWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<ConversationWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [ConversationScalarFieldEnum], {nullable:true})
    distinct?: Array<`${ConversationScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstConversationArgs {
    @Field(() => ConversationWhereInput, {nullable:true})
    @Type(() => ConversationWhereInput)
    where?: InstanceType<typeof ConversationWhereInput>;
    @Field(() => [ConversationOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<ConversationOrderByWithRelationInput>;
    @Field(() => ConversationWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<ConversationWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [ConversationScalarFieldEnum], {nullable:true})
    distinct?: Array<`${ConversationScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyConversationArgs {
    @Field(() => ConversationWhereInput, {nullable:true})
    @Type(() => ConversationWhereInput)
    where?: InstanceType<typeof ConversationWhereInput>;
    @Field(() => [ConversationOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<ConversationOrderByWithRelationInput>;
    @Field(() => ConversationWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<ConversationWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [ConversationScalarFieldEnum], {nullable:true})
    distinct?: Array<`${ConversationScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniqueConversationOrThrowArgs {
    @Field(() => ConversationWhereUniqueInput, {nullable:false})
    @Type(() => ConversationWhereUniqueInput)
    where!: Prisma.AtLeast<ConversationWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindUniqueConversationArgs {
    @Field(() => ConversationWhereUniqueInput, {nullable:false})
    @Type(() => ConversationWhereUniqueInput)
    where!: Prisma.AtLeast<ConversationWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpdateManyConversationArgs {
    @Field(() => ConversationUpdateManyMutationInput, {nullable:false})
    @Type(() => ConversationUpdateManyMutationInput)
    data!: InstanceType<typeof ConversationUpdateManyMutationInput>;
    @Field(() => ConversationWhereInput, {nullable:true})
    @Type(() => ConversationWhereInput)
    where?: InstanceType<typeof ConversationWhereInput>;
}

@ArgsType()
export class UpdateOneConversationArgs {
    @Field(() => ConversationUpdateInput, {nullable:false})
    @Type(() => ConversationUpdateInput)
    data!: InstanceType<typeof ConversationUpdateInput>;
    @Field(() => ConversationWhereUniqueInput, {nullable:false})
    @Type(() => ConversationWhereUniqueInput)
    where!: Prisma.AtLeast<ConversationWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpsertOneConversationArgs {
    @Field(() => ConversationWhereUniqueInput, {nullable:false})
    @Type(() => ConversationWhereUniqueInput)
    where!: Prisma.AtLeast<ConversationWhereUniqueInput, 'id'>;
    @Field(() => ConversationCreateInput, {nullable:false})
    @Type(() => ConversationCreateInput)
    create!: InstanceType<typeof ConversationCreateInput>;
    @Field(() => ConversationUpdateInput, {nullable:false})
    @Type(() => ConversationUpdateInput)
    update!: InstanceType<typeof ConversationUpdateInput>;
}

@InputType()
export class CounterSellerOfferBubbleCreateEnvelopeInput {
    @Field(() => CounterSellerOfferBubbleCreateInput, {nullable:true})
    @Type(() => CounterSellerOfferBubbleCreateInput)
    set?: InstanceType<typeof CounterSellerOfferBubbleCreateInput>;
}

@InputType()
export class CounterSellerOfferBubbleCreateInput {
    @Field(() => String, {nullable:false})
    headerText!: string;
    @Field(() => Float, {nullable:false})
    offerPrice!: number;
}

@InputType()
export class CounterSellerOfferBubbleOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    headerText?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    offerPrice?: `${SortOrder}`;
}

@InputType()
export class CounterSellerOfferBubbleUpdateEnvelopeInput {
    @Field(() => CounterSellerOfferBubbleCreateInput, {nullable:true})
    @Type(() => CounterSellerOfferBubbleCreateInput)
    set?: InstanceType<typeof CounterSellerOfferBubbleCreateInput>;
    @Field(() => CounterSellerOfferBubbleUpdateInput, {nullable:true})
    @Type(() => CounterSellerOfferBubbleUpdateInput)
    update?: InstanceType<typeof CounterSellerOfferBubbleUpdateInput>;
}

@InputType()
export class CounterSellerOfferBubbleUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    headerText?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    offerPrice?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
}

@InputType()
export class CounterSellerOfferBubbleWhereInput {
    @Field(() => [CounterSellerOfferBubbleWhereInput], {nullable:true})
    AND?: Array<CounterSellerOfferBubbleWhereInput>;
    @Field(() => [CounterSellerOfferBubbleWhereInput], {nullable:true})
    OR?: Array<CounterSellerOfferBubbleWhereInput>;
    @Field(() => [CounterSellerOfferBubbleWhereInput], {nullable:true})
    NOT?: Array<CounterSellerOfferBubbleWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    headerText?: InstanceType<typeof StringFilter>;
    @Field(() => FloatFilter, {nullable:true})
    offerPrice?: InstanceType<typeof FloatFilter>;
}

@ObjectType()
export class CounterSellerOfferBubble {
    @Field(() => String, {nullable:false})
    headerText!: string;
    @Field(() => Float, {nullable:false})
    offerPrice!: number;
}

@InputType()
export class DateRangeCreateEnvelopeInput {
    @Field(() => DateRangeCreateInput, {nullable:true})
    @Type(() => DateRangeCreateInput)
    set?: InstanceType<typeof DateRangeCreateInput>;
}

@InputType()
export class DateRangeCreateInput {
    @Field(() => Date, {nullable:false})
    startDate!: Date | string;
    @Field(() => Date, {nullable:false})
    endDate!: Date | string;
}

@InputType()
export class DateRangeOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    startDate?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    endDate?: `${SortOrder}`;
}

@InputType()
export class DateRangeUpdateEnvelopeInput {
    @Field(() => DateRangeCreateInput, {nullable:true})
    @Type(() => DateRangeCreateInput)
    set?: InstanceType<typeof DateRangeCreateInput>;
    @Field(() => DateRangeUpdateInput, {nullable:true})
    @Type(() => DateRangeUpdateInput)
    update?: InstanceType<typeof DateRangeUpdateInput>;
}

@InputType()
export class DateRangeUpdateInput {
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    startDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    endDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class DateRangeWhereInput {
    @Field(() => [DateRangeWhereInput], {nullable:true})
    AND?: Array<DateRangeWhereInput>;
    @Field(() => [DateRangeWhereInput], {nullable:true})
    OR?: Array<DateRangeWhereInput>;
    @Field(() => [DateRangeWhereInput], {nullable:true})
    NOT?: Array<DateRangeWhereInput>;
    @Field(() => DateTimeFilter, {nullable:true})
    startDate?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    endDate?: InstanceType<typeof DateTimeFilter>;
}

@ObjectType()
export class DateRange {
    @Field(() => Date, {nullable:false})
    startDate!: Date;
    @Field(() => Date, {nullable:false})
    endDate!: Date;
}

@ArgsType()
export class CreateManyDealArgs {
    @Field(() => [DealCreateManyInput], {nullable:false})
    @Type(() => DealCreateManyInput)
    data!: Array<DealCreateManyInput>;
}

@ArgsType()
export class CreateOneDealArgs {
    @Field(() => DealCreateInput, {nullable:false})
    @Type(() => DealCreateInput)
    data!: InstanceType<typeof DealCreateInput>;
}

@ArgsType()
export class DealAggregateArgs {
    @Field(() => DealWhereInput, {nullable:true})
    @Type(() => DealWhereInput)
    where?: InstanceType<typeof DealWhereInput>;
    @Field(() => [DealOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<DealOrderByWithRelationInput>;
    @Field(() => DealWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<DealWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class DealCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    image?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    url?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    couponCode?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    savedUserIds?: `${SortOrder}`;
}

@InputType()
export class DealCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => [EduInstituteSelectOptionCreateInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionCreateInput>;
    @Field(() => DealBusinessDetailsCreateEnvelopeInput, {nullable:false})
    business!: InstanceType<typeof DealBusinessDetailsCreateEnvelopeInput>;
    @Field(() => DealTextContentCreateEnvelopeInput, {nullable:false})
    content!: InstanceType<typeof DealTextContentCreateEnvelopeInput>;
    @Field(() => String, {nullable:true})
    url?: string;
    @Field(() => DealType, {nullable:false})
    type!: `${DealType}`;
    @Field(() => String, {nullable:true})
    couponCode?: string;
    @Field(() => DateRangeCreateEnvelopeInput, {nullable:false})
    validity!: InstanceType<typeof DateRangeCreateEnvelopeInput>;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => DealCreatesavedUserIdsInput, {nullable:true})
    savedUserIds?: InstanceType<typeof DealCreatesavedUserIdsInput>;
}

@InputType()
export class DealCreateNestedManyWithoutSavedUsersInput {
    @Field(() => [DealCreateWithoutSavedUsersInput], {nullable:true})
    @Type(() => DealCreateWithoutSavedUsersInput)
    create?: Array<DealCreateWithoutSavedUsersInput>;
    @Field(() => [DealCreateOrConnectWithoutSavedUsersInput], {nullable:true})
    @Type(() => DealCreateOrConnectWithoutSavedUsersInput)
    connectOrCreate?: Array<DealCreateOrConnectWithoutSavedUsersInput>;
    @Field(() => [DealWhereUniqueInput], {nullable:true})
    @Type(() => DealWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<DealWhereUniqueInput, 'id'>>;
}

@InputType()
export class DealCreateOrConnectWithoutSavedUsersInput {
    @Field(() => DealWhereUniqueInput, {nullable:false})
    @Type(() => DealWhereUniqueInput)
    where!: Prisma.AtLeast<DealWhereUniqueInput, 'id'>;
    @Field(() => DealCreateWithoutSavedUsersInput, {nullable:false})
    @Type(() => DealCreateWithoutSavedUsersInput)
    create!: InstanceType<typeof DealCreateWithoutSavedUsersInput>;
}

@InputType()
export class DealCreateWithoutSavedUsersInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => [EduInstituteSelectOptionCreateInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionCreateInput>;
    @Field(() => DealBusinessDetailsCreateEnvelopeInput, {nullable:false})
    business!: InstanceType<typeof DealBusinessDetailsCreateEnvelopeInput>;
    @Field(() => DealTextContentCreateEnvelopeInput, {nullable:false})
    content!: InstanceType<typeof DealTextContentCreateEnvelopeInput>;
    @Field(() => String, {nullable:true})
    url?: string;
    @Field(() => DealType, {nullable:false})
    type!: `${DealType}`;
    @Field(() => String, {nullable:true})
    couponCode?: string;
    @Field(() => DateRangeCreateEnvelopeInput, {nullable:false})
    validity!: InstanceType<typeof DateRangeCreateEnvelopeInput>;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class DealCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => [EduInstituteSelectOptionCreateInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionCreateInput>;
    @Field(() => DealBusinessDetailsCreateEnvelopeInput, {nullable:false})
    business!: InstanceType<typeof DealBusinessDetailsCreateEnvelopeInput>;
    @Field(() => DealTextContentCreateEnvelopeInput, {nullable:false})
    content!: InstanceType<typeof DealTextContentCreateEnvelopeInput>;
    @Field(() => String, {nullable:true})
    url?: string;
    @Field(() => DealType, {nullable:false})
    type!: `${DealType}`;
    @Field(() => String, {nullable:true})
    couponCode?: string;
    @Field(() => DateRangeCreateEnvelopeInput, {nullable:false})
    validity!: InstanceType<typeof DateRangeCreateEnvelopeInput>;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => UserCreateNestedManyWithoutSavedDealsInput, {nullable:true})
    savedUsers?: InstanceType<typeof UserCreateNestedManyWithoutSavedDealsInput>;
}

@InputType()
export class DealCreatesavedUserIdsInput {
    @Field(() => [String], {nullable:false})
    set!: Array<string>;
}

@ArgsType()
export class DealGroupByArgs {
    @Field(() => DealWhereInput, {nullable:true})
    @Type(() => DealWhereInput)
    where?: InstanceType<typeof DealWhereInput>;
    @Field(() => [DealOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<DealOrderByWithAggregationInput>;
    @Field(() => [DealScalarFieldEnum], {nullable:false})
    by!: Array<`${DealScalarFieldEnum}`>;
    @Field(() => DealScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof DealScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class DealListRelationFilter {
    @Field(() => DealWhereInput, {nullable:true})
    every?: InstanceType<typeof DealWhereInput>;
    @Field(() => DealWhereInput, {nullable:true})
    some?: InstanceType<typeof DealWhereInput>;
    @Field(() => DealWhereInput, {nullable:true})
    none?: InstanceType<typeof DealWhereInput>;
}

@InputType()
export class DealMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    image?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    url?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    couponCode?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class DealMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    image?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    url?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    couponCode?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class DealOrderByRelationAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    _count?: `${SortOrder}`;
}

@InputType()
export class DealOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    image?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    url?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    couponCode?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    savedUserIds?: `${SortOrder}`;
    @Field(() => DealCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof DealCountOrderByAggregateInput>;
    @Field(() => DealMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof DealMaxOrderByAggregateInput>;
    @Field(() => DealMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof DealMinOrderByAggregateInput>;
}

@InputType()
export class DealOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    image?: `${SortOrder}`;
    @Field(() => EduInstituteSelectOptionOrderByCompositeAggregateInput, {nullable:true})
    selectedEduInstitutes?: InstanceType<typeof EduInstituteSelectOptionOrderByCompositeAggregateInput>;
    @Field(() => DealBusinessDetailsOrderByInput, {nullable:true})
    business?: InstanceType<typeof DealBusinessDetailsOrderByInput>;
    @Field(() => DealTextContentOrderByInput, {nullable:true})
    content?: InstanceType<typeof DealTextContentOrderByInput>;
    @Field(() => SortOrder, {nullable:true})
    url?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    couponCode?: `${SortOrder}`;
    @Field(() => DateRangeOrderByInput, {nullable:true})
    validity?: InstanceType<typeof DateRangeOrderByInput>;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    savedUserIds?: `${SortOrder}`;
    @Field(() => UserOrderByRelationAggregateInput, {nullable:true})
    savedUsers?: InstanceType<typeof UserOrderByRelationAggregateInput>;
}

@InputType()
export class DealScalarWhereWithAggregatesInput {
    @Field(() => [DealScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<DealScalarWhereWithAggregatesInput>;
    @Field(() => [DealScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<DealScalarWhereWithAggregatesInput>;
    @Field(() => [DealScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<DealScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    name?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    image?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    url?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => EnumDealTypeWithAggregatesFilter, {nullable:true})
    type?: InstanceType<typeof EnumDealTypeWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    couponCode?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => BoolWithAggregatesFilter, {nullable:true})
    active?: InstanceType<typeof BoolWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    savedUserIds?: InstanceType<typeof StringNullableListFilter>;
}

@InputType()
export class DealScalarWhereInput {
    @Field(() => [DealScalarWhereInput], {nullable:true})
    AND?: Array<DealScalarWhereInput>;
    @Field(() => [DealScalarWhereInput], {nullable:true})
    OR?: Array<DealScalarWhereInput>;
    @Field(() => [DealScalarWhereInput], {nullable:true})
    NOT?: Array<DealScalarWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    name?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    image?: InstanceType<typeof StringFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    url?: InstanceType<typeof StringNullableFilter>;
    @Field(() => EnumDealTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumDealTypeFilter>;
    @Field(() => StringFilter, {nullable:true})
    couponCode?: InstanceType<typeof StringFilter>;
    @Field(() => BoolFilter, {nullable:true})
    active?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    savedUserIds?: InstanceType<typeof StringNullableListFilter>;
}

@InputType()
export class DealUncheckedCreateNestedManyWithoutSavedUsersInput {
    @Field(() => [DealCreateWithoutSavedUsersInput], {nullable:true})
    @Type(() => DealCreateWithoutSavedUsersInput)
    create?: Array<DealCreateWithoutSavedUsersInput>;
    @Field(() => [DealCreateOrConnectWithoutSavedUsersInput], {nullable:true})
    @Type(() => DealCreateOrConnectWithoutSavedUsersInput)
    connectOrCreate?: Array<DealCreateOrConnectWithoutSavedUsersInput>;
    @Field(() => [DealWhereUniqueInput], {nullable:true})
    @Type(() => DealWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<DealWhereUniqueInput, 'id'>>;
}

@InputType()
export class DealUncheckedCreateWithoutSavedUsersInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => [EduInstituteSelectOptionCreateInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionCreateInput>;
    @Field(() => DealBusinessDetailsCreateEnvelopeInput, {nullable:false})
    business!: InstanceType<typeof DealBusinessDetailsCreateEnvelopeInput>;
    @Field(() => DealTextContentCreateEnvelopeInput, {nullable:false})
    content!: InstanceType<typeof DealTextContentCreateEnvelopeInput>;
    @Field(() => String, {nullable:true})
    url?: string;
    @Field(() => DealType, {nullable:false})
    type!: `${DealType}`;
    @Field(() => String, {nullable:true})
    couponCode?: string;
    @Field(() => DateRangeCreateEnvelopeInput, {nullable:false})
    validity!: InstanceType<typeof DateRangeCreateEnvelopeInput>;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => DealCreatesavedUserIdsInput, {nullable:true})
    savedUserIds?: InstanceType<typeof DealCreatesavedUserIdsInput>;
}

@InputType()
export class DealUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => [EduInstituteSelectOptionCreateInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionCreateInput>;
    @Field(() => DealBusinessDetailsCreateEnvelopeInput, {nullable:false})
    business!: InstanceType<typeof DealBusinessDetailsCreateEnvelopeInput>;
    @Field(() => DealTextContentCreateEnvelopeInput, {nullable:false})
    content!: InstanceType<typeof DealTextContentCreateEnvelopeInput>;
    @Field(() => String, {nullable:true})
    url?: string;
    @Field(() => DealType, {nullable:false})
    type!: `${DealType}`;
    @Field(() => String, {nullable:true})
    couponCode?: string;
    @Field(() => DateRangeCreateEnvelopeInput, {nullable:false})
    validity!: InstanceType<typeof DateRangeCreateEnvelopeInput>;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => DealCreatesavedUserIdsInput, {nullable:true})
    savedUserIds?: InstanceType<typeof DealCreatesavedUserIdsInput>;
    @Field(() => UserUncheckedCreateNestedManyWithoutSavedDealsInput, {nullable:true})
    savedUsers?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutSavedDealsInput>;
}

@InputType()
export class DealUncheckedUpdateManyWithoutSavedUsersNestedInput {
    @Field(() => [DealCreateWithoutSavedUsersInput], {nullable:true})
    @Type(() => DealCreateWithoutSavedUsersInput)
    create?: Array<DealCreateWithoutSavedUsersInput>;
    @Field(() => [DealCreateOrConnectWithoutSavedUsersInput], {nullable:true})
    @Type(() => DealCreateOrConnectWithoutSavedUsersInput)
    connectOrCreate?: Array<DealCreateOrConnectWithoutSavedUsersInput>;
    @Field(() => [DealUpsertWithWhereUniqueWithoutSavedUsersInput], {nullable:true})
    @Type(() => DealUpsertWithWhereUniqueWithoutSavedUsersInput)
    upsert?: Array<DealUpsertWithWhereUniqueWithoutSavedUsersInput>;
    @Field(() => [DealWhereUniqueInput], {nullable:true})
    @Type(() => DealWhereUniqueInput)
    set?: Array<Prisma.AtLeast<DealWhereUniqueInput, 'id'>>;
    @Field(() => [DealWhereUniqueInput], {nullable:true})
    @Type(() => DealWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<DealWhereUniqueInput, 'id'>>;
    @Field(() => [DealWhereUniqueInput], {nullable:true})
    @Type(() => DealWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<DealWhereUniqueInput, 'id'>>;
    @Field(() => [DealWhereUniqueInput], {nullable:true})
    @Type(() => DealWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<DealWhereUniqueInput, 'id'>>;
    @Field(() => [DealUpdateWithWhereUniqueWithoutSavedUsersInput], {nullable:true})
    @Type(() => DealUpdateWithWhereUniqueWithoutSavedUsersInput)
    update?: Array<DealUpdateWithWhereUniqueWithoutSavedUsersInput>;
    @Field(() => [DealUpdateManyWithWhereWithoutSavedUsersInput], {nullable:true})
    @Type(() => DealUpdateManyWithWhereWithoutSavedUsersInput)
    updateMany?: Array<DealUpdateManyWithWhereWithoutSavedUsersInput>;
    @Field(() => [DealScalarWhereInput], {nullable:true})
    @Type(() => DealScalarWhereInput)
    deleteMany?: Array<DealScalarWhereInput>;
}

@InputType()
export class DealUncheckedUpdateManyWithoutSavedUsersInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => [EduInstituteSelectOptionCreateInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionCreateInput>;
    @Field(() => DealBusinessDetailsUpdateEnvelopeInput, {nullable:true})
    business?: InstanceType<typeof DealBusinessDetailsUpdateEnvelopeInput>;
    @Field(() => DealTextContentUpdateEnvelopeInput, {nullable:true})
    content?: InstanceType<typeof DealTextContentUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    url?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => EnumDealTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumDealTypeFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    couponCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateRangeUpdateEnvelopeInput, {nullable:true})
    validity?: InstanceType<typeof DateRangeUpdateEnvelopeInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DealUpdatesavedUserIdsInput, {nullable:true})
    savedUserIds?: InstanceType<typeof DealUpdatesavedUserIdsInput>;
}

@InputType()
export class DealUncheckedUpdateManyInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => [EduInstituteSelectOptionCreateInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionCreateInput>;
    @Field(() => DealBusinessDetailsUpdateEnvelopeInput, {nullable:true})
    business?: InstanceType<typeof DealBusinessDetailsUpdateEnvelopeInput>;
    @Field(() => DealTextContentUpdateEnvelopeInput, {nullable:true})
    content?: InstanceType<typeof DealTextContentUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    url?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => EnumDealTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumDealTypeFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    couponCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateRangeUpdateEnvelopeInput, {nullable:true})
    validity?: InstanceType<typeof DateRangeUpdateEnvelopeInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DealUpdatesavedUserIdsInput, {nullable:true})
    savedUserIds?: InstanceType<typeof DealUpdatesavedUserIdsInput>;
}

@InputType()
export class DealUncheckedUpdateWithoutSavedUsersInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => [EduInstituteSelectOptionCreateInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionCreateInput>;
    @Field(() => DealBusinessDetailsUpdateEnvelopeInput, {nullable:true})
    business?: InstanceType<typeof DealBusinessDetailsUpdateEnvelopeInput>;
    @Field(() => DealTextContentUpdateEnvelopeInput, {nullable:true})
    content?: InstanceType<typeof DealTextContentUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    url?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => EnumDealTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumDealTypeFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    couponCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateRangeUpdateEnvelopeInput, {nullable:true})
    validity?: InstanceType<typeof DateRangeUpdateEnvelopeInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DealUpdatesavedUserIdsInput, {nullable:true})
    savedUserIds?: InstanceType<typeof DealUpdatesavedUserIdsInput>;
}

@InputType()
export class DealUncheckedUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => [EduInstituteSelectOptionCreateInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionCreateInput>;
    @Field(() => DealBusinessDetailsUpdateEnvelopeInput, {nullable:true})
    business?: InstanceType<typeof DealBusinessDetailsUpdateEnvelopeInput>;
    @Field(() => DealTextContentUpdateEnvelopeInput, {nullable:true})
    content?: InstanceType<typeof DealTextContentUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    url?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => EnumDealTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumDealTypeFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    couponCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateRangeUpdateEnvelopeInput, {nullable:true})
    validity?: InstanceType<typeof DateRangeUpdateEnvelopeInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DealUpdatesavedUserIdsInput, {nullable:true})
    savedUserIds?: InstanceType<typeof DealUpdatesavedUserIdsInput>;
    @Field(() => UserUncheckedUpdateManyWithoutSavedDealsNestedInput, {nullable:true})
    savedUsers?: InstanceType<typeof UserUncheckedUpdateManyWithoutSavedDealsNestedInput>;
}

@InputType()
export class DealUpdateManyMutationInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => [EduInstituteSelectOptionCreateInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionCreateInput>;
    @Field(() => DealBusinessDetailsUpdateEnvelopeInput, {nullable:true})
    business?: InstanceType<typeof DealBusinessDetailsUpdateEnvelopeInput>;
    @Field(() => DealTextContentUpdateEnvelopeInput, {nullable:true})
    content?: InstanceType<typeof DealTextContentUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    url?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => EnumDealTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumDealTypeFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    couponCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateRangeUpdateEnvelopeInput, {nullable:true})
    validity?: InstanceType<typeof DateRangeUpdateEnvelopeInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class DealUpdateManyWithWhereWithoutSavedUsersInput {
    @Field(() => DealScalarWhereInput, {nullable:false})
    @Type(() => DealScalarWhereInput)
    where!: InstanceType<typeof DealScalarWhereInput>;
    @Field(() => DealUpdateManyMutationInput, {nullable:false})
    @Type(() => DealUpdateManyMutationInput)
    data!: InstanceType<typeof DealUpdateManyMutationInput>;
}

@InputType()
export class DealUpdateManyWithoutSavedUsersNestedInput {
    @Field(() => [DealCreateWithoutSavedUsersInput], {nullable:true})
    @Type(() => DealCreateWithoutSavedUsersInput)
    create?: Array<DealCreateWithoutSavedUsersInput>;
    @Field(() => [DealCreateOrConnectWithoutSavedUsersInput], {nullable:true})
    @Type(() => DealCreateOrConnectWithoutSavedUsersInput)
    connectOrCreate?: Array<DealCreateOrConnectWithoutSavedUsersInput>;
    @Field(() => [DealUpsertWithWhereUniqueWithoutSavedUsersInput], {nullable:true})
    @Type(() => DealUpsertWithWhereUniqueWithoutSavedUsersInput)
    upsert?: Array<DealUpsertWithWhereUniqueWithoutSavedUsersInput>;
    @Field(() => [DealWhereUniqueInput], {nullable:true})
    @Type(() => DealWhereUniqueInput)
    set?: Array<Prisma.AtLeast<DealWhereUniqueInput, 'id'>>;
    @Field(() => [DealWhereUniqueInput], {nullable:true})
    @Type(() => DealWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<DealWhereUniqueInput, 'id'>>;
    @Field(() => [DealWhereUniqueInput], {nullable:true})
    @Type(() => DealWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<DealWhereUniqueInput, 'id'>>;
    @Field(() => [DealWhereUniqueInput], {nullable:true})
    @Type(() => DealWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<DealWhereUniqueInput, 'id'>>;
    @Field(() => [DealUpdateWithWhereUniqueWithoutSavedUsersInput], {nullable:true})
    @Type(() => DealUpdateWithWhereUniqueWithoutSavedUsersInput)
    update?: Array<DealUpdateWithWhereUniqueWithoutSavedUsersInput>;
    @Field(() => [DealUpdateManyWithWhereWithoutSavedUsersInput], {nullable:true})
    @Type(() => DealUpdateManyWithWhereWithoutSavedUsersInput)
    updateMany?: Array<DealUpdateManyWithWhereWithoutSavedUsersInput>;
    @Field(() => [DealScalarWhereInput], {nullable:true})
    @Type(() => DealScalarWhereInput)
    deleteMany?: Array<DealScalarWhereInput>;
}

@InputType()
export class DealUpdateWithWhereUniqueWithoutSavedUsersInput {
    @Field(() => DealWhereUniqueInput, {nullable:false})
    @Type(() => DealWhereUniqueInput)
    where!: Prisma.AtLeast<DealWhereUniqueInput, 'id'>;
    @Field(() => DealUpdateWithoutSavedUsersInput, {nullable:false})
    @Type(() => DealUpdateWithoutSavedUsersInput)
    data!: InstanceType<typeof DealUpdateWithoutSavedUsersInput>;
}

@InputType()
export class DealUpdateWithoutSavedUsersInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => [EduInstituteSelectOptionCreateInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionCreateInput>;
    @Field(() => DealBusinessDetailsUpdateEnvelopeInput, {nullable:true})
    business?: InstanceType<typeof DealBusinessDetailsUpdateEnvelopeInput>;
    @Field(() => DealTextContentUpdateEnvelopeInput, {nullable:true})
    content?: InstanceType<typeof DealTextContentUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    url?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => EnumDealTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumDealTypeFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    couponCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateRangeUpdateEnvelopeInput, {nullable:true})
    validity?: InstanceType<typeof DateRangeUpdateEnvelopeInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class DealUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => [EduInstituteSelectOptionCreateInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionCreateInput>;
    @Field(() => DealBusinessDetailsUpdateEnvelopeInput, {nullable:true})
    business?: InstanceType<typeof DealBusinessDetailsUpdateEnvelopeInput>;
    @Field(() => DealTextContentUpdateEnvelopeInput, {nullable:true})
    content?: InstanceType<typeof DealTextContentUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    url?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => EnumDealTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumDealTypeFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    couponCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateRangeUpdateEnvelopeInput, {nullable:true})
    validity?: InstanceType<typeof DateRangeUpdateEnvelopeInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => UserUpdateManyWithoutSavedDealsNestedInput, {nullable:true})
    savedUsers?: InstanceType<typeof UserUpdateManyWithoutSavedDealsNestedInput>;
}

@InputType()
export class DealUpdatesavedUserIdsInput {
    @Field(() => [String], {nullable:true})
    set?: Array<string>;
    @Field(() => [String], {nullable:true})
    push?: Array<string>;
}

@InputType()
export class DealUpsertWithWhereUniqueWithoutSavedUsersInput {
    @Field(() => DealWhereUniqueInput, {nullable:false})
    @Type(() => DealWhereUniqueInput)
    where!: Prisma.AtLeast<DealWhereUniqueInput, 'id'>;
    @Field(() => DealUpdateWithoutSavedUsersInput, {nullable:false})
    @Type(() => DealUpdateWithoutSavedUsersInput)
    update!: InstanceType<typeof DealUpdateWithoutSavedUsersInput>;
    @Field(() => DealCreateWithoutSavedUsersInput, {nullable:false})
    @Type(() => DealCreateWithoutSavedUsersInput)
    create!: InstanceType<typeof DealCreateWithoutSavedUsersInput>;
}

@InputType()
export class DealWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => [DealWhereInput], {nullable:true})
    AND?: Array<DealWhereInput>;
    @Field(() => [DealWhereInput], {nullable:true})
    OR?: Array<DealWhereInput>;
    @Field(() => [DealWhereInput], {nullable:true})
    NOT?: Array<DealWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    name?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    image?: InstanceType<typeof StringFilter>;
    @Field(() => [EduInstituteSelectOptionObjectEqualityInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionObjectEqualityInput>;
    @Field(() => DealBusinessDetailsCompositeFilter, {nullable:true})
    business?: InstanceType<typeof DealBusinessDetailsCompositeFilter>;
    @Field(() => DealTextContentCompositeFilter, {nullable:true})
    content?: InstanceType<typeof DealTextContentCompositeFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    url?: InstanceType<typeof StringNullableFilter>;
    @Field(() => EnumDealTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumDealTypeFilter>;
    @Field(() => StringFilter, {nullable:true})
    couponCode?: InstanceType<typeof StringFilter>;
    @Field(() => DateRangeCompositeFilter, {nullable:true})
    validity?: InstanceType<typeof DateRangeCompositeFilter>;
    @Field(() => BoolFilter, {nullable:true})
    active?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    savedUserIds?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => UserListRelationFilter, {nullable:true})
    savedUsers?: InstanceType<typeof UserListRelationFilter>;
}

@InputType()
export class DealWhereInput {
    @Field(() => [DealWhereInput], {nullable:true})
    AND?: Array<DealWhereInput>;
    @Field(() => [DealWhereInput], {nullable:true})
    OR?: Array<DealWhereInput>;
    @Field(() => [DealWhereInput], {nullable:true})
    NOT?: Array<DealWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    name?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    image?: InstanceType<typeof StringFilter>;
    @Field(() => [EduInstituteSelectOptionObjectEqualityInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionObjectEqualityInput>;
    @Field(() => DealBusinessDetailsCompositeFilter, {nullable:true})
    business?: InstanceType<typeof DealBusinessDetailsCompositeFilter>;
    @Field(() => DealTextContentCompositeFilter, {nullable:true})
    content?: InstanceType<typeof DealTextContentCompositeFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    url?: InstanceType<typeof StringNullableFilter>;
    @Field(() => EnumDealTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumDealTypeFilter>;
    @Field(() => StringFilter, {nullable:true})
    couponCode?: InstanceType<typeof StringFilter>;
    @Field(() => DateRangeCompositeFilter, {nullable:true})
    validity?: InstanceType<typeof DateRangeCompositeFilter>;
    @Field(() => BoolFilter, {nullable:true})
    active?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    savedUserIds?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => UserListRelationFilter, {nullable:true})
    savedUsers?: InstanceType<typeof UserListRelationFilter>;
}

@ObjectType()
export class Deal {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => [EduInstituteSelectOption], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOption>;
    @Field(() => DealBusinessDetails, {nullable:false})
    business?: InstanceType<typeof DealBusinessDetails>;
    @Field(() => DealTextContent, {nullable:false})
    content?: InstanceType<typeof DealTextContent>;
    @Field(() => String, {nullable:true})
    url!: string | null;
    @Field(() => DealType, {nullable:false})
    type!: `${DealType}`;
    @Field(() => String, {defaultValue:'',nullable:false})
    couponCode!: string;
    @Field(() => DateRange, {nullable:false})
    validity?: InstanceType<typeof DateRange>;
    @Field(() => Boolean, {defaultValue:false,nullable:false})
    active!: boolean;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
    @Field(() => Date, {nullable:false})
    updatedAt!: Date;
    @Field(() => [String], {nullable:true})
    savedUserIds!: Array<string>;
    @Field(() => [User], {nullable:true})
    savedUsers?: Array<User>;
}

@ArgsType()
export class DeleteManyDealArgs {
    @Field(() => DealWhereInput, {nullable:true})
    @Type(() => DealWhereInput)
    where?: InstanceType<typeof DealWhereInput>;
}

@ArgsType()
export class DeleteOneDealArgs {
    @Field(() => DealWhereUniqueInput, {nullable:false})
    @Type(() => DealWhereUniqueInput)
    where!: Prisma.AtLeast<DealWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindFirstDealOrThrowArgs {
    @Field(() => DealWhereInput, {nullable:true})
    @Type(() => DealWhereInput)
    where?: InstanceType<typeof DealWhereInput>;
    @Field(() => [DealOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<DealOrderByWithRelationInput>;
    @Field(() => DealWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<DealWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [DealScalarFieldEnum], {nullable:true})
    distinct?: Array<`${DealScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstDealArgs {
    @Field(() => DealWhereInput, {nullable:true})
    @Type(() => DealWhereInput)
    where?: InstanceType<typeof DealWhereInput>;
    @Field(() => [DealOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<DealOrderByWithRelationInput>;
    @Field(() => DealWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<DealWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [DealScalarFieldEnum], {nullable:true})
    distinct?: Array<`${DealScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyDealArgs {
    @Field(() => DealWhereInput, {nullable:true})
    @Type(() => DealWhereInput)
    where?: InstanceType<typeof DealWhereInput>;
    @Field(() => [DealOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<DealOrderByWithRelationInput>;
    @Field(() => DealWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<DealWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [DealScalarFieldEnum], {nullable:true})
    distinct?: Array<`${DealScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniqueDealOrThrowArgs {
    @Field(() => DealWhereUniqueInput, {nullable:false})
    @Type(() => DealWhereUniqueInput)
    where!: Prisma.AtLeast<DealWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindUniqueDealArgs {
    @Field(() => DealWhereUniqueInput, {nullable:false})
    @Type(() => DealWhereUniqueInput)
    where!: Prisma.AtLeast<DealWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpdateManyDealArgs {
    @Field(() => DealUpdateManyMutationInput, {nullable:false})
    @Type(() => DealUpdateManyMutationInput)
    data!: InstanceType<typeof DealUpdateManyMutationInput>;
    @Field(() => DealWhereInput, {nullable:true})
    @Type(() => DealWhereInput)
    where?: InstanceType<typeof DealWhereInput>;
}

@ArgsType()
export class UpdateOneDealArgs {
    @Field(() => DealUpdateInput, {nullable:false})
    @Type(() => DealUpdateInput)
    data!: InstanceType<typeof DealUpdateInput>;
    @Field(() => DealWhereUniqueInput, {nullable:false})
    @Type(() => DealWhereUniqueInput)
    where!: Prisma.AtLeast<DealWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpsertOneDealArgs {
    @Field(() => DealWhereUniqueInput, {nullable:false})
    @Type(() => DealWhereUniqueInput)
    where!: Prisma.AtLeast<DealWhereUniqueInput, 'id'>;
    @Field(() => DealCreateInput, {nullable:false})
    @Type(() => DealCreateInput)
    create!: InstanceType<typeof DealCreateInput>;
    @Field(() => DealUpdateInput, {nullable:false})
    @Type(() => DealUpdateInput)
    update!: InstanceType<typeof DealUpdateInput>;
}

@InputType()
export class DealBusinessDetailsCreateEnvelopeInput {
    @Field(() => DealBusinessDetailsCreateInput, {nullable:true})
    @Type(() => DealBusinessDetailsCreateInput)
    set?: InstanceType<typeof DealBusinessDetailsCreateInput>;
}

@InputType()
export class DealBusinessDetailsCreateInput {
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    address!: string;
    @Field(() => String, {nullable:false})
    logo!: string;
}

@InputType()
export class DealBusinessDetailsOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    address?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    logo?: `${SortOrder}`;
}

@InputType()
export class DealBusinessDetailsUpdateEnvelopeInput {
    @Field(() => DealBusinessDetailsCreateInput, {nullable:true})
    @Type(() => DealBusinessDetailsCreateInput)
    set?: InstanceType<typeof DealBusinessDetailsCreateInput>;
    @Field(() => DealBusinessDetailsUpdateInput, {nullable:true})
    @Type(() => DealBusinessDetailsUpdateInput)
    update?: InstanceType<typeof DealBusinessDetailsUpdateInput>;
}

@InputType()
export class DealBusinessDetailsUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    address?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    logo?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}

@InputType()
export class DealBusinessDetailsWhereInput {
    @Field(() => [DealBusinessDetailsWhereInput], {nullable:true})
    AND?: Array<DealBusinessDetailsWhereInput>;
    @Field(() => [DealBusinessDetailsWhereInput], {nullable:true})
    OR?: Array<DealBusinessDetailsWhereInput>;
    @Field(() => [DealBusinessDetailsWhereInput], {nullable:true})
    NOT?: Array<DealBusinessDetailsWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    name?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    address?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    logo?: InstanceType<typeof StringFilter>;
}

@ObjectType()
export class DealBusinessDetails {
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    address!: string;
    @Field(() => String, {nullable:false})
    logo!: string;
}

@InputType()
export class DealMeetupOfferBubbleCreateEnvelopeInput {
    @Field(() => DealMeetupOfferBubbleCreateInput, {nullable:true})
    @Type(() => DealMeetupOfferBubbleCreateInput)
    set?: InstanceType<typeof DealMeetupOfferBubbleCreateInput>;
}

@InputType()
export class DealMeetupOfferBubbleCreateInput {
    @Field(() => String, {nullable:false})
    headerText!: string;
    @Field(() => DealMeetupPreferenceCreateInput, {nullable:false})
    meetupPreference!: InstanceType<typeof DealMeetupPreferenceCreateInput>;
    @Field(() => Float, {nullable:false})
    offerPrice!: number;
}

@InputType()
export class DealMeetupOfferBubbleOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    headerText?: `${SortOrder}`;
    @Field(() => DealMeetupPreferenceOrderByInput, {nullable:true})
    meetupPreference?: InstanceType<typeof DealMeetupPreferenceOrderByInput>;
    @Field(() => SortOrder, {nullable:true})
    offerPrice?: `${SortOrder}`;
}

@InputType()
export class DealMeetupOfferBubbleUpdateEnvelopeInput {
    @Field(() => DealMeetupOfferBubbleCreateInput, {nullable:true})
    @Type(() => DealMeetupOfferBubbleCreateInput)
    set?: InstanceType<typeof DealMeetupOfferBubbleCreateInput>;
    @Field(() => DealMeetupOfferBubbleUpdateInput, {nullable:true})
    @Type(() => DealMeetupOfferBubbleUpdateInput)
    update?: InstanceType<typeof DealMeetupOfferBubbleUpdateInput>;
}

@InputType()
export class DealMeetupOfferBubbleUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    headerText?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DealMeetupPreferenceUpdateEnvelopeInput, {nullable:true})
    meetupPreference?: InstanceType<typeof DealMeetupPreferenceUpdateEnvelopeInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    offerPrice?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
}

@InputType()
export class DealMeetupOfferBubbleWhereInput {
    @Field(() => [DealMeetupOfferBubbleWhereInput], {nullable:true})
    AND?: Array<DealMeetupOfferBubbleWhereInput>;
    @Field(() => [DealMeetupOfferBubbleWhereInput], {nullable:true})
    OR?: Array<DealMeetupOfferBubbleWhereInput>;
    @Field(() => [DealMeetupOfferBubbleWhereInput], {nullable:true})
    NOT?: Array<DealMeetupOfferBubbleWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    headerText?: InstanceType<typeof StringFilter>;
    @Field(() => DealMeetupPreferenceCompositeFilter, {nullable:true})
    meetupPreference?: InstanceType<typeof DealMeetupPreferenceCompositeFilter>;
    @Field(() => FloatFilter, {nullable:true})
    offerPrice?: InstanceType<typeof FloatFilter>;
}

@ObjectType()
export class DealMeetupOfferBubble {
    @Field(() => String, {nullable:false})
    headerText!: string;
    @Field(() => DealMeetupPreference, {nullable:false})
    meetupPreference?: InstanceType<typeof DealMeetupPreference>;
    @Field(() => Float, {nullable:false})
    offerPrice!: number;
}

@InputType()
export class DealMeetupPreferenceCreateInput {
    @Field(() => String, {nullable:false})
    days!: string;
    @Field(() => String, {nullable:false})
    time!: string;
    @Field(() => String, {nullable:false})
    location!: string;
}

@InputType()
export class DealMeetupPreferenceOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    days?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    time?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    location?: `${SortOrder}`;
}

@InputType()
export class DealMeetupPreferenceUpdateEnvelopeInput {
    @Field(() => DealMeetupPreferenceCreateInput, {nullable:true})
    @Type(() => DealMeetupPreferenceCreateInput)
    set?: InstanceType<typeof DealMeetupPreferenceCreateInput>;
    @Field(() => DealMeetupPreferenceUpdateInput, {nullable:true})
    @Type(() => DealMeetupPreferenceUpdateInput)
    update?: InstanceType<typeof DealMeetupPreferenceUpdateInput>;
}

@InputType()
export class DealMeetupPreferenceUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    days?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    time?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    location?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}

@InputType()
export class DealMeetupPreferenceWhereInput {
    @Field(() => [DealMeetupPreferenceWhereInput], {nullable:true})
    AND?: Array<DealMeetupPreferenceWhereInput>;
    @Field(() => [DealMeetupPreferenceWhereInput], {nullable:true})
    OR?: Array<DealMeetupPreferenceWhereInput>;
    @Field(() => [DealMeetupPreferenceWhereInput], {nullable:true})
    NOT?: Array<DealMeetupPreferenceWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    days?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    time?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    location?: InstanceType<typeof StringFilter>;
}

@ObjectType()
export class DealMeetupPreference {
    @Field(() => String, {nullable:false})
    days!: string;
    @Field(() => String, {nullable:false})
    time!: string;
    @Field(() => String, {nullable:false})
    location!: string;
}

@InputType()
export class DealOfferBubbleCreateEnvelopeInput {
    @Field(() => DealOfferBubbleCreateInput, {nullable:true})
    @Type(() => DealOfferBubbleCreateInput)
    set?: InstanceType<typeof DealOfferBubbleCreateInput>;
}

@InputType()
export class DealOfferBubbleCreateInput {
    @Field(() => String, {nullable:false})
    headerText!: string;
    @Field(() => ProductBubbleCreateInput, {nullable:false})
    product!: InstanceType<typeof ProductBubbleCreateInput>;
    @Field(() => Float, {nullable:false})
    offerPrice!: number;
    @Field(() => Float, {nullable:false})
    shippingFee!: number;
    @Field(() => Float, {nullable:false})
    totalPrice!: number;
    @Field(() => String, {nullable:false})
    sellerAddressId!: string;
    @Field(() => String, {nullable:false})
    buyerAddressId!: string;
}

@InputType()
export class DealOfferBubbleOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    headerText?: `${SortOrder}`;
    @Field(() => ProductBubbleOrderByInput, {nullable:true})
    product?: InstanceType<typeof ProductBubbleOrderByInput>;
    @Field(() => SortOrder, {nullable:true})
    offerPrice?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    shippingFee?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    totalPrice?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    sellerAddressId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    buyerAddressId?: `${SortOrder}`;
}

@InputType()
export class DealOfferBubbleUpdateEnvelopeInput {
    @Field(() => DealOfferBubbleCreateInput, {nullable:true})
    @Type(() => DealOfferBubbleCreateInput)
    set?: InstanceType<typeof DealOfferBubbleCreateInput>;
    @Field(() => DealOfferBubbleUpdateInput, {nullable:true})
    @Type(() => DealOfferBubbleUpdateInput)
    update?: InstanceType<typeof DealOfferBubbleUpdateInput>;
}

@InputType()
export class DealOfferBubbleUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    headerText?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => ProductBubbleUpdateEnvelopeInput, {nullable:true})
    product?: InstanceType<typeof ProductBubbleUpdateEnvelopeInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    offerPrice?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    shippingFee?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    totalPrice?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    sellerAddressId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    buyerAddressId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}

@InputType()
export class DealOfferBubbleWhereInput {
    @Field(() => [DealOfferBubbleWhereInput], {nullable:true})
    AND?: Array<DealOfferBubbleWhereInput>;
    @Field(() => [DealOfferBubbleWhereInput], {nullable:true})
    OR?: Array<DealOfferBubbleWhereInput>;
    @Field(() => [DealOfferBubbleWhereInput], {nullable:true})
    NOT?: Array<DealOfferBubbleWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    headerText?: InstanceType<typeof StringFilter>;
    @Field(() => ProductBubbleCompositeFilter, {nullable:true})
    product?: InstanceType<typeof ProductBubbleCompositeFilter>;
    @Field(() => FloatFilter, {nullable:true})
    offerPrice?: InstanceType<typeof FloatFilter>;
    @Field(() => FloatFilter, {nullable:true})
    shippingFee?: InstanceType<typeof FloatFilter>;
    @Field(() => FloatFilter, {nullable:true})
    totalPrice?: InstanceType<typeof FloatFilter>;
    @Field(() => StringFilter, {nullable:true})
    sellerAddressId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    buyerAddressId?: InstanceType<typeof StringFilter>;
}

@ObjectType()
export class DealOfferBubble {
    @Field(() => String, {nullable:false})
    headerText!: string;
    @Field(() => ProductBubble, {nullable:false})
    product?: InstanceType<typeof ProductBubble>;
    @Field(() => Float, {nullable:false})
    offerPrice!: number;
    @Field(() => Float, {nullable:false})
    shippingFee!: number;
    @Field(() => Float, {nullable:false})
    totalPrice!: number;
    @Field(() => String, {nullable:false})
    sellerAddressId!: string;
    @Field(() => String, {nullable:false})
    buyerAddressId!: string;
}

@InputType()
export class DealTextContentCreateEnvelopeInput {
    @Field(() => DealTextContentCreateInput, {nullable:true})
    @Type(() => DealTextContentCreateInput)
    set?: InstanceType<typeof DealTextContentCreateInput>;
}

@InputType()
export class DealTextContentCreateInput {
    @Field(() => String, {nullable:true})
    heading?: string;
    @Field(() => String, {nullable:true})
    paragraph?: string;
    @Field(() => String, {nullable:true})
    pointers?: string;
}

@InputType()
export class DealTextContentOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    heading?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    paragraph?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    pointers?: `${SortOrder}`;
}

@InputType()
export class DealTextContentUpdateEnvelopeInput {
    @Field(() => DealTextContentCreateInput, {nullable:true})
    @Type(() => DealTextContentCreateInput)
    set?: InstanceType<typeof DealTextContentCreateInput>;
    @Field(() => DealTextContentUpdateInput, {nullable:true})
    @Type(() => DealTextContentUpdateInput)
    update?: InstanceType<typeof DealTextContentUpdateInput>;
}

@InputType()
export class DealTextContentUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    heading?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    paragraph?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    pointers?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}

@InputType()
export class DealTextContentWhereInput {
    @Field(() => [DealTextContentWhereInput], {nullable:true})
    AND?: Array<DealTextContentWhereInput>;
    @Field(() => [DealTextContentWhereInput], {nullable:true})
    OR?: Array<DealTextContentWhereInput>;
    @Field(() => [DealTextContentWhereInput], {nullable:true})
    NOT?: Array<DealTextContentWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    heading?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    paragraph?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    pointers?: InstanceType<typeof StringFilter>;
}

@ObjectType()
export class DealTextContent {
    @Field(() => String, {defaultValue:'',nullable:false})
    heading!: string;
    @Field(() => String, {defaultValue:'',nullable:false})
    paragraph!: string;
    @Field(() => String, {defaultValue:'',nullable:false})
    pointers!: string;
}

@ArgsType()
export class CreateManyDirectMessageArgs {
    @Field(() => [DirectMessageCreateManyInput], {nullable:false})
    @Type(() => DirectMessageCreateManyInput)
    data!: Array<DirectMessageCreateManyInput>;
}

@ArgsType()
export class CreateOneDirectMessageArgs {
    @Field(() => DirectMessageCreateInput, {nullable:false})
    @Type(() => DirectMessageCreateInput)
    data!: InstanceType<typeof DirectMessageCreateInput>;
}

@ArgsType()
export class DeleteManyDirectMessageArgs {
    @Field(() => DirectMessageWhereInput, {nullable:true})
    @Type(() => DirectMessageWhereInput)
    where?: InstanceType<typeof DirectMessageWhereInput>;
}

@ArgsType()
export class DeleteOneDirectMessageArgs {
    @Field(() => DirectMessageWhereUniqueInput, {nullable:false})
    @Type(() => DirectMessageWhereUniqueInput)
    where!: Prisma.AtLeast<DirectMessageWhereUniqueInput, 'id' | 'clientId'>;
}

@ArgsType()
export class DirectMessageAggregateArgs {
    @Field(() => DirectMessageWhereInput, {nullable:true})
    @Type(() => DirectMessageWhereInput)
    where?: InstanceType<typeof DirectMessageWhereInput>;
    @Field(() => [DirectMessageOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<DirectMessageOrderByWithRelationInput>;
    @Field(() => DirectMessageWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<DirectMessageWhereUniqueInput, 'id' | 'clientId'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class DirectMessageCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    clientId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    senderId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    payload?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    personalDmId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class DirectMessageCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    clientId!: string;
    @Field(() => String, {nullable:false})
    senderId!: string;
    @Field(() => DMType, {nullable:false})
    type!: `${DMType}`;
    @Field(() => GraphQLJSON, {nullable:false})
    payload!: any;
    @Field(() => String, {nullable:false})
    personalDmId!: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class DirectMessageCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    clientId!: string;
    @Field(() => String, {nullable:false})
    senderId!: string;
    @Field(() => DMType, {nullable:false})
    type!: `${DMType}`;
    @Field(() => GraphQLJSON, {nullable:false})
    payload!: any;
    @Field(() => String, {nullable:false})
    personalDmId!: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@ArgsType()
export class DirectMessageGroupByArgs {
    @Field(() => DirectMessageWhereInput, {nullable:true})
    @Type(() => DirectMessageWhereInput)
    where?: InstanceType<typeof DirectMessageWhereInput>;
    @Field(() => [DirectMessageOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<DirectMessageOrderByWithAggregationInput>;
    @Field(() => [DirectMessageScalarFieldEnum], {nullable:false})
    by!: Array<`${DirectMessageScalarFieldEnum}`>;
    @Field(() => DirectMessageScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof DirectMessageScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class DirectMessageMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    clientId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    senderId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    personalDmId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class DirectMessageMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    clientId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    senderId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    personalDmId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class DirectMessageOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    clientId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    senderId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    payload?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    personalDmId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => DirectMessageCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof DirectMessageCountOrderByAggregateInput>;
    @Field(() => DirectMessageMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof DirectMessageMaxOrderByAggregateInput>;
    @Field(() => DirectMessageMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof DirectMessageMinOrderByAggregateInput>;
}

@InputType()
export class DirectMessageOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    clientId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    senderId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    payload?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    personalDmId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class DirectMessageScalarWhereWithAggregatesInput {
    @Field(() => [DirectMessageScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<DirectMessageScalarWhereWithAggregatesInput>;
    @Field(() => [DirectMessageScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<DirectMessageScalarWhereWithAggregatesInput>;
    @Field(() => [DirectMessageScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<DirectMessageScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    clientId?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    senderId?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => EnumDMTypeWithAggregatesFilter, {nullable:true})
    type?: InstanceType<typeof EnumDMTypeWithAggregatesFilter>;
    @Field(() => JsonWithAggregatesFilter, {nullable:true})
    payload?: InstanceType<typeof JsonWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    personalDmId?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
}

@InputType()
export class DirectMessageUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    clientId!: string;
    @Field(() => String, {nullable:false})
    senderId!: string;
    @Field(() => DMType, {nullable:false})
    type!: `${DMType}`;
    @Field(() => GraphQLJSON, {nullable:false})
    payload!: any;
    @Field(() => String, {nullable:false})
    personalDmId!: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class DirectMessageUncheckedUpdateManyInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    clientId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    senderId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumDMTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumDMTypeFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    payload?: any;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    personalDmId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class DirectMessageUncheckedUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    clientId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    senderId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumDMTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumDMTypeFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    payload?: any;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    personalDmId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class DirectMessageUpdateManyMutationInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    clientId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    senderId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumDMTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumDMTypeFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    payload?: any;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    personalDmId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class DirectMessageUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    clientId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    senderId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumDMTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumDMTypeFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    payload?: any;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    personalDmId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class DirectMessageWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:true})
    clientId?: string;
    @Field(() => [DirectMessageWhereInput], {nullable:true})
    AND?: Array<DirectMessageWhereInput>;
    @Field(() => [DirectMessageWhereInput], {nullable:true})
    OR?: Array<DirectMessageWhereInput>;
    @Field(() => [DirectMessageWhereInput], {nullable:true})
    NOT?: Array<DirectMessageWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    senderId?: InstanceType<typeof StringFilter>;
    @Field(() => EnumDMTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumDMTypeFilter>;
    @Field(() => JsonFilter, {nullable:true})
    payload?: InstanceType<typeof JsonFilter>;
    @Field(() => StringFilter, {nullable:true})
    personalDmId?: InstanceType<typeof StringFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@InputType()
export class DirectMessageWhereInput {
    @Field(() => [DirectMessageWhereInput], {nullable:true})
    AND?: Array<DirectMessageWhereInput>;
    @Field(() => [DirectMessageWhereInput], {nullable:true})
    OR?: Array<DirectMessageWhereInput>;
    @Field(() => [DirectMessageWhereInput], {nullable:true})
    NOT?: Array<DirectMessageWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    clientId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    senderId?: InstanceType<typeof StringFilter>;
    @Field(() => EnumDMTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumDMTypeFilter>;
    @Field(() => JsonFilter, {nullable:true})
    payload?: InstanceType<typeof JsonFilter>;
    @Field(() => StringFilter, {nullable:true})
    personalDmId?: InstanceType<typeof StringFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@ObjectType()
export class DirectMessage {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    clientId!: string;
    @Field(() => String, {nullable:false})
    senderId!: string;
    @Field(() => DMType, {nullable:false})
    type!: `${DMType}`;
    @Field(() => GraphQLJSON, {nullable:false})
    payload!: any;
    @Field(() => String, {nullable:false})
    personalDmId!: string;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
    @Field(() => Date, {nullable:false})
    updatedAt!: Date;
}

@ArgsType()
export class FindFirstDirectMessageOrThrowArgs {
    @Field(() => DirectMessageWhereInput, {nullable:true})
    @Type(() => DirectMessageWhereInput)
    where?: InstanceType<typeof DirectMessageWhereInput>;
    @Field(() => [DirectMessageOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<DirectMessageOrderByWithRelationInput>;
    @Field(() => DirectMessageWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<DirectMessageWhereUniqueInput, 'id' | 'clientId'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [DirectMessageScalarFieldEnum], {nullable:true})
    distinct?: Array<`${DirectMessageScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstDirectMessageArgs {
    @Field(() => DirectMessageWhereInput, {nullable:true})
    @Type(() => DirectMessageWhereInput)
    where?: InstanceType<typeof DirectMessageWhereInput>;
    @Field(() => [DirectMessageOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<DirectMessageOrderByWithRelationInput>;
    @Field(() => DirectMessageWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<DirectMessageWhereUniqueInput, 'id' | 'clientId'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [DirectMessageScalarFieldEnum], {nullable:true})
    distinct?: Array<`${DirectMessageScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyDirectMessageArgs {
    @Field(() => DirectMessageWhereInput, {nullable:true})
    @Type(() => DirectMessageWhereInput)
    where?: InstanceType<typeof DirectMessageWhereInput>;
    @Field(() => [DirectMessageOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<DirectMessageOrderByWithRelationInput>;
    @Field(() => DirectMessageWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<DirectMessageWhereUniqueInput, 'id' | 'clientId'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [DirectMessageScalarFieldEnum], {nullable:true})
    distinct?: Array<`${DirectMessageScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniqueDirectMessageOrThrowArgs {
    @Field(() => DirectMessageWhereUniqueInput, {nullable:false})
    @Type(() => DirectMessageWhereUniqueInput)
    where!: Prisma.AtLeast<DirectMessageWhereUniqueInput, 'id' | 'clientId'>;
}

@ArgsType()
export class FindUniqueDirectMessageArgs {
    @Field(() => DirectMessageWhereUniqueInput, {nullable:false})
    @Type(() => DirectMessageWhereUniqueInput)
    where!: Prisma.AtLeast<DirectMessageWhereUniqueInput, 'id' | 'clientId'>;
}

@ArgsType()
export class UpdateManyDirectMessageArgs {
    @Field(() => DirectMessageUpdateManyMutationInput, {nullable:false})
    @Type(() => DirectMessageUpdateManyMutationInput)
    data!: InstanceType<typeof DirectMessageUpdateManyMutationInput>;
    @Field(() => DirectMessageWhereInput, {nullable:true})
    @Type(() => DirectMessageWhereInput)
    where?: InstanceType<typeof DirectMessageWhereInput>;
}

@ArgsType()
export class UpdateOneDirectMessageArgs {
    @Field(() => DirectMessageUpdateInput, {nullable:false})
    @Type(() => DirectMessageUpdateInput)
    data!: InstanceType<typeof DirectMessageUpdateInput>;
    @Field(() => DirectMessageWhereUniqueInput, {nullable:false})
    @Type(() => DirectMessageWhereUniqueInput)
    where!: Prisma.AtLeast<DirectMessageWhereUniqueInput, 'id' | 'clientId'>;
}

@ArgsType()
export class UpsertOneDirectMessageArgs {
    @Field(() => DirectMessageWhereUniqueInput, {nullable:false})
    @Type(() => DirectMessageWhereUniqueInput)
    where!: Prisma.AtLeast<DirectMessageWhereUniqueInput, 'id' | 'clientId'>;
    @Field(() => DirectMessageCreateInput, {nullable:false})
    @Type(() => DirectMessageCreateInput)
    create!: InstanceType<typeof DirectMessageCreateInput>;
    @Field(() => DirectMessageUpdateInput, {nullable:false})
    @Type(() => DirectMessageUpdateInput)
    update!: InstanceType<typeof DirectMessageUpdateInput>;
}

@InputType()
export class DMMessageTypeCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
}

@InputType()
export class DMMessageTypeCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => DMTextBubbleCreateEnvelopeInput, {nullable:false})
    dmTextBubble!: InstanceType<typeof DMTextBubbleCreateEnvelopeInput>;
    @Field(() => DMStoryShareBubbleCreateEnvelopeInput, {nullable:false})
    dmStoryShareBubble!: InstanceType<typeof DMStoryShareBubbleCreateEnvelopeInput>;
}

@InputType()
export class DMMessageTypeCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => DMTextBubbleCreateEnvelopeInput, {nullable:false})
    dmTextBubble!: InstanceType<typeof DMTextBubbleCreateEnvelopeInput>;
    @Field(() => DMStoryShareBubbleCreateEnvelopeInput, {nullable:false})
    dmStoryShareBubble!: InstanceType<typeof DMStoryShareBubbleCreateEnvelopeInput>;
}

@InputType()
export class DMMessageTypeMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
}

@InputType()
export class DMMessageTypeMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
}

@InputType()
export class DMMessageTypeOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => DMMessageTypeCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof DMMessageTypeCountOrderByAggregateInput>;
    @Field(() => DMMessageTypeMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof DMMessageTypeMaxOrderByAggregateInput>;
    @Field(() => DMMessageTypeMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof DMMessageTypeMinOrderByAggregateInput>;
}

@InputType()
export class DMMessageTypeOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => DMTextBubbleOrderByInput, {nullable:true})
    dmTextBubble?: InstanceType<typeof DMTextBubbleOrderByInput>;
    @Field(() => DMStoryShareBubbleOrderByInput, {nullable:true})
    dmStoryShareBubble?: InstanceType<typeof DMStoryShareBubbleOrderByInput>;
}

@InputType()
export class DMMessageTypeScalarWhereWithAggregatesInput {
    @Field(() => [DMMessageTypeScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<DMMessageTypeScalarWhereWithAggregatesInput>;
    @Field(() => [DMMessageTypeScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<DMMessageTypeScalarWhereWithAggregatesInput>;
    @Field(() => [DMMessageTypeScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<DMMessageTypeScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
}

@InputType()
export class DMMessageTypeUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => DMTextBubbleCreateEnvelopeInput, {nullable:false})
    dmTextBubble!: InstanceType<typeof DMTextBubbleCreateEnvelopeInput>;
    @Field(() => DMStoryShareBubbleCreateEnvelopeInput, {nullable:false})
    dmStoryShareBubble!: InstanceType<typeof DMStoryShareBubbleCreateEnvelopeInput>;
}

@InputType()
export class DMMessageTypeUncheckedUpdateManyInput {
    @Field(() => DMTextBubbleUpdateEnvelopeInput, {nullable:true})
    dmTextBubble?: InstanceType<typeof DMTextBubbleUpdateEnvelopeInput>;
    @Field(() => DMStoryShareBubbleUpdateEnvelopeInput, {nullable:true})
    dmStoryShareBubble?: InstanceType<typeof DMStoryShareBubbleUpdateEnvelopeInput>;
}

@InputType()
export class DMMessageTypeUncheckedUpdateInput {
    @Field(() => DMTextBubbleUpdateEnvelopeInput, {nullable:true})
    dmTextBubble?: InstanceType<typeof DMTextBubbleUpdateEnvelopeInput>;
    @Field(() => DMStoryShareBubbleUpdateEnvelopeInput, {nullable:true})
    dmStoryShareBubble?: InstanceType<typeof DMStoryShareBubbleUpdateEnvelopeInput>;
}

@InputType()
export class DMMessageTypeUpdateManyMutationInput {
    @Field(() => DMTextBubbleUpdateEnvelopeInput, {nullable:true})
    dmTextBubble?: InstanceType<typeof DMTextBubbleUpdateEnvelopeInput>;
    @Field(() => DMStoryShareBubbleUpdateEnvelopeInput, {nullable:true})
    dmStoryShareBubble?: InstanceType<typeof DMStoryShareBubbleUpdateEnvelopeInput>;
}

@InputType()
export class DMMessageTypeUpdateInput {
    @Field(() => DMTextBubbleUpdateEnvelopeInput, {nullable:true})
    dmTextBubble?: InstanceType<typeof DMTextBubbleUpdateEnvelopeInput>;
    @Field(() => DMStoryShareBubbleUpdateEnvelopeInput, {nullable:true})
    dmStoryShareBubble?: InstanceType<typeof DMStoryShareBubbleUpdateEnvelopeInput>;
}

@InputType()
export class DMMessageTypeWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => [DMMessageTypeWhereInput], {nullable:true})
    AND?: Array<DMMessageTypeWhereInput>;
    @Field(() => [DMMessageTypeWhereInput], {nullable:true})
    OR?: Array<DMMessageTypeWhereInput>;
    @Field(() => [DMMessageTypeWhereInput], {nullable:true})
    NOT?: Array<DMMessageTypeWhereInput>;
    @Field(() => DMTextBubbleCompositeFilter, {nullable:true})
    dmTextBubble?: InstanceType<typeof DMTextBubbleCompositeFilter>;
    @Field(() => DMStoryShareBubbleCompositeFilter, {nullable:true})
    dmStoryShareBubble?: InstanceType<typeof DMStoryShareBubbleCompositeFilter>;
}

@InputType()
export class DMMessageTypeWhereInput {
    @Field(() => [DMMessageTypeWhereInput], {nullable:true})
    AND?: Array<DMMessageTypeWhereInput>;
    @Field(() => [DMMessageTypeWhereInput], {nullable:true})
    OR?: Array<DMMessageTypeWhereInput>;
    @Field(() => [DMMessageTypeWhereInput], {nullable:true})
    NOT?: Array<DMMessageTypeWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => DMTextBubbleCompositeFilter, {nullable:true})
    dmTextBubble?: InstanceType<typeof DMTextBubbleCompositeFilter>;
    @Field(() => DMStoryShareBubbleCompositeFilter, {nullable:true})
    dmStoryShareBubble?: InstanceType<typeof DMStoryShareBubbleCompositeFilter>;
}

@ObjectType()
export class DMMessageType {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => DMTextBubble, {nullable:false})
    dmTextBubble?: InstanceType<typeof DMTextBubble>;
    @Field(() => DMStoryShareBubble, {nullable:false})
    dmStoryShareBubble?: InstanceType<typeof DMStoryShareBubble>;
}

@InputType()
export class DMStoryShareBubbleCreateEnvelopeInput {
    @Field(() => DMStoryShareBubbleCreateInput, {nullable:true})
    @Type(() => DMStoryShareBubbleCreateInput)
    set?: InstanceType<typeof DMStoryShareBubbleCreateInput>;
}

@InputType()
export class DMStoryShareBubbleCreateInput {
    @Field(() => String, {nullable:false})
    text!: string;
    @Field(() => String, {nullable:false})
    thumbnail!: string;
}

@InputType()
export class DMStoryShareBubbleOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    text?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    thumbnail?: `${SortOrder}`;
}

@InputType()
export class DMStoryShareBubbleUpdateEnvelopeInput {
    @Field(() => DMStoryShareBubbleCreateInput, {nullable:true})
    @Type(() => DMStoryShareBubbleCreateInput)
    set?: InstanceType<typeof DMStoryShareBubbleCreateInput>;
    @Field(() => DMStoryShareBubbleUpdateInput, {nullable:true})
    @Type(() => DMStoryShareBubbleUpdateInput)
    update?: InstanceType<typeof DMStoryShareBubbleUpdateInput>;
}

@InputType()
export class DMStoryShareBubbleUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    text?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    thumbnail?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}

@InputType()
export class DMStoryShareBubbleWhereInput {
    @Field(() => [DMStoryShareBubbleWhereInput], {nullable:true})
    AND?: Array<DMStoryShareBubbleWhereInput>;
    @Field(() => [DMStoryShareBubbleWhereInput], {nullable:true})
    OR?: Array<DMStoryShareBubbleWhereInput>;
    @Field(() => [DMStoryShareBubbleWhereInput], {nullable:true})
    NOT?: Array<DMStoryShareBubbleWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    text?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    thumbnail?: InstanceType<typeof StringFilter>;
}

@ObjectType()
export class DMStoryShareBubble {
    @Field(() => String, {nullable:false})
    text!: string;
    @Field(() => String, {nullable:false})
    thumbnail!: string;
}

@InputType()
export class DMTextBubbleCreateEnvelopeInput {
    @Field(() => DMTextBubbleCreateInput, {nullable:true})
    @Type(() => DMTextBubbleCreateInput)
    set?: InstanceType<typeof DMTextBubbleCreateInput>;
}

@InputType()
export class DMTextBubbleCreateInput {
    @Field(() => String, {nullable:false})
    text!: string;
}

@InputType()
export class DMTextBubbleOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    text?: `${SortOrder}`;
}

@InputType()
export class DMTextBubbleUpdateEnvelopeInput {
    @Field(() => DMTextBubbleCreateInput, {nullable:true})
    @Type(() => DMTextBubbleCreateInput)
    set?: InstanceType<typeof DMTextBubbleCreateInput>;
    @Field(() => DMTextBubbleUpdateInput, {nullable:true})
    @Type(() => DMTextBubbleUpdateInput)
    update?: InstanceType<typeof DMTextBubbleUpdateInput>;
}

@InputType()
export class DMTextBubbleUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    text?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}

@InputType()
export class DMTextBubbleWhereInput {
    @Field(() => [DMTextBubbleWhereInput], {nullable:true})
    AND?: Array<DMTextBubbleWhereInput>;
    @Field(() => [DMTextBubbleWhereInput], {nullable:true})
    OR?: Array<DMTextBubbleWhereInput>;
    @Field(() => [DMTextBubbleWhereInput], {nullable:true})
    NOT?: Array<DMTextBubbleWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    text?: InstanceType<typeof StringFilter>;
}

@ObjectType()
export class DMTextBubble {
    @Field(() => String, {nullable:false})
    text!: string;
}

@ArgsType()
export class CreateManyEduInstituteArgs {
    @Field(() => [EduInstituteCreateManyInput], {nullable:false})
    @Type(() => EduInstituteCreateManyInput)
    data!: Array<EduInstituteCreateManyInput>;
}

@ArgsType()
export class CreateOneEduInstituteArgs {
    @Field(() => EduInstituteCreateInput, {nullable:false})
    @Type(() => EduInstituteCreateInput)
    data!: InstanceType<typeof EduInstituteCreateInput>;
}

@ArgsType()
export class DeleteManyEduInstituteArgs {
    @Field(() => EduInstituteWhereInput, {nullable:true})
    @Type(() => EduInstituteWhereInput)
    where?: InstanceType<typeof EduInstituteWhereInput>;
}

@ArgsType()
export class DeleteOneEduInstituteArgs {
    @Field(() => EduInstituteWhereUniqueInput, {nullable:false})
    @Type(() => EduInstituteWhereUniqueInput)
    where!: Prisma.AtLeast<EduInstituteWhereUniqueInput, 'id' | 'domain'>;
}

@ArgsType()
export class EduInstituteAggregateArgs {
    @Field(() => EduInstituteWhereInput, {nullable:true})
    @Type(() => EduInstituteWhereInput)
    where?: InstanceType<typeof EduInstituteWhereInput>;
    @Field(() => [EduInstituteOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<EduInstituteOrderByWithRelationInput>;
    @Field(() => EduInstituteWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<EduInstituteWhereUniqueInput, 'id' | 'domain'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class EduInstituteCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    domain?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    logo?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    city?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    state?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    address?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    zip?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    location?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    passCode?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    isRegistered?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class EduInstituteCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    domain!: string;
    @Field(() => String, {nullable:true})
    logo?: string;
    @Field(() => String, {nullable:false})
    city!: string;
    @Field(() => String, {nullable:false})
    state!: string;
    @Field(() => String, {nullable:false})
    address!: string;
    @Field(() => String, {nullable:false})
    zip!: string;
    @Field(() => String, {nullable:true})
    location?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => String, {nullable:true})
    passCode?: string;
    @Field(() => Boolean, {nullable:true})
    isRegistered?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class EduInstituteCreateNestedOneWithoutCampusChatsInput {
    @Field(() => EduInstituteCreateWithoutCampusChatsInput, {nullable:true})
    @Type(() => EduInstituteCreateWithoutCampusChatsInput)
    create?: InstanceType<typeof EduInstituteCreateWithoutCampusChatsInput>;
    @Field(() => EduInstituteCreateOrConnectWithoutCampusChatsInput, {nullable:true})
    @Type(() => EduInstituteCreateOrConnectWithoutCampusChatsInput)
    connectOrCreate?: InstanceType<typeof EduInstituteCreateOrConnectWithoutCampusChatsInput>;
    @Field(() => EduInstituteWhereUniqueInput, {nullable:true})
    @Type(() => EduInstituteWhereUniqueInput)
    connect?: Prisma.AtLeast<EduInstituteWhereUniqueInput, 'id' | 'domain'>;
}

@InputType()
export class EduInstituteCreateNestedOneWithoutProductListingsInput {
    @Field(() => EduInstituteCreateWithoutProductListingsInput, {nullable:true})
    @Type(() => EduInstituteCreateWithoutProductListingsInput)
    create?: InstanceType<typeof EduInstituteCreateWithoutProductListingsInput>;
    @Field(() => EduInstituteCreateOrConnectWithoutProductListingsInput, {nullable:true})
    @Type(() => EduInstituteCreateOrConnectWithoutProductListingsInput)
    connectOrCreate?: InstanceType<typeof EduInstituteCreateOrConnectWithoutProductListingsInput>;
    @Field(() => EduInstituteWhereUniqueInput, {nullable:true})
    @Type(() => EduInstituteWhereUniqueInput)
    connect?: Prisma.AtLeast<EduInstituteWhereUniqueInput, 'id' | 'domain'>;
}

@InputType()
export class EduInstituteCreateNestedOneWithoutStudentsInput {
    @Field(() => EduInstituteCreateWithoutStudentsInput, {nullable:true})
    @Type(() => EduInstituteCreateWithoutStudentsInput)
    create?: InstanceType<typeof EduInstituteCreateWithoutStudentsInput>;
    @Field(() => EduInstituteCreateOrConnectWithoutStudentsInput, {nullable:true})
    @Type(() => EduInstituteCreateOrConnectWithoutStudentsInput)
    connectOrCreate?: InstanceType<typeof EduInstituteCreateOrConnectWithoutStudentsInput>;
    @Field(() => EduInstituteWhereUniqueInput, {nullable:true})
    @Type(() => EduInstituteWhereUniqueInput)
    connect?: Prisma.AtLeast<EduInstituteWhereUniqueInput, 'id' | 'domain'>;
}

@InputType()
export class EduInstituteCreateOrConnectWithoutCampusChatsInput {
    @Field(() => EduInstituteWhereUniqueInput, {nullable:false})
    @Type(() => EduInstituteWhereUniqueInput)
    where!: Prisma.AtLeast<EduInstituteWhereUniqueInput, 'id' | 'domain'>;
    @Field(() => EduInstituteCreateWithoutCampusChatsInput, {nullable:false})
    @Type(() => EduInstituteCreateWithoutCampusChatsInput)
    create!: InstanceType<typeof EduInstituteCreateWithoutCampusChatsInput>;
}

@InputType()
export class EduInstituteCreateOrConnectWithoutProductListingsInput {
    @Field(() => EduInstituteWhereUniqueInput, {nullable:false})
    @Type(() => EduInstituteWhereUniqueInput)
    where!: Prisma.AtLeast<EduInstituteWhereUniqueInput, 'id' | 'domain'>;
    @Field(() => EduInstituteCreateWithoutProductListingsInput, {nullable:false})
    @Type(() => EduInstituteCreateWithoutProductListingsInput)
    create!: InstanceType<typeof EduInstituteCreateWithoutProductListingsInput>;
}

@InputType()
export class EduInstituteCreateOrConnectWithoutStudentsInput {
    @Field(() => EduInstituteWhereUniqueInput, {nullable:false})
    @Type(() => EduInstituteWhereUniqueInput)
    where!: Prisma.AtLeast<EduInstituteWhereUniqueInput, 'id' | 'domain'>;
    @Field(() => EduInstituteCreateWithoutStudentsInput, {nullable:false})
    @Type(() => EduInstituteCreateWithoutStudentsInput)
    create!: InstanceType<typeof EduInstituteCreateWithoutStudentsInput>;
}

@InputType()
export class EduInstituteCreateWithoutCampusChatsInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    domain!: string;
    @Field(() => String, {nullable:true})
    logo?: string;
    @Field(() => String, {nullable:false})
    city!: string;
    @Field(() => String, {nullable:false})
    state!: string;
    @Field(() => String, {nullable:false})
    address!: string;
    @Field(() => String, {nullable:false})
    zip!: string;
    @Field(() => String, {nullable:true})
    location?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => String, {nullable:true})
    passCode?: string;
    @Field(() => Boolean, {nullable:true})
    isRegistered?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => UserCreateNestedManyWithoutEduInstituteInput, {nullable:true})
    students?: InstanceType<typeof UserCreateNestedManyWithoutEduInstituteInput>;
    @Field(() => ProductListingCreateNestedManyWithoutUploaderEduInstituteInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingCreateNestedManyWithoutUploaderEduInstituteInput>;
}

@InputType()
export class EduInstituteCreateWithoutProductListingsInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    domain!: string;
    @Field(() => String, {nullable:true})
    logo?: string;
    @Field(() => String, {nullable:false})
    city!: string;
    @Field(() => String, {nullable:false})
    state!: string;
    @Field(() => String, {nullable:false})
    address!: string;
    @Field(() => String, {nullable:false})
    zip!: string;
    @Field(() => String, {nullable:true})
    location?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => String, {nullable:true})
    passCode?: string;
    @Field(() => Boolean, {nullable:true})
    isRegistered?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => UserCreateNestedManyWithoutEduInstituteInput, {nullable:true})
    students?: InstanceType<typeof UserCreateNestedManyWithoutEduInstituteInput>;
    @Field(() => CampusChatCreateNestedManyWithoutEduInstituteInput, {nullable:true})
    campusChats?: InstanceType<typeof CampusChatCreateNestedManyWithoutEduInstituteInput>;
}

@InputType()
export class EduInstituteCreateWithoutStudentsInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    domain!: string;
    @Field(() => String, {nullable:true})
    logo?: string;
    @Field(() => String, {nullable:false})
    city!: string;
    @Field(() => String, {nullable:false})
    state!: string;
    @Field(() => String, {nullable:false})
    address!: string;
    @Field(() => String, {nullable:false})
    zip!: string;
    @Field(() => String, {nullable:true})
    location?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => String, {nullable:true})
    passCode?: string;
    @Field(() => Boolean, {nullable:true})
    isRegistered?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => CampusChatCreateNestedManyWithoutEduInstituteInput, {nullable:true})
    campusChats?: InstanceType<typeof CampusChatCreateNestedManyWithoutEduInstituteInput>;
    @Field(() => ProductListingCreateNestedManyWithoutUploaderEduInstituteInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingCreateNestedManyWithoutUploaderEduInstituteInput>;
}

@InputType()
export class EduInstituteCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    domain!: string;
    @Field(() => String, {nullable:true})
    logo?: string;
    @Field(() => String, {nullable:false})
    city!: string;
    @Field(() => String, {nullable:false})
    state!: string;
    @Field(() => String, {nullable:false})
    address!: string;
    @Field(() => String, {nullable:false})
    zip!: string;
    @Field(() => String, {nullable:true})
    location?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => String, {nullable:true})
    passCode?: string;
    @Field(() => Boolean, {nullable:true})
    isRegistered?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => UserCreateNestedManyWithoutEduInstituteInput, {nullable:true})
    students?: InstanceType<typeof UserCreateNestedManyWithoutEduInstituteInput>;
    @Field(() => CampusChatCreateNestedManyWithoutEduInstituteInput, {nullable:true})
    campusChats?: InstanceType<typeof CampusChatCreateNestedManyWithoutEduInstituteInput>;
    @Field(() => ProductListingCreateNestedManyWithoutUploaderEduInstituteInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingCreateNestedManyWithoutUploaderEduInstituteInput>;
}

@ArgsType()
export class EduInstituteGroupByArgs {
    @Field(() => EduInstituteWhereInput, {nullable:true})
    @Type(() => EduInstituteWhereInput)
    where?: InstanceType<typeof EduInstituteWhereInput>;
    @Field(() => [EduInstituteOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<EduInstituteOrderByWithAggregationInput>;
    @Field(() => [EduInstituteScalarFieldEnum], {nullable:false})
    by!: Array<`${EduInstituteScalarFieldEnum}`>;
    @Field(() => EduInstituteScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof EduInstituteScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class EduInstituteMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    domain?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    logo?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    city?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    state?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    address?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    zip?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    location?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    passCode?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    isRegistered?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class EduInstituteMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    domain?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    logo?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    city?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    state?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    address?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    zip?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    location?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    passCode?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    isRegistered?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class EduInstituteNullableRelationFilter {
    @Field(() => EduInstituteWhereInput, {nullable:true})
    is?: InstanceType<typeof EduInstituteWhereInput>;
    @Field(() => EduInstituteWhereInput, {nullable:true})
    isNot?: InstanceType<typeof EduInstituteWhereInput>;
}

@InputType()
export class EduInstituteOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    domain?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    logo?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    city?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    state?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    address?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    zip?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    location?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    passCode?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    isRegistered?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => EduInstituteCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof EduInstituteCountOrderByAggregateInput>;
    @Field(() => EduInstituteMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof EduInstituteMaxOrderByAggregateInput>;
    @Field(() => EduInstituteMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof EduInstituteMinOrderByAggregateInput>;
}

@InputType()
export class EduInstituteOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    domain?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    logo?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    city?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    state?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    address?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    zip?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    location?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    passCode?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    isRegistered?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => UserOrderByRelationAggregateInput, {nullable:true})
    students?: InstanceType<typeof UserOrderByRelationAggregateInput>;
    @Field(() => CampusChatOrderByRelationAggregateInput, {nullable:true})
    campusChats?: InstanceType<typeof CampusChatOrderByRelationAggregateInput>;
    @Field(() => ProductListingOrderByRelationAggregateInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingOrderByRelationAggregateInput>;
}

@InputType()
export class EduInstituteRelationFilter {
    @Field(() => EduInstituteWhereInput, {nullable:true})
    is?: InstanceType<typeof EduInstituteWhereInput>;
    @Field(() => EduInstituteWhereInput, {nullable:true})
    isNot?: InstanceType<typeof EduInstituteWhereInput>;
}

@InputType()
export class EduInstituteScalarWhereWithAggregatesInput {
    @Field(() => [EduInstituteScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<EduInstituteScalarWhereWithAggregatesInput>;
    @Field(() => [EduInstituteScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<EduInstituteScalarWhereWithAggregatesInput>;
    @Field(() => [EduInstituteScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<EduInstituteScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    name?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    domain?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    logo?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    city?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    state?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    address?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    zip?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    location?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => BoolNullableWithAggregatesFilter, {nullable:true})
    active?: InstanceType<typeof BoolNullableWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    passCode?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => BoolNullableWithAggregatesFilter, {nullable:true})
    isRegistered?: InstanceType<typeof BoolNullableWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
}

@InputType()
export class EduInstituteUncheckedCreateWithoutCampusChatsInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    domain!: string;
    @Field(() => String, {nullable:true})
    logo?: string;
    @Field(() => String, {nullable:false})
    city!: string;
    @Field(() => String, {nullable:false})
    state!: string;
    @Field(() => String, {nullable:false})
    address!: string;
    @Field(() => String, {nullable:false})
    zip!: string;
    @Field(() => String, {nullable:true})
    location?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => String, {nullable:true})
    passCode?: string;
    @Field(() => Boolean, {nullable:true})
    isRegistered?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => UserUncheckedCreateNestedManyWithoutEduInstituteInput, {nullable:true})
    students?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutEduInstituteInput>;
    @Field(() => ProductListingUncheckedCreateNestedManyWithoutUploaderEduInstituteInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUncheckedCreateNestedManyWithoutUploaderEduInstituteInput>;
}

@InputType()
export class EduInstituteUncheckedCreateWithoutProductListingsInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    domain!: string;
    @Field(() => String, {nullable:true})
    logo?: string;
    @Field(() => String, {nullable:false})
    city!: string;
    @Field(() => String, {nullable:false})
    state!: string;
    @Field(() => String, {nullable:false})
    address!: string;
    @Field(() => String, {nullable:false})
    zip!: string;
    @Field(() => String, {nullable:true})
    location?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => String, {nullable:true})
    passCode?: string;
    @Field(() => Boolean, {nullable:true})
    isRegistered?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => UserUncheckedCreateNestedManyWithoutEduInstituteInput, {nullable:true})
    students?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutEduInstituteInput>;
    @Field(() => CampusChatUncheckedCreateNestedManyWithoutEduInstituteInput, {nullable:true})
    campusChats?: InstanceType<typeof CampusChatUncheckedCreateNestedManyWithoutEduInstituteInput>;
}

@InputType()
export class EduInstituteUncheckedCreateWithoutStudentsInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    domain!: string;
    @Field(() => String, {nullable:true})
    logo?: string;
    @Field(() => String, {nullable:false})
    city!: string;
    @Field(() => String, {nullable:false})
    state!: string;
    @Field(() => String, {nullable:false})
    address!: string;
    @Field(() => String, {nullable:false})
    zip!: string;
    @Field(() => String, {nullable:true})
    location?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => String, {nullable:true})
    passCode?: string;
    @Field(() => Boolean, {nullable:true})
    isRegistered?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => CampusChatUncheckedCreateNestedManyWithoutEduInstituteInput, {nullable:true})
    campusChats?: InstanceType<typeof CampusChatUncheckedCreateNestedManyWithoutEduInstituteInput>;
    @Field(() => ProductListingUncheckedCreateNestedManyWithoutUploaderEduInstituteInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUncheckedCreateNestedManyWithoutUploaderEduInstituteInput>;
}

@InputType()
export class EduInstituteUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    domain!: string;
    @Field(() => String, {nullable:true})
    logo?: string;
    @Field(() => String, {nullable:false})
    city!: string;
    @Field(() => String, {nullable:false})
    state!: string;
    @Field(() => String, {nullable:false})
    address!: string;
    @Field(() => String, {nullable:false})
    zip!: string;
    @Field(() => String, {nullable:true})
    location?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => String, {nullable:true})
    passCode?: string;
    @Field(() => Boolean, {nullable:true})
    isRegistered?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => UserUncheckedCreateNestedManyWithoutEduInstituteInput, {nullable:true})
    students?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutEduInstituteInput>;
    @Field(() => CampusChatUncheckedCreateNestedManyWithoutEduInstituteInput, {nullable:true})
    campusChats?: InstanceType<typeof CampusChatUncheckedCreateNestedManyWithoutEduInstituteInput>;
    @Field(() => ProductListingUncheckedCreateNestedManyWithoutUploaderEduInstituteInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUncheckedCreateNestedManyWithoutUploaderEduInstituteInput>;
}

@InputType()
export class EduInstituteUncheckedUpdateManyInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    domain?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    logo?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    city?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    state?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    address?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    zip?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    location?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    passCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    isRegistered?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class EduInstituteUncheckedUpdateWithoutCampusChatsInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    domain?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    logo?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    city?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    state?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    address?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    zip?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    location?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    passCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    isRegistered?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => UserUncheckedUpdateManyWithoutEduInstituteNestedInput, {nullable:true})
    students?: InstanceType<typeof UserUncheckedUpdateManyWithoutEduInstituteNestedInput>;
    @Field(() => ProductListingUncheckedUpdateManyWithoutUploaderEduInstituteNestedInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUncheckedUpdateManyWithoutUploaderEduInstituteNestedInput>;
}

@InputType()
export class EduInstituteUncheckedUpdateWithoutProductListingsInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    domain?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    logo?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    city?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    state?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    address?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    zip?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    location?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    passCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    isRegistered?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => UserUncheckedUpdateManyWithoutEduInstituteNestedInput, {nullable:true})
    students?: InstanceType<typeof UserUncheckedUpdateManyWithoutEduInstituteNestedInput>;
    @Field(() => CampusChatUncheckedUpdateManyWithoutEduInstituteNestedInput, {nullable:true})
    campusChats?: InstanceType<typeof CampusChatUncheckedUpdateManyWithoutEduInstituteNestedInput>;
}

@InputType()
export class EduInstituteUncheckedUpdateWithoutStudentsInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    domain?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    logo?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    city?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    state?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    address?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    zip?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    location?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    passCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    isRegistered?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => CampusChatUncheckedUpdateManyWithoutEduInstituteNestedInput, {nullable:true})
    campusChats?: InstanceType<typeof CampusChatUncheckedUpdateManyWithoutEduInstituteNestedInput>;
    @Field(() => ProductListingUncheckedUpdateManyWithoutUploaderEduInstituteNestedInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUncheckedUpdateManyWithoutUploaderEduInstituteNestedInput>;
}

@InputType()
export class EduInstituteUncheckedUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    domain?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    logo?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    city?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    state?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    address?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    zip?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    location?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    passCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    isRegistered?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => UserUncheckedUpdateManyWithoutEduInstituteNestedInput, {nullable:true})
    students?: InstanceType<typeof UserUncheckedUpdateManyWithoutEduInstituteNestedInput>;
    @Field(() => CampusChatUncheckedUpdateManyWithoutEduInstituteNestedInput, {nullable:true})
    campusChats?: InstanceType<typeof CampusChatUncheckedUpdateManyWithoutEduInstituteNestedInput>;
    @Field(() => ProductListingUncheckedUpdateManyWithoutUploaderEduInstituteNestedInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUncheckedUpdateManyWithoutUploaderEduInstituteNestedInput>;
}

@InputType()
export class EduInstituteUpdateManyMutationInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    domain?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    logo?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    city?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    state?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    address?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    zip?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    location?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    passCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    isRegistered?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class EduInstituteUpdateOneRequiredWithoutCampusChatsNestedInput {
    @Field(() => EduInstituteCreateWithoutCampusChatsInput, {nullable:true})
    @Type(() => EduInstituteCreateWithoutCampusChatsInput)
    create?: InstanceType<typeof EduInstituteCreateWithoutCampusChatsInput>;
    @Field(() => EduInstituteCreateOrConnectWithoutCampusChatsInput, {nullable:true})
    @Type(() => EduInstituteCreateOrConnectWithoutCampusChatsInput)
    connectOrCreate?: InstanceType<typeof EduInstituteCreateOrConnectWithoutCampusChatsInput>;
    @Field(() => EduInstituteUpsertWithoutCampusChatsInput, {nullable:true})
    @Type(() => EduInstituteUpsertWithoutCampusChatsInput)
    upsert?: InstanceType<typeof EduInstituteUpsertWithoutCampusChatsInput>;
    @Field(() => EduInstituteWhereUniqueInput, {nullable:true})
    @Type(() => EduInstituteWhereUniqueInput)
    connect?: Prisma.AtLeast<EduInstituteWhereUniqueInput, 'id' | 'domain'>;
    @Field(() => EduInstituteUpdateToOneWithWhereWithoutCampusChatsInput, {nullable:true})
    @Type(() => EduInstituteUpdateToOneWithWhereWithoutCampusChatsInput)
    update?: InstanceType<typeof EduInstituteUpdateToOneWithWhereWithoutCampusChatsInput>;
}

@InputType()
export class EduInstituteUpdateOneWithoutProductListingsNestedInput {
    @Field(() => EduInstituteCreateWithoutProductListingsInput, {nullable:true})
    @Type(() => EduInstituteCreateWithoutProductListingsInput)
    create?: InstanceType<typeof EduInstituteCreateWithoutProductListingsInput>;
    @Field(() => EduInstituteCreateOrConnectWithoutProductListingsInput, {nullable:true})
    @Type(() => EduInstituteCreateOrConnectWithoutProductListingsInput)
    connectOrCreate?: InstanceType<typeof EduInstituteCreateOrConnectWithoutProductListingsInput>;
    @Field(() => EduInstituteUpsertWithoutProductListingsInput, {nullable:true})
    @Type(() => EduInstituteUpsertWithoutProductListingsInput)
    upsert?: InstanceType<typeof EduInstituteUpsertWithoutProductListingsInput>;
    @Field(() => Boolean, {nullable:true})
    disconnect?: boolean;
    @Field(() => EduInstituteWhereInput, {nullable:true})
    @Type(() => EduInstituteWhereInput)
    delete?: InstanceType<typeof EduInstituteWhereInput>;
    @Field(() => EduInstituteWhereUniqueInput, {nullable:true})
    @Type(() => EduInstituteWhereUniqueInput)
    connect?: Prisma.AtLeast<EduInstituteWhereUniqueInput, 'id' | 'domain'>;
    @Field(() => EduInstituteUpdateToOneWithWhereWithoutProductListingsInput, {nullable:true})
    @Type(() => EduInstituteUpdateToOneWithWhereWithoutProductListingsInput)
    update?: InstanceType<typeof EduInstituteUpdateToOneWithWhereWithoutProductListingsInput>;
}

@InputType()
export class EduInstituteUpdateOneWithoutStudentsNestedInput {
    @Field(() => EduInstituteCreateWithoutStudentsInput, {nullable:true})
    @Type(() => EduInstituteCreateWithoutStudentsInput)
    create?: InstanceType<typeof EduInstituteCreateWithoutStudentsInput>;
    @Field(() => EduInstituteCreateOrConnectWithoutStudentsInput, {nullable:true})
    @Type(() => EduInstituteCreateOrConnectWithoutStudentsInput)
    connectOrCreate?: InstanceType<typeof EduInstituteCreateOrConnectWithoutStudentsInput>;
    @Field(() => EduInstituteUpsertWithoutStudentsInput, {nullable:true})
    @Type(() => EduInstituteUpsertWithoutStudentsInput)
    upsert?: InstanceType<typeof EduInstituteUpsertWithoutStudentsInput>;
    @Field(() => Boolean, {nullable:true})
    disconnect?: boolean;
    @Field(() => EduInstituteWhereInput, {nullable:true})
    @Type(() => EduInstituteWhereInput)
    delete?: InstanceType<typeof EduInstituteWhereInput>;
    @Field(() => EduInstituteWhereUniqueInput, {nullable:true})
    @Type(() => EduInstituteWhereUniqueInput)
    connect?: Prisma.AtLeast<EduInstituteWhereUniqueInput, 'id' | 'domain'>;
    @Field(() => EduInstituteUpdateToOneWithWhereWithoutStudentsInput, {nullable:true})
    @Type(() => EduInstituteUpdateToOneWithWhereWithoutStudentsInput)
    update?: InstanceType<typeof EduInstituteUpdateToOneWithWhereWithoutStudentsInput>;
}

@InputType()
export class EduInstituteUpdateToOneWithWhereWithoutCampusChatsInput {
    @Field(() => EduInstituteWhereInput, {nullable:true})
    @Type(() => EduInstituteWhereInput)
    where?: InstanceType<typeof EduInstituteWhereInput>;
    @Field(() => EduInstituteUpdateWithoutCampusChatsInput, {nullable:false})
    @Type(() => EduInstituteUpdateWithoutCampusChatsInput)
    data!: InstanceType<typeof EduInstituteUpdateWithoutCampusChatsInput>;
}

@InputType()
export class EduInstituteUpdateToOneWithWhereWithoutProductListingsInput {
    @Field(() => EduInstituteWhereInput, {nullable:true})
    @Type(() => EduInstituteWhereInput)
    where?: InstanceType<typeof EduInstituteWhereInput>;
    @Field(() => EduInstituteUpdateWithoutProductListingsInput, {nullable:false})
    @Type(() => EduInstituteUpdateWithoutProductListingsInput)
    data!: InstanceType<typeof EduInstituteUpdateWithoutProductListingsInput>;
}

@InputType()
export class EduInstituteUpdateToOneWithWhereWithoutStudentsInput {
    @Field(() => EduInstituteWhereInput, {nullable:true})
    @Type(() => EduInstituteWhereInput)
    where?: InstanceType<typeof EduInstituteWhereInput>;
    @Field(() => EduInstituteUpdateWithoutStudentsInput, {nullable:false})
    @Type(() => EduInstituteUpdateWithoutStudentsInput)
    data!: InstanceType<typeof EduInstituteUpdateWithoutStudentsInput>;
}

@InputType()
export class EduInstituteUpdateWithoutCampusChatsInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    domain?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    logo?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    city?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    state?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    address?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    zip?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    location?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    passCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    isRegistered?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => UserUpdateManyWithoutEduInstituteNestedInput, {nullable:true})
    students?: InstanceType<typeof UserUpdateManyWithoutEduInstituteNestedInput>;
    @Field(() => ProductListingUpdateManyWithoutUploaderEduInstituteNestedInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUpdateManyWithoutUploaderEduInstituteNestedInput>;
}

@InputType()
export class EduInstituteUpdateWithoutProductListingsInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    domain?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    logo?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    city?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    state?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    address?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    zip?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    location?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    passCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    isRegistered?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => UserUpdateManyWithoutEduInstituteNestedInput, {nullable:true})
    students?: InstanceType<typeof UserUpdateManyWithoutEduInstituteNestedInput>;
    @Field(() => CampusChatUpdateManyWithoutEduInstituteNestedInput, {nullable:true})
    campusChats?: InstanceType<typeof CampusChatUpdateManyWithoutEduInstituteNestedInput>;
}

@InputType()
export class EduInstituteUpdateWithoutStudentsInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    domain?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    logo?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    city?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    state?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    address?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    zip?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    location?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    passCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    isRegistered?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => CampusChatUpdateManyWithoutEduInstituteNestedInput, {nullable:true})
    campusChats?: InstanceType<typeof CampusChatUpdateManyWithoutEduInstituteNestedInput>;
    @Field(() => ProductListingUpdateManyWithoutUploaderEduInstituteNestedInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUpdateManyWithoutUploaderEduInstituteNestedInput>;
}

@InputType()
export class EduInstituteUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    domain?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    logo?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    city?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    state?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    address?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    zip?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    location?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    passCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    isRegistered?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => UserUpdateManyWithoutEduInstituteNestedInput, {nullable:true})
    students?: InstanceType<typeof UserUpdateManyWithoutEduInstituteNestedInput>;
    @Field(() => CampusChatUpdateManyWithoutEduInstituteNestedInput, {nullable:true})
    campusChats?: InstanceType<typeof CampusChatUpdateManyWithoutEduInstituteNestedInput>;
    @Field(() => ProductListingUpdateManyWithoutUploaderEduInstituteNestedInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUpdateManyWithoutUploaderEduInstituteNestedInput>;
}

@InputType()
export class EduInstituteUpsertWithoutCampusChatsInput {
    @Field(() => EduInstituteUpdateWithoutCampusChatsInput, {nullable:false})
    @Type(() => EduInstituteUpdateWithoutCampusChatsInput)
    update!: InstanceType<typeof EduInstituteUpdateWithoutCampusChatsInput>;
    @Field(() => EduInstituteCreateWithoutCampusChatsInput, {nullable:false})
    @Type(() => EduInstituteCreateWithoutCampusChatsInput)
    create!: InstanceType<typeof EduInstituteCreateWithoutCampusChatsInput>;
    @Field(() => EduInstituteWhereInput, {nullable:true})
    @Type(() => EduInstituteWhereInput)
    where?: InstanceType<typeof EduInstituteWhereInput>;
}

@InputType()
export class EduInstituteUpsertWithoutProductListingsInput {
    @Field(() => EduInstituteUpdateWithoutProductListingsInput, {nullable:false})
    @Type(() => EduInstituteUpdateWithoutProductListingsInput)
    update!: InstanceType<typeof EduInstituteUpdateWithoutProductListingsInput>;
    @Field(() => EduInstituteCreateWithoutProductListingsInput, {nullable:false})
    @Type(() => EduInstituteCreateWithoutProductListingsInput)
    create!: InstanceType<typeof EduInstituteCreateWithoutProductListingsInput>;
    @Field(() => EduInstituteWhereInput, {nullable:true})
    @Type(() => EduInstituteWhereInput)
    where?: InstanceType<typeof EduInstituteWhereInput>;
}

@InputType()
export class EduInstituteUpsertWithoutStudentsInput {
    @Field(() => EduInstituteUpdateWithoutStudentsInput, {nullable:false})
    @Type(() => EduInstituteUpdateWithoutStudentsInput)
    update!: InstanceType<typeof EduInstituteUpdateWithoutStudentsInput>;
    @Field(() => EduInstituteCreateWithoutStudentsInput, {nullable:false})
    @Type(() => EduInstituteCreateWithoutStudentsInput)
    create!: InstanceType<typeof EduInstituteCreateWithoutStudentsInput>;
    @Field(() => EduInstituteWhereInput, {nullable:true})
    @Type(() => EduInstituteWhereInput)
    where?: InstanceType<typeof EduInstituteWhereInput>;
}

@InputType()
export class EduInstituteWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:true})
    domain?: string;
    @Field(() => [EduInstituteWhereInput], {nullable:true})
    AND?: Array<EduInstituteWhereInput>;
    @Field(() => [EduInstituteWhereInput], {nullable:true})
    OR?: Array<EduInstituteWhereInput>;
    @Field(() => [EduInstituteWhereInput], {nullable:true})
    NOT?: Array<EduInstituteWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    name?: InstanceType<typeof StringFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    logo?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringFilter, {nullable:true})
    city?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    state?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    address?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    zip?: InstanceType<typeof StringFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    location?: InstanceType<typeof StringNullableFilter>;
    @Field(() => BoolNullableFilter, {nullable:true})
    active?: InstanceType<typeof BoolNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    passCode?: InstanceType<typeof StringNullableFilter>;
    @Field(() => BoolNullableFilter, {nullable:true})
    isRegistered?: InstanceType<typeof BoolNullableFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => UserListRelationFilter, {nullable:true})
    students?: InstanceType<typeof UserListRelationFilter>;
    @Field(() => CampusChatListRelationFilter, {nullable:true})
    campusChats?: InstanceType<typeof CampusChatListRelationFilter>;
    @Field(() => ProductListingListRelationFilter, {nullable:true})
    productListings?: InstanceType<typeof ProductListingListRelationFilter>;
}

@InputType()
export class EduInstituteWhereInput {
    @Field(() => [EduInstituteWhereInput], {nullable:true})
    AND?: Array<EduInstituteWhereInput>;
    @Field(() => [EduInstituteWhereInput], {nullable:true})
    OR?: Array<EduInstituteWhereInput>;
    @Field(() => [EduInstituteWhereInput], {nullable:true})
    NOT?: Array<EduInstituteWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    name?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    domain?: InstanceType<typeof StringFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    logo?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringFilter, {nullable:true})
    city?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    state?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    address?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    zip?: InstanceType<typeof StringFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    location?: InstanceType<typeof StringNullableFilter>;
    @Field(() => BoolNullableFilter, {nullable:true})
    active?: InstanceType<typeof BoolNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    passCode?: InstanceType<typeof StringNullableFilter>;
    @Field(() => BoolNullableFilter, {nullable:true})
    isRegistered?: InstanceType<typeof BoolNullableFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => UserListRelationFilter, {nullable:true})
    students?: InstanceType<typeof UserListRelationFilter>;
    @Field(() => CampusChatListRelationFilter, {nullable:true})
    campusChats?: InstanceType<typeof CampusChatListRelationFilter>;
    @Field(() => ProductListingListRelationFilter, {nullable:true})
    productListings?: InstanceType<typeof ProductListingListRelationFilter>;
}

@ObjectType()
export class EduInstitute {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    domain!: string;
    @Field(() => String, {nullable:true})
    logo!: string | null;
    @Field(() => String, {nullable:false})
    city!: string;
    @Field(() => String, {nullable:false})
    state!: string;
    @Field(() => String, {nullable:false})
    address!: string;
    @Field(() => String, {nullable:false})
    zip!: string;
    @Field(() => String, {nullable:true})
    location!: string | null;
    @Field(() => Boolean, {nullable:true})
    active!: boolean | null;
    @Field(() => String, {nullable:true})
    passCode!: string | null;
    @Field(() => Boolean, {nullable:true})
    isRegistered!: boolean | null;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
    @Field(() => Date, {nullable:false})
    updatedAt!: Date;
    @Field(() => [User], {nullable:true})
    students?: Array<User>;
    @Field(() => [CampusChat], {nullable:true})
    campusChats?: Array<CampusChat>;
    @Field(() => [ProductListing], {nullable:true})
    productListings?: Array<ProductListing>;
}

@ArgsType()
export class FindFirstEduInstituteOrThrowArgs {
    @Field(() => EduInstituteWhereInput, {nullable:true})
    @Type(() => EduInstituteWhereInput)
    where?: InstanceType<typeof EduInstituteWhereInput>;
    @Field(() => [EduInstituteOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<EduInstituteOrderByWithRelationInput>;
    @Field(() => EduInstituteWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<EduInstituteWhereUniqueInput, 'id' | 'domain'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [EduInstituteScalarFieldEnum], {nullable:true})
    distinct?: Array<`${EduInstituteScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstEduInstituteArgs {
    @Field(() => EduInstituteWhereInput, {nullable:true})
    @Type(() => EduInstituteWhereInput)
    where?: InstanceType<typeof EduInstituteWhereInput>;
    @Field(() => [EduInstituteOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<EduInstituteOrderByWithRelationInput>;
    @Field(() => EduInstituteWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<EduInstituteWhereUniqueInput, 'id' | 'domain'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [EduInstituteScalarFieldEnum], {nullable:true})
    distinct?: Array<`${EduInstituteScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyEduInstituteArgs {
    @Field(() => EduInstituteWhereInput, {nullable:true})
    @Type(() => EduInstituteWhereInput)
    where?: InstanceType<typeof EduInstituteWhereInput>;
    @Field(() => [EduInstituteOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<EduInstituteOrderByWithRelationInput>;
    @Field(() => EduInstituteWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<EduInstituteWhereUniqueInput, 'id' | 'domain'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [EduInstituteScalarFieldEnum], {nullable:true})
    distinct?: Array<`${EduInstituteScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniqueEduInstituteOrThrowArgs {
    @Field(() => EduInstituteWhereUniqueInput, {nullable:false})
    @Type(() => EduInstituteWhereUniqueInput)
    where!: Prisma.AtLeast<EduInstituteWhereUniqueInput, 'id' | 'domain'>;
}

@ArgsType()
export class FindUniqueEduInstituteArgs {
    @Field(() => EduInstituteWhereUniqueInput, {nullable:false})
    @Type(() => EduInstituteWhereUniqueInput)
    where!: Prisma.AtLeast<EduInstituteWhereUniqueInput, 'id' | 'domain'>;
}

@ArgsType()
export class UpdateManyEduInstituteArgs {
    @Field(() => EduInstituteUpdateManyMutationInput, {nullable:false})
    @Type(() => EduInstituteUpdateManyMutationInput)
    data!: InstanceType<typeof EduInstituteUpdateManyMutationInput>;
    @Field(() => EduInstituteWhereInput, {nullable:true})
    @Type(() => EduInstituteWhereInput)
    where?: InstanceType<typeof EduInstituteWhereInput>;
}

@ArgsType()
export class UpdateOneEduInstituteArgs {
    @Field(() => EduInstituteUpdateInput, {nullable:false})
    @Type(() => EduInstituteUpdateInput)
    data!: InstanceType<typeof EduInstituteUpdateInput>;
    @Field(() => EduInstituteWhereUniqueInput, {nullable:false})
    @Type(() => EduInstituteWhereUniqueInput)
    where!: Prisma.AtLeast<EduInstituteWhereUniqueInput, 'id' | 'domain'>;
}

@ArgsType()
export class UpsertOneEduInstituteArgs {
    @Field(() => EduInstituteWhereUniqueInput, {nullable:false})
    @Type(() => EduInstituteWhereUniqueInput)
    where!: Prisma.AtLeast<EduInstituteWhereUniqueInput, 'id' | 'domain'>;
    @Field(() => EduInstituteCreateInput, {nullable:false})
    @Type(() => EduInstituteCreateInput)
    create!: InstanceType<typeof EduInstituteCreateInput>;
    @Field(() => EduInstituteUpdateInput, {nullable:false})
    @Type(() => EduInstituteUpdateInput)
    update!: InstanceType<typeof EduInstituteUpdateInput>;
}

@InputType()
export class EduInstituteSelectOptionCreateInput {
    @Field(() => String, {nullable:false})
    label!: string;
    @Field(() => String, {nullable:false})
    value!: string;
}

@InputType()
export class EduInstituteSelectOptionOrderByCompositeAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    _count?: `${SortOrder}`;
}

@InputType()
export class EduInstituteSelectOptionUpdateManyInput {
    @Field(() => EduInstituteSelectOptionWhereInput, {nullable:false})
    @Type(() => EduInstituteSelectOptionWhereInput)
    where!: InstanceType<typeof EduInstituteSelectOptionWhereInput>;
    @Field(() => EduInstituteSelectOptionUpdateInput, {nullable:false})
    @Type(() => EduInstituteSelectOptionUpdateInput)
    data!: InstanceType<typeof EduInstituteSelectOptionUpdateInput>;
}

@InputType()
export class EduInstituteSelectOptionUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    label?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    value?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}

@InputType()
export class EduInstituteSelectOptionWhereInput {
    @Field(() => [EduInstituteSelectOptionWhereInput], {nullable:true})
    AND?: Array<EduInstituteSelectOptionWhereInput>;
    @Field(() => [EduInstituteSelectOptionWhereInput], {nullable:true})
    OR?: Array<EduInstituteSelectOptionWhereInput>;
    @Field(() => [EduInstituteSelectOptionWhereInput], {nullable:true})
    NOT?: Array<EduInstituteSelectOptionWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    label?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    value?: InstanceType<typeof StringFilter>;
}

@ObjectType()
export class EduInstituteSelectOption {
    @Field(() => String, {nullable:false})
    label!: string;
    @Field(() => String, {nullable:false})
    value!: string;
}

@ArgsType()
export class CreateManyEventArgs {
    @Field(() => [EventCreateManyInput], {nullable:false})
    @Type(() => EventCreateManyInput)
    data!: Array<EventCreateManyInput>;
}

@ArgsType()
export class CreateOneEventArgs {
    @Field(() => EventCreateInput, {nullable:false})
    @Type(() => EventCreateInput)
    data!: InstanceType<typeof EventCreateInput>;
}

@ArgsType()
export class DeleteManyEventArgs {
    @Field(() => EventWhereInput, {nullable:true})
    @Type(() => EventWhereInput)
    where?: InstanceType<typeof EventWhereInput>;
}

@ArgsType()
export class DeleteOneEventArgs {
    @Field(() => EventWhereUniqueInput, {nullable:false})
    @Type(() => EventWhereUniqueInput)
    where!: Prisma.AtLeast<EventWhereUniqueInput, 'id' | 'clientId'>;
}

@ArgsType()
export class EventAggregateArgs {
    @Field(() => EventWhereInput, {nullable:true})
    @Type(() => EventWhereInput)
    where?: InstanceType<typeof EventWhereInput>;
    @Field(() => [EventOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<EventOrderByWithRelationInput>;
    @Field(() => EventWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<EventWhereUniqueInput, 'id' | 'clientId'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class EventCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    clientId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    campaignId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    gender?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    eduInstituteId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    platform?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    timestamp?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    screen?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    batch?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class EventCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    clientId!: string;
    @Field(() => String, {nullable:false})
    campaignId!: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => Gender, {nullable:false})
    gender!: `${Gender}`;
    @Field(() => String, {nullable:false})
    eduInstituteId!: string;
    @Field(() => String, {nullable:false})
    platform!: string;
    @Field(() => EventType, {nullable:false})
    type!: `${EventType}`;
    @Field(() => Date, {nullable:false})
    timestamp!: Date | string;
    @Field(() => String, {nullable:false})
    screen!: string;
    @Field(() => String, {nullable:false})
    batch!: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class EventCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    clientId!: string;
    @Field(() => String, {nullable:false})
    campaignId!: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => Gender, {nullable:false})
    gender!: `${Gender}`;
    @Field(() => String, {nullable:false})
    eduInstituteId!: string;
    @Field(() => String, {nullable:false})
    platform!: string;
    @Field(() => EventType, {nullable:false})
    type!: `${EventType}`;
    @Field(() => Date, {nullable:false})
    timestamp!: Date | string;
    @Field(() => String, {nullable:false})
    screen!: string;
    @Field(() => String, {nullable:false})
    batch!: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@ArgsType()
export class EventGroupByArgs {
    @Field(() => EventWhereInput, {nullable:true})
    @Type(() => EventWhereInput)
    where?: InstanceType<typeof EventWhereInput>;
    @Field(() => [EventOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<EventOrderByWithAggregationInput>;
    @Field(() => [EventScalarFieldEnum], {nullable:false})
    by!: Array<`${EventScalarFieldEnum}`>;
    @Field(() => EventScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof EventScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class EventMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    clientId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    campaignId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    gender?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    eduInstituteId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    platform?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    timestamp?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    screen?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    batch?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class EventMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    clientId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    campaignId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    gender?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    eduInstituteId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    platform?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    timestamp?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    screen?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    batch?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class EventOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    clientId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    campaignId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    gender?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    eduInstituteId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    platform?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    timestamp?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    screen?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    batch?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => EventCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof EventCountOrderByAggregateInput>;
    @Field(() => EventMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof EventMaxOrderByAggregateInput>;
    @Field(() => EventMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof EventMinOrderByAggregateInput>;
}

@InputType()
export class EventOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    clientId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    campaignId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    gender?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    eduInstituteId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    platform?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    timestamp?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    screen?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    batch?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class EventScalarWhereWithAggregatesInput {
    @Field(() => [EventScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<EventScalarWhereWithAggregatesInput>;
    @Field(() => [EventScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<EventScalarWhereWithAggregatesInput>;
    @Field(() => [EventScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<EventScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    clientId?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    campaignId?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    userId?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => EnumGenderWithAggregatesFilter, {nullable:true})
    gender?: InstanceType<typeof EnumGenderWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    eduInstituteId?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    platform?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => EnumEventTypeWithAggregatesFilter, {nullable:true})
    type?: InstanceType<typeof EnumEventTypeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    timestamp?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    screen?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    batch?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
}

@InputType()
export class EventUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    clientId!: string;
    @Field(() => String, {nullable:false})
    campaignId!: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => Gender, {nullable:false})
    gender!: `${Gender}`;
    @Field(() => String, {nullable:false})
    eduInstituteId!: string;
    @Field(() => String, {nullable:false})
    platform!: string;
    @Field(() => EventType, {nullable:false})
    type!: `${EventType}`;
    @Field(() => Date, {nullable:false})
    timestamp!: Date | string;
    @Field(() => String, {nullable:false})
    screen!: string;
    @Field(() => String, {nullable:false})
    batch!: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class EventUncheckedUpdateManyInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    clientId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    campaignId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumGenderFieldUpdateOperationsInput, {nullable:true})
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    eduInstituteId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    platform?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumEventTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumEventTypeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    timestamp?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    screen?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    batch?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class EventUncheckedUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    clientId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    campaignId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumGenderFieldUpdateOperationsInput, {nullable:true})
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    eduInstituteId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    platform?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumEventTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumEventTypeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    timestamp?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    screen?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    batch?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class EventUpdateManyMutationInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    clientId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    campaignId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumGenderFieldUpdateOperationsInput, {nullable:true})
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    eduInstituteId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    platform?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumEventTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumEventTypeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    timestamp?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    screen?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    batch?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class EventUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    clientId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    campaignId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumGenderFieldUpdateOperationsInput, {nullable:true})
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    eduInstituteId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    platform?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumEventTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumEventTypeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    timestamp?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    screen?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    batch?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class EventWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:true})
    clientId?: string;
    @Field(() => [EventWhereInput], {nullable:true})
    AND?: Array<EventWhereInput>;
    @Field(() => [EventWhereInput], {nullable:true})
    OR?: Array<EventWhereInput>;
    @Field(() => [EventWhereInput], {nullable:true})
    NOT?: Array<EventWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    campaignId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    userId?: InstanceType<typeof StringFilter>;
    @Field(() => EnumGenderFilter, {nullable:true})
    gender?: InstanceType<typeof EnumGenderFilter>;
    @Field(() => StringFilter, {nullable:true})
    eduInstituteId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    platform?: InstanceType<typeof StringFilter>;
    @Field(() => EnumEventTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumEventTypeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    timestamp?: InstanceType<typeof DateTimeFilter>;
    @Field(() => StringFilter, {nullable:true})
    screen?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    batch?: InstanceType<typeof StringFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@InputType()
export class EventWhereInput {
    @Field(() => [EventWhereInput], {nullable:true})
    AND?: Array<EventWhereInput>;
    @Field(() => [EventWhereInput], {nullable:true})
    OR?: Array<EventWhereInput>;
    @Field(() => [EventWhereInput], {nullable:true})
    NOT?: Array<EventWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    clientId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    campaignId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    userId?: InstanceType<typeof StringFilter>;
    @Field(() => EnumGenderFilter, {nullable:true})
    gender?: InstanceType<typeof EnumGenderFilter>;
    @Field(() => StringFilter, {nullable:true})
    eduInstituteId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    platform?: InstanceType<typeof StringFilter>;
    @Field(() => EnumEventTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumEventTypeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    timestamp?: InstanceType<typeof DateTimeFilter>;
    @Field(() => StringFilter, {nullable:true})
    screen?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    batch?: InstanceType<typeof StringFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@ObjectType()
export class Event {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    clientId!: string;
    @Field(() => String, {nullable:false})
    campaignId!: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => Gender, {nullable:false})
    gender!: `${Gender}`;
    @Field(() => String, {nullable:false})
    eduInstituteId!: string;
    @Field(() => String, {nullable:false})
    platform!: string;
    @Field(() => EventType, {nullable:false})
    type!: `${EventType}`;
    @Field(() => Date, {nullable:false})
    timestamp!: Date;
    @Field(() => String, {nullable:false})
    screen!: string;
    @Field(() => String, {nullable:false})
    batch!: string;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
    @Field(() => Date, {nullable:false})
    updatedAt!: Date;
}

@ArgsType()
export class FindFirstEventOrThrowArgs {
    @Field(() => EventWhereInput, {nullable:true})
    @Type(() => EventWhereInput)
    where?: InstanceType<typeof EventWhereInput>;
    @Field(() => [EventOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<EventOrderByWithRelationInput>;
    @Field(() => EventWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<EventWhereUniqueInput, 'id' | 'clientId'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [EventScalarFieldEnum], {nullable:true})
    distinct?: Array<`${EventScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstEventArgs {
    @Field(() => EventWhereInput, {nullable:true})
    @Type(() => EventWhereInput)
    where?: InstanceType<typeof EventWhereInput>;
    @Field(() => [EventOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<EventOrderByWithRelationInput>;
    @Field(() => EventWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<EventWhereUniqueInput, 'id' | 'clientId'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [EventScalarFieldEnum], {nullable:true})
    distinct?: Array<`${EventScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyEventArgs {
    @Field(() => EventWhereInput, {nullable:true})
    @Type(() => EventWhereInput)
    where?: InstanceType<typeof EventWhereInput>;
    @Field(() => [EventOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<EventOrderByWithRelationInput>;
    @Field(() => EventWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<EventWhereUniqueInput, 'id' | 'clientId'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [EventScalarFieldEnum], {nullable:true})
    distinct?: Array<`${EventScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniqueEventOrThrowArgs {
    @Field(() => EventWhereUniqueInput, {nullable:false})
    @Type(() => EventWhereUniqueInput)
    where!: Prisma.AtLeast<EventWhereUniqueInput, 'id' | 'clientId'>;
}

@ArgsType()
export class FindUniqueEventArgs {
    @Field(() => EventWhereUniqueInput, {nullable:false})
    @Type(() => EventWhereUniqueInput)
    where!: Prisma.AtLeast<EventWhereUniqueInput, 'id' | 'clientId'>;
}

@ArgsType()
export class UpdateManyEventArgs {
    @Field(() => EventUpdateManyMutationInput, {nullable:false})
    @Type(() => EventUpdateManyMutationInput)
    data!: InstanceType<typeof EventUpdateManyMutationInput>;
    @Field(() => EventWhereInput, {nullable:true})
    @Type(() => EventWhereInput)
    where?: InstanceType<typeof EventWhereInput>;
}

@ArgsType()
export class UpdateOneEventArgs {
    @Field(() => EventUpdateInput, {nullable:false})
    @Type(() => EventUpdateInput)
    data!: InstanceType<typeof EventUpdateInput>;
    @Field(() => EventWhereUniqueInput, {nullable:false})
    @Type(() => EventWhereUniqueInput)
    where!: Prisma.AtLeast<EventWhereUniqueInput, 'id' | 'clientId'>;
}

@ArgsType()
export class UpsertOneEventArgs {
    @Field(() => EventWhereUniqueInput, {nullable:false})
    @Type(() => EventWhereUniqueInput)
    where!: Prisma.AtLeast<EventWhereUniqueInput, 'id' | 'clientId'>;
    @Field(() => EventCreateInput, {nullable:false})
    @Type(() => EventCreateInput)
    create!: InstanceType<typeof EventCreateInput>;
    @Field(() => EventUpdateInput, {nullable:false})
    @Type(() => EventUpdateInput)
    update!: InstanceType<typeof EventUpdateInput>;
}

@InputType()
export class FeaturedProductCategoryCreateInput {
    @Field(() => Boolean, {nullable:false})
    status!: boolean;
    @Field(() => String, {nullable:false})
    image!: string;
}

@InputType()
export class FeaturedProductCategoryOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    status?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    image?: `${SortOrder}`;
}

@InputType()
export class FeaturedProductCategoryUpdateInput {
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    status?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}

@InputType()
export class FeaturedProductCategoryWhereInput {
    @Field(() => [FeaturedProductCategoryWhereInput], {nullable:true})
    AND?: Array<FeaturedProductCategoryWhereInput>;
    @Field(() => [FeaturedProductCategoryWhereInput], {nullable:true})
    OR?: Array<FeaturedProductCategoryWhereInput>;
    @Field(() => [FeaturedProductCategoryWhereInput], {nullable:true})
    NOT?: Array<FeaturedProductCategoryWhereInput>;
    @Field(() => BoolFilter, {nullable:true})
    status?: InstanceType<typeof BoolFilter>;
    @Field(() => StringFilter, {nullable:true})
    image?: InstanceType<typeof StringFilter>;
}

@ObjectType()
export class FeaturedProductCategory {
    @Field(() => Boolean, {nullable:false})
    status!: boolean;
    @Field(() => String, {nullable:false})
    image!: string;
}

@InputType()
export class FilterChoiceCreateInput {
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    value!: string;
}

@InputType()
export class FilterChoiceUpdateManyInput {
    @Field(() => FilterChoiceWhereInput, {nullable:false})
    @Type(() => FilterChoiceWhereInput)
    where!: InstanceType<typeof FilterChoiceWhereInput>;
    @Field(() => FilterChoiceUpdateInput, {nullable:false})
    @Type(() => FilterChoiceUpdateInput)
    data!: InstanceType<typeof FilterChoiceUpdateInput>;
}

@InputType()
export class FilterChoiceUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    value?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}

@InputType()
export class FilterChoiceWhereInput {
    @Field(() => [FilterChoiceWhereInput], {nullable:true})
    AND?: Array<FilterChoiceWhereInput>;
    @Field(() => [FilterChoiceWhereInput], {nullable:true})
    OR?: Array<FilterChoiceWhereInput>;
    @Field(() => [FilterChoiceWhereInput], {nullable:true})
    NOT?: Array<FilterChoiceWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    name?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    value?: InstanceType<typeof StringFilter>;
}

@ObjectType()
export class FilterChoice {
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    value!: string;
}

@ArgsType()
export class CreateManyHobbyArgs {
    @Field(() => [HobbyCreateManyInput], {nullable:false})
    @Type(() => HobbyCreateManyInput)
    data!: Array<HobbyCreateManyInput>;
}

@ArgsType()
export class CreateOneHobbyArgs {
    @Field(() => HobbyCreateInput, {nullable:false})
    @Type(() => HobbyCreateInput)
    data!: InstanceType<typeof HobbyCreateInput>;
}

@ArgsType()
export class DeleteManyHobbyArgs {
    @Field(() => HobbyWhereInput, {nullable:true})
    @Type(() => HobbyWhereInput)
    where?: InstanceType<typeof HobbyWhereInput>;
}

@ArgsType()
export class DeleteOneHobbyArgs {
    @Field(() => HobbyWhereUniqueInput, {nullable:false})
    @Type(() => HobbyWhereUniqueInput)
    where!: Prisma.AtLeast<HobbyWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindFirstHobbyOrThrowArgs {
    @Field(() => HobbyWhereInput, {nullable:true})
    @Type(() => HobbyWhereInput)
    where?: InstanceType<typeof HobbyWhereInput>;
    @Field(() => [HobbyOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<HobbyOrderByWithRelationInput>;
    @Field(() => HobbyWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<HobbyWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [HobbyScalarFieldEnum], {nullable:true})
    distinct?: Array<`${HobbyScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstHobbyArgs {
    @Field(() => HobbyWhereInput, {nullable:true})
    @Type(() => HobbyWhereInput)
    where?: InstanceType<typeof HobbyWhereInput>;
    @Field(() => [HobbyOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<HobbyOrderByWithRelationInput>;
    @Field(() => HobbyWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<HobbyWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [HobbyScalarFieldEnum], {nullable:true})
    distinct?: Array<`${HobbyScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyHobbyArgs {
    @Field(() => HobbyWhereInput, {nullable:true})
    @Type(() => HobbyWhereInput)
    where?: InstanceType<typeof HobbyWhereInput>;
    @Field(() => [HobbyOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<HobbyOrderByWithRelationInput>;
    @Field(() => HobbyWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<HobbyWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [HobbyScalarFieldEnum], {nullable:true})
    distinct?: Array<`${HobbyScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniqueHobbyOrThrowArgs {
    @Field(() => HobbyWhereUniqueInput, {nullable:false})
    @Type(() => HobbyWhereUniqueInput)
    where!: Prisma.AtLeast<HobbyWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindUniqueHobbyArgs {
    @Field(() => HobbyWhereUniqueInput, {nullable:false})
    @Type(() => HobbyWhereUniqueInput)
    where!: Prisma.AtLeast<HobbyWhereUniqueInput, 'id'>;
}

@ArgsType()
export class HobbyAggregateArgs {
    @Field(() => HobbyWhereInput, {nullable:true})
    @Type(() => HobbyWhereInput)
    where?: InstanceType<typeof HobbyWhereInput>;
    @Field(() => [HobbyOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<HobbyOrderByWithRelationInput>;
    @Field(() => HobbyWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<HobbyWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class HobbyCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    image?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userIds?: `${SortOrder}`;
}

@InputType()
export class HobbyCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => HobbyCreateuserIdsInput, {nullable:true})
    userIds?: InstanceType<typeof HobbyCreateuserIdsInput>;
}

@InputType()
export class HobbyCreateNestedManyWithoutUsersInput {
    @Field(() => [HobbyCreateWithoutUsersInput], {nullable:true})
    @Type(() => HobbyCreateWithoutUsersInput)
    create?: Array<HobbyCreateWithoutUsersInput>;
    @Field(() => [HobbyCreateOrConnectWithoutUsersInput], {nullable:true})
    @Type(() => HobbyCreateOrConnectWithoutUsersInput)
    connectOrCreate?: Array<HobbyCreateOrConnectWithoutUsersInput>;
    @Field(() => [HobbyWhereUniqueInput], {nullable:true})
    @Type(() => HobbyWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<HobbyWhereUniqueInput, 'id'>>;
}

@InputType()
export class HobbyCreateOrConnectWithoutUsersInput {
    @Field(() => HobbyWhereUniqueInput, {nullable:false})
    @Type(() => HobbyWhereUniqueInput)
    where!: Prisma.AtLeast<HobbyWhereUniqueInput, 'id'>;
    @Field(() => HobbyCreateWithoutUsersInput, {nullable:false})
    @Type(() => HobbyCreateWithoutUsersInput)
    create!: InstanceType<typeof HobbyCreateWithoutUsersInput>;
}

@InputType()
export class HobbyCreateWithoutUsersInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
}

@InputType()
export class HobbyCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => UserCreateNestedManyWithoutHobbiesInput, {nullable:true})
    users?: InstanceType<typeof UserCreateNestedManyWithoutHobbiesInput>;
}

@InputType()
export class HobbyCreateuserIdsInput {
    @Field(() => [String], {nullable:false})
    set!: Array<string>;
}

@ArgsType()
export class HobbyGroupByArgs {
    @Field(() => HobbyWhereInput, {nullable:true})
    @Type(() => HobbyWhereInput)
    where?: InstanceType<typeof HobbyWhereInput>;
    @Field(() => [HobbyOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<HobbyOrderByWithAggregationInput>;
    @Field(() => [HobbyScalarFieldEnum], {nullable:false})
    by!: Array<`${HobbyScalarFieldEnum}`>;
    @Field(() => HobbyScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof HobbyScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class HobbyListRelationFilter {
    @Field(() => HobbyWhereInput, {nullable:true})
    every?: InstanceType<typeof HobbyWhereInput>;
    @Field(() => HobbyWhereInput, {nullable:true})
    some?: InstanceType<typeof HobbyWhereInput>;
    @Field(() => HobbyWhereInput, {nullable:true})
    none?: InstanceType<typeof HobbyWhereInput>;
}

@InputType()
export class HobbyMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    image?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
}

@InputType()
export class HobbyMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    image?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
}

@InputType()
export class HobbyOrderByRelationAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    _count?: `${SortOrder}`;
}

@InputType()
export class HobbyOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    image?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userIds?: `${SortOrder}`;
    @Field(() => HobbyCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof HobbyCountOrderByAggregateInput>;
    @Field(() => HobbyMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof HobbyMaxOrderByAggregateInput>;
    @Field(() => HobbyMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof HobbyMinOrderByAggregateInput>;
}

@InputType()
export class HobbyOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    image?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userIds?: `${SortOrder}`;
    @Field(() => UserOrderByRelationAggregateInput, {nullable:true})
    users?: InstanceType<typeof UserOrderByRelationAggregateInput>;
}

@InputType()
export class HobbyScalarWhereWithAggregatesInput {
    @Field(() => [HobbyScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<HobbyScalarWhereWithAggregatesInput>;
    @Field(() => [HobbyScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<HobbyScalarWhereWithAggregatesInput>;
    @Field(() => [HobbyScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<HobbyScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    name?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    image?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => BoolWithAggregatesFilter, {nullable:true})
    active?: InstanceType<typeof BoolWithAggregatesFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    userIds?: InstanceType<typeof StringNullableListFilter>;
}

@InputType()
export class HobbyScalarWhereInput {
    @Field(() => [HobbyScalarWhereInput], {nullable:true})
    AND?: Array<HobbyScalarWhereInput>;
    @Field(() => [HobbyScalarWhereInput], {nullable:true})
    OR?: Array<HobbyScalarWhereInput>;
    @Field(() => [HobbyScalarWhereInput], {nullable:true})
    NOT?: Array<HobbyScalarWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    name?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    image?: InstanceType<typeof StringFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => BoolFilter, {nullable:true})
    active?: InstanceType<typeof BoolFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    userIds?: InstanceType<typeof StringNullableListFilter>;
}

@InputType()
export class HobbyUncheckedCreateNestedManyWithoutUsersInput {
    @Field(() => [HobbyCreateWithoutUsersInput], {nullable:true})
    @Type(() => HobbyCreateWithoutUsersInput)
    create?: Array<HobbyCreateWithoutUsersInput>;
    @Field(() => [HobbyCreateOrConnectWithoutUsersInput], {nullable:true})
    @Type(() => HobbyCreateOrConnectWithoutUsersInput)
    connectOrCreate?: Array<HobbyCreateOrConnectWithoutUsersInput>;
    @Field(() => [HobbyWhereUniqueInput], {nullable:true})
    @Type(() => HobbyWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<HobbyWhereUniqueInput, 'id'>>;
}

@InputType()
export class HobbyUncheckedCreateWithoutUsersInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => HobbyCreateuserIdsInput, {nullable:true})
    userIds?: InstanceType<typeof HobbyCreateuserIdsInput>;
}

@InputType()
export class HobbyUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => HobbyCreateuserIdsInput, {nullable:true})
    userIds?: InstanceType<typeof HobbyCreateuserIdsInput>;
    @Field(() => UserUncheckedCreateNestedManyWithoutHobbiesInput, {nullable:true})
    users?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutHobbiesInput>;
}

@InputType()
export class HobbyUncheckedUpdateManyWithoutUsersNestedInput {
    @Field(() => [HobbyCreateWithoutUsersInput], {nullable:true})
    @Type(() => HobbyCreateWithoutUsersInput)
    create?: Array<HobbyCreateWithoutUsersInput>;
    @Field(() => [HobbyCreateOrConnectWithoutUsersInput], {nullable:true})
    @Type(() => HobbyCreateOrConnectWithoutUsersInput)
    connectOrCreate?: Array<HobbyCreateOrConnectWithoutUsersInput>;
    @Field(() => [HobbyUpsertWithWhereUniqueWithoutUsersInput], {nullable:true})
    @Type(() => HobbyUpsertWithWhereUniqueWithoutUsersInput)
    upsert?: Array<HobbyUpsertWithWhereUniqueWithoutUsersInput>;
    @Field(() => [HobbyWhereUniqueInput], {nullable:true})
    @Type(() => HobbyWhereUniqueInput)
    set?: Array<Prisma.AtLeast<HobbyWhereUniqueInput, 'id'>>;
    @Field(() => [HobbyWhereUniqueInput], {nullable:true})
    @Type(() => HobbyWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<HobbyWhereUniqueInput, 'id'>>;
    @Field(() => [HobbyWhereUniqueInput], {nullable:true})
    @Type(() => HobbyWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<HobbyWhereUniqueInput, 'id'>>;
    @Field(() => [HobbyWhereUniqueInput], {nullable:true})
    @Type(() => HobbyWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<HobbyWhereUniqueInput, 'id'>>;
    @Field(() => [HobbyUpdateWithWhereUniqueWithoutUsersInput], {nullable:true})
    @Type(() => HobbyUpdateWithWhereUniqueWithoutUsersInput)
    update?: Array<HobbyUpdateWithWhereUniqueWithoutUsersInput>;
    @Field(() => [HobbyUpdateManyWithWhereWithoutUsersInput], {nullable:true})
    @Type(() => HobbyUpdateManyWithWhereWithoutUsersInput)
    updateMany?: Array<HobbyUpdateManyWithWhereWithoutUsersInput>;
    @Field(() => [HobbyScalarWhereInput], {nullable:true})
    @Type(() => HobbyScalarWhereInput)
    deleteMany?: Array<HobbyScalarWhereInput>;
}

@InputType()
export class HobbyUncheckedUpdateManyWithoutUsersInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => HobbyUpdateuserIdsInput, {nullable:true})
    userIds?: InstanceType<typeof HobbyUpdateuserIdsInput>;
}

@InputType()
export class HobbyUncheckedUpdateManyInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => HobbyUpdateuserIdsInput, {nullable:true})
    userIds?: InstanceType<typeof HobbyUpdateuserIdsInput>;
}

@InputType()
export class HobbyUncheckedUpdateWithoutUsersInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => HobbyUpdateuserIdsInput, {nullable:true})
    userIds?: InstanceType<typeof HobbyUpdateuserIdsInput>;
}

@InputType()
export class HobbyUncheckedUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => HobbyUpdateuserIdsInput, {nullable:true})
    userIds?: InstanceType<typeof HobbyUpdateuserIdsInput>;
    @Field(() => UserUncheckedUpdateManyWithoutHobbiesNestedInput, {nullable:true})
    users?: InstanceType<typeof UserUncheckedUpdateManyWithoutHobbiesNestedInput>;
}

@InputType()
export class HobbyUpdateManyMutationInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
}

@InputType()
export class HobbyUpdateManyWithWhereWithoutUsersInput {
    @Field(() => HobbyScalarWhereInput, {nullable:false})
    @Type(() => HobbyScalarWhereInput)
    where!: InstanceType<typeof HobbyScalarWhereInput>;
    @Field(() => HobbyUpdateManyMutationInput, {nullable:false})
    @Type(() => HobbyUpdateManyMutationInput)
    data!: InstanceType<typeof HobbyUpdateManyMutationInput>;
}

@InputType()
export class HobbyUpdateManyWithoutUsersNestedInput {
    @Field(() => [HobbyCreateWithoutUsersInput], {nullable:true})
    @Type(() => HobbyCreateWithoutUsersInput)
    create?: Array<HobbyCreateWithoutUsersInput>;
    @Field(() => [HobbyCreateOrConnectWithoutUsersInput], {nullable:true})
    @Type(() => HobbyCreateOrConnectWithoutUsersInput)
    connectOrCreate?: Array<HobbyCreateOrConnectWithoutUsersInput>;
    @Field(() => [HobbyUpsertWithWhereUniqueWithoutUsersInput], {nullable:true})
    @Type(() => HobbyUpsertWithWhereUniqueWithoutUsersInput)
    upsert?: Array<HobbyUpsertWithWhereUniqueWithoutUsersInput>;
    @Field(() => [HobbyWhereUniqueInput], {nullable:true})
    @Type(() => HobbyWhereUniqueInput)
    set?: Array<Prisma.AtLeast<HobbyWhereUniqueInput, 'id'>>;
    @Field(() => [HobbyWhereUniqueInput], {nullable:true})
    @Type(() => HobbyWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<HobbyWhereUniqueInput, 'id'>>;
    @Field(() => [HobbyWhereUniqueInput], {nullable:true})
    @Type(() => HobbyWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<HobbyWhereUniqueInput, 'id'>>;
    @Field(() => [HobbyWhereUniqueInput], {nullable:true})
    @Type(() => HobbyWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<HobbyWhereUniqueInput, 'id'>>;
    @Field(() => [HobbyUpdateWithWhereUniqueWithoutUsersInput], {nullable:true})
    @Type(() => HobbyUpdateWithWhereUniqueWithoutUsersInput)
    update?: Array<HobbyUpdateWithWhereUniqueWithoutUsersInput>;
    @Field(() => [HobbyUpdateManyWithWhereWithoutUsersInput], {nullable:true})
    @Type(() => HobbyUpdateManyWithWhereWithoutUsersInput)
    updateMany?: Array<HobbyUpdateManyWithWhereWithoutUsersInput>;
    @Field(() => [HobbyScalarWhereInput], {nullable:true})
    @Type(() => HobbyScalarWhereInput)
    deleteMany?: Array<HobbyScalarWhereInput>;
}

@InputType()
export class HobbyUpdateWithWhereUniqueWithoutUsersInput {
    @Field(() => HobbyWhereUniqueInput, {nullable:false})
    @Type(() => HobbyWhereUniqueInput)
    where!: Prisma.AtLeast<HobbyWhereUniqueInput, 'id'>;
    @Field(() => HobbyUpdateWithoutUsersInput, {nullable:false})
    @Type(() => HobbyUpdateWithoutUsersInput)
    data!: InstanceType<typeof HobbyUpdateWithoutUsersInput>;
}

@InputType()
export class HobbyUpdateWithoutUsersInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
}

@InputType()
export class HobbyUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => UserUpdateManyWithoutHobbiesNestedInput, {nullable:true})
    users?: InstanceType<typeof UserUpdateManyWithoutHobbiesNestedInput>;
}

@InputType()
export class HobbyUpdateuserIdsInput {
    @Field(() => [String], {nullable:true})
    set?: Array<string>;
    @Field(() => [String], {nullable:true})
    push?: Array<string>;
}

@InputType()
export class HobbyUpsertWithWhereUniqueWithoutUsersInput {
    @Field(() => HobbyWhereUniqueInput, {nullable:false})
    @Type(() => HobbyWhereUniqueInput)
    where!: Prisma.AtLeast<HobbyWhereUniqueInput, 'id'>;
    @Field(() => HobbyUpdateWithoutUsersInput, {nullable:false})
    @Type(() => HobbyUpdateWithoutUsersInput)
    update!: InstanceType<typeof HobbyUpdateWithoutUsersInput>;
    @Field(() => HobbyCreateWithoutUsersInput, {nullable:false})
    @Type(() => HobbyCreateWithoutUsersInput)
    create!: InstanceType<typeof HobbyCreateWithoutUsersInput>;
}

@InputType()
export class HobbyWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => [HobbyWhereInput], {nullable:true})
    AND?: Array<HobbyWhereInput>;
    @Field(() => [HobbyWhereInput], {nullable:true})
    OR?: Array<HobbyWhereInput>;
    @Field(() => [HobbyWhereInput], {nullable:true})
    NOT?: Array<HobbyWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    name?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    image?: InstanceType<typeof StringFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => BoolFilter, {nullable:true})
    active?: InstanceType<typeof BoolFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    userIds?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => UserListRelationFilter, {nullable:true})
    users?: InstanceType<typeof UserListRelationFilter>;
}

@InputType()
export class HobbyWhereInput {
    @Field(() => [HobbyWhereInput], {nullable:true})
    AND?: Array<HobbyWhereInput>;
    @Field(() => [HobbyWhereInput], {nullable:true})
    OR?: Array<HobbyWhereInput>;
    @Field(() => [HobbyWhereInput], {nullable:true})
    NOT?: Array<HobbyWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    name?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    image?: InstanceType<typeof StringFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => BoolFilter, {nullable:true})
    active?: InstanceType<typeof BoolFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    userIds?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => UserListRelationFilter, {nullable:true})
    users?: InstanceType<typeof UserListRelationFilter>;
}

@ObjectType()
export class Hobby {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
    @Field(() => Date, {nullable:false})
    updatedAt!: Date;
    @Field(() => Boolean, {defaultValue:false,nullable:false})
    active!: boolean;
    @Field(() => [String], {nullable:true})
    userIds!: Array<string>;
    @Field(() => [User], {nullable:true})
    users?: Array<User>;
}

@ArgsType()
export class UpdateManyHobbyArgs {
    @Field(() => HobbyUpdateManyMutationInput, {nullable:false})
    @Type(() => HobbyUpdateManyMutationInput)
    data!: InstanceType<typeof HobbyUpdateManyMutationInput>;
    @Field(() => HobbyWhereInput, {nullable:true})
    @Type(() => HobbyWhereInput)
    where?: InstanceType<typeof HobbyWhereInput>;
}

@ArgsType()
export class UpdateOneHobbyArgs {
    @Field(() => HobbyUpdateInput, {nullable:false})
    @Type(() => HobbyUpdateInput)
    data!: InstanceType<typeof HobbyUpdateInput>;
    @Field(() => HobbyWhereUniqueInput, {nullable:false})
    @Type(() => HobbyWhereUniqueInput)
    where!: Prisma.AtLeast<HobbyWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpsertOneHobbyArgs {
    @Field(() => HobbyWhereUniqueInput, {nullable:false})
    @Type(() => HobbyWhereUniqueInput)
    where!: Prisma.AtLeast<HobbyWhereUniqueInput, 'id'>;
    @Field(() => HobbyCreateInput, {nullable:false})
    @Type(() => HobbyCreateInput)
    create!: InstanceType<typeof HobbyCreateInput>;
    @Field(() => HobbyUpdateInput, {nullable:false})
    @Type(() => HobbyUpdateInput)
    update!: InstanceType<typeof HobbyUpdateInput>;
}

@InputType()
export class ImageCreateInput {
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => Int, {nullable:true})
    order?: number;
    @Field(() => Boolean, {nullable:true})
    mainImage?: boolean;
}

@InputType()
export class ImageOrderByCompositeAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    _count?: `${SortOrder}`;
}

@InputType()
export class ImageUpdateManyInput {
    @Field(() => ImageWhereInput, {nullable:false})
    @Type(() => ImageWhereInput)
    where!: InstanceType<typeof ImageWhereInput>;
    @Field(() => ImageUpdateInput, {nullable:false})
    @Type(() => ImageUpdateInput)
    data!: InstanceType<typeof ImageUpdateInput>;
}

@InputType()
export class ImageUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableIntFieldUpdateOperationsInput, {nullable:true})
    order?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    mainImage?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
}

@InputType()
export class ImageWhereInput {
    @Field(() => [ImageWhereInput], {nullable:true})
    AND?: Array<ImageWhereInput>;
    @Field(() => [ImageWhereInput], {nullable:true})
    OR?: Array<ImageWhereInput>;
    @Field(() => [ImageWhereInput], {nullable:true})
    NOT?: Array<ImageWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    name?: InstanceType<typeof StringFilter>;
    @Field(() => IntNullableFilter, {nullable:true})
    order?: InstanceType<typeof IntNullableFilter>;
    @Field(() => BoolNullableFilter, {nullable:true})
    mainImage?: InstanceType<typeof BoolNullableFilter>;
}

@ObjectType()
export class Image {
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => Int, {nullable:true})
    order!: number | null;
    @Field(() => Boolean, {nullable:true})
    mainImage!: boolean | null;
}

@InputType()
export class ImageStoryPayloadCreateEnvelopeInput {
    @Field(() => ImageStoryPayloadCreateInput, {nullable:true})
    @Type(() => ImageStoryPayloadCreateInput)
    set?: InstanceType<typeof ImageStoryPayloadCreateInput>;
}

@InputType()
export class ImageStoryPayloadCreateInput {
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => String, {nullable:true})
    fontColor?: string;
    @Field(() => String, {nullable:true})
    textPosX?: string;
    @Field(() => String, {nullable:true})
    textPosY?: string;
    @Field(() => String, {nullable:true})
    textHexCode?: string;
}

@InputType()
export class ImageStoryPayloadOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    image?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    fontColor?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    textPosX?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    textPosY?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    textHexCode?: `${SortOrder}`;
}

@InputType()
export class ImageStoryPayloadUpdateEnvelopeInput {
    @Field(() => ImageStoryPayloadCreateInput, {nullable:true})
    @Type(() => ImageStoryPayloadCreateInput)
    set?: InstanceType<typeof ImageStoryPayloadCreateInput>;
    @Field(() => ImageStoryPayloadUpdateInput, {nullable:true})
    @Type(() => ImageStoryPayloadUpdateInput)
    update?: InstanceType<typeof ImageStoryPayloadUpdateInput>;
}

@InputType()
export class ImageStoryPayloadUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    fontColor?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    textPosX?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    textPosY?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    textHexCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
}

@InputType()
export class ImageStoryPayloadWhereInput {
    @Field(() => [ImageStoryPayloadWhereInput], {nullable:true})
    AND?: Array<ImageStoryPayloadWhereInput>;
    @Field(() => [ImageStoryPayloadWhereInput], {nullable:true})
    OR?: Array<ImageStoryPayloadWhereInput>;
    @Field(() => [ImageStoryPayloadWhereInput], {nullable:true})
    NOT?: Array<ImageStoryPayloadWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    image?: InstanceType<typeof StringFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    fontColor?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    textPosX?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    textPosY?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    textHexCode?: InstanceType<typeof StringNullableFilter>;
}

@ObjectType()
export class ImageStoryPayload {
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => String, {nullable:true})
    fontColor!: string | null;
    @Field(() => String, {nullable:true})
    textPosX!: string | null;
    @Field(() => String, {nullable:true})
    textPosY!: string | null;
    @Field(() => String, {nullable:true})
    textHexCode!: string | null;
}

@InputType()
export class InfoSystemMessageCreateEnvelopeInput {
    @Field(() => InfoSystemMessageCreateInput, {nullable:true})
    @Type(() => InfoSystemMessageCreateInput)
    set?: InstanceType<typeof InfoSystemMessageCreateInput>;
}

@InputType()
export class InfoSystemMessageCreateInput {
    @Field(() => SystemIcons, {nullable:false})
    icon!: `${SystemIcons}`;
    @Field(() => String, {nullable:false})
    text1!: string;
    @Field(() => String, {nullable:false})
    text2!: string;
}

@InputType()
export class InfoSystemMessageOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    icon?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    text1?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    text2?: `${SortOrder}`;
}

@InputType()
export class InfoSystemMessageUpdateEnvelopeInput {
    @Field(() => InfoSystemMessageCreateInput, {nullable:true})
    @Type(() => InfoSystemMessageCreateInput)
    set?: InstanceType<typeof InfoSystemMessageCreateInput>;
    @Field(() => InfoSystemMessageUpdateInput, {nullable:true})
    @Type(() => InfoSystemMessageUpdateInput)
    update?: InstanceType<typeof InfoSystemMessageUpdateInput>;
}

@InputType()
export class InfoSystemMessageUpdateInput {
    @Field(() => EnumSystemIconsFieldUpdateOperationsInput, {nullable:true})
    icon?: InstanceType<typeof EnumSystemIconsFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    text1?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    text2?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}

@InputType()
export class InfoSystemMessageWhereInput {
    @Field(() => [InfoSystemMessageWhereInput], {nullable:true})
    AND?: Array<InfoSystemMessageWhereInput>;
    @Field(() => [InfoSystemMessageWhereInput], {nullable:true})
    OR?: Array<InfoSystemMessageWhereInput>;
    @Field(() => [InfoSystemMessageWhereInput], {nullable:true})
    NOT?: Array<InfoSystemMessageWhereInput>;
    @Field(() => EnumSystemIconsFilter, {nullable:true})
    icon?: InstanceType<typeof EnumSystemIconsFilter>;
    @Field(() => StringFilter, {nullable:true})
    text1?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    text2?: InstanceType<typeof StringFilter>;
}

@ObjectType()
export class InfoSystemMessage {
    @Field(() => SystemIcons, {nullable:false})
    icon!: `${SystemIcons}`;
    @Field(() => String, {nullable:false})
    text1!: string;
    @Field(() => String, {nullable:false})
    text2!: string;
}

@ArgsType()
export class CreateManyInstitutionArgs {
    @Field(() => [InstitutionCreateManyInput], {nullable:false})
    @Type(() => InstitutionCreateManyInput)
    data!: Array<InstitutionCreateManyInput>;
}

@ArgsType()
export class CreateOneInstitutionArgs {
    @Field(() => InstitutionCreateInput, {nullable:false})
    @Type(() => InstitutionCreateInput)
    data!: InstanceType<typeof InstitutionCreateInput>;
}

@ArgsType()
export class DeleteManyInstitutionArgs {
    @Field(() => InstitutionWhereInput, {nullable:true})
    @Type(() => InstitutionWhereInput)
    where?: InstanceType<typeof InstitutionWhereInput>;
}

@ArgsType()
export class DeleteOneInstitutionArgs {
    @Field(() => InstitutionWhereUniqueInput, {nullable:false})
    @Type(() => InstitutionWhereUniqueInput)
    where!: Prisma.AtLeast<InstitutionWhereUniqueInput, 'id' | 'slug'>;
}

@ArgsType()
export class FindFirstInstitutionOrThrowArgs {
    @Field(() => InstitutionWhereInput, {nullable:true})
    @Type(() => InstitutionWhereInput)
    where?: InstanceType<typeof InstitutionWhereInput>;
    @Field(() => [InstitutionOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<InstitutionOrderByWithRelationInput>;
    @Field(() => InstitutionWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<InstitutionWhereUniqueInput, 'id' | 'slug'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [InstitutionScalarFieldEnum], {nullable:true})
    distinct?: Array<`${InstitutionScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstInstitutionArgs {
    @Field(() => InstitutionWhereInput, {nullable:true})
    @Type(() => InstitutionWhereInput)
    where?: InstanceType<typeof InstitutionWhereInput>;
    @Field(() => [InstitutionOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<InstitutionOrderByWithRelationInput>;
    @Field(() => InstitutionWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<InstitutionWhereUniqueInput, 'id' | 'slug'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [InstitutionScalarFieldEnum], {nullable:true})
    distinct?: Array<`${InstitutionScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyInstitutionArgs {
    @Field(() => InstitutionWhereInput, {nullable:true})
    @Type(() => InstitutionWhereInput)
    where?: InstanceType<typeof InstitutionWhereInput>;
    @Field(() => [InstitutionOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<InstitutionOrderByWithRelationInput>;
    @Field(() => InstitutionWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<InstitutionWhereUniqueInput, 'id' | 'slug'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [InstitutionScalarFieldEnum], {nullable:true})
    distinct?: Array<`${InstitutionScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniqueInstitutionOrThrowArgs {
    @Field(() => InstitutionWhereUniqueInput, {nullable:false})
    @Type(() => InstitutionWhereUniqueInput)
    where!: Prisma.AtLeast<InstitutionWhereUniqueInput, 'id' | 'slug'>;
}

@ArgsType()
export class FindUniqueInstitutionArgs {
    @Field(() => InstitutionWhereUniqueInput, {nullable:false})
    @Type(() => InstitutionWhereUniqueInput)
    where!: Prisma.AtLeast<InstitutionWhereUniqueInput, 'id' | 'slug'>;
}

@ArgsType()
export class InstitutionAggregateArgs {
    @Field(() => InstitutionWhereInput, {nullable:true})
    @Type(() => InstitutionWhereInput)
    where?: InstanceType<typeof InstitutionWhereInput>;
    @Field(() => [InstitutionOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<InstitutionOrderByWithRelationInput>;
    @Field(() => InstitutionWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<InstitutionWhereUniqueInput, 'id' | 'slug'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class InstitutionCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    institutionName?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    slug?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    passCode?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    logo?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    schoolColor?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    localistCalendarUrl?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class InstitutionCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    institutionName!: string;
    @Field(() => String, {nullable:false})
    slug!: string;
    @Field(() => String, {nullable:false})
    passCode!: string;
    @Field(() => String, {nullable:true})
    logo?: string;
    @Field(() => String, {nullable:true})
    schoolColor?: string;
    @Field(() => String, {nullable:true})
    localistCalendarUrl?: string;
    @Field(() => [SessionCreateInput], {nullable:true})
    sessions?: Array<SessionCreateInput>;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class InstitutionCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    institutionName!: string;
    @Field(() => String, {nullable:false})
    slug!: string;
    @Field(() => String, {nullable:false})
    passCode!: string;
    @Field(() => String, {nullable:true})
    logo?: string;
    @Field(() => String, {nullable:true})
    schoolColor?: string;
    @Field(() => String, {nullable:true})
    localistCalendarUrl?: string;
    @Field(() => [SessionCreateInput], {nullable:true})
    sessions?: Array<SessionCreateInput>;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@ArgsType()
export class InstitutionGroupByArgs {
    @Field(() => InstitutionWhereInput, {nullable:true})
    @Type(() => InstitutionWhereInput)
    where?: InstanceType<typeof InstitutionWhereInput>;
    @Field(() => [InstitutionOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<InstitutionOrderByWithAggregationInput>;
    @Field(() => [InstitutionScalarFieldEnum], {nullable:false})
    by!: Array<`${InstitutionScalarFieldEnum}`>;
    @Field(() => InstitutionScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof InstitutionScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class InstitutionMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    institutionName?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    slug?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    passCode?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    logo?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    schoolColor?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    localistCalendarUrl?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class InstitutionMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    institutionName?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    slug?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    passCode?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    logo?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    schoolColor?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    localistCalendarUrl?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class InstitutionOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    institutionName?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    slug?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    passCode?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    logo?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    schoolColor?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    localistCalendarUrl?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => InstitutionCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof InstitutionCountOrderByAggregateInput>;
    @Field(() => InstitutionMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof InstitutionMaxOrderByAggregateInput>;
    @Field(() => InstitutionMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof InstitutionMinOrderByAggregateInput>;
}

@InputType()
export class InstitutionOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    institutionName?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    slug?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    passCode?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    logo?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    schoolColor?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    localistCalendarUrl?: `${SortOrder}`;
    @Field(() => SessionOrderByCompositeAggregateInput, {nullable:true})
    sessions?: InstanceType<typeof SessionOrderByCompositeAggregateInput>;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class InstitutionScalarWhereWithAggregatesInput {
    @Field(() => [InstitutionScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<InstitutionScalarWhereWithAggregatesInput>;
    @Field(() => [InstitutionScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<InstitutionScalarWhereWithAggregatesInput>;
    @Field(() => [InstitutionScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<InstitutionScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    institutionName?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    slug?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    passCode?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    logo?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    schoolColor?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    localistCalendarUrl?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
}

@InputType()
export class InstitutionUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    institutionName!: string;
    @Field(() => String, {nullable:false})
    slug!: string;
    @Field(() => String, {nullable:false})
    passCode!: string;
    @Field(() => String, {nullable:true})
    logo?: string;
    @Field(() => String, {nullable:true})
    schoolColor?: string;
    @Field(() => String, {nullable:true})
    localistCalendarUrl?: string;
    @Field(() => [SessionCreateInput], {nullable:true})
    sessions?: Array<SessionCreateInput>;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class InstitutionUncheckedUpdateManyInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    institutionName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    slug?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    passCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    logo?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    schoolColor?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    localistCalendarUrl?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => [SessionCreateInput], {nullable:true})
    sessions?: Array<SessionCreateInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class InstitutionUncheckedUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    institutionName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    slug?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    passCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    logo?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    schoolColor?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    localistCalendarUrl?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => [SessionCreateInput], {nullable:true})
    sessions?: Array<SessionCreateInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class InstitutionUpdateManyMutationInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    institutionName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    slug?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    passCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    logo?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    schoolColor?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    localistCalendarUrl?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => [SessionCreateInput], {nullable:true})
    sessions?: Array<SessionCreateInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class InstitutionUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    institutionName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    slug?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    passCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    logo?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    schoolColor?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    localistCalendarUrl?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => [SessionCreateInput], {nullable:true})
    sessions?: Array<SessionCreateInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class InstitutionWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:true})
    slug?: string;
    @Field(() => [InstitutionWhereInput], {nullable:true})
    AND?: Array<InstitutionWhereInput>;
    @Field(() => [InstitutionWhereInput], {nullable:true})
    OR?: Array<InstitutionWhereInput>;
    @Field(() => [InstitutionWhereInput], {nullable:true})
    NOT?: Array<InstitutionWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    institutionName?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    passCode?: InstanceType<typeof StringFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    logo?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    schoolColor?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    localistCalendarUrl?: InstanceType<typeof StringNullableFilter>;
    @Field(() => [SessionObjectEqualityInput], {nullable:true})
    sessions?: Array<SessionObjectEqualityInput>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@InputType()
export class InstitutionWhereInput {
    @Field(() => [InstitutionWhereInput], {nullable:true})
    AND?: Array<InstitutionWhereInput>;
    @Field(() => [InstitutionWhereInput], {nullable:true})
    OR?: Array<InstitutionWhereInput>;
    @Field(() => [InstitutionWhereInput], {nullable:true})
    NOT?: Array<InstitutionWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    institutionName?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    slug?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    passCode?: InstanceType<typeof StringFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    logo?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    schoolColor?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    localistCalendarUrl?: InstanceType<typeof StringNullableFilter>;
    @Field(() => [SessionObjectEqualityInput], {nullable:true})
    sessions?: Array<SessionObjectEqualityInput>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@ObjectType()
export class Institution {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    institutionName!: string;
    @Field(() => String, {nullable:false})
    slug!: string;
    @Field(() => String, {nullable:false})
    passCode!: string;
    @Field(() => String, {nullable:true})
    logo!: string | null;
    @Field(() => String, {nullable:true})
    schoolColor!: string | null;
    @Field(() => String, {nullable:true})
    localistCalendarUrl!: string | null;
    @Field(() => [Session], {nullable:true})
    sessions?: Array<Session>;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
    @Field(() => Date, {nullable:false})
    updatedAt!: Date;
}

@ArgsType()
export class UpdateManyInstitutionArgs {
    @Field(() => InstitutionUpdateManyMutationInput, {nullable:false})
    @Type(() => InstitutionUpdateManyMutationInput)
    data!: InstanceType<typeof InstitutionUpdateManyMutationInput>;
    @Field(() => InstitutionWhereInput, {nullable:true})
    @Type(() => InstitutionWhereInput)
    where?: InstanceType<typeof InstitutionWhereInput>;
}

@ArgsType()
export class UpdateOneInstitutionArgs {
    @Field(() => InstitutionUpdateInput, {nullable:false})
    @Type(() => InstitutionUpdateInput)
    data!: InstanceType<typeof InstitutionUpdateInput>;
    @Field(() => InstitutionWhereUniqueInput, {nullable:false})
    @Type(() => InstitutionWhereUniqueInput)
    where!: Prisma.AtLeast<InstitutionWhereUniqueInput, 'id' | 'slug'>;
}

@ArgsType()
export class UpsertOneInstitutionArgs {
    @Field(() => InstitutionWhereUniqueInput, {nullable:false})
    @Type(() => InstitutionWhereUniqueInput)
    where!: Prisma.AtLeast<InstitutionWhereUniqueInput, 'id' | 'slug'>;
    @Field(() => InstitutionCreateInput, {nullable:false})
    @Type(() => InstitutionCreateInput)
    create!: InstanceType<typeof InstitutionCreateInput>;
    @Field(() => InstitutionUpdateInput, {nullable:false})
    @Type(() => InstitutionUpdateInput)
    update!: InstanceType<typeof InstitutionUpdateInput>;
}

@ArgsType()
export class CreateManyLegacyImagesArgs {
    @Field(() => [LegacyImagesCreateManyInput], {nullable:false})
    @Type(() => LegacyImagesCreateManyInput)
    data!: Array<LegacyImagesCreateManyInput>;
}

@ArgsType()
export class CreateOneLegacyImagesArgs {
    @Field(() => LegacyImagesCreateInput, {nullable:false})
    @Type(() => LegacyImagesCreateInput)
    data!: InstanceType<typeof LegacyImagesCreateInput>;
}

@ArgsType()
export class DeleteManyLegacyImagesArgs {
    @Field(() => LegacyImagesWhereInput, {nullable:true})
    @Type(() => LegacyImagesWhereInput)
    where?: InstanceType<typeof LegacyImagesWhereInput>;
}

@ArgsType()
export class DeleteOneLegacyImagesArgs {
    @Field(() => LegacyImagesWhereUniqueInput, {nullable:false})
    @Type(() => LegacyImagesWhereUniqueInput)
    where!: Prisma.AtLeast<LegacyImagesWhereUniqueInput, 'id' | 'oldUrl'>;
}

@ArgsType()
export class FindFirstLegacyImagesOrThrowArgs {
    @Field(() => LegacyImagesWhereInput, {nullable:true})
    @Type(() => LegacyImagesWhereInput)
    where?: InstanceType<typeof LegacyImagesWhereInput>;
    @Field(() => [LegacyImagesOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<LegacyImagesOrderByWithRelationInput>;
    @Field(() => LegacyImagesWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<LegacyImagesWhereUniqueInput, 'id' | 'oldUrl'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [LegacyImagesScalarFieldEnum], {nullable:true})
    distinct?: Array<`${LegacyImagesScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstLegacyImagesArgs {
    @Field(() => LegacyImagesWhereInput, {nullable:true})
    @Type(() => LegacyImagesWhereInput)
    where?: InstanceType<typeof LegacyImagesWhereInput>;
    @Field(() => [LegacyImagesOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<LegacyImagesOrderByWithRelationInput>;
    @Field(() => LegacyImagesWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<LegacyImagesWhereUniqueInput, 'id' | 'oldUrl'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [LegacyImagesScalarFieldEnum], {nullable:true})
    distinct?: Array<`${LegacyImagesScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyLegacyImagesArgs {
    @Field(() => LegacyImagesWhereInput, {nullable:true})
    @Type(() => LegacyImagesWhereInput)
    where?: InstanceType<typeof LegacyImagesWhereInput>;
    @Field(() => [LegacyImagesOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<LegacyImagesOrderByWithRelationInput>;
    @Field(() => LegacyImagesWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<LegacyImagesWhereUniqueInput, 'id' | 'oldUrl'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [LegacyImagesScalarFieldEnum], {nullable:true})
    distinct?: Array<`${LegacyImagesScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniqueLegacyImagesOrThrowArgs {
    @Field(() => LegacyImagesWhereUniqueInput, {nullable:false})
    @Type(() => LegacyImagesWhereUniqueInput)
    where!: Prisma.AtLeast<LegacyImagesWhereUniqueInput, 'id' | 'oldUrl'>;
}

@ArgsType()
export class FindUniqueLegacyImagesArgs {
    @Field(() => LegacyImagesWhereUniqueInput, {nullable:false})
    @Type(() => LegacyImagesWhereUniqueInput)
    where!: Prisma.AtLeast<LegacyImagesWhereUniqueInput, 'id' | 'oldUrl'>;
}

@ArgsType()
export class LegacyImagesAggregateArgs {
    @Field(() => LegacyImagesWhereInput, {nullable:true})
    @Type(() => LegacyImagesWhereInput)
    where?: InstanceType<typeof LegacyImagesWhereInput>;
    @Field(() => [LegacyImagesOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<LegacyImagesOrderByWithRelationInput>;
    @Field(() => LegacyImagesWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<LegacyImagesWhereUniqueInput, 'id' | 'oldUrl'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class LegacyImagesCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    oldUrl?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    newUrl?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class LegacyImagesCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    oldUrl!: string;
    @Field(() => String, {nullable:false})
    newUrl!: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class LegacyImagesCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    oldUrl!: string;
    @Field(() => String, {nullable:false})
    newUrl!: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@ArgsType()
export class LegacyImagesGroupByArgs {
    @Field(() => LegacyImagesWhereInput, {nullable:true})
    @Type(() => LegacyImagesWhereInput)
    where?: InstanceType<typeof LegacyImagesWhereInput>;
    @Field(() => [LegacyImagesOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<LegacyImagesOrderByWithAggregationInput>;
    @Field(() => [LegacyImagesScalarFieldEnum], {nullable:false})
    by!: Array<`${LegacyImagesScalarFieldEnum}`>;
    @Field(() => LegacyImagesScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof LegacyImagesScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class LegacyImagesMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    oldUrl?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    newUrl?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class LegacyImagesMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    oldUrl?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    newUrl?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class LegacyImagesOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    oldUrl?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    newUrl?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => LegacyImagesCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof LegacyImagesCountOrderByAggregateInput>;
    @Field(() => LegacyImagesMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof LegacyImagesMaxOrderByAggregateInput>;
    @Field(() => LegacyImagesMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof LegacyImagesMinOrderByAggregateInput>;
}

@InputType()
export class LegacyImagesOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    oldUrl?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    newUrl?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class LegacyImagesScalarWhereWithAggregatesInput {
    @Field(() => [LegacyImagesScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<LegacyImagesScalarWhereWithAggregatesInput>;
    @Field(() => [LegacyImagesScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<LegacyImagesScalarWhereWithAggregatesInput>;
    @Field(() => [LegacyImagesScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<LegacyImagesScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    oldUrl?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    newUrl?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
}

@InputType()
export class LegacyImagesUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    oldUrl!: string;
    @Field(() => String, {nullable:false})
    newUrl!: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class LegacyImagesUncheckedUpdateManyInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    oldUrl?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    newUrl?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class LegacyImagesUncheckedUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    oldUrl?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    newUrl?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class LegacyImagesUpdateManyMutationInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    oldUrl?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    newUrl?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class LegacyImagesUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    oldUrl?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    newUrl?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class LegacyImagesWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:true})
    oldUrl?: string;
    @Field(() => [LegacyImagesWhereInput], {nullable:true})
    AND?: Array<LegacyImagesWhereInput>;
    @Field(() => [LegacyImagesWhereInput], {nullable:true})
    OR?: Array<LegacyImagesWhereInput>;
    @Field(() => [LegacyImagesWhereInput], {nullable:true})
    NOT?: Array<LegacyImagesWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    newUrl?: InstanceType<typeof StringFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@InputType()
export class LegacyImagesWhereInput {
    @Field(() => [LegacyImagesWhereInput], {nullable:true})
    AND?: Array<LegacyImagesWhereInput>;
    @Field(() => [LegacyImagesWhereInput], {nullable:true})
    OR?: Array<LegacyImagesWhereInput>;
    @Field(() => [LegacyImagesWhereInput], {nullable:true})
    NOT?: Array<LegacyImagesWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    oldUrl?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    newUrl?: InstanceType<typeof StringFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@ObjectType()
export class LegacyImages {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    oldUrl!: string;
    @Field(() => String, {nullable:false})
    newUrl!: string;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
    @Field(() => Date, {nullable:false})
    updatedAt!: Date;
}

@ArgsType()
export class UpdateManyLegacyImagesArgs {
    @Field(() => LegacyImagesUpdateManyMutationInput, {nullable:false})
    @Type(() => LegacyImagesUpdateManyMutationInput)
    data!: InstanceType<typeof LegacyImagesUpdateManyMutationInput>;
    @Field(() => LegacyImagesWhereInput, {nullable:true})
    @Type(() => LegacyImagesWhereInput)
    where?: InstanceType<typeof LegacyImagesWhereInput>;
}

@ArgsType()
export class UpdateOneLegacyImagesArgs {
    @Field(() => LegacyImagesUpdateInput, {nullable:false})
    @Type(() => LegacyImagesUpdateInput)
    data!: InstanceType<typeof LegacyImagesUpdateInput>;
    @Field(() => LegacyImagesWhereUniqueInput, {nullable:false})
    @Type(() => LegacyImagesWhereUniqueInput)
    where!: Prisma.AtLeast<LegacyImagesWhereUniqueInput, 'id' | 'oldUrl'>;
}

@ArgsType()
export class UpsertOneLegacyImagesArgs {
    @Field(() => LegacyImagesWhereUniqueInput, {nullable:false})
    @Type(() => LegacyImagesWhereUniqueInput)
    where!: Prisma.AtLeast<LegacyImagesWhereUniqueInput, 'id' | 'oldUrl'>;
    @Field(() => LegacyImagesCreateInput, {nullable:false})
    @Type(() => LegacyImagesCreateInput)
    create!: InstanceType<typeof LegacyImagesCreateInput>;
    @Field(() => LegacyImagesUpdateInput, {nullable:false})
    @Type(() => LegacyImagesUpdateInput)
    update!: InstanceType<typeof LegacyImagesUpdateInput>;
}

@ArgsType()
export class CreateManyListingSettingArgs {
    @Field(() => [ListingSettingCreateManyInput], {nullable:false})
    @Type(() => ListingSettingCreateManyInput)
    data!: Array<ListingSettingCreateManyInput>;
}

@ArgsType()
export class CreateOneListingSettingArgs {
    @Field(() => ListingSettingCreateInput, {nullable:false})
    @Type(() => ListingSettingCreateInput)
    data!: InstanceType<typeof ListingSettingCreateInput>;
}

@ArgsType()
export class DeleteManyListingSettingArgs {
    @Field(() => ListingSettingWhereInput, {nullable:true})
    @Type(() => ListingSettingWhereInput)
    where?: InstanceType<typeof ListingSettingWhereInput>;
}

@ArgsType()
export class DeleteOneListingSettingArgs {
    @Field(() => ListingSettingWhereUniqueInput, {nullable:false})
    @Type(() => ListingSettingWhereUniqueInput)
    where!: Prisma.AtLeast<ListingSettingWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindFirstListingSettingOrThrowArgs {
    @Field(() => ListingSettingWhereInput, {nullable:true})
    @Type(() => ListingSettingWhereInput)
    where?: InstanceType<typeof ListingSettingWhereInput>;
    @Field(() => [ListingSettingOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<ListingSettingOrderByWithRelationInput>;
    @Field(() => ListingSettingWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<ListingSettingWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [ListingSettingScalarFieldEnum], {nullable:true})
    distinct?: Array<`${ListingSettingScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstListingSettingArgs {
    @Field(() => ListingSettingWhereInput, {nullable:true})
    @Type(() => ListingSettingWhereInput)
    where?: InstanceType<typeof ListingSettingWhereInput>;
    @Field(() => [ListingSettingOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<ListingSettingOrderByWithRelationInput>;
    @Field(() => ListingSettingWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<ListingSettingWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [ListingSettingScalarFieldEnum], {nullable:true})
    distinct?: Array<`${ListingSettingScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyListingSettingArgs {
    @Field(() => ListingSettingWhereInput, {nullable:true})
    @Type(() => ListingSettingWhereInput)
    where?: InstanceType<typeof ListingSettingWhereInput>;
    @Field(() => [ListingSettingOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<ListingSettingOrderByWithRelationInput>;
    @Field(() => ListingSettingWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<ListingSettingWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [ListingSettingScalarFieldEnum], {nullable:true})
    distinct?: Array<`${ListingSettingScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniqueListingSettingOrThrowArgs {
    @Field(() => ListingSettingWhereUniqueInput, {nullable:false})
    @Type(() => ListingSettingWhereUniqueInput)
    where!: Prisma.AtLeast<ListingSettingWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindUniqueListingSettingArgs {
    @Field(() => ListingSettingWhereUniqueInput, {nullable:false})
    @Type(() => ListingSettingWhereUniqueInput)
    where!: Prisma.AtLeast<ListingSettingWhereUniqueInput, 'id'>;
}

@ArgsType()
export class ListingSettingAggregateArgs {
    @Field(() => ListingSettingWhereInput, {nullable:true})
    @Type(() => ListingSettingWhereInput)
    where?: InstanceType<typeof ListingSettingWhereInput>;
    @Field(() => [ListingSettingOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<ListingSettingOrderByWithRelationInput>;
    @Field(() => ListingSettingWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<ListingSettingWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class ListingSettingAvgOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    sellerFees?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    taxes?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    creditProcessing?: `${SortOrder}`;
}

@InputType()
export class ListingSettingCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    enableSelling?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    enableRenting?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    reasonsForSelling?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    meetupPreferences?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    productDeliveryModes?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    sellerFees?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    taxes?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    creditProcessing?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class ListingSettingCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => Boolean, {nullable:false})
    enableSelling!: boolean;
    @Field(() => Boolean, {nullable:false})
    enableRenting!: boolean;
    @Field(() => ListingSettingCreatereasonsForSellingInput, {nullable:true})
    reasonsForSelling?: InstanceType<typeof ListingSettingCreatereasonsForSellingInput>;
    @Field(() => ListingSettingCreatemeetupPreferencesInput, {nullable:true})
    meetupPreferences?: InstanceType<typeof ListingSettingCreatemeetupPreferencesInput>;
    @Field(() => ListingSettingCreateproductDeliveryModesInput, {nullable:true})
    productDeliveryModes?: InstanceType<typeof ListingSettingCreateproductDeliveryModesInput>;
    @Field(() => Int, {nullable:false})
    sellerFees!: number;
    @Field(() => Int, {nullable:false})
    taxes!: number;
    @Field(() => Int, {nullable:false})
    creditProcessing!: number;
    @Field(() => [NameAndImageCreateInput], {nullable:true})
    genders?: Array<NameAndImageCreateInput>;
    @Field(() => [NameAndImageCreateInput], {nullable:true})
    conditions?: Array<NameAndImageCreateInput>;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class ListingSettingCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => Boolean, {nullable:false})
    enableSelling!: boolean;
    @Field(() => Boolean, {nullable:false})
    enableRenting!: boolean;
    @Field(() => ListingSettingCreatereasonsForSellingInput, {nullable:true})
    reasonsForSelling?: InstanceType<typeof ListingSettingCreatereasonsForSellingInput>;
    @Field(() => ListingSettingCreatemeetupPreferencesInput, {nullable:true})
    meetupPreferences?: InstanceType<typeof ListingSettingCreatemeetupPreferencesInput>;
    @Field(() => ListingSettingCreateproductDeliveryModesInput, {nullable:true})
    productDeliveryModes?: InstanceType<typeof ListingSettingCreateproductDeliveryModesInput>;
    @Field(() => Int, {nullable:false})
    sellerFees!: number;
    @Field(() => Int, {nullable:false})
    taxes!: number;
    @Field(() => Int, {nullable:false})
    creditProcessing!: number;
    @Field(() => [NameAndImageCreateInput], {nullable:true})
    genders?: Array<NameAndImageCreateInput>;
    @Field(() => [NameAndImageCreateInput], {nullable:true})
    conditions?: Array<NameAndImageCreateInput>;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class ListingSettingCreatemeetupPreferencesInput {
    @Field(() => [String], {nullable:false})
    set!: Array<string>;
}

@InputType()
export class ListingSettingCreateproductDeliveryModesInput {
    @Field(() => [String], {nullable:false})
    set!: Array<string>;
}

@InputType()
export class ListingSettingCreatereasonsForSellingInput {
    @Field(() => [String], {nullable:false})
    set!: Array<string>;
}

@ArgsType()
export class ListingSettingGroupByArgs {
    @Field(() => ListingSettingWhereInput, {nullable:true})
    @Type(() => ListingSettingWhereInput)
    where?: InstanceType<typeof ListingSettingWhereInput>;
    @Field(() => [ListingSettingOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<ListingSettingOrderByWithAggregationInput>;
    @Field(() => [ListingSettingScalarFieldEnum], {nullable:false})
    by!: Array<`${ListingSettingScalarFieldEnum}`>;
    @Field(() => ListingSettingScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof ListingSettingScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class ListingSettingMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    enableSelling?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    enableRenting?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    sellerFees?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    taxes?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    creditProcessing?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class ListingSettingMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    enableSelling?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    enableRenting?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    sellerFees?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    taxes?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    creditProcessing?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class ListingSettingOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    enableSelling?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    enableRenting?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    reasonsForSelling?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    meetupPreferences?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    productDeliveryModes?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    sellerFees?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    taxes?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    creditProcessing?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => ListingSettingCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof ListingSettingCountOrderByAggregateInput>;
    @Field(() => ListingSettingAvgOrderByAggregateInput, {nullable:true})
    _avg?: InstanceType<typeof ListingSettingAvgOrderByAggregateInput>;
    @Field(() => ListingSettingMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof ListingSettingMaxOrderByAggregateInput>;
    @Field(() => ListingSettingMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof ListingSettingMinOrderByAggregateInput>;
    @Field(() => ListingSettingSumOrderByAggregateInput, {nullable:true})
    _sum?: InstanceType<typeof ListingSettingSumOrderByAggregateInput>;
}

@InputType()
export class ListingSettingOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    enableSelling?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    enableRenting?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    reasonsForSelling?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    meetupPreferences?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    productDeliveryModes?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    sellerFees?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    taxes?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    creditProcessing?: `${SortOrder}`;
    @Field(() => NameAndImageOrderByCompositeAggregateInput, {nullable:true})
    genders?: InstanceType<typeof NameAndImageOrderByCompositeAggregateInput>;
    @Field(() => NameAndImageOrderByCompositeAggregateInput, {nullable:true})
    conditions?: InstanceType<typeof NameAndImageOrderByCompositeAggregateInput>;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class ListingSettingScalarWhereWithAggregatesInput {
    @Field(() => [ListingSettingScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<ListingSettingScalarWhereWithAggregatesInput>;
    @Field(() => [ListingSettingScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<ListingSettingScalarWhereWithAggregatesInput>;
    @Field(() => [ListingSettingScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<ListingSettingScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => BoolWithAggregatesFilter, {nullable:true})
    enableSelling?: InstanceType<typeof BoolWithAggregatesFilter>;
    @Field(() => BoolWithAggregatesFilter, {nullable:true})
    enableRenting?: InstanceType<typeof BoolWithAggregatesFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    reasonsForSelling?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    meetupPreferences?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    productDeliveryModes?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => IntWithAggregatesFilter, {nullable:true})
    sellerFees?: InstanceType<typeof IntWithAggregatesFilter>;
    @Field(() => IntWithAggregatesFilter, {nullable:true})
    taxes?: InstanceType<typeof IntWithAggregatesFilter>;
    @Field(() => IntWithAggregatesFilter, {nullable:true})
    creditProcessing?: InstanceType<typeof IntWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
}

@InputType()
export class ListingSettingSumOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    sellerFees?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    taxes?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    creditProcessing?: `${SortOrder}`;
}

@InputType()
export class ListingSettingUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => Boolean, {nullable:false})
    enableSelling!: boolean;
    @Field(() => Boolean, {nullable:false})
    enableRenting!: boolean;
    @Field(() => ListingSettingCreatereasonsForSellingInput, {nullable:true})
    reasonsForSelling?: InstanceType<typeof ListingSettingCreatereasonsForSellingInput>;
    @Field(() => ListingSettingCreatemeetupPreferencesInput, {nullable:true})
    meetupPreferences?: InstanceType<typeof ListingSettingCreatemeetupPreferencesInput>;
    @Field(() => ListingSettingCreateproductDeliveryModesInput, {nullable:true})
    productDeliveryModes?: InstanceType<typeof ListingSettingCreateproductDeliveryModesInput>;
    @Field(() => Int, {nullable:false})
    sellerFees!: number;
    @Field(() => Int, {nullable:false})
    taxes!: number;
    @Field(() => Int, {nullable:false})
    creditProcessing!: number;
    @Field(() => [NameAndImageCreateInput], {nullable:true})
    genders?: Array<NameAndImageCreateInput>;
    @Field(() => [NameAndImageCreateInput], {nullable:true})
    conditions?: Array<NameAndImageCreateInput>;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class ListingSettingUncheckedUpdateManyInput {
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    enableSelling?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    enableRenting?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => ListingSettingUpdatereasonsForSellingInput, {nullable:true})
    reasonsForSelling?: InstanceType<typeof ListingSettingUpdatereasonsForSellingInput>;
    @Field(() => ListingSettingUpdatemeetupPreferencesInput, {nullable:true})
    meetupPreferences?: InstanceType<typeof ListingSettingUpdatemeetupPreferencesInput>;
    @Field(() => ListingSettingUpdateproductDeliveryModesInput, {nullable:true})
    productDeliveryModes?: InstanceType<typeof ListingSettingUpdateproductDeliveryModesInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    sellerFees?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    taxes?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    creditProcessing?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => [NameAndImageCreateInput], {nullable:true})
    genders?: Array<NameAndImageCreateInput>;
    @Field(() => [NameAndImageCreateInput], {nullable:true})
    conditions?: Array<NameAndImageCreateInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class ListingSettingUncheckedUpdateInput {
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    enableSelling?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    enableRenting?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => ListingSettingUpdatereasonsForSellingInput, {nullable:true})
    reasonsForSelling?: InstanceType<typeof ListingSettingUpdatereasonsForSellingInput>;
    @Field(() => ListingSettingUpdatemeetupPreferencesInput, {nullable:true})
    meetupPreferences?: InstanceType<typeof ListingSettingUpdatemeetupPreferencesInput>;
    @Field(() => ListingSettingUpdateproductDeliveryModesInput, {nullable:true})
    productDeliveryModes?: InstanceType<typeof ListingSettingUpdateproductDeliveryModesInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    sellerFees?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    taxes?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    creditProcessing?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => [NameAndImageCreateInput], {nullable:true})
    genders?: Array<NameAndImageCreateInput>;
    @Field(() => [NameAndImageCreateInput], {nullable:true})
    conditions?: Array<NameAndImageCreateInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class ListingSettingUpdateManyMutationInput {
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    enableSelling?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    enableRenting?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => ListingSettingUpdatereasonsForSellingInput, {nullable:true})
    reasonsForSelling?: InstanceType<typeof ListingSettingUpdatereasonsForSellingInput>;
    @Field(() => ListingSettingUpdatemeetupPreferencesInput, {nullable:true})
    meetupPreferences?: InstanceType<typeof ListingSettingUpdatemeetupPreferencesInput>;
    @Field(() => ListingSettingUpdateproductDeliveryModesInput, {nullable:true})
    productDeliveryModes?: InstanceType<typeof ListingSettingUpdateproductDeliveryModesInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    sellerFees?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    taxes?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    creditProcessing?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => [NameAndImageCreateInput], {nullable:true})
    genders?: Array<NameAndImageCreateInput>;
    @Field(() => [NameAndImageCreateInput], {nullable:true})
    conditions?: Array<NameAndImageCreateInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class ListingSettingUpdateInput {
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    enableSelling?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    enableRenting?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => ListingSettingUpdatereasonsForSellingInput, {nullable:true})
    reasonsForSelling?: InstanceType<typeof ListingSettingUpdatereasonsForSellingInput>;
    @Field(() => ListingSettingUpdatemeetupPreferencesInput, {nullable:true})
    meetupPreferences?: InstanceType<typeof ListingSettingUpdatemeetupPreferencesInput>;
    @Field(() => ListingSettingUpdateproductDeliveryModesInput, {nullable:true})
    productDeliveryModes?: InstanceType<typeof ListingSettingUpdateproductDeliveryModesInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    sellerFees?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    taxes?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    creditProcessing?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => [NameAndImageCreateInput], {nullable:true})
    genders?: Array<NameAndImageCreateInput>;
    @Field(() => [NameAndImageCreateInput], {nullable:true})
    conditions?: Array<NameAndImageCreateInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class ListingSettingUpdatemeetupPreferencesInput {
    @Field(() => [String], {nullable:true})
    set?: Array<string>;
    @Field(() => [String], {nullable:true})
    push?: Array<string>;
}

@InputType()
export class ListingSettingUpdateproductDeliveryModesInput {
    @Field(() => [String], {nullable:true})
    set?: Array<string>;
    @Field(() => [String], {nullable:true})
    push?: Array<string>;
}

@InputType()
export class ListingSettingUpdatereasonsForSellingInput {
    @Field(() => [String], {nullable:true})
    set?: Array<string>;
    @Field(() => [String], {nullable:true})
    push?: Array<string>;
}

@InputType()
export class ListingSettingWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => [ListingSettingWhereInput], {nullable:true})
    AND?: Array<ListingSettingWhereInput>;
    @Field(() => [ListingSettingWhereInput], {nullable:true})
    OR?: Array<ListingSettingWhereInput>;
    @Field(() => [ListingSettingWhereInput], {nullable:true})
    NOT?: Array<ListingSettingWhereInput>;
    @Field(() => BoolFilter, {nullable:true})
    enableSelling?: InstanceType<typeof BoolFilter>;
    @Field(() => BoolFilter, {nullable:true})
    enableRenting?: InstanceType<typeof BoolFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    reasonsForSelling?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    meetupPreferences?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    productDeliveryModes?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => IntFilter, {nullable:true})
    sellerFees?: InstanceType<typeof IntFilter>;
    @Field(() => IntFilter, {nullable:true})
    taxes?: InstanceType<typeof IntFilter>;
    @Field(() => IntFilter, {nullable:true})
    creditProcessing?: InstanceType<typeof IntFilter>;
    @Field(() => [NameAndImageObjectEqualityInput], {nullable:true})
    genders?: Array<NameAndImageObjectEqualityInput>;
    @Field(() => [NameAndImageObjectEqualityInput], {nullable:true})
    conditions?: Array<NameAndImageObjectEqualityInput>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@InputType()
export class ListingSettingWhereInput {
    @Field(() => [ListingSettingWhereInput], {nullable:true})
    AND?: Array<ListingSettingWhereInput>;
    @Field(() => [ListingSettingWhereInput], {nullable:true})
    OR?: Array<ListingSettingWhereInput>;
    @Field(() => [ListingSettingWhereInput], {nullable:true})
    NOT?: Array<ListingSettingWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => BoolFilter, {nullable:true})
    enableSelling?: InstanceType<typeof BoolFilter>;
    @Field(() => BoolFilter, {nullable:true})
    enableRenting?: InstanceType<typeof BoolFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    reasonsForSelling?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    meetupPreferences?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    productDeliveryModes?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => IntFilter, {nullable:true})
    sellerFees?: InstanceType<typeof IntFilter>;
    @Field(() => IntFilter, {nullable:true})
    taxes?: InstanceType<typeof IntFilter>;
    @Field(() => IntFilter, {nullable:true})
    creditProcessing?: InstanceType<typeof IntFilter>;
    @Field(() => [NameAndImageObjectEqualityInput], {nullable:true})
    genders?: Array<NameAndImageObjectEqualityInput>;
    @Field(() => [NameAndImageObjectEqualityInput], {nullable:true})
    conditions?: Array<NameAndImageObjectEqualityInput>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@ObjectType()
export class ListingSetting {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => Boolean, {nullable:false})
    enableSelling!: boolean;
    @Field(() => Boolean, {nullable:false})
    enableRenting!: boolean;
    @Field(() => [String], {nullable:true})
    reasonsForSelling!: Array<string>;
    @Field(() => [String], {nullable:true})
    meetupPreferences!: Array<string>;
    @Field(() => [String], {nullable:true})
    productDeliveryModes!: Array<string>;
    @Field(() => Int, {nullable:false})
    sellerFees!: number;
    @Field(() => Int, {nullable:false})
    taxes!: number;
    @Field(() => Int, {nullable:false})
    creditProcessing!: number;
    @Field(() => [NameAndImage], {nullable:true})
    genders?: Array<NameAndImage>;
    @Field(() => [NameAndImage], {nullable:true})
    conditions?: Array<NameAndImage>;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
    @Field(() => Date, {nullable:false})
    updatedAt!: Date;
}

@ArgsType()
export class UpdateManyListingSettingArgs {
    @Field(() => ListingSettingUpdateManyMutationInput, {nullable:false})
    @Type(() => ListingSettingUpdateManyMutationInput)
    data!: InstanceType<typeof ListingSettingUpdateManyMutationInput>;
    @Field(() => ListingSettingWhereInput, {nullable:true})
    @Type(() => ListingSettingWhereInput)
    where?: InstanceType<typeof ListingSettingWhereInput>;
}

@ArgsType()
export class UpdateOneListingSettingArgs {
    @Field(() => ListingSettingUpdateInput, {nullable:false})
    @Type(() => ListingSettingUpdateInput)
    data!: InstanceType<typeof ListingSettingUpdateInput>;
    @Field(() => ListingSettingWhereUniqueInput, {nullable:false})
    @Type(() => ListingSettingWhereUniqueInput)
    where!: Prisma.AtLeast<ListingSettingWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpsertOneListingSettingArgs {
    @Field(() => ListingSettingWhereUniqueInput, {nullable:false})
    @Type(() => ListingSettingWhereUniqueInput)
    where!: Prisma.AtLeast<ListingSettingWhereUniqueInput, 'id'>;
    @Field(() => ListingSettingCreateInput, {nullable:false})
    @Type(() => ListingSettingCreateInput)
    create!: InstanceType<typeof ListingSettingCreateInput>;
    @Field(() => ListingSettingUpdateInput, {nullable:false})
    @Type(() => ListingSettingUpdateInput)
    update!: InstanceType<typeof ListingSettingUpdateInput>;
}

@InputType()
export class LocalOrderHandedOverMessageCreateEnvelopeInput {
    @Field(() => LocalOrderHandedOverMessageCreateInput, {nullable:true})
    @Type(() => LocalOrderHandedOverMessageCreateInput)
    set?: InstanceType<typeof LocalOrderHandedOverMessageCreateInput>;
}

@InputType()
export class LocalOrderHandedOverMessageCreateInput {
    @Field(() => String, {nullable:false})
    buyerHeading!: string;
    @Field(() => String, {nullable:false})
    buyerDescription!: string;
    @Field(() => String, {nullable:false})
    sellerHeading!: string;
    @Field(() => String, {nullable:false})
    sellerDescription!: string;
}

@InputType()
export class LocalOrderHandedOverMessageOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    buyerHeading?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    buyerDescription?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    sellerHeading?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    sellerDescription?: `${SortOrder}`;
}

@InputType()
export class LocalOrderHandedOverMessageUpdateEnvelopeInput {
    @Field(() => LocalOrderHandedOverMessageCreateInput, {nullable:true})
    @Type(() => LocalOrderHandedOverMessageCreateInput)
    set?: InstanceType<typeof LocalOrderHandedOverMessageCreateInput>;
    @Field(() => LocalOrderHandedOverMessageUpdateInput, {nullable:true})
    @Type(() => LocalOrderHandedOverMessageUpdateInput)
    update?: InstanceType<typeof LocalOrderHandedOverMessageUpdateInput>;
}

@InputType()
export class LocalOrderHandedOverMessageUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    buyerHeading?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    buyerDescription?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    sellerHeading?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    sellerDescription?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}

@InputType()
export class LocalOrderHandedOverMessageWhereInput {
    @Field(() => [LocalOrderHandedOverMessageWhereInput], {nullable:true})
    AND?: Array<LocalOrderHandedOverMessageWhereInput>;
    @Field(() => [LocalOrderHandedOverMessageWhereInput], {nullable:true})
    OR?: Array<LocalOrderHandedOverMessageWhereInput>;
    @Field(() => [LocalOrderHandedOverMessageWhereInput], {nullable:true})
    NOT?: Array<LocalOrderHandedOverMessageWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    buyerHeading?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    buyerDescription?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    sellerHeading?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    sellerDescription?: InstanceType<typeof StringFilter>;
}

@ObjectType()
export class LocalOrderHandedOverMessage {
    @Field(() => String, {nullable:false})
    buyerHeading!: string;
    @Field(() => String, {nullable:false})
    buyerDescription!: string;
    @Field(() => String, {nullable:false})
    sellerHeading!: string;
    @Field(() => String, {nullable:false})
    sellerDescription!: string;
}

@InputType()
export class LocalOrderUpdateMessageCreateEnvelopeInput {
    @Field(() => LocalOrderUpdateMessageCreateInput, {nullable:true})
    @Type(() => LocalOrderUpdateMessageCreateInput)
    set?: InstanceType<typeof LocalOrderUpdateMessageCreateInput>;
}

@InputType()
export class LocalOrderUpdateMessageCreateInput {
    @Field(() => String, {nullable:false})
    heading!: string;
    @Field(() => String, {nullable:false})
    description!: string;
}

@InputType()
export class LocalOrderUpdateMessageOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    heading?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    description?: `${SortOrder}`;
}

@InputType()
export class LocalOrderUpdateMessageUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    heading?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}

@InputType()
export class LocalOrderUpdateMessageWhereInput {
    @Field(() => [LocalOrderUpdateMessageWhereInput], {nullable:true})
    AND?: Array<LocalOrderUpdateMessageWhereInput>;
    @Field(() => [LocalOrderUpdateMessageWhereInput], {nullable:true})
    OR?: Array<LocalOrderUpdateMessageWhereInput>;
    @Field(() => [LocalOrderUpdateMessageWhereInput], {nullable:true})
    NOT?: Array<LocalOrderUpdateMessageWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    heading?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    description?: InstanceType<typeof StringFilter>;
}

@ObjectType()
export class LocalOrderUpdateMessage {
    @Field(() => String, {nullable:false})
    heading!: string;
    @Field(() => String, {nullable:false})
    description!: string;
}

@InputType()
export class MediaItemCreateInput {
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => MediaType, {nullable:false})
    type!: `${MediaType}`;
    @Field(() => Boolean, {nullable:false})
    thumb!: boolean;
}

@InputType()
export class MediaItemOrderByCompositeAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    _count?: `${SortOrder}`;
}

@InputType()
export class MediaItemOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    thumb?: `${SortOrder}`;
}

@InputType()
export class MediaItemUpdateEnvelopeInput {
    @Field(() => MediaItemCreateInput, {nullable:true})
    @Type(() => MediaItemCreateInput)
    set?: InstanceType<typeof MediaItemCreateInput>;
    @Field(() => MediaItemUpdateInput, {nullable:true})
    @Type(() => MediaItemUpdateInput)
    update?: InstanceType<typeof MediaItemUpdateInput>;
}

@InputType()
export class MediaItemUpdateManyInput {
    @Field(() => MediaItemWhereInput, {nullable:false})
    @Type(() => MediaItemWhereInput)
    where!: InstanceType<typeof MediaItemWhereInput>;
    @Field(() => MediaItemUpdateInput, {nullable:false})
    @Type(() => MediaItemUpdateInput)
    data!: InstanceType<typeof MediaItemUpdateInput>;
}

@InputType()
export class MediaItemUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumMediaTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumMediaTypeFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    thumb?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
}

@InputType()
export class MediaItemWhereInput {
    @Field(() => [MediaItemWhereInput], {nullable:true})
    AND?: Array<MediaItemWhereInput>;
    @Field(() => [MediaItemWhereInput], {nullable:true})
    OR?: Array<MediaItemWhereInput>;
    @Field(() => [MediaItemWhereInput], {nullable:true})
    NOT?: Array<MediaItemWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    name?: InstanceType<typeof StringFilter>;
    @Field(() => EnumMediaTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumMediaTypeFilter>;
    @Field(() => BoolFilter, {nullable:true})
    thumb?: InstanceType<typeof BoolFilter>;
}

@ObjectType()
export class MediaItem {
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => MediaType, {nullable:false})
    type!: `${MediaType}`;
    @Field(() => Boolean, {nullable:false})
    thumb!: boolean;
}

@ArgsType()
export class CreateManyMessageArgs {
    @Field(() => [MessageCreateManyInput], {nullable:false})
    @Type(() => MessageCreateManyInput)
    data!: Array<MessageCreateManyInput>;
}

@ArgsType()
export class CreateOneMessageArgs {
    @Field(() => MessageCreateInput, {nullable:false})
    @Type(() => MessageCreateInput)
    data!: InstanceType<typeof MessageCreateInput>;
}

@ArgsType()
export class DeleteManyMessageArgs {
    @Field(() => MessageWhereInput, {nullable:true})
    @Type(() => MessageWhereInput)
    where?: InstanceType<typeof MessageWhereInput>;
}

@ArgsType()
export class DeleteOneMessageArgs {
    @Field(() => MessageWhereUniqueInput, {nullable:false})
    @Type(() => MessageWhereUniqueInput)
    where!: Prisma.AtLeast<MessageWhereUniqueInput, 'id' | 'clientId'>;
}

@ArgsType()
export class FindFirstMessageOrThrowArgs {
    @Field(() => MessageWhereInput, {nullable:true})
    @Type(() => MessageWhereInput)
    where?: InstanceType<typeof MessageWhereInput>;
    @Field(() => [MessageOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<MessageOrderByWithRelationInput>;
    @Field(() => MessageWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<MessageWhereUniqueInput, 'id' | 'clientId'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [MessageScalarFieldEnum], {nullable:true})
    distinct?: Array<`${MessageScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstMessageArgs {
    @Field(() => MessageWhereInput, {nullable:true})
    @Type(() => MessageWhereInput)
    where?: InstanceType<typeof MessageWhereInput>;
    @Field(() => [MessageOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<MessageOrderByWithRelationInput>;
    @Field(() => MessageWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<MessageWhereUniqueInput, 'id' | 'clientId'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [MessageScalarFieldEnum], {nullable:true})
    distinct?: Array<`${MessageScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyMessageArgs {
    @Field(() => MessageWhereInput, {nullable:true})
    @Type(() => MessageWhereInput)
    where?: InstanceType<typeof MessageWhereInput>;
    @Field(() => [MessageOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<MessageOrderByWithRelationInput>;
    @Field(() => MessageWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<MessageWhereUniqueInput, 'id' | 'clientId'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [MessageScalarFieldEnum], {nullable:true})
    distinct?: Array<`${MessageScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniqueMessageOrThrowArgs {
    @Field(() => MessageWhereUniqueInput, {nullable:false})
    @Type(() => MessageWhereUniqueInput)
    where!: Prisma.AtLeast<MessageWhereUniqueInput, 'id' | 'clientId'>;
}

@ArgsType()
export class FindUniqueMessageArgs {
    @Field(() => MessageWhereUniqueInput, {nullable:false})
    @Type(() => MessageWhereUniqueInput)
    where!: Prisma.AtLeast<MessageWhereUniqueInput, 'id' | 'clientId'>;
}

@ArgsType()
export class MessageAggregateArgs {
    @Field(() => MessageWhereInput, {nullable:true})
    @Type(() => MessageWhereInput)
    where?: InstanceType<typeof MessageWhereInput>;
    @Field(() => [MessageOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<MessageOrderByWithRelationInput>;
    @Field(() => MessageWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<MessageWhereUniqueInput, 'id' | 'clientId'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class MessageCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    clientId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    senderId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    payload?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    state?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    conversationId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class MessageCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    clientId!: string;
    @Field(() => String, {nullable:false})
    senderId!: string;
    @Field(() => MessageType, {nullable:false})
    type!: `${MessageType}`;
    @Field(() => GraphQLJSON, {nullable:false})
    payload!: any;
    @Field(() => MessageActionsNullableCreateEnvelopeInput, {nullable:true})
    actions?: InstanceType<typeof MessageActionsNullableCreateEnvelopeInput>;
    @Field(() => MessageState, {nullable:true})
    state?: `${MessageState}`;
    @Field(() => String, {nullable:false})
    conversationId!: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class MessageCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    clientId!: string;
    @Field(() => String, {nullable:false})
    senderId!: string;
    @Field(() => MessageType, {nullable:false})
    type!: `${MessageType}`;
    @Field(() => GraphQLJSON, {nullable:false})
    payload!: any;
    @Field(() => MessageActionsNullableCreateEnvelopeInput, {nullable:true})
    actions?: InstanceType<typeof MessageActionsNullableCreateEnvelopeInput>;
    @Field(() => MessageState, {nullable:true})
    state?: `${MessageState}`;
    @Field(() => String, {nullable:false})
    conversationId!: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@ArgsType()
export class MessageGroupByArgs {
    @Field(() => MessageWhereInput, {nullable:true})
    @Type(() => MessageWhereInput)
    where?: InstanceType<typeof MessageWhereInput>;
    @Field(() => [MessageOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<MessageOrderByWithAggregationInput>;
    @Field(() => [MessageScalarFieldEnum], {nullable:false})
    by!: Array<`${MessageScalarFieldEnum}`>;
    @Field(() => MessageScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof MessageScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class MessageMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    clientId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    senderId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    state?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    conversationId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class MessageMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    clientId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    senderId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    state?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    conversationId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class MessageOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    clientId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    senderId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    payload?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    state?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    conversationId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => MessageCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof MessageCountOrderByAggregateInput>;
    @Field(() => MessageMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof MessageMaxOrderByAggregateInput>;
    @Field(() => MessageMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof MessageMinOrderByAggregateInput>;
}

@InputType()
export class MessageOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    clientId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    senderId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    payload?: `${SortOrder}`;
    @Field(() => MessageActionsOrderByInput, {nullable:true})
    actions?: InstanceType<typeof MessageActionsOrderByInput>;
    @Field(() => SortOrder, {nullable:true})
    state?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    conversationId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class MessageScalarWhereWithAggregatesInput {
    @Field(() => [MessageScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<MessageScalarWhereWithAggregatesInput>;
    @Field(() => [MessageScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<MessageScalarWhereWithAggregatesInput>;
    @Field(() => [MessageScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<MessageScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    clientId?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    senderId?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => EnumMessageTypeWithAggregatesFilter, {nullable:true})
    type?: InstanceType<typeof EnumMessageTypeWithAggregatesFilter>;
    @Field(() => JsonWithAggregatesFilter, {nullable:true})
    payload?: InstanceType<typeof JsonWithAggregatesFilter>;
    @Field(() => EnumMessageStateNullableWithAggregatesFilter, {nullable:true})
    state?: InstanceType<typeof EnumMessageStateNullableWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    conversationId?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
}

@InputType()
export class MessageUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    clientId!: string;
    @Field(() => String, {nullable:false})
    senderId!: string;
    @Field(() => MessageType, {nullable:false})
    type!: `${MessageType}`;
    @Field(() => GraphQLJSON, {nullable:false})
    payload!: any;
    @Field(() => MessageActionsNullableCreateEnvelopeInput, {nullable:true})
    actions?: InstanceType<typeof MessageActionsNullableCreateEnvelopeInput>;
    @Field(() => MessageState, {nullable:true})
    state?: `${MessageState}`;
    @Field(() => String, {nullable:false})
    conversationId!: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class MessageUncheckedUpdateManyInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    clientId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    senderId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumMessageTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumMessageTypeFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    payload?: any;
    @Field(() => MessageActionsNullableUpdateEnvelopeInput, {nullable:true})
    actions?: InstanceType<typeof MessageActionsNullableUpdateEnvelopeInput>;
    @Field(() => NullableEnumMessageStateFieldUpdateOperationsInput, {nullable:true})
    state?: InstanceType<typeof NullableEnumMessageStateFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    conversationId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class MessageUncheckedUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    clientId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    senderId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumMessageTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumMessageTypeFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    payload?: any;
    @Field(() => MessageActionsNullableUpdateEnvelopeInput, {nullable:true})
    actions?: InstanceType<typeof MessageActionsNullableUpdateEnvelopeInput>;
    @Field(() => NullableEnumMessageStateFieldUpdateOperationsInput, {nullable:true})
    state?: InstanceType<typeof NullableEnumMessageStateFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    conversationId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class MessageUpdateManyMutationInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    clientId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    senderId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumMessageTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumMessageTypeFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    payload?: any;
    @Field(() => MessageActionsNullableUpdateEnvelopeInput, {nullable:true})
    actions?: InstanceType<typeof MessageActionsNullableUpdateEnvelopeInput>;
    @Field(() => NullableEnumMessageStateFieldUpdateOperationsInput, {nullable:true})
    state?: InstanceType<typeof NullableEnumMessageStateFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    conversationId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class MessageUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    clientId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    senderId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumMessageTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumMessageTypeFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    payload?: any;
    @Field(() => MessageActionsNullableUpdateEnvelopeInput, {nullable:true})
    actions?: InstanceType<typeof MessageActionsNullableUpdateEnvelopeInput>;
    @Field(() => NullableEnumMessageStateFieldUpdateOperationsInput, {nullable:true})
    state?: InstanceType<typeof NullableEnumMessageStateFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    conversationId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class MessageWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:true})
    clientId?: string;
    @Field(() => [MessageWhereInput], {nullable:true})
    AND?: Array<MessageWhereInput>;
    @Field(() => [MessageWhereInput], {nullable:true})
    OR?: Array<MessageWhereInput>;
    @Field(() => [MessageWhereInput], {nullable:true})
    NOT?: Array<MessageWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    senderId?: InstanceType<typeof StringFilter>;
    @Field(() => EnumMessageTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumMessageTypeFilter>;
    @Field(() => JsonFilter, {nullable:true})
    payload?: InstanceType<typeof JsonFilter>;
    @Field(() => MessageActionsNullableCompositeFilter, {nullable:true})
    actions?: InstanceType<typeof MessageActionsNullableCompositeFilter>;
    @Field(() => EnumMessageStateNullableFilter, {nullable:true})
    state?: InstanceType<typeof EnumMessageStateNullableFilter>;
    @Field(() => StringFilter, {nullable:true})
    conversationId?: InstanceType<typeof StringFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@InputType()
export class MessageWhereInput {
    @Field(() => [MessageWhereInput], {nullable:true})
    AND?: Array<MessageWhereInput>;
    @Field(() => [MessageWhereInput], {nullable:true})
    OR?: Array<MessageWhereInput>;
    @Field(() => [MessageWhereInput], {nullable:true})
    NOT?: Array<MessageWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    clientId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    senderId?: InstanceType<typeof StringFilter>;
    @Field(() => EnumMessageTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumMessageTypeFilter>;
    @Field(() => JsonFilter, {nullable:true})
    payload?: InstanceType<typeof JsonFilter>;
    @Field(() => MessageActionsNullableCompositeFilter, {nullable:true})
    actions?: InstanceType<typeof MessageActionsNullableCompositeFilter>;
    @Field(() => EnumMessageStateNullableFilter, {nullable:true})
    state?: InstanceType<typeof EnumMessageStateNullableFilter>;
    @Field(() => StringFilter, {nullable:true})
    conversationId?: InstanceType<typeof StringFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@ObjectType()
export class Message {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    clientId!: string;
    @Field(() => String, {nullable:false})
    senderId!: string;
    @Field(() => MessageType, {nullable:false})
    type!: `${MessageType}`;
    @Field(() => GraphQLJSON, {nullable:false})
    payload!: any;
    @Field(() => MessageActions, {nullable:true})
    actions?: InstanceType<typeof MessageActions> | null;
    @Field(() => MessageState, {nullable:true})
    state!: `${MessageState}` | null;
    @Field(() => String, {nullable:false})
    conversationId!: string;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
    @Field(() => Date, {nullable:false})
    updatedAt!: Date;
}

@ArgsType()
export class UpdateManyMessageArgs {
    @Field(() => MessageUpdateManyMutationInput, {nullable:false})
    @Type(() => MessageUpdateManyMutationInput)
    data!: InstanceType<typeof MessageUpdateManyMutationInput>;
    @Field(() => MessageWhereInput, {nullable:true})
    @Type(() => MessageWhereInput)
    where?: InstanceType<typeof MessageWhereInput>;
}

@ArgsType()
export class UpdateOneMessageArgs {
    @Field(() => MessageUpdateInput, {nullable:false})
    @Type(() => MessageUpdateInput)
    data!: InstanceType<typeof MessageUpdateInput>;
    @Field(() => MessageWhereUniqueInput, {nullable:false})
    @Type(() => MessageWhereUniqueInput)
    where!: Prisma.AtLeast<MessageWhereUniqueInput, 'id' | 'clientId'>;
}

@ArgsType()
export class UpsertOneMessageArgs {
    @Field(() => MessageWhereUniqueInput, {nullable:false})
    @Type(() => MessageWhereUniqueInput)
    where!: Prisma.AtLeast<MessageWhereUniqueInput, 'id' | 'clientId'>;
    @Field(() => MessageCreateInput, {nullable:false})
    @Type(() => MessageCreateInput)
    create!: InstanceType<typeof MessageCreateInput>;
    @Field(() => MessageUpdateInput, {nullable:false})
    @Type(() => MessageUpdateInput)
    update!: InstanceType<typeof MessageUpdateInput>;
}

@InputType()
export class MessageActionCreateInput {
    @Field(() => MessageActionType, {nullable:false})
    type!: `${MessageActionType}`;
    @Field(() => String, {nullable:false})
    label!: string;
}

@InputType()
export class MessageActionOrderByCompositeAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    _count?: `${SortOrder}`;
}

@InputType()
export class MessageActionUpdateManyInput {
    @Field(() => MessageActionWhereInput, {nullable:false})
    @Type(() => MessageActionWhereInput)
    where!: InstanceType<typeof MessageActionWhereInput>;
    @Field(() => MessageActionUpdateInput, {nullable:false})
    @Type(() => MessageActionUpdateInput)
    data!: InstanceType<typeof MessageActionUpdateInput>;
}

@InputType()
export class MessageActionUpdateInput {
    @Field(() => EnumMessageActionTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumMessageActionTypeFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    label?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}

@InputType()
export class MessageActionWhereInput {
    @Field(() => [MessageActionWhereInput], {nullable:true})
    AND?: Array<MessageActionWhereInput>;
    @Field(() => [MessageActionWhereInput], {nullable:true})
    OR?: Array<MessageActionWhereInput>;
    @Field(() => [MessageActionWhereInput], {nullable:true})
    NOT?: Array<MessageActionWhereInput>;
    @Field(() => EnumMessageActionTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumMessageActionTypeFilter>;
    @Field(() => StringFilter, {nullable:true})
    label?: InstanceType<typeof StringFilter>;
}

@ObjectType()
export class MessageAction {
    @Field(() => MessageActionType, {nullable:false})
    type!: `${MessageActionType}`;
    @Field(() => String, {nullable:false})
    label!: string;
}

@InputType()
export class MessageActionsCreateInput {
    @Field(() => [MessageActionCreateInput], {nullable:true})
    senderActions?: Array<MessageActionCreateInput>;
    @Field(() => [MessageActionCreateInput], {nullable:true})
    receiverActions?: Array<MessageActionCreateInput>;
}

@InputType()
export class MessageActionsOrderByInput {
    @Field(() => MessageActionOrderByCompositeAggregateInput, {nullable:true})
    senderActions?: InstanceType<typeof MessageActionOrderByCompositeAggregateInput>;
    @Field(() => MessageActionOrderByCompositeAggregateInput, {nullable:true})
    receiverActions?: InstanceType<typeof MessageActionOrderByCompositeAggregateInput>;
}

@InputType()
export class MessageActionsUpdateInput {
    @Field(() => [MessageActionCreateInput], {nullable:true})
    senderActions?: Array<MessageActionCreateInput>;
    @Field(() => [MessageActionCreateInput], {nullable:true})
    receiverActions?: Array<MessageActionCreateInput>;
}

@InputType()
export class MessageActionsWhereInput {
    @Field(() => [MessageActionsWhereInput], {nullable:true})
    AND?: Array<MessageActionsWhereInput>;
    @Field(() => [MessageActionsWhereInput], {nullable:true})
    OR?: Array<MessageActionsWhereInput>;
    @Field(() => [MessageActionsWhereInput], {nullable:true})
    NOT?: Array<MessageActionsWhereInput>;
    @Field(() => [MessageActionObjectEqualityInput], {nullable:true})
    senderActions?: Array<MessageActionObjectEqualityInput>;
    @Field(() => [MessageActionObjectEqualityInput], {nullable:true})
    receiverActions?: Array<MessageActionObjectEqualityInput>;
}

@ObjectType()
export class MessageActions {
    @Field(() => [MessageAction], {nullable:true})
    senderActions?: Array<MessageAction>;
    @Field(() => [MessageAction], {nullable:true})
    receiverActions?: Array<MessageAction>;
}

@InputType()
export class NameAndImageCreateInput {
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    image!: string;
}

@InputType()
export class NameAndImageOrderByCompositeAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    _count?: `${SortOrder}`;
}

@InputType()
export class NameAndImageUpdateManyInput {
    @Field(() => NameAndImageWhereInput, {nullable:false})
    @Type(() => NameAndImageWhereInput)
    where!: InstanceType<typeof NameAndImageWhereInput>;
    @Field(() => NameAndImageUpdateInput, {nullable:false})
    @Type(() => NameAndImageUpdateInput)
    data!: InstanceType<typeof NameAndImageUpdateInput>;
}

@InputType()
export class NameAndImageUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}

@InputType()
export class NameAndImageWhereInput {
    @Field(() => [NameAndImageWhereInput], {nullable:true})
    AND?: Array<NameAndImageWhereInput>;
    @Field(() => [NameAndImageWhereInput], {nullable:true})
    OR?: Array<NameAndImageWhereInput>;
    @Field(() => [NameAndImageWhereInput], {nullable:true})
    NOT?: Array<NameAndImageWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    name?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    image?: InstanceType<typeof StringFilter>;
}

@ObjectType()
export class NameAndImage {
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    image!: string;
}

@ArgsType()
export class CreateManyNotificationArgs {
    @Field(() => [NotificationCreateManyInput], {nullable:false})
    @Type(() => NotificationCreateManyInput)
    data!: Array<NotificationCreateManyInput>;
}

@ArgsType()
export class CreateOneNotificationArgs {
    @Field(() => NotificationCreateInput, {nullable:false})
    @Type(() => NotificationCreateInput)
    data!: InstanceType<typeof NotificationCreateInput>;
}

@ArgsType()
export class DeleteManyNotificationArgs {
    @Field(() => NotificationWhereInput, {nullable:true})
    @Type(() => NotificationWhereInput)
    where?: InstanceType<typeof NotificationWhereInput>;
}

@ArgsType()
export class DeleteOneNotificationArgs {
    @Field(() => NotificationWhereUniqueInput, {nullable:false})
    @Type(() => NotificationWhereUniqueInput)
    where!: Prisma.AtLeast<NotificationWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindFirstNotificationOrThrowArgs {
    @Field(() => NotificationWhereInput, {nullable:true})
    @Type(() => NotificationWhereInput)
    where?: InstanceType<typeof NotificationWhereInput>;
    @Field(() => [NotificationOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<NotificationOrderByWithRelationInput>;
    @Field(() => NotificationWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<NotificationWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [NotificationScalarFieldEnum], {nullable:true})
    distinct?: Array<`${NotificationScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstNotificationArgs {
    @Field(() => NotificationWhereInput, {nullable:true})
    @Type(() => NotificationWhereInput)
    where?: InstanceType<typeof NotificationWhereInput>;
    @Field(() => [NotificationOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<NotificationOrderByWithRelationInput>;
    @Field(() => NotificationWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<NotificationWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [NotificationScalarFieldEnum], {nullable:true})
    distinct?: Array<`${NotificationScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyNotificationArgs {
    @Field(() => NotificationWhereInput, {nullable:true})
    @Type(() => NotificationWhereInput)
    where?: InstanceType<typeof NotificationWhereInput>;
    @Field(() => [NotificationOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<NotificationOrderByWithRelationInput>;
    @Field(() => NotificationWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<NotificationWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [NotificationScalarFieldEnum], {nullable:true})
    distinct?: Array<`${NotificationScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniqueNotificationOrThrowArgs {
    @Field(() => NotificationWhereUniqueInput, {nullable:false})
    @Type(() => NotificationWhereUniqueInput)
    where!: Prisma.AtLeast<NotificationWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindUniqueNotificationArgs {
    @Field(() => NotificationWhereUniqueInput, {nullable:false})
    @Type(() => NotificationWhereUniqueInput)
    where!: Prisma.AtLeast<NotificationWhereUniqueInput, 'id'>;
}

@ArgsType()
export class NotificationAggregateArgs {
    @Field(() => NotificationWhereInput, {nullable:true})
    @Type(() => NotificationWhereInput)
    where?: InstanceType<typeof NotificationWhereInput>;
    @Field(() => [NotificationOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<NotificationOrderByWithRelationInput>;
    @Field(() => NotificationWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<NotificationWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class NotificationCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    payload?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    title?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    body?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    expiresAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    isRead?: `${SortOrder}`;
}

@InputType()
export class NotificationCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => NotificationType, {nullable:false})
    type!: `${NotificationType}`;
    @Field(() => GraphQLJSON, {nullable:false})
    payload!: any;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => String, {nullable:false})
    body!: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    expiresAt?: Date | string;
    @Field(() => Boolean, {nullable:true})
    isRead?: boolean;
}

@InputType()
export class NotificationCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => NotificationType, {nullable:false})
    type!: `${NotificationType}`;
    @Field(() => GraphQLJSON, {nullable:false})
    payload!: any;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => String, {nullable:false})
    body!: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    expiresAt?: Date | string;
    @Field(() => Boolean, {nullable:true})
    isRead?: boolean;
}

@ArgsType()
export class NotificationGroupByArgs {
    @Field(() => NotificationWhereInput, {nullable:true})
    @Type(() => NotificationWhereInput)
    where?: InstanceType<typeof NotificationWhereInput>;
    @Field(() => [NotificationOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<NotificationOrderByWithAggregationInput>;
    @Field(() => [NotificationScalarFieldEnum], {nullable:false})
    by!: Array<`${NotificationScalarFieldEnum}`>;
    @Field(() => NotificationScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof NotificationScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class NotificationMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    title?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    body?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    expiresAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    isRead?: `${SortOrder}`;
}

@InputType()
export class NotificationMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    title?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    body?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    expiresAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    isRead?: `${SortOrder}`;
}

@InputType()
export class NotificationOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    payload?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    title?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    body?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    expiresAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    isRead?: `${SortOrder}`;
    @Field(() => NotificationCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof NotificationCountOrderByAggregateInput>;
    @Field(() => NotificationMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof NotificationMaxOrderByAggregateInput>;
    @Field(() => NotificationMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof NotificationMinOrderByAggregateInput>;
}

@InputType()
export class NotificationOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    payload?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    title?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    body?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    expiresAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    isRead?: `${SortOrder}`;
}

@InputType()
export class NotificationScalarWhereWithAggregatesInput {
    @Field(() => [NotificationScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<NotificationScalarWhereWithAggregatesInput>;
    @Field(() => [NotificationScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<NotificationScalarWhereWithAggregatesInput>;
    @Field(() => [NotificationScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<NotificationScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    userId?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => EnumNotificationTypeWithAggregatesFilter, {nullable:true})
    type?: InstanceType<typeof EnumNotificationTypeWithAggregatesFilter>;
    @Field(() => JsonWithAggregatesFilter, {nullable:true})
    payload?: InstanceType<typeof JsonWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    title?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    body?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => DateTimeNullableWithAggregatesFilter, {nullable:true})
    expiresAt?: InstanceType<typeof DateTimeNullableWithAggregatesFilter>;
    @Field(() => BoolWithAggregatesFilter, {nullable:true})
    isRead?: InstanceType<typeof BoolWithAggregatesFilter>;
}

@InputType()
export class NotificationUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => NotificationType, {nullable:false})
    type!: `${NotificationType}`;
    @Field(() => GraphQLJSON, {nullable:false})
    payload!: any;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => String, {nullable:false})
    body!: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    expiresAt?: Date | string;
    @Field(() => Boolean, {nullable:true})
    isRead?: boolean;
}

@InputType()
export class NotificationUncheckedUpdateManyInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumNotificationTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumNotificationTypeFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    payload?: any;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    body?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => NullableDateTimeFieldUpdateOperationsInput, {nullable:true})
    expiresAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    isRead?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
}

@InputType()
export class NotificationUncheckedUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumNotificationTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumNotificationTypeFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    payload?: any;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    body?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => NullableDateTimeFieldUpdateOperationsInput, {nullable:true})
    expiresAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    isRead?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
}

@InputType()
export class NotificationUpdateManyMutationInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumNotificationTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumNotificationTypeFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    payload?: any;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    body?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => NullableDateTimeFieldUpdateOperationsInput, {nullable:true})
    expiresAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    isRead?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
}

@InputType()
export class NotificationUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumNotificationTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumNotificationTypeFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    payload?: any;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    body?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => NullableDateTimeFieldUpdateOperationsInput, {nullable:true})
    expiresAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    isRead?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
}

@InputType()
export class NotificationWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => [NotificationWhereInput], {nullable:true})
    AND?: Array<NotificationWhereInput>;
    @Field(() => [NotificationWhereInput], {nullable:true})
    OR?: Array<NotificationWhereInput>;
    @Field(() => [NotificationWhereInput], {nullable:true})
    NOT?: Array<NotificationWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    userId?: InstanceType<typeof StringFilter>;
    @Field(() => EnumNotificationTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumNotificationTypeFilter>;
    @Field(() => JsonFilter, {nullable:true})
    payload?: InstanceType<typeof JsonFilter>;
    @Field(() => StringFilter, {nullable:true})
    title?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    body?: InstanceType<typeof StringFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeNullableFilter, {nullable:true})
    expiresAt?: InstanceType<typeof DateTimeNullableFilter>;
    @Field(() => BoolFilter, {nullable:true})
    isRead?: InstanceType<typeof BoolFilter>;
}

@InputType()
export class NotificationWhereInput {
    @Field(() => [NotificationWhereInput], {nullable:true})
    AND?: Array<NotificationWhereInput>;
    @Field(() => [NotificationWhereInput], {nullable:true})
    OR?: Array<NotificationWhereInput>;
    @Field(() => [NotificationWhereInput], {nullable:true})
    NOT?: Array<NotificationWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    userId?: InstanceType<typeof StringFilter>;
    @Field(() => EnumNotificationTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumNotificationTypeFilter>;
    @Field(() => JsonFilter, {nullable:true})
    payload?: InstanceType<typeof JsonFilter>;
    @Field(() => StringFilter, {nullable:true})
    title?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    body?: InstanceType<typeof StringFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeNullableFilter, {nullable:true})
    expiresAt?: InstanceType<typeof DateTimeNullableFilter>;
    @Field(() => BoolFilter, {nullable:true})
    isRead?: InstanceType<typeof BoolFilter>;
}

@ObjectType()
export class Notification {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => NotificationType, {nullable:false})
    type!: `${NotificationType}`;
    @Field(() => GraphQLJSON, {nullable:false})
    payload!: any;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => String, {nullable:false})
    body!: string;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
    @Field(() => Date, {nullable:true})
    expiresAt!: Date | null;
    @Field(() => Boolean, {defaultValue:false,nullable:false})
    isRead!: boolean;
}

@ArgsType()
export class UpdateManyNotificationArgs {
    @Field(() => NotificationUpdateManyMutationInput, {nullable:false})
    @Type(() => NotificationUpdateManyMutationInput)
    data!: InstanceType<typeof NotificationUpdateManyMutationInput>;
    @Field(() => NotificationWhereInput, {nullable:true})
    @Type(() => NotificationWhereInput)
    where?: InstanceType<typeof NotificationWhereInput>;
}

@ArgsType()
export class UpdateOneNotificationArgs {
    @Field(() => NotificationUpdateInput, {nullable:false})
    @Type(() => NotificationUpdateInput)
    data!: InstanceType<typeof NotificationUpdateInput>;
    @Field(() => NotificationWhereUniqueInput, {nullable:false})
    @Type(() => NotificationWhereUniqueInput)
    where!: Prisma.AtLeast<NotificationWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpsertOneNotificationArgs {
    @Field(() => NotificationWhereUniqueInput, {nullable:false})
    @Type(() => NotificationWhereUniqueInput)
    where!: Prisma.AtLeast<NotificationWhereUniqueInput, 'id'>;
    @Field(() => NotificationCreateInput, {nullable:false})
    @Type(() => NotificationCreateInput)
    create!: InstanceType<typeof NotificationCreateInput>;
    @Field(() => NotificationUpdateInput, {nullable:false})
    @Type(() => NotificationUpdateInput)
    update!: InstanceType<typeof NotificationUpdateInput>;
}

@ArgsType()
export class CreateManyNotificationPayloadsArgs {
    @Field(() => [NotificationPayloadsCreateManyInput], {nullable:false})
    @Type(() => NotificationPayloadsCreateManyInput)
    data!: Array<NotificationPayloadsCreateManyInput>;
}

@ArgsType()
export class CreateOneNotificationPayloadsArgs {
    @Field(() => NotificationPayloadsCreateInput, {nullable:false})
    @Type(() => NotificationPayloadsCreateInput)
    data!: InstanceType<typeof NotificationPayloadsCreateInput>;
}

@ArgsType()
export class DeleteManyNotificationPayloadsArgs {
    @Field(() => NotificationPayloadsWhereInput, {nullable:true})
    @Type(() => NotificationPayloadsWhereInput)
    where?: InstanceType<typeof NotificationPayloadsWhereInput>;
}

@ArgsType()
export class DeleteOneNotificationPayloadsArgs {
    @Field(() => NotificationPayloadsWhereUniqueInput, {nullable:false})
    @Type(() => NotificationPayloadsWhereUniqueInput)
    where!: Prisma.AtLeast<NotificationPayloadsWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindFirstNotificationPayloadsOrThrowArgs {
    @Field(() => NotificationPayloadsWhereInput, {nullable:true})
    @Type(() => NotificationPayloadsWhereInput)
    where?: InstanceType<typeof NotificationPayloadsWhereInput>;
    @Field(() => [NotificationPayloadsOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<NotificationPayloadsOrderByWithRelationInput>;
    @Field(() => NotificationPayloadsWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<NotificationPayloadsWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [NotificationPayloadsScalarFieldEnum], {nullable:true})
    distinct?: Array<`${NotificationPayloadsScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstNotificationPayloadsArgs {
    @Field(() => NotificationPayloadsWhereInput, {nullable:true})
    @Type(() => NotificationPayloadsWhereInput)
    where?: InstanceType<typeof NotificationPayloadsWhereInput>;
    @Field(() => [NotificationPayloadsOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<NotificationPayloadsOrderByWithRelationInput>;
    @Field(() => NotificationPayloadsWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<NotificationPayloadsWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [NotificationPayloadsScalarFieldEnum], {nullable:true})
    distinct?: Array<`${NotificationPayloadsScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyNotificationPayloadsArgs {
    @Field(() => NotificationPayloadsWhereInput, {nullable:true})
    @Type(() => NotificationPayloadsWhereInput)
    where?: InstanceType<typeof NotificationPayloadsWhereInput>;
    @Field(() => [NotificationPayloadsOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<NotificationPayloadsOrderByWithRelationInput>;
    @Field(() => NotificationPayloadsWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<NotificationPayloadsWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [NotificationPayloadsScalarFieldEnum], {nullable:true})
    distinct?: Array<`${NotificationPayloadsScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniqueNotificationPayloadsOrThrowArgs {
    @Field(() => NotificationPayloadsWhereUniqueInput, {nullable:false})
    @Type(() => NotificationPayloadsWhereUniqueInput)
    where!: Prisma.AtLeast<NotificationPayloadsWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindUniqueNotificationPayloadsArgs {
    @Field(() => NotificationPayloadsWhereUniqueInput, {nullable:false})
    @Type(() => NotificationPayloadsWhereUniqueInput)
    where!: Prisma.AtLeast<NotificationPayloadsWhereUniqueInput, 'id'>;
}

@ArgsType()
export class NotificationPayloadsAggregateArgs {
    @Field(() => NotificationPayloadsWhereInput, {nullable:true})
    @Type(() => NotificationPayloadsWhereInput)
    where?: InstanceType<typeof NotificationPayloadsWhereInput>;
    @Field(() => [NotificationPayloadsOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<NotificationPayloadsOrderByWithRelationInput>;
    @Field(() => NotificationPayloadsWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<NotificationPayloadsWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class NotificationPayloadsCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
}

@InputType()
export class NotificationPayloadsCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => OfferNotificationPayloadCreateEnvelopeInput, {nullable:false})
    offer!: InstanceType<typeof OfferNotificationPayloadCreateEnvelopeInput>;
    @Field(() => OrderNotificationPayloadCreateEnvelopeInput, {nullable:false})
    order!: InstanceType<typeof OrderNotificationPayloadCreateEnvelopeInput>;
    @Field(() => PayoutNotificationPayloadCreateEnvelopeInput, {nullable:false})
    payout!: InstanceType<typeof PayoutNotificationPayloadCreateEnvelopeInput>;
    @Field(() => SystemNotificationPayloadCreateEnvelopeInput, {nullable:false})
    system!: InstanceType<typeof SystemNotificationPayloadCreateEnvelopeInput>;
    @Field(() => RentalNotificationPayloadCreateEnvelopeInput, {nullable:false})
    rental!: InstanceType<typeof RentalNotificationPayloadCreateEnvelopeInput>;
    @Field(() => CampusChatReplyNotficationPayloadCreateEnvelopeInput, {nullable:false})
    campusChatReply!: InstanceType<typeof CampusChatReplyNotficationPayloadCreateEnvelopeInput>;
}

@InputType()
export class NotificationPayloadsCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => OfferNotificationPayloadCreateEnvelopeInput, {nullable:false})
    offer!: InstanceType<typeof OfferNotificationPayloadCreateEnvelopeInput>;
    @Field(() => OrderNotificationPayloadCreateEnvelopeInput, {nullable:false})
    order!: InstanceType<typeof OrderNotificationPayloadCreateEnvelopeInput>;
    @Field(() => PayoutNotificationPayloadCreateEnvelopeInput, {nullable:false})
    payout!: InstanceType<typeof PayoutNotificationPayloadCreateEnvelopeInput>;
    @Field(() => SystemNotificationPayloadCreateEnvelopeInput, {nullable:false})
    system!: InstanceType<typeof SystemNotificationPayloadCreateEnvelopeInput>;
    @Field(() => RentalNotificationPayloadCreateEnvelopeInput, {nullable:false})
    rental!: InstanceType<typeof RentalNotificationPayloadCreateEnvelopeInput>;
    @Field(() => CampusChatReplyNotficationPayloadCreateEnvelopeInput, {nullable:false})
    campusChatReply!: InstanceType<typeof CampusChatReplyNotficationPayloadCreateEnvelopeInput>;
}

@ArgsType()
export class NotificationPayloadsGroupByArgs {
    @Field(() => NotificationPayloadsWhereInput, {nullable:true})
    @Type(() => NotificationPayloadsWhereInput)
    where?: InstanceType<typeof NotificationPayloadsWhereInput>;
    @Field(() => [NotificationPayloadsOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<NotificationPayloadsOrderByWithAggregationInput>;
    @Field(() => [NotificationPayloadsScalarFieldEnum], {nullable:false})
    by!: Array<`${NotificationPayloadsScalarFieldEnum}`>;
    @Field(() => NotificationPayloadsScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof NotificationPayloadsScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class NotificationPayloadsMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
}

@InputType()
export class NotificationPayloadsMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
}

@InputType()
export class NotificationPayloadsOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => NotificationPayloadsCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof NotificationPayloadsCountOrderByAggregateInput>;
    @Field(() => NotificationPayloadsMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof NotificationPayloadsMaxOrderByAggregateInput>;
    @Field(() => NotificationPayloadsMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof NotificationPayloadsMinOrderByAggregateInput>;
}

@InputType()
export class NotificationPayloadsOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => OfferNotificationPayloadOrderByInput, {nullable:true})
    offer?: InstanceType<typeof OfferNotificationPayloadOrderByInput>;
    @Field(() => OrderNotificationPayloadOrderByInput, {nullable:true})
    order?: InstanceType<typeof OrderNotificationPayloadOrderByInput>;
    @Field(() => PayoutNotificationPayloadOrderByInput, {nullable:true})
    payout?: InstanceType<typeof PayoutNotificationPayloadOrderByInput>;
    @Field(() => SystemNotificationPayloadOrderByInput, {nullable:true})
    system?: InstanceType<typeof SystemNotificationPayloadOrderByInput>;
    @Field(() => RentalNotificationPayloadOrderByInput, {nullable:true})
    rental?: InstanceType<typeof RentalNotificationPayloadOrderByInput>;
    @Field(() => CampusChatReplyNotficationPayloadOrderByInput, {nullable:true})
    campusChatReply?: InstanceType<typeof CampusChatReplyNotficationPayloadOrderByInput>;
}

@InputType()
export class NotificationPayloadsScalarWhereWithAggregatesInput {
    @Field(() => [NotificationPayloadsScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<NotificationPayloadsScalarWhereWithAggregatesInput>;
    @Field(() => [NotificationPayloadsScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<NotificationPayloadsScalarWhereWithAggregatesInput>;
    @Field(() => [NotificationPayloadsScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<NotificationPayloadsScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
}

@InputType()
export class NotificationPayloadsUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => OfferNotificationPayloadCreateEnvelopeInput, {nullable:false})
    offer!: InstanceType<typeof OfferNotificationPayloadCreateEnvelopeInput>;
    @Field(() => OrderNotificationPayloadCreateEnvelopeInput, {nullable:false})
    order!: InstanceType<typeof OrderNotificationPayloadCreateEnvelopeInput>;
    @Field(() => PayoutNotificationPayloadCreateEnvelopeInput, {nullable:false})
    payout!: InstanceType<typeof PayoutNotificationPayloadCreateEnvelopeInput>;
    @Field(() => SystemNotificationPayloadCreateEnvelopeInput, {nullable:false})
    system!: InstanceType<typeof SystemNotificationPayloadCreateEnvelopeInput>;
    @Field(() => RentalNotificationPayloadCreateEnvelopeInput, {nullable:false})
    rental!: InstanceType<typeof RentalNotificationPayloadCreateEnvelopeInput>;
    @Field(() => CampusChatReplyNotficationPayloadCreateEnvelopeInput, {nullable:false})
    campusChatReply!: InstanceType<typeof CampusChatReplyNotficationPayloadCreateEnvelopeInput>;
}

@InputType()
export class NotificationPayloadsUncheckedUpdateManyInput {
    @Field(() => OfferNotificationPayloadUpdateEnvelopeInput, {nullable:true})
    offer?: InstanceType<typeof OfferNotificationPayloadUpdateEnvelopeInput>;
    @Field(() => OrderNotificationPayloadUpdateEnvelopeInput, {nullable:true})
    order?: InstanceType<typeof OrderNotificationPayloadUpdateEnvelopeInput>;
    @Field(() => PayoutNotificationPayloadUpdateEnvelopeInput, {nullable:true})
    payout?: InstanceType<typeof PayoutNotificationPayloadUpdateEnvelopeInput>;
    @Field(() => SystemNotificationPayloadUpdateEnvelopeInput, {nullable:true})
    system?: InstanceType<typeof SystemNotificationPayloadUpdateEnvelopeInput>;
    @Field(() => RentalNotificationPayloadUpdateEnvelopeInput, {nullable:true})
    rental?: InstanceType<typeof RentalNotificationPayloadUpdateEnvelopeInput>;
    @Field(() => CampusChatReplyNotficationPayloadUpdateEnvelopeInput, {nullable:true})
    campusChatReply?: InstanceType<typeof CampusChatReplyNotficationPayloadUpdateEnvelopeInput>;
}

@InputType()
export class NotificationPayloadsUncheckedUpdateInput {
    @Field(() => OfferNotificationPayloadUpdateEnvelopeInput, {nullable:true})
    offer?: InstanceType<typeof OfferNotificationPayloadUpdateEnvelopeInput>;
    @Field(() => OrderNotificationPayloadUpdateEnvelopeInput, {nullable:true})
    order?: InstanceType<typeof OrderNotificationPayloadUpdateEnvelopeInput>;
    @Field(() => PayoutNotificationPayloadUpdateEnvelopeInput, {nullable:true})
    payout?: InstanceType<typeof PayoutNotificationPayloadUpdateEnvelopeInput>;
    @Field(() => SystemNotificationPayloadUpdateEnvelopeInput, {nullable:true})
    system?: InstanceType<typeof SystemNotificationPayloadUpdateEnvelopeInput>;
    @Field(() => RentalNotificationPayloadUpdateEnvelopeInput, {nullable:true})
    rental?: InstanceType<typeof RentalNotificationPayloadUpdateEnvelopeInput>;
    @Field(() => CampusChatReplyNotficationPayloadUpdateEnvelopeInput, {nullable:true})
    campusChatReply?: InstanceType<typeof CampusChatReplyNotficationPayloadUpdateEnvelopeInput>;
}

@InputType()
export class NotificationPayloadsUpdateManyMutationInput {
    @Field(() => OfferNotificationPayloadUpdateEnvelopeInput, {nullable:true})
    offer?: InstanceType<typeof OfferNotificationPayloadUpdateEnvelopeInput>;
    @Field(() => OrderNotificationPayloadUpdateEnvelopeInput, {nullable:true})
    order?: InstanceType<typeof OrderNotificationPayloadUpdateEnvelopeInput>;
    @Field(() => PayoutNotificationPayloadUpdateEnvelopeInput, {nullable:true})
    payout?: InstanceType<typeof PayoutNotificationPayloadUpdateEnvelopeInput>;
    @Field(() => SystemNotificationPayloadUpdateEnvelopeInput, {nullable:true})
    system?: InstanceType<typeof SystemNotificationPayloadUpdateEnvelopeInput>;
    @Field(() => RentalNotificationPayloadUpdateEnvelopeInput, {nullable:true})
    rental?: InstanceType<typeof RentalNotificationPayloadUpdateEnvelopeInput>;
    @Field(() => CampusChatReplyNotficationPayloadUpdateEnvelopeInput, {nullable:true})
    campusChatReply?: InstanceType<typeof CampusChatReplyNotficationPayloadUpdateEnvelopeInput>;
}

@InputType()
export class NotificationPayloadsUpdateInput {
    @Field(() => OfferNotificationPayloadUpdateEnvelopeInput, {nullable:true})
    offer?: InstanceType<typeof OfferNotificationPayloadUpdateEnvelopeInput>;
    @Field(() => OrderNotificationPayloadUpdateEnvelopeInput, {nullable:true})
    order?: InstanceType<typeof OrderNotificationPayloadUpdateEnvelopeInput>;
    @Field(() => PayoutNotificationPayloadUpdateEnvelopeInput, {nullable:true})
    payout?: InstanceType<typeof PayoutNotificationPayloadUpdateEnvelopeInput>;
    @Field(() => SystemNotificationPayloadUpdateEnvelopeInput, {nullable:true})
    system?: InstanceType<typeof SystemNotificationPayloadUpdateEnvelopeInput>;
    @Field(() => RentalNotificationPayloadUpdateEnvelopeInput, {nullable:true})
    rental?: InstanceType<typeof RentalNotificationPayloadUpdateEnvelopeInput>;
    @Field(() => CampusChatReplyNotficationPayloadUpdateEnvelopeInput, {nullable:true})
    campusChatReply?: InstanceType<typeof CampusChatReplyNotficationPayloadUpdateEnvelopeInput>;
}

@InputType()
export class NotificationPayloadsWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => [NotificationPayloadsWhereInput], {nullable:true})
    AND?: Array<NotificationPayloadsWhereInput>;
    @Field(() => [NotificationPayloadsWhereInput], {nullable:true})
    OR?: Array<NotificationPayloadsWhereInput>;
    @Field(() => [NotificationPayloadsWhereInput], {nullable:true})
    NOT?: Array<NotificationPayloadsWhereInput>;
    @Field(() => OfferNotificationPayloadCompositeFilter, {nullable:true})
    offer?: InstanceType<typeof OfferNotificationPayloadCompositeFilter>;
    @Field(() => OrderNotificationPayloadCompositeFilter, {nullable:true})
    order?: InstanceType<typeof OrderNotificationPayloadCompositeFilter>;
    @Field(() => PayoutNotificationPayloadCompositeFilter, {nullable:true})
    payout?: InstanceType<typeof PayoutNotificationPayloadCompositeFilter>;
    @Field(() => SystemNotificationPayloadCompositeFilter, {nullable:true})
    system?: InstanceType<typeof SystemNotificationPayloadCompositeFilter>;
    @Field(() => RentalNotificationPayloadCompositeFilter, {nullable:true})
    rental?: InstanceType<typeof RentalNotificationPayloadCompositeFilter>;
    @Field(() => CampusChatReplyNotficationPayloadCompositeFilter, {nullable:true})
    campusChatReply?: InstanceType<typeof CampusChatReplyNotficationPayloadCompositeFilter>;
}

@InputType()
export class NotificationPayloadsWhereInput {
    @Field(() => [NotificationPayloadsWhereInput], {nullable:true})
    AND?: Array<NotificationPayloadsWhereInput>;
    @Field(() => [NotificationPayloadsWhereInput], {nullable:true})
    OR?: Array<NotificationPayloadsWhereInput>;
    @Field(() => [NotificationPayloadsWhereInput], {nullable:true})
    NOT?: Array<NotificationPayloadsWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => OfferNotificationPayloadCompositeFilter, {nullable:true})
    offer?: InstanceType<typeof OfferNotificationPayloadCompositeFilter>;
    @Field(() => OrderNotificationPayloadCompositeFilter, {nullable:true})
    order?: InstanceType<typeof OrderNotificationPayloadCompositeFilter>;
    @Field(() => PayoutNotificationPayloadCompositeFilter, {nullable:true})
    payout?: InstanceType<typeof PayoutNotificationPayloadCompositeFilter>;
    @Field(() => SystemNotificationPayloadCompositeFilter, {nullable:true})
    system?: InstanceType<typeof SystemNotificationPayloadCompositeFilter>;
    @Field(() => RentalNotificationPayloadCompositeFilter, {nullable:true})
    rental?: InstanceType<typeof RentalNotificationPayloadCompositeFilter>;
    @Field(() => CampusChatReplyNotficationPayloadCompositeFilter, {nullable:true})
    campusChatReply?: InstanceType<typeof CampusChatReplyNotficationPayloadCompositeFilter>;
}

@ObjectType()
export class NotificationPayloads {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => OfferNotificationPayload, {nullable:false})
    offer?: InstanceType<typeof OfferNotificationPayload>;
    @Field(() => OrderNotificationPayload, {nullable:false})
    order?: InstanceType<typeof OrderNotificationPayload>;
    @Field(() => PayoutNotificationPayload, {nullable:false})
    payout?: InstanceType<typeof PayoutNotificationPayload>;
    @Field(() => SystemNotificationPayload, {nullable:false})
    system?: InstanceType<typeof SystemNotificationPayload>;
    @Field(() => RentalNotificationPayload, {nullable:false})
    rental?: InstanceType<typeof RentalNotificationPayload>;
    @Field(() => CampusChatReplyNotficationPayload, {nullable:false})
    campusChatReply?: InstanceType<typeof CampusChatReplyNotficationPayload>;
}

@ArgsType()
export class UpdateManyNotificationPayloadsArgs {
    @Field(() => NotificationPayloadsUpdateManyMutationInput, {nullable:false})
    @Type(() => NotificationPayloadsUpdateManyMutationInput)
    data!: InstanceType<typeof NotificationPayloadsUpdateManyMutationInput>;
    @Field(() => NotificationPayloadsWhereInput, {nullable:true})
    @Type(() => NotificationPayloadsWhereInput)
    where?: InstanceType<typeof NotificationPayloadsWhereInput>;
}

@ArgsType()
export class UpdateOneNotificationPayloadsArgs {
    @Field(() => NotificationPayloadsUpdateInput, {nullable:false})
    @Type(() => NotificationPayloadsUpdateInput)
    data!: InstanceType<typeof NotificationPayloadsUpdateInput>;
    @Field(() => NotificationPayloadsWhereUniqueInput, {nullable:false})
    @Type(() => NotificationPayloadsWhereUniqueInput)
    where!: Prisma.AtLeast<NotificationPayloadsWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpsertOneNotificationPayloadsArgs {
    @Field(() => NotificationPayloadsWhereUniqueInput, {nullable:false})
    @Type(() => NotificationPayloadsWhereUniqueInput)
    where!: Prisma.AtLeast<NotificationPayloadsWhereUniqueInput, 'id'>;
    @Field(() => NotificationPayloadsCreateInput, {nullable:false})
    @Type(() => NotificationPayloadsCreateInput)
    create!: InstanceType<typeof NotificationPayloadsCreateInput>;
    @Field(() => NotificationPayloadsUpdateInput, {nullable:false})
    @Type(() => NotificationPayloadsUpdateInput)
    update!: InstanceType<typeof NotificationPayloadsUpdateInput>;
}

@InputType()
export class OfferNotificationPayloadCreateEnvelopeInput {
    @Field(() => OfferNotificationPayloadCreateInput, {nullable:true})
    @Type(() => OfferNotificationPayloadCreateInput)
    set?: InstanceType<typeof OfferNotificationPayloadCreateInput>;
}

@InputType()
export class OfferNotificationPayloadCreateInput {
    @Field(() => OfferNotificationType, {nullable:false})
    type!: `${OfferNotificationType}`;
    @Field(() => String, {nullable:false})
    conversationId!: string;
    @Field(() => String, {nullable:false})
    otherParticipantFullName!: string;
    @Field(() => String, {nullable:false})
    otherParticipantUserId!: string;
}

@InputType()
export class OfferNotificationPayloadOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    conversationId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    otherParticipantFullName?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    otherParticipantUserId?: `${SortOrder}`;
}

@InputType()
export class OfferNotificationPayloadUpdateEnvelopeInput {
    @Field(() => OfferNotificationPayloadCreateInput, {nullable:true})
    @Type(() => OfferNotificationPayloadCreateInput)
    set?: InstanceType<typeof OfferNotificationPayloadCreateInput>;
    @Field(() => OfferNotificationPayloadUpdateInput, {nullable:true})
    @Type(() => OfferNotificationPayloadUpdateInput)
    update?: InstanceType<typeof OfferNotificationPayloadUpdateInput>;
}

@InputType()
export class OfferNotificationPayloadUpdateInput {
    @Field(() => EnumOfferNotificationTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumOfferNotificationTypeFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    conversationId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    otherParticipantFullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    otherParticipantUserId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}

@InputType()
export class OfferNotificationPayloadWhereInput {
    @Field(() => [OfferNotificationPayloadWhereInput], {nullable:true})
    AND?: Array<OfferNotificationPayloadWhereInput>;
    @Field(() => [OfferNotificationPayloadWhereInput], {nullable:true})
    OR?: Array<OfferNotificationPayloadWhereInput>;
    @Field(() => [OfferNotificationPayloadWhereInput], {nullable:true})
    NOT?: Array<OfferNotificationPayloadWhereInput>;
    @Field(() => EnumOfferNotificationTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumOfferNotificationTypeFilter>;
    @Field(() => StringFilter, {nullable:true})
    conversationId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    otherParticipantFullName?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    otherParticipantUserId?: InstanceType<typeof StringFilter>;
}

@ObjectType()
export class OfferNotificationPayload {
    @Field(() => OfferNotificationType, {nullable:false})
    type!: `${OfferNotificationType}`;
    @Field(() => String, {nullable:false})
    conversationId!: string;
    @Field(() => String, {nullable:false})
    otherParticipantFullName!: string;
    @Field(() => String, {nullable:false})
    otherParticipantUserId!: string;
}

@ArgsType()
export class CreateManyOrderArgs {
    @Field(() => [OrderCreateManyInput], {nullable:false})
    @Type(() => OrderCreateManyInput)
    data!: Array<OrderCreateManyInput>;
}

@ArgsType()
export class CreateOneOrderArgs {
    @Field(() => OrderCreateInput, {nullable:false})
    @Type(() => OrderCreateInput)
    data!: InstanceType<typeof OrderCreateInput>;
}

@ArgsType()
export class DeleteManyOrderArgs {
    @Field(() => OrderWhereInput, {nullable:true})
    @Type(() => OrderWhereInput)
    where?: InstanceType<typeof OrderWhereInput>;
}

@ArgsType()
export class DeleteOneOrderArgs {
    @Field(() => OrderWhereUniqueInput, {nullable:false})
    @Type(() => OrderWhereUniqueInput)
    where!: Prisma.AtLeast<OrderWhereUniqueInput, 'id' | 'paymentId'>;
}

@ArgsType()
export class FindFirstOrderOrThrowArgs {
    @Field(() => OrderWhereInput, {nullable:true})
    @Type(() => OrderWhereInput)
    where?: InstanceType<typeof OrderWhereInput>;
    @Field(() => [OrderOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<OrderOrderByWithRelationInput>;
    @Field(() => OrderWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<OrderWhereUniqueInput, 'id' | 'paymentId'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [OrderScalarFieldEnum], {nullable:true})
    distinct?: Array<`${OrderScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstOrderArgs {
    @Field(() => OrderWhereInput, {nullable:true})
    @Type(() => OrderWhereInput)
    where?: InstanceType<typeof OrderWhereInput>;
    @Field(() => [OrderOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<OrderOrderByWithRelationInput>;
    @Field(() => OrderWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<OrderWhereUniqueInput, 'id' | 'paymentId'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [OrderScalarFieldEnum], {nullable:true})
    distinct?: Array<`${OrderScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyOrderArgs {
    @Field(() => OrderWhereInput, {nullable:true})
    @Type(() => OrderWhereInput)
    where?: InstanceType<typeof OrderWhereInput>;
    @Field(() => [OrderOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<OrderOrderByWithRelationInput>;
    @Field(() => OrderWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<OrderWhereUniqueInput, 'id' | 'paymentId'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [OrderScalarFieldEnum], {nullable:true})
    distinct?: Array<`${OrderScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniqueOrderOrThrowArgs {
    @Field(() => OrderWhereUniqueInput, {nullable:false})
    @Type(() => OrderWhereUniqueInput)
    where!: Prisma.AtLeast<OrderWhereUniqueInput, 'id' | 'paymentId'>;
}

@ArgsType()
export class FindUniqueOrderArgs {
    @Field(() => OrderWhereUniqueInput, {nullable:false})
    @Type(() => OrderWhereUniqueInput)
    where!: Prisma.AtLeast<OrderWhereUniqueInput, 'id' | 'paymentId'>;
}

@ArgsType()
export class OrderAggregateArgs {
    @Field(() => OrderWhereInput, {nullable:true})
    @Type(() => OrderWhereInput)
    where?: InstanceType<typeof OrderWhereInput>;
    @Field(() => [OrderOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<OrderOrderByWithRelationInput>;
    @Field(() => OrderWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<OrderWhereUniqueInput, 'id' | 'paymentId'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class OrderCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    productId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    providerId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    consumerId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    conversationId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    paymentId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    status?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    payload?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class OrderCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    productId!: string;
    @Field(() => ProductListingSnapshotCreateEnvelopeInput, {nullable:false})
    productSnapshot!: InstanceType<typeof ProductListingSnapshotCreateEnvelopeInput>;
    @Field(() => OrderType, {nullable:false})
    type!: `${OrderType}`;
    @Field(() => String, {nullable:false})
    providerId!: string;
    @Field(() => String, {nullable:false})
    consumerId!: string;
    @Field(() => String, {nullable:false})
    conversationId!: string;
    @Field(() => String, {nullable:false})
    paymentId!: string;
    @Field(() => OrderStatus, {nullable:false})
    status!: `${OrderStatus}`;
    @Field(() => RentOrderNullableCreateEnvelopeInput, {nullable:true})
    rentingDetails?: InstanceType<typeof RentOrderNullableCreateEnvelopeInput>;
    @Field(() => ShipmentNullableCreateEnvelopeInput, {nullable:true})
    shipment?: InstanceType<typeof ShipmentNullableCreateEnvelopeInput>;
    @Field(() => GraphQLJSON, {nullable:false})
    payload!: any;
    @Field(() => OrderPayoutCreateEnvelopeInput, {nullable:false})
    payout!: InstanceType<typeof OrderPayoutCreateEnvelopeInput>;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class OrderCreateNestedOneWithoutPaymentInput {
    @Field(() => OrderCreateWithoutPaymentInput, {nullable:true})
    @Type(() => OrderCreateWithoutPaymentInput)
    create?: InstanceType<typeof OrderCreateWithoutPaymentInput>;
    @Field(() => OrderCreateOrConnectWithoutPaymentInput, {nullable:true})
    @Type(() => OrderCreateOrConnectWithoutPaymentInput)
    connectOrCreate?: InstanceType<typeof OrderCreateOrConnectWithoutPaymentInput>;
    @Field(() => OrderWhereUniqueInput, {nullable:true})
    @Type(() => OrderWhereUniqueInput)
    connect?: Prisma.AtLeast<OrderWhereUniqueInput, 'id' | 'paymentId'>;
}

@InputType()
export class OrderCreateNestedOneWithoutSupportTicketsInput {
    @Field(() => OrderCreateWithoutSupportTicketsInput, {nullable:true})
    @Type(() => OrderCreateWithoutSupportTicketsInput)
    create?: InstanceType<typeof OrderCreateWithoutSupportTicketsInput>;
    @Field(() => OrderCreateOrConnectWithoutSupportTicketsInput, {nullable:true})
    @Type(() => OrderCreateOrConnectWithoutSupportTicketsInput)
    connectOrCreate?: InstanceType<typeof OrderCreateOrConnectWithoutSupportTicketsInput>;
    @Field(() => OrderWhereUniqueInput, {nullable:true})
    @Type(() => OrderWhereUniqueInput)
    connect?: Prisma.AtLeast<OrderWhereUniqueInput, 'id' | 'paymentId'>;
}

@InputType()
export class OrderCreateOrConnectWithoutPaymentInput {
    @Field(() => OrderWhereUniqueInput, {nullable:false})
    @Type(() => OrderWhereUniqueInput)
    where!: Prisma.AtLeast<OrderWhereUniqueInput, 'id' | 'paymentId'>;
    @Field(() => OrderCreateWithoutPaymentInput, {nullable:false})
    @Type(() => OrderCreateWithoutPaymentInput)
    create!: InstanceType<typeof OrderCreateWithoutPaymentInput>;
}

@InputType()
export class OrderCreateOrConnectWithoutSupportTicketsInput {
    @Field(() => OrderWhereUniqueInput, {nullable:false})
    @Type(() => OrderWhereUniqueInput)
    where!: Prisma.AtLeast<OrderWhereUniqueInput, 'id' | 'paymentId'>;
    @Field(() => OrderCreateWithoutSupportTicketsInput, {nullable:false})
    @Type(() => OrderCreateWithoutSupportTicketsInput)
    create!: InstanceType<typeof OrderCreateWithoutSupportTicketsInput>;
}

@InputType()
export class OrderCreateWithoutPaymentInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    productId!: string;
    @Field(() => ProductListingSnapshotCreateEnvelopeInput, {nullable:false})
    productSnapshot!: InstanceType<typeof ProductListingSnapshotCreateEnvelopeInput>;
    @Field(() => OrderType, {nullable:false})
    type!: `${OrderType}`;
    @Field(() => String, {nullable:false})
    providerId!: string;
    @Field(() => String, {nullable:false})
    consumerId!: string;
    @Field(() => String, {nullable:false})
    conversationId!: string;
    @Field(() => OrderStatus, {nullable:false})
    status!: `${OrderStatus}`;
    @Field(() => RentOrderNullableCreateEnvelopeInput, {nullable:true})
    rentingDetails?: InstanceType<typeof RentOrderNullableCreateEnvelopeInput>;
    @Field(() => ShipmentNullableCreateEnvelopeInput, {nullable:true})
    shipment?: InstanceType<typeof ShipmentNullableCreateEnvelopeInput>;
    @Field(() => GraphQLJSON, {nullable:false})
    payload!: any;
    @Field(() => OrderPayoutCreateEnvelopeInput, {nullable:false})
    payout!: InstanceType<typeof OrderPayoutCreateEnvelopeInput>;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => SupportTicketCreateNestedManyWithoutConcernedOrderInput, {nullable:true})
    supportTickets?: InstanceType<typeof SupportTicketCreateNestedManyWithoutConcernedOrderInput>;
}

@InputType()
export class OrderCreateWithoutSupportTicketsInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    productId!: string;
    @Field(() => ProductListingSnapshotCreateEnvelopeInput, {nullable:false})
    productSnapshot!: InstanceType<typeof ProductListingSnapshotCreateEnvelopeInput>;
    @Field(() => OrderType, {nullable:false})
    type!: `${OrderType}`;
    @Field(() => String, {nullable:false})
    providerId!: string;
    @Field(() => String, {nullable:false})
    consumerId!: string;
    @Field(() => String, {nullable:false})
    conversationId!: string;
    @Field(() => OrderStatus, {nullable:false})
    status!: `${OrderStatus}`;
    @Field(() => RentOrderNullableCreateEnvelopeInput, {nullable:true})
    rentingDetails?: InstanceType<typeof RentOrderNullableCreateEnvelopeInput>;
    @Field(() => ShipmentNullableCreateEnvelopeInput, {nullable:true})
    shipment?: InstanceType<typeof ShipmentNullableCreateEnvelopeInput>;
    @Field(() => GraphQLJSON, {nullable:false})
    payload!: any;
    @Field(() => OrderPayoutCreateEnvelopeInput, {nullable:false})
    payout!: InstanceType<typeof OrderPayoutCreateEnvelopeInput>;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => PaymentCreateNestedOneWithoutOrderInput, {nullable:true})
    payment?: InstanceType<typeof PaymentCreateNestedOneWithoutOrderInput>;
}

@InputType()
export class OrderCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    productId!: string;
    @Field(() => ProductListingSnapshotCreateEnvelopeInput, {nullable:false})
    productSnapshot!: InstanceType<typeof ProductListingSnapshotCreateEnvelopeInput>;
    @Field(() => OrderType, {nullable:false})
    type!: `${OrderType}`;
    @Field(() => String, {nullable:false})
    providerId!: string;
    @Field(() => String, {nullable:false})
    consumerId!: string;
    @Field(() => String, {nullable:false})
    conversationId!: string;
    @Field(() => OrderStatus, {nullable:false})
    status!: `${OrderStatus}`;
    @Field(() => RentOrderNullableCreateEnvelopeInput, {nullable:true})
    rentingDetails?: InstanceType<typeof RentOrderNullableCreateEnvelopeInput>;
    @Field(() => ShipmentNullableCreateEnvelopeInput, {nullable:true})
    shipment?: InstanceType<typeof ShipmentNullableCreateEnvelopeInput>;
    @Field(() => GraphQLJSON, {nullable:false})
    payload!: any;
    @Field(() => OrderPayoutCreateEnvelopeInput, {nullable:false})
    payout!: InstanceType<typeof OrderPayoutCreateEnvelopeInput>;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => PaymentCreateNestedOneWithoutOrderInput, {nullable:true})
    payment?: InstanceType<typeof PaymentCreateNestedOneWithoutOrderInput>;
    @Field(() => SupportTicketCreateNestedManyWithoutConcernedOrderInput, {nullable:true})
    supportTickets?: InstanceType<typeof SupportTicketCreateNestedManyWithoutConcernedOrderInput>;
}

@ArgsType()
export class OrderGroupByArgs {
    @Field(() => OrderWhereInput, {nullable:true})
    @Type(() => OrderWhereInput)
    where?: InstanceType<typeof OrderWhereInput>;
    @Field(() => [OrderOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<OrderOrderByWithAggregationInput>;
    @Field(() => [OrderScalarFieldEnum], {nullable:false})
    by!: Array<`${OrderScalarFieldEnum}`>;
    @Field(() => OrderScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof OrderScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class OrderMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    productId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    providerId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    consumerId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    conversationId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    paymentId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    status?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class OrderMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    productId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    providerId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    consumerId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    conversationId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    paymentId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    status?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class OrderNullableRelationFilter {
    @Field(() => OrderWhereInput, {nullable:true})
    is?: InstanceType<typeof OrderWhereInput>;
    @Field(() => OrderWhereInput, {nullable:true})
    isNot?: InstanceType<typeof OrderWhereInput>;
}

@InputType()
export class OrderOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    productId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    providerId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    consumerId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    conversationId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    paymentId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    status?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    payload?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => OrderCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof OrderCountOrderByAggregateInput>;
    @Field(() => OrderMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof OrderMaxOrderByAggregateInput>;
    @Field(() => OrderMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof OrderMinOrderByAggregateInput>;
}

@InputType()
export class OrderOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    productId?: `${SortOrder}`;
    @Field(() => ProductListingSnapshotOrderByInput, {nullable:true})
    productSnapshot?: InstanceType<typeof ProductListingSnapshotOrderByInput>;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    providerId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    consumerId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    conversationId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    paymentId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    status?: `${SortOrder}`;
    @Field(() => RentOrderOrderByInput, {nullable:true})
    rentingDetails?: InstanceType<typeof RentOrderOrderByInput>;
    @Field(() => ShipmentOrderByInput, {nullable:true})
    shipment?: InstanceType<typeof ShipmentOrderByInput>;
    @Field(() => SortOrder, {nullable:true})
    payload?: `${SortOrder}`;
    @Field(() => OrderPayoutOrderByInput, {nullable:true})
    payout?: InstanceType<typeof OrderPayoutOrderByInput>;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => PaymentOrderByWithRelationInput, {nullable:true})
    payment?: InstanceType<typeof PaymentOrderByWithRelationInput>;
    @Field(() => SupportTicketOrderByRelationAggregateInput, {nullable:true})
    supportTickets?: InstanceType<typeof SupportTicketOrderByRelationAggregateInput>;
}

@InputType()
export class OrderScalarWhereWithAggregatesInput {
    @Field(() => [OrderScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<OrderScalarWhereWithAggregatesInput>;
    @Field(() => [OrderScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<OrderScalarWhereWithAggregatesInput>;
    @Field(() => [OrderScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<OrderScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    productId?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => EnumOrderTypeWithAggregatesFilter, {nullable:true})
    type?: InstanceType<typeof EnumOrderTypeWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    providerId?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    consumerId?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    conversationId?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    paymentId?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => EnumOrderStatusWithAggregatesFilter, {nullable:true})
    status?: InstanceType<typeof EnumOrderStatusWithAggregatesFilter>;
    @Field(() => JsonWithAggregatesFilter, {nullable:true})
    payload?: InstanceType<typeof JsonWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
}

@InputType()
export class OrderUncheckedCreateNestedOneWithoutPaymentInput {
    @Field(() => OrderCreateWithoutPaymentInput, {nullable:true})
    @Type(() => OrderCreateWithoutPaymentInput)
    create?: InstanceType<typeof OrderCreateWithoutPaymentInput>;
    @Field(() => OrderCreateOrConnectWithoutPaymentInput, {nullable:true})
    @Type(() => OrderCreateOrConnectWithoutPaymentInput)
    connectOrCreate?: InstanceType<typeof OrderCreateOrConnectWithoutPaymentInput>;
    @Field(() => OrderWhereUniqueInput, {nullable:true})
    @Type(() => OrderWhereUniqueInput)
    connect?: Prisma.AtLeast<OrderWhereUniqueInput, 'id' | 'paymentId'>;
}

@InputType()
export class OrderUncheckedCreateWithoutPaymentInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    productId!: string;
    @Field(() => ProductListingSnapshotCreateEnvelopeInput, {nullable:false})
    productSnapshot!: InstanceType<typeof ProductListingSnapshotCreateEnvelopeInput>;
    @Field(() => OrderType, {nullable:false})
    type!: `${OrderType}`;
    @Field(() => String, {nullable:false})
    providerId!: string;
    @Field(() => String, {nullable:false})
    consumerId!: string;
    @Field(() => String, {nullable:false})
    conversationId!: string;
    @Field(() => OrderStatus, {nullable:false})
    status!: `${OrderStatus}`;
    @Field(() => RentOrderNullableCreateEnvelopeInput, {nullable:true})
    rentingDetails?: InstanceType<typeof RentOrderNullableCreateEnvelopeInput>;
    @Field(() => ShipmentNullableCreateEnvelopeInput, {nullable:true})
    shipment?: InstanceType<typeof ShipmentNullableCreateEnvelopeInput>;
    @Field(() => GraphQLJSON, {nullable:false})
    payload!: any;
    @Field(() => OrderPayoutCreateEnvelopeInput, {nullable:false})
    payout!: InstanceType<typeof OrderPayoutCreateEnvelopeInput>;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => SupportTicketUncheckedCreateNestedManyWithoutConcernedOrderInput, {nullable:true})
    supportTickets?: InstanceType<typeof SupportTicketUncheckedCreateNestedManyWithoutConcernedOrderInput>;
}

@InputType()
export class OrderUncheckedCreateWithoutSupportTicketsInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    productId!: string;
    @Field(() => ProductListingSnapshotCreateEnvelopeInput, {nullable:false})
    productSnapshot!: InstanceType<typeof ProductListingSnapshotCreateEnvelopeInput>;
    @Field(() => OrderType, {nullable:false})
    type!: `${OrderType}`;
    @Field(() => String, {nullable:false})
    providerId!: string;
    @Field(() => String, {nullable:false})
    consumerId!: string;
    @Field(() => String, {nullable:false})
    conversationId!: string;
    @Field(() => String, {nullable:false})
    paymentId!: string;
    @Field(() => OrderStatus, {nullable:false})
    status!: `${OrderStatus}`;
    @Field(() => RentOrderNullableCreateEnvelopeInput, {nullable:true})
    rentingDetails?: InstanceType<typeof RentOrderNullableCreateEnvelopeInput>;
    @Field(() => ShipmentNullableCreateEnvelopeInput, {nullable:true})
    shipment?: InstanceType<typeof ShipmentNullableCreateEnvelopeInput>;
    @Field(() => GraphQLJSON, {nullable:false})
    payload!: any;
    @Field(() => OrderPayoutCreateEnvelopeInput, {nullable:false})
    payout!: InstanceType<typeof OrderPayoutCreateEnvelopeInput>;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class OrderUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    productId!: string;
    @Field(() => ProductListingSnapshotCreateEnvelopeInput, {nullable:false})
    productSnapshot!: InstanceType<typeof ProductListingSnapshotCreateEnvelopeInput>;
    @Field(() => OrderType, {nullable:false})
    type!: `${OrderType}`;
    @Field(() => String, {nullable:false})
    providerId!: string;
    @Field(() => String, {nullable:false})
    consumerId!: string;
    @Field(() => String, {nullable:false})
    conversationId!: string;
    @Field(() => String, {nullable:false})
    paymentId!: string;
    @Field(() => OrderStatus, {nullable:false})
    status!: `${OrderStatus}`;
    @Field(() => RentOrderNullableCreateEnvelopeInput, {nullable:true})
    rentingDetails?: InstanceType<typeof RentOrderNullableCreateEnvelopeInput>;
    @Field(() => ShipmentNullableCreateEnvelopeInput, {nullable:true})
    shipment?: InstanceType<typeof ShipmentNullableCreateEnvelopeInput>;
    @Field(() => GraphQLJSON, {nullable:false})
    payload!: any;
    @Field(() => OrderPayoutCreateEnvelopeInput, {nullable:false})
    payout!: InstanceType<typeof OrderPayoutCreateEnvelopeInput>;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => SupportTicketUncheckedCreateNestedManyWithoutConcernedOrderInput, {nullable:true})
    supportTickets?: InstanceType<typeof SupportTicketUncheckedCreateNestedManyWithoutConcernedOrderInput>;
}

@InputType()
export class OrderUncheckedUpdateManyInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    productId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => ProductListingSnapshotUpdateEnvelopeInput, {nullable:true})
    productSnapshot?: InstanceType<typeof ProductListingSnapshotUpdateEnvelopeInput>;
    @Field(() => EnumOrderTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumOrderTypeFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    providerId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    consumerId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    conversationId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    paymentId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumOrderStatusFieldUpdateOperationsInput, {nullable:true})
    status?: InstanceType<typeof EnumOrderStatusFieldUpdateOperationsInput>;
    @Field(() => RentOrderNullableUpdateEnvelopeInput, {nullable:true})
    rentingDetails?: InstanceType<typeof RentOrderNullableUpdateEnvelopeInput>;
    @Field(() => ShipmentNullableUpdateEnvelopeInput, {nullable:true})
    shipment?: InstanceType<typeof ShipmentNullableUpdateEnvelopeInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    payload?: any;
    @Field(() => OrderPayoutUpdateEnvelopeInput, {nullable:true})
    payout?: InstanceType<typeof OrderPayoutUpdateEnvelopeInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class OrderUncheckedUpdateOneWithoutPaymentNestedInput {
    @Field(() => OrderCreateWithoutPaymentInput, {nullable:true})
    @Type(() => OrderCreateWithoutPaymentInput)
    create?: InstanceType<typeof OrderCreateWithoutPaymentInput>;
    @Field(() => OrderCreateOrConnectWithoutPaymentInput, {nullable:true})
    @Type(() => OrderCreateOrConnectWithoutPaymentInput)
    connectOrCreate?: InstanceType<typeof OrderCreateOrConnectWithoutPaymentInput>;
    @Field(() => OrderUpsertWithoutPaymentInput, {nullable:true})
    @Type(() => OrderUpsertWithoutPaymentInput)
    upsert?: InstanceType<typeof OrderUpsertWithoutPaymentInput>;
    @Field(() => OrderWhereInput, {nullable:true})
    @Type(() => OrderWhereInput)
    disconnect?: InstanceType<typeof OrderWhereInput>;
    @Field(() => OrderWhereInput, {nullable:true})
    @Type(() => OrderWhereInput)
    delete?: InstanceType<typeof OrderWhereInput>;
    @Field(() => OrderWhereUniqueInput, {nullable:true})
    @Type(() => OrderWhereUniqueInput)
    connect?: Prisma.AtLeast<OrderWhereUniqueInput, 'id' | 'paymentId'>;
    @Field(() => OrderUpdateToOneWithWhereWithoutPaymentInput, {nullable:true})
    @Type(() => OrderUpdateToOneWithWhereWithoutPaymentInput)
    update?: InstanceType<typeof OrderUpdateToOneWithWhereWithoutPaymentInput>;
}

@InputType()
export class OrderUncheckedUpdateWithoutPaymentInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    productId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => ProductListingSnapshotUpdateEnvelopeInput, {nullable:true})
    productSnapshot?: InstanceType<typeof ProductListingSnapshotUpdateEnvelopeInput>;
    @Field(() => EnumOrderTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumOrderTypeFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    providerId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    consumerId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    conversationId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumOrderStatusFieldUpdateOperationsInput, {nullable:true})
    status?: InstanceType<typeof EnumOrderStatusFieldUpdateOperationsInput>;
    @Field(() => RentOrderNullableUpdateEnvelopeInput, {nullable:true})
    rentingDetails?: InstanceType<typeof RentOrderNullableUpdateEnvelopeInput>;
    @Field(() => ShipmentNullableUpdateEnvelopeInput, {nullable:true})
    shipment?: InstanceType<typeof ShipmentNullableUpdateEnvelopeInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    payload?: any;
    @Field(() => OrderPayoutUpdateEnvelopeInput, {nullable:true})
    payout?: InstanceType<typeof OrderPayoutUpdateEnvelopeInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => SupportTicketUncheckedUpdateManyWithoutConcernedOrderNestedInput, {nullable:true})
    supportTickets?: InstanceType<typeof SupportTicketUncheckedUpdateManyWithoutConcernedOrderNestedInput>;
}

@InputType()
export class OrderUncheckedUpdateWithoutSupportTicketsInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    productId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => ProductListingSnapshotUpdateEnvelopeInput, {nullable:true})
    productSnapshot?: InstanceType<typeof ProductListingSnapshotUpdateEnvelopeInput>;
    @Field(() => EnumOrderTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumOrderTypeFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    providerId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    consumerId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    conversationId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    paymentId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumOrderStatusFieldUpdateOperationsInput, {nullable:true})
    status?: InstanceType<typeof EnumOrderStatusFieldUpdateOperationsInput>;
    @Field(() => RentOrderNullableUpdateEnvelopeInput, {nullable:true})
    rentingDetails?: InstanceType<typeof RentOrderNullableUpdateEnvelopeInput>;
    @Field(() => ShipmentNullableUpdateEnvelopeInput, {nullable:true})
    shipment?: InstanceType<typeof ShipmentNullableUpdateEnvelopeInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    payload?: any;
    @Field(() => OrderPayoutUpdateEnvelopeInput, {nullable:true})
    payout?: InstanceType<typeof OrderPayoutUpdateEnvelopeInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class OrderUncheckedUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    productId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => ProductListingSnapshotUpdateEnvelopeInput, {nullable:true})
    productSnapshot?: InstanceType<typeof ProductListingSnapshotUpdateEnvelopeInput>;
    @Field(() => EnumOrderTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumOrderTypeFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    providerId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    consumerId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    conversationId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    paymentId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumOrderStatusFieldUpdateOperationsInput, {nullable:true})
    status?: InstanceType<typeof EnumOrderStatusFieldUpdateOperationsInput>;
    @Field(() => RentOrderNullableUpdateEnvelopeInput, {nullable:true})
    rentingDetails?: InstanceType<typeof RentOrderNullableUpdateEnvelopeInput>;
    @Field(() => ShipmentNullableUpdateEnvelopeInput, {nullable:true})
    shipment?: InstanceType<typeof ShipmentNullableUpdateEnvelopeInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    payload?: any;
    @Field(() => OrderPayoutUpdateEnvelopeInput, {nullable:true})
    payout?: InstanceType<typeof OrderPayoutUpdateEnvelopeInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => SupportTicketUncheckedUpdateManyWithoutConcernedOrderNestedInput, {nullable:true})
    supportTickets?: InstanceType<typeof SupportTicketUncheckedUpdateManyWithoutConcernedOrderNestedInput>;
}

@InputType()
export class OrderUpdateManyMutationInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    productId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => ProductListingSnapshotUpdateEnvelopeInput, {nullable:true})
    productSnapshot?: InstanceType<typeof ProductListingSnapshotUpdateEnvelopeInput>;
    @Field(() => EnumOrderTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumOrderTypeFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    providerId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    consumerId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    conversationId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumOrderStatusFieldUpdateOperationsInput, {nullable:true})
    status?: InstanceType<typeof EnumOrderStatusFieldUpdateOperationsInput>;
    @Field(() => RentOrderNullableUpdateEnvelopeInput, {nullable:true})
    rentingDetails?: InstanceType<typeof RentOrderNullableUpdateEnvelopeInput>;
    @Field(() => ShipmentNullableUpdateEnvelopeInput, {nullable:true})
    shipment?: InstanceType<typeof ShipmentNullableUpdateEnvelopeInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    payload?: any;
    @Field(() => OrderPayoutUpdateEnvelopeInput, {nullable:true})
    payout?: InstanceType<typeof OrderPayoutUpdateEnvelopeInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class OrderUpdateOneWithoutPaymentNestedInput {
    @Field(() => OrderCreateWithoutPaymentInput, {nullable:true})
    @Type(() => OrderCreateWithoutPaymentInput)
    create?: InstanceType<typeof OrderCreateWithoutPaymentInput>;
    @Field(() => OrderCreateOrConnectWithoutPaymentInput, {nullable:true})
    @Type(() => OrderCreateOrConnectWithoutPaymentInput)
    connectOrCreate?: InstanceType<typeof OrderCreateOrConnectWithoutPaymentInput>;
    @Field(() => OrderUpsertWithoutPaymentInput, {nullable:true})
    @Type(() => OrderUpsertWithoutPaymentInput)
    upsert?: InstanceType<typeof OrderUpsertWithoutPaymentInput>;
    @Field(() => OrderWhereInput, {nullable:true})
    @Type(() => OrderWhereInput)
    disconnect?: InstanceType<typeof OrderWhereInput>;
    @Field(() => OrderWhereInput, {nullable:true})
    @Type(() => OrderWhereInput)
    delete?: InstanceType<typeof OrderWhereInput>;
    @Field(() => OrderWhereUniqueInput, {nullable:true})
    @Type(() => OrderWhereUniqueInput)
    connect?: Prisma.AtLeast<OrderWhereUniqueInput, 'id' | 'paymentId'>;
    @Field(() => OrderUpdateToOneWithWhereWithoutPaymentInput, {nullable:true})
    @Type(() => OrderUpdateToOneWithWhereWithoutPaymentInput)
    update?: InstanceType<typeof OrderUpdateToOneWithWhereWithoutPaymentInput>;
}

@InputType()
export class OrderUpdateOneWithoutSupportTicketsNestedInput {
    @Field(() => OrderCreateWithoutSupportTicketsInput, {nullable:true})
    @Type(() => OrderCreateWithoutSupportTicketsInput)
    create?: InstanceType<typeof OrderCreateWithoutSupportTicketsInput>;
    @Field(() => OrderCreateOrConnectWithoutSupportTicketsInput, {nullable:true})
    @Type(() => OrderCreateOrConnectWithoutSupportTicketsInput)
    connectOrCreate?: InstanceType<typeof OrderCreateOrConnectWithoutSupportTicketsInput>;
    @Field(() => OrderUpsertWithoutSupportTicketsInput, {nullable:true})
    @Type(() => OrderUpsertWithoutSupportTicketsInput)
    upsert?: InstanceType<typeof OrderUpsertWithoutSupportTicketsInput>;
    @Field(() => Boolean, {nullable:true})
    disconnect?: boolean;
    @Field(() => OrderWhereInput, {nullable:true})
    @Type(() => OrderWhereInput)
    delete?: InstanceType<typeof OrderWhereInput>;
    @Field(() => OrderWhereUniqueInput, {nullable:true})
    @Type(() => OrderWhereUniqueInput)
    connect?: Prisma.AtLeast<OrderWhereUniqueInput, 'id' | 'paymentId'>;
    @Field(() => OrderUpdateToOneWithWhereWithoutSupportTicketsInput, {nullable:true})
    @Type(() => OrderUpdateToOneWithWhereWithoutSupportTicketsInput)
    update?: InstanceType<typeof OrderUpdateToOneWithWhereWithoutSupportTicketsInput>;
}

@InputType()
export class OrderUpdateSystemMessageCompositeFilter {
    @Field(() => OrderUpdateSystemMessageObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof OrderUpdateSystemMessageObjectEqualityInput>;
    @Field(() => OrderUpdateSystemMessageWhereInput, {nullable:true})
    is?: InstanceType<typeof OrderUpdateSystemMessageWhereInput>;
    @Field(() => OrderUpdateSystemMessageWhereInput, {nullable:true})
    isNot?: InstanceType<typeof OrderUpdateSystemMessageWhereInput>;
}

@InputType()
export class OrderUpdateSystemMessageObjectEqualityInput {
    @Field(() => SystemIcons, {nullable:false})
    icon1!: `${SystemIcons}`;
    @Field(() => SystemIcons, {nullable:false})
    icon2!: `${SystemIcons}`;
    @Field(() => SystemIcons, {nullable:false})
    icon3!: `${SystemIcons}`;
    @Field(() => String, {nullable:false})
    text1!: string;
    @Field(() => String, {nullable:false})
    text2!: string;
    @Field(() => String, {nullable:false})
    text3!: string;
    @Field(() => String, {nullable:false})
    trackingNumber!: string;
}

@InputType()
export class OrderUpdateSystemMessageUpdateEnvelopeInput {
    @Field(() => OrderUpdateSystemMessageCreateInput, {nullable:true})
    @Type(() => OrderUpdateSystemMessageCreateInput)
    set?: InstanceType<typeof OrderUpdateSystemMessageCreateInput>;
    @Field(() => OrderUpdateSystemMessageUpdateInput, {nullable:true})
    @Type(() => OrderUpdateSystemMessageUpdateInput)
    update?: InstanceType<typeof OrderUpdateSystemMessageUpdateInput>;
}

@InputType()
export class OrderUpdateToOneWithWhereWithoutPaymentInput {
    @Field(() => OrderWhereInput, {nullable:true})
    @Type(() => OrderWhereInput)
    where?: InstanceType<typeof OrderWhereInput>;
    @Field(() => OrderUpdateWithoutPaymentInput, {nullable:false})
    @Type(() => OrderUpdateWithoutPaymentInput)
    data!: InstanceType<typeof OrderUpdateWithoutPaymentInput>;
}

@InputType()
export class OrderUpdateToOneWithWhereWithoutSupportTicketsInput {
    @Field(() => OrderWhereInput, {nullable:true})
    @Type(() => OrderWhereInput)
    where?: InstanceType<typeof OrderWhereInput>;
    @Field(() => OrderUpdateWithoutSupportTicketsInput, {nullable:false})
    @Type(() => OrderUpdateWithoutSupportTicketsInput)
    data!: InstanceType<typeof OrderUpdateWithoutSupportTicketsInput>;
}

@InputType()
export class OrderUpdateWithoutPaymentInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    productId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => ProductListingSnapshotUpdateEnvelopeInput, {nullable:true})
    productSnapshot?: InstanceType<typeof ProductListingSnapshotUpdateEnvelopeInput>;
    @Field(() => EnumOrderTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumOrderTypeFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    providerId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    consumerId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    conversationId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumOrderStatusFieldUpdateOperationsInput, {nullable:true})
    status?: InstanceType<typeof EnumOrderStatusFieldUpdateOperationsInput>;
    @Field(() => RentOrderNullableUpdateEnvelopeInput, {nullable:true})
    rentingDetails?: InstanceType<typeof RentOrderNullableUpdateEnvelopeInput>;
    @Field(() => ShipmentNullableUpdateEnvelopeInput, {nullable:true})
    shipment?: InstanceType<typeof ShipmentNullableUpdateEnvelopeInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    payload?: any;
    @Field(() => OrderPayoutUpdateEnvelopeInput, {nullable:true})
    payout?: InstanceType<typeof OrderPayoutUpdateEnvelopeInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => SupportTicketUpdateManyWithoutConcernedOrderNestedInput, {nullable:true})
    supportTickets?: InstanceType<typeof SupportTicketUpdateManyWithoutConcernedOrderNestedInput>;
}

@InputType()
export class OrderUpdateWithoutSupportTicketsInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    productId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => ProductListingSnapshotUpdateEnvelopeInput, {nullable:true})
    productSnapshot?: InstanceType<typeof ProductListingSnapshotUpdateEnvelopeInput>;
    @Field(() => EnumOrderTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumOrderTypeFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    providerId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    consumerId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    conversationId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumOrderStatusFieldUpdateOperationsInput, {nullable:true})
    status?: InstanceType<typeof EnumOrderStatusFieldUpdateOperationsInput>;
    @Field(() => RentOrderNullableUpdateEnvelopeInput, {nullable:true})
    rentingDetails?: InstanceType<typeof RentOrderNullableUpdateEnvelopeInput>;
    @Field(() => ShipmentNullableUpdateEnvelopeInput, {nullable:true})
    shipment?: InstanceType<typeof ShipmentNullableUpdateEnvelopeInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    payload?: any;
    @Field(() => OrderPayoutUpdateEnvelopeInput, {nullable:true})
    payout?: InstanceType<typeof OrderPayoutUpdateEnvelopeInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => PaymentUpdateOneWithoutOrderNestedInput, {nullable:true})
    payment?: InstanceType<typeof PaymentUpdateOneWithoutOrderNestedInput>;
}

@InputType()
export class OrderUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    productId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => ProductListingSnapshotUpdateEnvelopeInput, {nullable:true})
    productSnapshot?: InstanceType<typeof ProductListingSnapshotUpdateEnvelopeInput>;
    @Field(() => EnumOrderTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumOrderTypeFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    providerId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    consumerId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    conversationId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumOrderStatusFieldUpdateOperationsInput, {nullable:true})
    status?: InstanceType<typeof EnumOrderStatusFieldUpdateOperationsInput>;
    @Field(() => RentOrderNullableUpdateEnvelopeInput, {nullable:true})
    rentingDetails?: InstanceType<typeof RentOrderNullableUpdateEnvelopeInput>;
    @Field(() => ShipmentNullableUpdateEnvelopeInput, {nullable:true})
    shipment?: InstanceType<typeof ShipmentNullableUpdateEnvelopeInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    payload?: any;
    @Field(() => OrderPayoutUpdateEnvelopeInput, {nullable:true})
    payout?: InstanceType<typeof OrderPayoutUpdateEnvelopeInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => PaymentUpdateOneWithoutOrderNestedInput, {nullable:true})
    payment?: InstanceType<typeof PaymentUpdateOneWithoutOrderNestedInput>;
    @Field(() => SupportTicketUpdateManyWithoutConcernedOrderNestedInput, {nullable:true})
    supportTickets?: InstanceType<typeof SupportTicketUpdateManyWithoutConcernedOrderNestedInput>;
}

@InputType()
export class OrderUpsertWithoutPaymentInput {
    @Field(() => OrderUpdateWithoutPaymentInput, {nullable:false})
    @Type(() => OrderUpdateWithoutPaymentInput)
    update!: InstanceType<typeof OrderUpdateWithoutPaymentInput>;
    @Field(() => OrderCreateWithoutPaymentInput, {nullable:false})
    @Type(() => OrderCreateWithoutPaymentInput)
    create!: InstanceType<typeof OrderCreateWithoutPaymentInput>;
    @Field(() => OrderWhereInput, {nullable:true})
    @Type(() => OrderWhereInput)
    where?: InstanceType<typeof OrderWhereInput>;
}

@InputType()
export class OrderUpsertWithoutSupportTicketsInput {
    @Field(() => OrderUpdateWithoutSupportTicketsInput, {nullable:false})
    @Type(() => OrderUpdateWithoutSupportTicketsInput)
    update!: InstanceType<typeof OrderUpdateWithoutSupportTicketsInput>;
    @Field(() => OrderCreateWithoutSupportTicketsInput, {nullable:false})
    @Type(() => OrderCreateWithoutSupportTicketsInput)
    create!: InstanceType<typeof OrderCreateWithoutSupportTicketsInput>;
    @Field(() => OrderWhereInput, {nullable:true})
    @Type(() => OrderWhereInput)
    where?: InstanceType<typeof OrderWhereInput>;
}

@InputType()
export class OrderWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:true})
    paymentId?: string;
    @Field(() => [OrderWhereInput], {nullable:true})
    AND?: Array<OrderWhereInput>;
    @Field(() => [OrderWhereInput], {nullable:true})
    OR?: Array<OrderWhereInput>;
    @Field(() => [OrderWhereInput], {nullable:true})
    NOT?: Array<OrderWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    productId?: InstanceType<typeof StringFilter>;
    @Field(() => ProductListingSnapshotCompositeFilter, {nullable:true})
    productSnapshot?: InstanceType<typeof ProductListingSnapshotCompositeFilter>;
    @Field(() => EnumOrderTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumOrderTypeFilter>;
    @Field(() => StringFilter, {nullable:true})
    providerId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    consumerId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    conversationId?: InstanceType<typeof StringFilter>;
    @Field(() => EnumOrderStatusFilter, {nullable:true})
    status?: InstanceType<typeof EnumOrderStatusFilter>;
    @Field(() => RentOrderNullableCompositeFilter, {nullable:true})
    rentingDetails?: InstanceType<typeof RentOrderNullableCompositeFilter>;
    @Field(() => ShipmentNullableCompositeFilter, {nullable:true})
    shipment?: InstanceType<typeof ShipmentNullableCompositeFilter>;
    @Field(() => JsonFilter, {nullable:true})
    payload?: InstanceType<typeof JsonFilter>;
    @Field(() => OrderPayoutCompositeFilter, {nullable:true})
    payout?: InstanceType<typeof OrderPayoutCompositeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => PaymentNullableRelationFilter, {nullable:true})
    payment?: InstanceType<typeof PaymentNullableRelationFilter>;
    @Field(() => SupportTicketListRelationFilter, {nullable:true})
    supportTickets?: InstanceType<typeof SupportTicketListRelationFilter>;
}

@InputType()
export class OrderWhereInput {
    @Field(() => [OrderWhereInput], {nullable:true})
    AND?: Array<OrderWhereInput>;
    @Field(() => [OrderWhereInput], {nullable:true})
    OR?: Array<OrderWhereInput>;
    @Field(() => [OrderWhereInput], {nullable:true})
    NOT?: Array<OrderWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    productId?: InstanceType<typeof StringFilter>;
    @Field(() => ProductListingSnapshotCompositeFilter, {nullable:true})
    productSnapshot?: InstanceType<typeof ProductListingSnapshotCompositeFilter>;
    @Field(() => EnumOrderTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumOrderTypeFilter>;
    @Field(() => StringFilter, {nullable:true})
    providerId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    consumerId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    conversationId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    paymentId?: InstanceType<typeof StringFilter>;
    @Field(() => EnumOrderStatusFilter, {nullable:true})
    status?: InstanceType<typeof EnumOrderStatusFilter>;
    @Field(() => RentOrderNullableCompositeFilter, {nullable:true})
    rentingDetails?: InstanceType<typeof RentOrderNullableCompositeFilter>;
    @Field(() => ShipmentNullableCompositeFilter, {nullable:true})
    shipment?: InstanceType<typeof ShipmentNullableCompositeFilter>;
    @Field(() => JsonFilter, {nullable:true})
    payload?: InstanceType<typeof JsonFilter>;
    @Field(() => OrderPayoutCompositeFilter, {nullable:true})
    payout?: InstanceType<typeof OrderPayoutCompositeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => PaymentNullableRelationFilter, {nullable:true})
    payment?: InstanceType<typeof PaymentNullableRelationFilter>;
    @Field(() => SupportTicketListRelationFilter, {nullable:true})
    supportTickets?: InstanceType<typeof SupportTicketListRelationFilter>;
}

@ObjectType()
export class Order {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    productId!: string;
    @Field(() => ProductListingSnapshot, {nullable:false})
    productSnapshot?: InstanceType<typeof ProductListingSnapshot>;
    @Field(() => OrderType, {nullable:false})
    type!: `${OrderType}`;
    @Field(() => String, {nullable:false})
    providerId!: string;
    @Field(() => String, {nullable:false})
    consumerId!: string;
    @Field(() => String, {nullable:false})
    conversationId!: string;
    @Field(() => String, {nullable:false})
    paymentId!: string;
    @Field(() => OrderStatus, {nullable:false})
    status!: `${OrderStatus}`;
    @Field(() => RentOrder, {nullable:true})
    rentingDetails?: InstanceType<typeof RentOrder> | null;
    @Field(() => Shipment, {nullable:true})
    shipment?: InstanceType<typeof Shipment> | null;
    @Field(() => GraphQLJSON, {nullable:false})
    payload!: any;
    @Field(() => OrderPayout, {nullable:false})
    payout?: InstanceType<typeof OrderPayout>;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
    @Field(() => Date, {nullable:false})
    updatedAt!: Date;
    @Field(() => Payment, {nullable:true})
    payment?: InstanceType<typeof Payment> | null;
    @Field(() => [SupportTicket], {nullable:true})
    supportTickets?: Array<SupportTicket>;
}

@ArgsType()
export class UpdateManyOrderArgs {
    @Field(() => OrderUpdateManyMutationInput, {nullable:false})
    @Type(() => OrderUpdateManyMutationInput)
    data!: InstanceType<typeof OrderUpdateManyMutationInput>;
    @Field(() => OrderWhereInput, {nullable:true})
    @Type(() => OrderWhereInput)
    where?: InstanceType<typeof OrderWhereInput>;
}

@ArgsType()
export class UpdateOneOrderArgs {
    @Field(() => OrderUpdateInput, {nullable:false})
    @Type(() => OrderUpdateInput)
    data!: InstanceType<typeof OrderUpdateInput>;
    @Field(() => OrderWhereUniqueInput, {nullable:false})
    @Type(() => OrderWhereUniqueInput)
    where!: Prisma.AtLeast<OrderWhereUniqueInput, 'id' | 'paymentId'>;
}

@ArgsType()
export class UpsertOneOrderArgs {
    @Field(() => OrderWhereUniqueInput, {nullable:false})
    @Type(() => OrderWhereUniqueInput)
    where!: Prisma.AtLeast<OrderWhereUniqueInput, 'id' | 'paymentId'>;
    @Field(() => OrderCreateInput, {nullable:false})
    @Type(() => OrderCreateInput)
    create!: InstanceType<typeof OrderCreateInput>;
    @Field(() => OrderUpdateInput, {nullable:false})
    @Type(() => OrderUpdateInput)
    update!: InstanceType<typeof OrderUpdateInput>;
}

@InputType()
export class OrderNotificationPayloadCreateEnvelopeInput {
    @Field(() => OrderNotificationPayloadCreateInput, {nullable:true})
    @Type(() => OrderNotificationPayloadCreateInput)
    set?: InstanceType<typeof OrderNotificationPayloadCreateInput>;
}

@InputType()
export class OrderNotificationPayloadCreateInput {
    @Field(() => OrderNotificationType, {nullable:false})
    type!: `${OrderNotificationType}`;
    @Field(() => String, {nullable:false})
    conversationId!: string;
    @Field(() => String, {nullable:false})
    orderId!: string;
    @Field(() => String, {nullable:false})
    listingTitle!: string;
}

@InputType()
export class OrderNotificationPayloadOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    conversationId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    orderId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    listingTitle?: `${SortOrder}`;
}

@InputType()
export class OrderNotificationPayloadUpdateEnvelopeInput {
    @Field(() => OrderNotificationPayloadCreateInput, {nullable:true})
    @Type(() => OrderNotificationPayloadCreateInput)
    set?: InstanceType<typeof OrderNotificationPayloadCreateInput>;
    @Field(() => OrderNotificationPayloadUpdateInput, {nullable:true})
    @Type(() => OrderNotificationPayloadUpdateInput)
    update?: InstanceType<typeof OrderNotificationPayloadUpdateInput>;
}

@InputType()
export class OrderNotificationPayloadUpdateInput {
    @Field(() => EnumOrderNotificationTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumOrderNotificationTypeFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    conversationId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    orderId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    listingTitle?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}

@InputType()
export class OrderNotificationPayloadWhereInput {
    @Field(() => [OrderNotificationPayloadWhereInput], {nullable:true})
    AND?: Array<OrderNotificationPayloadWhereInput>;
    @Field(() => [OrderNotificationPayloadWhereInput], {nullable:true})
    OR?: Array<OrderNotificationPayloadWhereInput>;
    @Field(() => [OrderNotificationPayloadWhereInput], {nullable:true})
    NOT?: Array<OrderNotificationPayloadWhereInput>;
    @Field(() => EnumOrderNotificationTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumOrderNotificationTypeFilter>;
    @Field(() => StringFilter, {nullable:true})
    conversationId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    orderId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    listingTitle?: InstanceType<typeof StringFilter>;
}

@ObjectType()
export class OrderNotificationPayload {
    @Field(() => OrderNotificationType, {nullable:false})
    type!: `${OrderNotificationType}`;
    @Field(() => String, {nullable:false})
    conversationId!: string;
    @Field(() => String, {nullable:false})
    orderId!: string;
    @Field(() => String, {nullable:false})
    listingTitle!: string;
}

@InputType()
export class OrderPayoutCreateEnvelopeInput {
    @Field(() => OrderPayoutCreateInput, {nullable:true})
    @Type(() => OrderPayoutCreateInput)
    set?: InstanceType<typeof OrderPayoutCreateInput>;
}

@InputType()
export class OrderPayoutCreateInput {
    @Field(() => SellerPayoutStatus, {nullable:false})
    status!: `${SellerPayoutStatus}`;
    @Field(() => Date, {nullable:true})
    creditedAt?: Date | string;
    @Field(() => String, {nullable:true})
    payoutId?: string;
}

@InputType()
export class OrderPayoutOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    status?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    creditedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    payoutId?: `${SortOrder}`;
}

@InputType()
export class OrderPayoutUpdateEnvelopeInput {
    @Field(() => OrderPayoutCreateInput, {nullable:true})
    @Type(() => OrderPayoutCreateInput)
    set?: InstanceType<typeof OrderPayoutCreateInput>;
    @Field(() => OrderPayoutUpdateInput, {nullable:true})
    @Type(() => OrderPayoutUpdateInput)
    update?: InstanceType<typeof OrderPayoutUpdateInput>;
}

@InputType()
export class OrderPayoutUpdateInput {
    @Field(() => EnumSellerPayoutStatusFieldUpdateOperationsInput, {nullable:true})
    status?: InstanceType<typeof EnumSellerPayoutStatusFieldUpdateOperationsInput>;
    @Field(() => NullableDateTimeFieldUpdateOperationsInput, {nullable:true})
    creditedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    payoutId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
}

@InputType()
export class OrderPayoutWhereInput {
    @Field(() => [OrderPayoutWhereInput], {nullable:true})
    AND?: Array<OrderPayoutWhereInput>;
    @Field(() => [OrderPayoutWhereInput], {nullable:true})
    OR?: Array<OrderPayoutWhereInput>;
    @Field(() => [OrderPayoutWhereInput], {nullable:true})
    NOT?: Array<OrderPayoutWhereInput>;
    @Field(() => EnumSellerPayoutStatusFilter, {nullable:true})
    status?: InstanceType<typeof EnumSellerPayoutStatusFilter>;
    @Field(() => DateTimeNullableFilter, {nullable:true})
    creditedAt?: InstanceType<typeof DateTimeNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    payoutId?: InstanceType<typeof StringNullableFilter>;
}

@ObjectType()
export class OrderPayout {
    @Field(() => SellerPayoutStatus, {nullable:false})
    status!: `${SellerPayoutStatus}`;
    @Field(() => Date, {nullable:true})
    creditedAt!: Date | null;
    @Field(() => String, {nullable:true})
    payoutId!: string | null;
}

@ArgsType()
export class CreateManyOrderPayoutRequestLogArgs {
    @Field(() => [OrderPayoutRequestLogCreateManyInput], {nullable:false})
    @Type(() => OrderPayoutRequestLogCreateManyInput)
    data!: Array<OrderPayoutRequestLogCreateManyInput>;
}

@ArgsType()
export class CreateOneOrderPayoutRequestLogArgs {
    @Field(() => OrderPayoutRequestLogCreateInput, {nullable:false})
    @Type(() => OrderPayoutRequestLogCreateInput)
    data!: InstanceType<typeof OrderPayoutRequestLogCreateInput>;
}

@ArgsType()
export class DeleteManyOrderPayoutRequestLogArgs {
    @Field(() => OrderPayoutRequestLogWhereInput, {nullable:true})
    @Type(() => OrderPayoutRequestLogWhereInput)
    where?: InstanceType<typeof OrderPayoutRequestLogWhereInput>;
}

@ArgsType()
export class DeleteOneOrderPayoutRequestLogArgs {
    @Field(() => OrderPayoutRequestLogWhereUniqueInput, {nullable:false})
    @Type(() => OrderPayoutRequestLogWhereUniqueInput)
    where!: Prisma.AtLeast<OrderPayoutRequestLogWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindFirstOrderPayoutRequestLogOrThrowArgs {
    @Field(() => OrderPayoutRequestLogWhereInput, {nullable:true})
    @Type(() => OrderPayoutRequestLogWhereInput)
    where?: InstanceType<typeof OrderPayoutRequestLogWhereInput>;
    @Field(() => [OrderPayoutRequestLogOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<OrderPayoutRequestLogOrderByWithRelationInput>;
    @Field(() => OrderPayoutRequestLogWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<OrderPayoutRequestLogWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [OrderPayoutRequestLogScalarFieldEnum], {nullable:true})
    distinct?: Array<`${OrderPayoutRequestLogScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstOrderPayoutRequestLogArgs {
    @Field(() => OrderPayoutRequestLogWhereInput, {nullable:true})
    @Type(() => OrderPayoutRequestLogWhereInput)
    where?: InstanceType<typeof OrderPayoutRequestLogWhereInput>;
    @Field(() => [OrderPayoutRequestLogOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<OrderPayoutRequestLogOrderByWithRelationInput>;
    @Field(() => OrderPayoutRequestLogWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<OrderPayoutRequestLogWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [OrderPayoutRequestLogScalarFieldEnum], {nullable:true})
    distinct?: Array<`${OrderPayoutRequestLogScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyOrderPayoutRequestLogArgs {
    @Field(() => OrderPayoutRequestLogWhereInput, {nullable:true})
    @Type(() => OrderPayoutRequestLogWhereInput)
    where?: InstanceType<typeof OrderPayoutRequestLogWhereInput>;
    @Field(() => [OrderPayoutRequestLogOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<OrderPayoutRequestLogOrderByWithRelationInput>;
    @Field(() => OrderPayoutRequestLogWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<OrderPayoutRequestLogWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [OrderPayoutRequestLogScalarFieldEnum], {nullable:true})
    distinct?: Array<`${OrderPayoutRequestLogScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniqueOrderPayoutRequestLogOrThrowArgs {
    @Field(() => OrderPayoutRequestLogWhereUniqueInput, {nullable:false})
    @Type(() => OrderPayoutRequestLogWhereUniqueInput)
    where!: Prisma.AtLeast<OrderPayoutRequestLogWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindUniqueOrderPayoutRequestLogArgs {
    @Field(() => OrderPayoutRequestLogWhereUniqueInput, {nullable:false})
    @Type(() => OrderPayoutRequestLogWhereUniqueInput)
    where!: Prisma.AtLeast<OrderPayoutRequestLogWhereUniqueInput, 'id'>;
}

@ArgsType()
export class OrderPayoutRequestLogAggregateArgs {
    @Field(() => OrderPayoutRequestLogWhereInput, {nullable:true})
    @Type(() => OrderPayoutRequestLogWhereInput)
    where?: InstanceType<typeof OrderPayoutRequestLogWhereInput>;
    @Field(() => [OrderPayoutRequestLogOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<OrderPayoutRequestLogOrderByWithRelationInput>;
    @Field(() => OrderPayoutRequestLogWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<OrderPayoutRequestLogWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class OrderPayoutRequestLogCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    orderId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    email?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    valid?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class OrderPayoutRequestLogCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    orderId!: string;
    @Field(() => String, {nullable:false})
    email!: string;
    @Field(() => Boolean, {nullable:false})
    valid!: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class OrderPayoutRequestLogCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    orderId!: string;
    @Field(() => String, {nullable:false})
    email!: string;
    @Field(() => Boolean, {nullable:false})
    valid!: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@ArgsType()
export class OrderPayoutRequestLogGroupByArgs {
    @Field(() => OrderPayoutRequestLogWhereInput, {nullable:true})
    @Type(() => OrderPayoutRequestLogWhereInput)
    where?: InstanceType<typeof OrderPayoutRequestLogWhereInput>;
    @Field(() => [OrderPayoutRequestLogOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<OrderPayoutRequestLogOrderByWithAggregationInput>;
    @Field(() => [OrderPayoutRequestLogScalarFieldEnum], {nullable:false})
    by!: Array<`${OrderPayoutRequestLogScalarFieldEnum}`>;
    @Field(() => OrderPayoutRequestLogScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof OrderPayoutRequestLogScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class OrderPayoutRequestLogMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    orderId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    email?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    valid?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class OrderPayoutRequestLogMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    orderId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    email?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    valid?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class OrderPayoutRequestLogOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    orderId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    email?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    valid?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => OrderPayoutRequestLogCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof OrderPayoutRequestLogCountOrderByAggregateInput>;
    @Field(() => OrderPayoutRequestLogMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof OrderPayoutRequestLogMaxOrderByAggregateInput>;
    @Field(() => OrderPayoutRequestLogMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof OrderPayoutRequestLogMinOrderByAggregateInput>;
}

@InputType()
export class OrderPayoutRequestLogOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    orderId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    email?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    valid?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class OrderPayoutRequestLogScalarWhereWithAggregatesInput {
    @Field(() => [OrderPayoutRequestLogScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<OrderPayoutRequestLogScalarWhereWithAggregatesInput>;
    @Field(() => [OrderPayoutRequestLogScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<OrderPayoutRequestLogScalarWhereWithAggregatesInput>;
    @Field(() => [OrderPayoutRequestLogScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<OrderPayoutRequestLogScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    orderId?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    email?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => BoolWithAggregatesFilter, {nullable:true})
    valid?: InstanceType<typeof BoolWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
}

@InputType()
export class OrderPayoutRequestLogUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    orderId!: string;
    @Field(() => String, {nullable:false})
    email!: string;
    @Field(() => Boolean, {nullable:false})
    valid!: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class OrderPayoutRequestLogUncheckedUpdateManyInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    orderId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    valid?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class OrderPayoutRequestLogUncheckedUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    orderId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    valid?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class OrderPayoutRequestLogUpdateManyMutationInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    orderId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    valid?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class OrderPayoutRequestLogUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    orderId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    valid?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class OrderPayoutRequestLogWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => [OrderPayoutRequestLogWhereInput], {nullable:true})
    AND?: Array<OrderPayoutRequestLogWhereInput>;
    @Field(() => [OrderPayoutRequestLogWhereInput], {nullable:true})
    OR?: Array<OrderPayoutRequestLogWhereInput>;
    @Field(() => [OrderPayoutRequestLogWhereInput], {nullable:true})
    NOT?: Array<OrderPayoutRequestLogWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    orderId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    email?: InstanceType<typeof StringFilter>;
    @Field(() => BoolFilter, {nullable:true})
    valid?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@InputType()
export class OrderPayoutRequestLogWhereInput {
    @Field(() => [OrderPayoutRequestLogWhereInput], {nullable:true})
    AND?: Array<OrderPayoutRequestLogWhereInput>;
    @Field(() => [OrderPayoutRequestLogWhereInput], {nullable:true})
    OR?: Array<OrderPayoutRequestLogWhereInput>;
    @Field(() => [OrderPayoutRequestLogWhereInput], {nullable:true})
    NOT?: Array<OrderPayoutRequestLogWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    orderId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    email?: InstanceType<typeof StringFilter>;
    @Field(() => BoolFilter, {nullable:true})
    valid?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@ObjectType()
export class OrderPayoutRequestLog {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    orderId!: string;
    @Field(() => String, {nullable:false})
    email!: string;
    @Field(() => Boolean, {nullable:false})
    valid!: boolean;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
    @Field(() => Date, {nullable:false})
    updatedAt!: Date;
}

@ArgsType()
export class UpdateManyOrderPayoutRequestLogArgs {
    @Field(() => OrderPayoutRequestLogUpdateManyMutationInput, {nullable:false})
    @Type(() => OrderPayoutRequestLogUpdateManyMutationInput)
    data!: InstanceType<typeof OrderPayoutRequestLogUpdateManyMutationInput>;
    @Field(() => OrderPayoutRequestLogWhereInput, {nullable:true})
    @Type(() => OrderPayoutRequestLogWhereInput)
    where?: InstanceType<typeof OrderPayoutRequestLogWhereInput>;
}

@ArgsType()
export class UpdateOneOrderPayoutRequestLogArgs {
    @Field(() => OrderPayoutRequestLogUpdateInput, {nullable:false})
    @Type(() => OrderPayoutRequestLogUpdateInput)
    data!: InstanceType<typeof OrderPayoutRequestLogUpdateInput>;
    @Field(() => OrderPayoutRequestLogWhereUniqueInput, {nullable:false})
    @Type(() => OrderPayoutRequestLogWhereUniqueInput)
    where!: Prisma.AtLeast<OrderPayoutRequestLogWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpsertOneOrderPayoutRequestLogArgs {
    @Field(() => OrderPayoutRequestLogWhereUniqueInput, {nullable:false})
    @Type(() => OrderPayoutRequestLogWhereUniqueInput)
    where!: Prisma.AtLeast<OrderPayoutRequestLogWhereUniqueInput, 'id'>;
    @Field(() => OrderPayoutRequestLogCreateInput, {nullable:false})
    @Type(() => OrderPayoutRequestLogCreateInput)
    create!: InstanceType<typeof OrderPayoutRequestLogCreateInput>;
    @Field(() => OrderPayoutRequestLogUpdateInput, {nullable:false})
    @Type(() => OrderPayoutRequestLogUpdateInput)
    update!: InstanceType<typeof OrderPayoutRequestLogUpdateInput>;
}

@InputType()
export class OrderUpdateSystemMessageCreateEnvelopeInput {
    @Field(() => OrderUpdateSystemMessageCreateInput, {nullable:true})
    @Type(() => OrderUpdateSystemMessageCreateInput)
    set?: InstanceType<typeof OrderUpdateSystemMessageCreateInput>;
}

@InputType()
export class OrderUpdateSystemMessageCreateInput {
    @Field(() => SystemIcons, {nullable:false})
    icon1!: `${SystemIcons}`;
    @Field(() => SystemIcons, {nullable:false})
    icon2!: `${SystemIcons}`;
    @Field(() => SystemIcons, {nullable:false})
    icon3!: `${SystemIcons}`;
    @Field(() => String, {nullable:false})
    text1!: string;
    @Field(() => String, {nullable:false})
    text2!: string;
    @Field(() => String, {nullable:false})
    text3!: string;
    @Field(() => String, {nullable:false})
    trackingNumber!: string;
}

@InputType()
export class OrderUpdateSystemMessageOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    icon1?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    icon2?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    icon3?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    text1?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    text2?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    text3?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    trackingNumber?: `${SortOrder}`;
}

@InputType()
export class OrderUpdateSystemMessageUpdateInput {
    @Field(() => EnumSystemIconsFieldUpdateOperationsInput, {nullable:true})
    icon1?: InstanceType<typeof EnumSystemIconsFieldUpdateOperationsInput>;
    @Field(() => EnumSystemIconsFieldUpdateOperationsInput, {nullable:true})
    icon2?: InstanceType<typeof EnumSystemIconsFieldUpdateOperationsInput>;
    @Field(() => EnumSystemIconsFieldUpdateOperationsInput, {nullable:true})
    icon3?: InstanceType<typeof EnumSystemIconsFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    text1?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    text2?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    text3?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    trackingNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}

@InputType()
export class OrderUpdateSystemMessageWhereInput {
    @Field(() => [OrderUpdateSystemMessageWhereInput], {nullable:true})
    AND?: Array<OrderUpdateSystemMessageWhereInput>;
    @Field(() => [OrderUpdateSystemMessageWhereInput], {nullable:true})
    OR?: Array<OrderUpdateSystemMessageWhereInput>;
    @Field(() => [OrderUpdateSystemMessageWhereInput], {nullable:true})
    NOT?: Array<OrderUpdateSystemMessageWhereInput>;
    @Field(() => EnumSystemIconsFilter, {nullable:true})
    icon1?: InstanceType<typeof EnumSystemIconsFilter>;
    @Field(() => EnumSystemIconsFilter, {nullable:true})
    icon2?: InstanceType<typeof EnumSystemIconsFilter>;
    @Field(() => EnumSystemIconsFilter, {nullable:true})
    icon3?: InstanceType<typeof EnumSystemIconsFilter>;
    @Field(() => StringFilter, {nullable:true})
    text1?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    text2?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    text3?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    trackingNumber?: InstanceType<typeof StringFilter>;
}

@ObjectType()
export class OrderUpdateSystemMessage {
    @Field(() => SystemIcons, {nullable:false})
    icon1!: `${SystemIcons}`;
    @Field(() => SystemIcons, {nullable:false})
    icon2!: `${SystemIcons}`;
    @Field(() => SystemIcons, {nullable:false})
    icon3!: `${SystemIcons}`;
    @Field(() => String, {nullable:false})
    text1!: string;
    @Field(() => String, {nullable:false})
    text2!: string;
    @Field(() => String, {nullable:false})
    text3!: string;
    @Field(() => String, {nullable:false})
    trackingNumber!: string;
}

@ArgsType()
export class CreateManyOtpLogArgs {
    @Field(() => [OtpLogCreateManyInput], {nullable:false})
    @Type(() => OtpLogCreateManyInput)
    data!: Array<OtpLogCreateManyInput>;
}

@ArgsType()
export class CreateOneOtpLogArgs {
    @Field(() => OtpLogCreateInput, {nullable:false})
    @Type(() => OtpLogCreateInput)
    data!: InstanceType<typeof OtpLogCreateInput>;
}

@ArgsType()
export class DeleteManyOtpLogArgs {
    @Field(() => OtpLogWhereInput, {nullable:true})
    @Type(() => OtpLogWhereInput)
    where?: InstanceType<typeof OtpLogWhereInput>;
}

@ArgsType()
export class DeleteOneOtpLogArgs {
    @Field(() => OtpLogWhereUniqueInput, {nullable:false})
    @Type(() => OtpLogWhereUniqueInput)
    where!: Prisma.AtLeast<OtpLogWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindFirstOtpLogOrThrowArgs {
    @Field(() => OtpLogWhereInput, {nullable:true})
    @Type(() => OtpLogWhereInput)
    where?: InstanceType<typeof OtpLogWhereInput>;
    @Field(() => [OtpLogOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<OtpLogOrderByWithRelationInput>;
    @Field(() => OtpLogWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<OtpLogWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [OtpLogScalarFieldEnum], {nullable:true})
    distinct?: Array<`${OtpLogScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstOtpLogArgs {
    @Field(() => OtpLogWhereInput, {nullable:true})
    @Type(() => OtpLogWhereInput)
    where?: InstanceType<typeof OtpLogWhereInput>;
    @Field(() => [OtpLogOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<OtpLogOrderByWithRelationInput>;
    @Field(() => OtpLogWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<OtpLogWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [OtpLogScalarFieldEnum], {nullable:true})
    distinct?: Array<`${OtpLogScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyOtpLogArgs {
    @Field(() => OtpLogWhereInput, {nullable:true})
    @Type(() => OtpLogWhereInput)
    where?: InstanceType<typeof OtpLogWhereInput>;
    @Field(() => [OtpLogOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<OtpLogOrderByWithRelationInput>;
    @Field(() => OtpLogWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<OtpLogWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [OtpLogScalarFieldEnum], {nullable:true})
    distinct?: Array<`${OtpLogScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniqueOtpLogOrThrowArgs {
    @Field(() => OtpLogWhereUniqueInput, {nullable:false})
    @Type(() => OtpLogWhereUniqueInput)
    where!: Prisma.AtLeast<OtpLogWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindUniqueOtpLogArgs {
    @Field(() => OtpLogWhereUniqueInput, {nullable:false})
    @Type(() => OtpLogWhereUniqueInput)
    where!: Prisma.AtLeast<OtpLogWhereUniqueInput, 'id'>;
}

@ArgsType()
export class OtpLogAggregateArgs {
    @Field(() => OtpLogWhereInput, {nullable:true})
    @Type(() => OtpLogWhereInput)
    where?: InstanceType<typeof OtpLogWhereInput>;
    @Field(() => [OtpLogOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<OtpLogOrderByWithRelationInput>;
    @Field(() => OtpLogWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<OtpLogWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class OtpLogCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    key?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    otp?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    valid?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class OtpLogCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    key!: string;
    @Field(() => String, {nullable:false})
    otp!: string;
    @Field(() => Boolean, {nullable:false})
    valid!: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class OtpLogCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    key!: string;
    @Field(() => String, {nullable:false})
    otp!: string;
    @Field(() => Boolean, {nullable:false})
    valid!: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@ArgsType()
export class OtpLogGroupByArgs {
    @Field(() => OtpLogWhereInput, {nullable:true})
    @Type(() => OtpLogWhereInput)
    where?: InstanceType<typeof OtpLogWhereInput>;
    @Field(() => [OtpLogOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<OtpLogOrderByWithAggregationInput>;
    @Field(() => [OtpLogScalarFieldEnum], {nullable:false})
    by!: Array<`${OtpLogScalarFieldEnum}`>;
    @Field(() => OtpLogScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof OtpLogScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class OtpLogMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    key?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    otp?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    valid?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class OtpLogMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    key?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    otp?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    valid?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class OtpLogOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    key?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    otp?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    valid?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => OtpLogCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof OtpLogCountOrderByAggregateInput>;
    @Field(() => OtpLogMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof OtpLogMaxOrderByAggregateInput>;
    @Field(() => OtpLogMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof OtpLogMinOrderByAggregateInput>;
}

@InputType()
export class OtpLogOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    key?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    otp?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    valid?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class OtpLogScalarWhereWithAggregatesInput {
    @Field(() => [OtpLogScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<OtpLogScalarWhereWithAggregatesInput>;
    @Field(() => [OtpLogScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<OtpLogScalarWhereWithAggregatesInput>;
    @Field(() => [OtpLogScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<OtpLogScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    key?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    otp?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => BoolWithAggregatesFilter, {nullable:true})
    valid?: InstanceType<typeof BoolWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
}

@InputType()
export class OtpLogUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    key!: string;
    @Field(() => String, {nullable:false})
    otp!: string;
    @Field(() => Boolean, {nullable:false})
    valid!: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class OtpLogUncheckedUpdateManyInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    key?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    otp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    valid?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class OtpLogUncheckedUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    key?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    otp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    valid?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class OtpLogUpdateManyMutationInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    key?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    otp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    valid?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class OtpLogUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    key?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    otp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    valid?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class OtpLogWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => [OtpLogWhereInput], {nullable:true})
    AND?: Array<OtpLogWhereInput>;
    @Field(() => [OtpLogWhereInput], {nullable:true})
    OR?: Array<OtpLogWhereInput>;
    @Field(() => [OtpLogWhereInput], {nullable:true})
    NOT?: Array<OtpLogWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    key?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    otp?: InstanceType<typeof StringFilter>;
    @Field(() => BoolFilter, {nullable:true})
    valid?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@InputType()
export class OtpLogWhereInput {
    @Field(() => [OtpLogWhereInput], {nullable:true})
    AND?: Array<OtpLogWhereInput>;
    @Field(() => [OtpLogWhereInput], {nullable:true})
    OR?: Array<OtpLogWhereInput>;
    @Field(() => [OtpLogWhereInput], {nullable:true})
    NOT?: Array<OtpLogWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    key?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    otp?: InstanceType<typeof StringFilter>;
    @Field(() => BoolFilter, {nullable:true})
    valid?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@ObjectType()
export class OtpLog {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    key!: string;
    @Field(() => String, {nullable:false})
    otp!: string;
    @Field(() => Boolean, {nullable:false})
    valid!: boolean;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
    @Field(() => Date, {nullable:false})
    updatedAt!: Date;
}

@ArgsType()
export class UpdateManyOtpLogArgs {
    @Field(() => OtpLogUpdateManyMutationInput, {nullable:false})
    @Type(() => OtpLogUpdateManyMutationInput)
    data!: InstanceType<typeof OtpLogUpdateManyMutationInput>;
    @Field(() => OtpLogWhereInput, {nullable:true})
    @Type(() => OtpLogWhereInput)
    where?: InstanceType<typeof OtpLogWhereInput>;
}

@ArgsType()
export class UpdateOneOtpLogArgs {
    @Field(() => OtpLogUpdateInput, {nullable:false})
    @Type(() => OtpLogUpdateInput)
    data!: InstanceType<typeof OtpLogUpdateInput>;
    @Field(() => OtpLogWhereUniqueInput, {nullable:false})
    @Type(() => OtpLogWhereUniqueInput)
    where!: Prisma.AtLeast<OtpLogWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpsertOneOtpLogArgs {
    @Field(() => OtpLogWhereUniqueInput, {nullable:false})
    @Type(() => OtpLogWhereUniqueInput)
    where!: Prisma.AtLeast<OtpLogWhereUniqueInput, 'id'>;
    @Field(() => OtpLogCreateInput, {nullable:false})
    @Type(() => OtpLogCreateInput)
    create!: InstanceType<typeof OtpLogCreateInput>;
    @Field(() => OtpLogUpdateInput, {nullable:false})
    @Type(() => OtpLogUpdateInput)
    update!: InstanceType<typeof OtpLogUpdateInput>;
}

@InputType()
export class PackageDimensionsCreateEnvelopeInput {
    @Field(() => PackageDimensionsCreateInput, {nullable:true})
    @Type(() => PackageDimensionsCreateInput)
    set?: InstanceType<typeof PackageDimensionsCreateInput>;
}

@InputType()
export class PackageDimensionsCreateInput {
    @Field(() => Float, {nullable:false})
    height!: number;
    @Field(() => Float, {nullable:false})
    width!: number;
    @Field(() => Float, {nullable:false})
    length!: number;
    @Field(() => String, {nullable:true})
    unit?: string;
}

@InputType()
export class PackageDimensionsOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    height?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    width?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    length?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    unit?: `${SortOrder}`;
}

@InputType()
export class PackageDimensionsUpdateEnvelopeInput {
    @Field(() => PackageDimensionsCreateInput, {nullable:true})
    @Type(() => PackageDimensionsCreateInput)
    set?: InstanceType<typeof PackageDimensionsCreateInput>;
    @Field(() => PackageDimensionsUpdateInput, {nullable:true})
    @Type(() => PackageDimensionsUpdateInput)
    update?: InstanceType<typeof PackageDimensionsUpdateInput>;
}

@InputType()
export class PackageDimensionsUpdateInput {
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    height?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    width?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    length?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    unit?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}

@InputType()
export class PackageDimensionsWhereInput {
    @Field(() => [PackageDimensionsWhereInput], {nullable:true})
    AND?: Array<PackageDimensionsWhereInput>;
    @Field(() => [PackageDimensionsWhereInput], {nullable:true})
    OR?: Array<PackageDimensionsWhereInput>;
    @Field(() => [PackageDimensionsWhereInput], {nullable:true})
    NOT?: Array<PackageDimensionsWhereInput>;
    @Field(() => FloatFilter, {nullable:true})
    height?: InstanceType<typeof FloatFilter>;
    @Field(() => FloatFilter, {nullable:true})
    width?: InstanceType<typeof FloatFilter>;
    @Field(() => FloatFilter, {nullable:true})
    length?: InstanceType<typeof FloatFilter>;
    @Field(() => StringFilter, {nullable:true})
    unit?: InstanceType<typeof StringFilter>;
}

@ObjectType()
export class PackageDimensions {
    @Field(() => Float, {nullable:false})
    height!: number;
    @Field(() => Float, {nullable:false})
    width!: number;
    @Field(() => Float, {nullable:false})
    length!: number;
    @Field(() => String, {defaultValue:'inch',nullable:false})
    unit!: string;
}

@InputType()
export class PackageWeightCreateEnvelopeInput {
    @Field(() => PackageWeightCreateInput, {nullable:true})
    @Type(() => PackageWeightCreateInput)
    set?: InstanceType<typeof PackageWeightCreateInput>;
}

@InputType()
export class PackageWeightCreateInput {
    @Field(() => Float, {nullable:false})
    value!: number;
    @Field(() => String, {nullable:true})
    unit?: string;
}

@InputType()
export class PackageWeightOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    value?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    unit?: `${SortOrder}`;
}

@InputType()
export class PackageWeightUpdateEnvelopeInput {
    @Field(() => PackageWeightCreateInput, {nullable:true})
    @Type(() => PackageWeightCreateInput)
    set?: InstanceType<typeof PackageWeightCreateInput>;
    @Field(() => PackageWeightUpdateInput, {nullable:true})
    @Type(() => PackageWeightUpdateInput)
    update?: InstanceType<typeof PackageWeightUpdateInput>;
}

@InputType()
export class PackageWeightUpdateInput {
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    value?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    unit?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}

@InputType()
export class PackageWeightWhereInput {
    @Field(() => [PackageWeightWhereInput], {nullable:true})
    AND?: Array<PackageWeightWhereInput>;
    @Field(() => [PackageWeightWhereInput], {nullable:true})
    OR?: Array<PackageWeightWhereInput>;
    @Field(() => [PackageWeightWhereInput], {nullable:true})
    NOT?: Array<PackageWeightWhereInput>;
    @Field(() => FloatFilter, {nullable:true})
    value?: InstanceType<typeof FloatFilter>;
    @Field(() => StringFilter, {nullable:true})
    unit?: InstanceType<typeof StringFilter>;
}

@ObjectType()
export class PackageWeight {
    @Field(() => Float, {nullable:false})
    value!: number;
    @Field(() => String, {defaultValue:'ounce',nullable:false})
    unit!: string;
}

@ArgsType()
export class CreateManyPassCodeArgs {
    @Field(() => [PassCodeCreateManyInput], {nullable:false})
    @Type(() => PassCodeCreateManyInput)
    data!: Array<PassCodeCreateManyInput>;
}

@ArgsType()
export class CreateOnePassCodeArgs {
    @Field(() => PassCodeCreateInput, {nullable:false})
    @Type(() => PassCodeCreateInput)
    data!: InstanceType<typeof PassCodeCreateInput>;
}

@ArgsType()
export class DeleteManyPassCodeArgs {
    @Field(() => PassCodeWhereInput, {nullable:true})
    @Type(() => PassCodeWhereInput)
    where?: InstanceType<typeof PassCodeWhereInput>;
}

@ArgsType()
export class DeleteOnePassCodeArgs {
    @Field(() => PassCodeWhereUniqueInput, {nullable:false})
    @Type(() => PassCodeWhereUniqueInput)
    where!: Prisma.AtLeast<PassCodeWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindFirstPassCodeOrThrowArgs {
    @Field(() => PassCodeWhereInput, {nullable:true})
    @Type(() => PassCodeWhereInput)
    where?: InstanceType<typeof PassCodeWhereInput>;
    @Field(() => [PassCodeOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<PassCodeOrderByWithRelationInput>;
    @Field(() => PassCodeWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<PassCodeWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [PassCodeScalarFieldEnum], {nullable:true})
    distinct?: Array<`${PassCodeScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstPassCodeArgs {
    @Field(() => PassCodeWhereInput, {nullable:true})
    @Type(() => PassCodeWhereInput)
    where?: InstanceType<typeof PassCodeWhereInput>;
    @Field(() => [PassCodeOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<PassCodeOrderByWithRelationInput>;
    @Field(() => PassCodeWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<PassCodeWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [PassCodeScalarFieldEnum], {nullable:true})
    distinct?: Array<`${PassCodeScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyPassCodeArgs {
    @Field(() => PassCodeWhereInput, {nullable:true})
    @Type(() => PassCodeWhereInput)
    where?: InstanceType<typeof PassCodeWhereInput>;
    @Field(() => [PassCodeOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<PassCodeOrderByWithRelationInput>;
    @Field(() => PassCodeWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<PassCodeWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [PassCodeScalarFieldEnum], {nullable:true})
    distinct?: Array<`${PassCodeScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniquePassCodeOrThrowArgs {
    @Field(() => PassCodeWhereUniqueInput, {nullable:false})
    @Type(() => PassCodeWhereUniqueInput)
    where!: Prisma.AtLeast<PassCodeWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindUniquePassCodeArgs {
    @Field(() => PassCodeWhereUniqueInput, {nullable:false})
    @Type(() => PassCodeWhereUniqueInput)
    where!: Prisma.AtLeast<PassCodeWhereUniqueInput, 'id'>;
}

@ArgsType()
export class PassCodeAggregateArgs {
    @Field(() => PassCodeWhereInput, {nullable:true})
    @Type(() => PassCodeWhereInput)
    where?: InstanceType<typeof PassCodeWhereInput>;
    @Field(() => [PassCodeOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<PassCodeOrderByWithRelationInput>;
    @Field(() => PassCodeWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<PassCodeWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class PassCodeCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    passCode?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    isPassed?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class PassCodeCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => String, {nullable:false})
    passCode!: string;
    @Field(() => Boolean, {nullable:true})
    isPassed?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class PassCodeCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => String, {nullable:false})
    passCode!: string;
    @Field(() => Boolean, {nullable:true})
    isPassed?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@ArgsType()
export class PassCodeGroupByArgs {
    @Field(() => PassCodeWhereInput, {nullable:true})
    @Type(() => PassCodeWhereInput)
    where?: InstanceType<typeof PassCodeWhereInput>;
    @Field(() => [PassCodeOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<PassCodeOrderByWithAggregationInput>;
    @Field(() => [PassCodeScalarFieldEnum], {nullable:false})
    by!: Array<`${PassCodeScalarFieldEnum}`>;
    @Field(() => PassCodeScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof PassCodeScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class PassCodeMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    passCode?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    isPassed?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class PassCodeMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    passCode?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    isPassed?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class PassCodeOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    passCode?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    isPassed?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => PassCodeCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof PassCodeCountOrderByAggregateInput>;
    @Field(() => PassCodeMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof PassCodeMaxOrderByAggregateInput>;
    @Field(() => PassCodeMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof PassCodeMinOrderByAggregateInput>;
}

@InputType()
export class PassCodeOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    passCode?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    isPassed?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class PassCodeScalarWhereWithAggregatesInput {
    @Field(() => [PassCodeScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<PassCodeScalarWhereWithAggregatesInput>;
    @Field(() => [PassCodeScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<PassCodeScalarWhereWithAggregatesInput>;
    @Field(() => [PassCodeScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<PassCodeScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    userId?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    passCode?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => BoolWithAggregatesFilter, {nullable:true})
    isPassed?: InstanceType<typeof BoolWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
}

@InputType()
export class PassCodeUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => String, {nullable:false})
    passCode!: string;
    @Field(() => Boolean, {nullable:true})
    isPassed?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class PassCodeUncheckedUpdateManyInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    passCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    isPassed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class PassCodeUncheckedUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    passCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    isPassed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class PassCodeUpdateManyMutationInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    passCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    isPassed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class PassCodeUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    passCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    isPassed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class PassCodeWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => [PassCodeWhereInput], {nullable:true})
    AND?: Array<PassCodeWhereInput>;
    @Field(() => [PassCodeWhereInput], {nullable:true})
    OR?: Array<PassCodeWhereInput>;
    @Field(() => [PassCodeWhereInput], {nullable:true})
    NOT?: Array<PassCodeWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    userId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    passCode?: InstanceType<typeof StringFilter>;
    @Field(() => BoolFilter, {nullable:true})
    isPassed?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@InputType()
export class PassCodeWhereInput {
    @Field(() => [PassCodeWhereInput], {nullable:true})
    AND?: Array<PassCodeWhereInput>;
    @Field(() => [PassCodeWhereInput], {nullable:true})
    OR?: Array<PassCodeWhereInput>;
    @Field(() => [PassCodeWhereInput], {nullable:true})
    NOT?: Array<PassCodeWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    userId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    passCode?: InstanceType<typeof StringFilter>;
    @Field(() => BoolFilter, {nullable:true})
    isPassed?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@ObjectType()
export class PassCode {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => String, {nullable:false})
    passCode!: string;
    @Field(() => Boolean, {defaultValue:false,nullable:false})
    isPassed!: boolean;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
    @Field(() => Date, {nullable:false})
    updatedAt!: Date;
}

@ArgsType()
export class UpdateManyPassCodeArgs {
    @Field(() => PassCodeUpdateManyMutationInput, {nullable:false})
    @Type(() => PassCodeUpdateManyMutationInput)
    data!: InstanceType<typeof PassCodeUpdateManyMutationInput>;
    @Field(() => PassCodeWhereInput, {nullable:true})
    @Type(() => PassCodeWhereInput)
    where?: InstanceType<typeof PassCodeWhereInput>;
}

@ArgsType()
export class UpdateOnePassCodeArgs {
    @Field(() => PassCodeUpdateInput, {nullable:false})
    @Type(() => PassCodeUpdateInput)
    data!: InstanceType<typeof PassCodeUpdateInput>;
    @Field(() => PassCodeWhereUniqueInput, {nullable:false})
    @Type(() => PassCodeWhereUniqueInput)
    where!: Prisma.AtLeast<PassCodeWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpsertOnePassCodeArgs {
    @Field(() => PassCodeWhereUniqueInput, {nullable:false})
    @Type(() => PassCodeWhereUniqueInput)
    where!: Prisma.AtLeast<PassCodeWhereUniqueInput, 'id'>;
    @Field(() => PassCodeCreateInput, {nullable:false})
    @Type(() => PassCodeCreateInput)
    create!: InstanceType<typeof PassCodeCreateInput>;
    @Field(() => PassCodeUpdateInput, {nullable:false})
    @Type(() => PassCodeUpdateInput)
    update!: InstanceType<typeof PassCodeUpdateInput>;
}

@ArgsType()
export class CreateManyPaymentArgs {
    @Field(() => [PaymentCreateManyInput], {nullable:false})
    @Type(() => PaymentCreateManyInput)
    data!: Array<PaymentCreateManyInput>;
}

@ArgsType()
export class CreateOnePaymentArgs {
    @Field(() => PaymentCreateInput, {nullable:false})
    @Type(() => PaymentCreateInput)
    data!: InstanceType<typeof PaymentCreateInput>;
}

@ArgsType()
export class DeleteManyPaymentArgs {
    @Field(() => PaymentWhereInput, {nullable:true})
    @Type(() => PaymentWhereInput)
    where?: InstanceType<typeof PaymentWhereInput>;
}

@ArgsType()
export class DeleteOnePaymentArgs {
    @Field(() => PaymentWhereUniqueInput, {nullable:false})
    @Type(() => PaymentWhereUniqueInput)
    where!: Prisma.AtLeast<PaymentWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindFirstPaymentOrThrowArgs {
    @Field(() => PaymentWhereInput, {nullable:true})
    @Type(() => PaymentWhereInput)
    where?: InstanceType<typeof PaymentWhereInput>;
    @Field(() => [PaymentOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<PaymentOrderByWithRelationInput>;
    @Field(() => PaymentWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<PaymentWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [PaymentScalarFieldEnum], {nullable:true})
    distinct?: Array<`${PaymentScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstPaymentArgs {
    @Field(() => PaymentWhereInput, {nullable:true})
    @Type(() => PaymentWhereInput)
    where?: InstanceType<typeof PaymentWhereInput>;
    @Field(() => [PaymentOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<PaymentOrderByWithRelationInput>;
    @Field(() => PaymentWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<PaymentWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [PaymentScalarFieldEnum], {nullable:true})
    distinct?: Array<`${PaymentScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyPaymentArgs {
    @Field(() => PaymentWhereInput, {nullable:true})
    @Type(() => PaymentWhereInput)
    where?: InstanceType<typeof PaymentWhereInput>;
    @Field(() => [PaymentOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<PaymentOrderByWithRelationInput>;
    @Field(() => PaymentWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<PaymentWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [PaymentScalarFieldEnum], {nullable:true})
    distinct?: Array<`${PaymentScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniquePaymentOrThrowArgs {
    @Field(() => PaymentWhereUniqueInput, {nullable:false})
    @Type(() => PaymentWhereUniqueInput)
    where!: Prisma.AtLeast<PaymentWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindUniquePaymentArgs {
    @Field(() => PaymentWhereUniqueInput, {nullable:false})
    @Type(() => PaymentWhereUniqueInput)
    where!: Prisma.AtLeast<PaymentWhereUniqueInput, 'id'>;
}

@ArgsType()
export class PaymentAggregateArgs {
    @Field(() => PaymentWhereInput, {nullable:true})
    @Type(() => PaymentWhereInput)
    where?: InstanceType<typeof PaymentWhereInput>;
    @Field(() => [PaymentOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<PaymentOrderByWithRelationInput>;
    @Field(() => PaymentWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<PaymentWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class PaymentAvgOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    amount?: `${SortOrder}`;
}

@InputType()
export class PaymentCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    gateway?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    amount?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    methodDescription?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    stripePaymentId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class PaymentCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => Gateway, {nullable:false})
    gateway!: `${Gateway}`;
    @Field(() => Float, {nullable:false})
    amount!: number;
    @Field(() => String, {nullable:false})
    methodDescription!: string;
    @Field(() => String, {nullable:false})
    stripePaymentId!: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class PaymentCreateNestedOneWithoutOrderInput {
    @Field(() => PaymentCreateWithoutOrderInput, {nullable:true})
    @Type(() => PaymentCreateWithoutOrderInput)
    create?: InstanceType<typeof PaymentCreateWithoutOrderInput>;
    @Field(() => PaymentCreateOrConnectWithoutOrderInput, {nullable:true})
    @Type(() => PaymentCreateOrConnectWithoutOrderInput)
    connectOrCreate?: InstanceType<typeof PaymentCreateOrConnectWithoutOrderInput>;
    @Field(() => PaymentWhereUniqueInput, {nullable:true})
    @Type(() => PaymentWhereUniqueInput)
    connect?: Prisma.AtLeast<PaymentWhereUniqueInput, 'id'>;
}

@InputType()
export class PaymentCreateOrConnectWithoutOrderInput {
    @Field(() => PaymentWhereUniqueInput, {nullable:false})
    @Type(() => PaymentWhereUniqueInput)
    where!: Prisma.AtLeast<PaymentWhereUniqueInput, 'id'>;
    @Field(() => PaymentCreateWithoutOrderInput, {nullable:false})
    @Type(() => PaymentCreateWithoutOrderInput)
    create!: InstanceType<typeof PaymentCreateWithoutOrderInput>;
}

@InputType()
export class PaymentCreateWithoutOrderInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => Gateway, {nullable:false})
    gateway!: `${Gateway}`;
    @Field(() => Float, {nullable:false})
    amount!: number;
    @Field(() => String, {nullable:false})
    methodDescription!: string;
    @Field(() => String, {nullable:false})
    stripePaymentId!: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class PaymentCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => Gateway, {nullable:false})
    gateway!: `${Gateway}`;
    @Field(() => Float, {nullable:false})
    amount!: number;
    @Field(() => String, {nullable:false})
    methodDescription!: string;
    @Field(() => String, {nullable:false})
    stripePaymentId!: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => OrderCreateNestedOneWithoutPaymentInput, {nullable:true})
    order?: InstanceType<typeof OrderCreateNestedOneWithoutPaymentInput>;
}

@ArgsType()
export class PaymentGroupByArgs {
    @Field(() => PaymentWhereInput, {nullable:true})
    @Type(() => PaymentWhereInput)
    where?: InstanceType<typeof PaymentWhereInput>;
    @Field(() => [PaymentOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<PaymentOrderByWithAggregationInput>;
    @Field(() => [PaymentScalarFieldEnum], {nullable:false})
    by!: Array<`${PaymentScalarFieldEnum}`>;
    @Field(() => PaymentScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof PaymentScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class PaymentMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    gateway?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    amount?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    methodDescription?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    stripePaymentId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class PaymentMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    gateway?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    amount?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    methodDescription?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    stripePaymentId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class PaymentNullableRelationFilter {
    @Field(() => PaymentWhereInput, {nullable:true})
    is?: InstanceType<typeof PaymentWhereInput>;
    @Field(() => PaymentWhereInput, {nullable:true})
    isNot?: InstanceType<typeof PaymentWhereInput>;
}

@InputType()
export class PaymentOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    gateway?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    amount?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    methodDescription?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    stripePaymentId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => PaymentCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof PaymentCountOrderByAggregateInput>;
    @Field(() => PaymentAvgOrderByAggregateInput, {nullable:true})
    _avg?: InstanceType<typeof PaymentAvgOrderByAggregateInput>;
    @Field(() => PaymentMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof PaymentMaxOrderByAggregateInput>;
    @Field(() => PaymentMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof PaymentMinOrderByAggregateInput>;
    @Field(() => PaymentSumOrderByAggregateInput, {nullable:true})
    _sum?: InstanceType<typeof PaymentSumOrderByAggregateInput>;
}

@InputType()
export class PaymentOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    gateway?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    amount?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    methodDescription?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    stripePaymentId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => OrderOrderByWithRelationInput, {nullable:true})
    order?: InstanceType<typeof OrderOrderByWithRelationInput>;
}

@InputType()
export class PaymentScalarWhereWithAggregatesInput {
    @Field(() => [PaymentScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<PaymentScalarWhereWithAggregatesInput>;
    @Field(() => [PaymentScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<PaymentScalarWhereWithAggregatesInput>;
    @Field(() => [PaymentScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<PaymentScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => EnumGatewayWithAggregatesFilter, {nullable:true})
    gateway?: InstanceType<typeof EnumGatewayWithAggregatesFilter>;
    @Field(() => FloatWithAggregatesFilter, {nullable:true})
    amount?: InstanceType<typeof FloatWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    methodDescription?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    stripePaymentId?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
}

@InputType()
export class PaymentSumOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    amount?: `${SortOrder}`;
}

@InputType()
export class PaymentUncheckedCreateWithoutOrderInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => Gateway, {nullable:false})
    gateway!: `${Gateway}`;
    @Field(() => Float, {nullable:false})
    amount!: number;
    @Field(() => String, {nullable:false})
    methodDescription!: string;
    @Field(() => String, {nullable:false})
    stripePaymentId!: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class PaymentUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => Gateway, {nullable:false})
    gateway!: `${Gateway}`;
    @Field(() => Float, {nullable:false})
    amount!: number;
    @Field(() => String, {nullable:false})
    methodDescription!: string;
    @Field(() => String, {nullable:false})
    stripePaymentId!: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => OrderUncheckedCreateNestedOneWithoutPaymentInput, {nullable:true})
    order?: InstanceType<typeof OrderUncheckedCreateNestedOneWithoutPaymentInput>;
}

@InputType()
export class PaymentUncheckedUpdateManyInput {
    @Field(() => EnumGatewayFieldUpdateOperationsInput, {nullable:true})
    gateway?: InstanceType<typeof EnumGatewayFieldUpdateOperationsInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    amount?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    methodDescription?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    stripePaymentId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class PaymentUncheckedUpdateWithoutOrderInput {
    @Field(() => EnumGatewayFieldUpdateOperationsInput, {nullable:true})
    gateway?: InstanceType<typeof EnumGatewayFieldUpdateOperationsInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    amount?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    methodDescription?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    stripePaymentId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class PaymentUncheckedUpdateInput {
    @Field(() => EnumGatewayFieldUpdateOperationsInput, {nullable:true})
    gateway?: InstanceType<typeof EnumGatewayFieldUpdateOperationsInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    amount?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    methodDescription?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    stripePaymentId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => OrderUncheckedUpdateOneWithoutPaymentNestedInput, {nullable:true})
    order?: InstanceType<typeof OrderUncheckedUpdateOneWithoutPaymentNestedInput>;
}

@InputType()
export class PaymentUpdateManyMutationInput {
    @Field(() => EnumGatewayFieldUpdateOperationsInput, {nullable:true})
    gateway?: InstanceType<typeof EnumGatewayFieldUpdateOperationsInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    amount?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    methodDescription?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    stripePaymentId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class PaymentUpdateOneWithoutOrderNestedInput {
    @Field(() => PaymentCreateWithoutOrderInput, {nullable:true})
    @Type(() => PaymentCreateWithoutOrderInput)
    create?: InstanceType<typeof PaymentCreateWithoutOrderInput>;
    @Field(() => PaymentCreateOrConnectWithoutOrderInput, {nullable:true})
    @Type(() => PaymentCreateOrConnectWithoutOrderInput)
    connectOrCreate?: InstanceType<typeof PaymentCreateOrConnectWithoutOrderInput>;
    @Field(() => PaymentUpsertWithoutOrderInput, {nullable:true})
    @Type(() => PaymentUpsertWithoutOrderInput)
    upsert?: InstanceType<typeof PaymentUpsertWithoutOrderInput>;
    @Field(() => Boolean, {nullable:true})
    disconnect?: boolean;
    @Field(() => PaymentWhereInput, {nullable:true})
    @Type(() => PaymentWhereInput)
    delete?: InstanceType<typeof PaymentWhereInput>;
    @Field(() => PaymentWhereUniqueInput, {nullable:true})
    @Type(() => PaymentWhereUniqueInput)
    connect?: Prisma.AtLeast<PaymentWhereUniqueInput, 'id'>;
    @Field(() => PaymentUpdateToOneWithWhereWithoutOrderInput, {nullable:true})
    @Type(() => PaymentUpdateToOneWithWhereWithoutOrderInput)
    update?: InstanceType<typeof PaymentUpdateToOneWithWhereWithoutOrderInput>;
}

@InputType()
export class PaymentUpdateToOneWithWhereWithoutOrderInput {
    @Field(() => PaymentWhereInput, {nullable:true})
    @Type(() => PaymentWhereInput)
    where?: InstanceType<typeof PaymentWhereInput>;
    @Field(() => PaymentUpdateWithoutOrderInput, {nullable:false})
    @Type(() => PaymentUpdateWithoutOrderInput)
    data!: InstanceType<typeof PaymentUpdateWithoutOrderInput>;
}

@InputType()
export class PaymentUpdateWithoutOrderInput {
    @Field(() => EnumGatewayFieldUpdateOperationsInput, {nullable:true})
    gateway?: InstanceType<typeof EnumGatewayFieldUpdateOperationsInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    amount?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    methodDescription?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    stripePaymentId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class PaymentUpdateInput {
    @Field(() => EnumGatewayFieldUpdateOperationsInput, {nullable:true})
    gateway?: InstanceType<typeof EnumGatewayFieldUpdateOperationsInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    amount?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    methodDescription?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    stripePaymentId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => OrderUpdateOneWithoutPaymentNestedInput, {nullable:true})
    order?: InstanceType<typeof OrderUpdateOneWithoutPaymentNestedInput>;
}

@InputType()
export class PaymentUpsertWithoutOrderInput {
    @Field(() => PaymentUpdateWithoutOrderInput, {nullable:false})
    @Type(() => PaymentUpdateWithoutOrderInput)
    update!: InstanceType<typeof PaymentUpdateWithoutOrderInput>;
    @Field(() => PaymentCreateWithoutOrderInput, {nullable:false})
    @Type(() => PaymentCreateWithoutOrderInput)
    create!: InstanceType<typeof PaymentCreateWithoutOrderInput>;
    @Field(() => PaymentWhereInput, {nullable:true})
    @Type(() => PaymentWhereInput)
    where?: InstanceType<typeof PaymentWhereInput>;
}

@InputType()
export class PaymentWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => [PaymentWhereInput], {nullable:true})
    AND?: Array<PaymentWhereInput>;
    @Field(() => [PaymentWhereInput], {nullable:true})
    OR?: Array<PaymentWhereInput>;
    @Field(() => [PaymentWhereInput], {nullable:true})
    NOT?: Array<PaymentWhereInput>;
    @Field(() => EnumGatewayFilter, {nullable:true})
    gateway?: InstanceType<typeof EnumGatewayFilter>;
    @Field(() => FloatFilter, {nullable:true})
    amount?: InstanceType<typeof FloatFilter>;
    @Field(() => StringFilter, {nullable:true})
    methodDescription?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    stripePaymentId?: InstanceType<typeof StringFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => OrderNullableRelationFilter, {nullable:true})
    order?: InstanceType<typeof OrderNullableRelationFilter>;
}

@InputType()
export class PaymentWhereInput {
    @Field(() => [PaymentWhereInput], {nullable:true})
    AND?: Array<PaymentWhereInput>;
    @Field(() => [PaymentWhereInput], {nullable:true})
    OR?: Array<PaymentWhereInput>;
    @Field(() => [PaymentWhereInput], {nullable:true})
    NOT?: Array<PaymentWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => EnumGatewayFilter, {nullable:true})
    gateway?: InstanceType<typeof EnumGatewayFilter>;
    @Field(() => FloatFilter, {nullable:true})
    amount?: InstanceType<typeof FloatFilter>;
    @Field(() => StringFilter, {nullable:true})
    methodDescription?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    stripePaymentId?: InstanceType<typeof StringFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => OrderNullableRelationFilter, {nullable:true})
    order?: InstanceType<typeof OrderNullableRelationFilter>;
}

@ObjectType()
export class Payment {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => Gateway, {nullable:false})
    gateway!: `${Gateway}`;
    @Field(() => Float, {nullable:false})
    amount!: number;
    @Field(() => String, {nullable:false})
    methodDescription!: string;
    @Field(() => String, {nullable:false})
    stripePaymentId!: string;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
    @Field(() => Date, {nullable:false})
    updatedAt!: Date;
    @Field(() => Order, {nullable:true})
    order?: InstanceType<typeof Order> | null;
}

@ArgsType()
export class UpdateManyPaymentArgs {
    @Field(() => PaymentUpdateManyMutationInput, {nullable:false})
    @Type(() => PaymentUpdateManyMutationInput)
    data!: InstanceType<typeof PaymentUpdateManyMutationInput>;
    @Field(() => PaymentWhereInput, {nullable:true})
    @Type(() => PaymentWhereInput)
    where?: InstanceType<typeof PaymentWhereInput>;
}

@ArgsType()
export class UpdateOnePaymentArgs {
    @Field(() => PaymentUpdateInput, {nullable:false})
    @Type(() => PaymentUpdateInput)
    data!: InstanceType<typeof PaymentUpdateInput>;
    @Field(() => PaymentWhereUniqueInput, {nullable:false})
    @Type(() => PaymentWhereUniqueInput)
    where!: Prisma.AtLeast<PaymentWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpsertOnePaymentArgs {
    @Field(() => PaymentWhereUniqueInput, {nullable:false})
    @Type(() => PaymentWhereUniqueInput)
    where!: Prisma.AtLeast<PaymentWhereUniqueInput, 'id'>;
    @Field(() => PaymentCreateInput, {nullable:false})
    @Type(() => PaymentCreateInput)
    create!: InstanceType<typeof PaymentCreateInput>;
    @Field(() => PaymentUpdateInput, {nullable:false})
    @Type(() => PaymentUpdateInput)
    update!: InstanceType<typeof PaymentUpdateInput>;
}

@InputType()
export class PaymentConfirmationSystemMessageCreateEnvelopeInput {
    @Field(() => PaymentConfirmationSystemMessageCreateInput, {nullable:true})
    @Type(() => PaymentConfirmationSystemMessageCreateInput)
    set?: InstanceType<typeof PaymentConfirmationSystemMessageCreateInput>;
}

@InputType()
export class PaymentConfirmationSystemMessageCreateInput {
    @Field(() => SystemIcons, {nullable:false})
    icon!: `${SystemIcons}`;
    @Field(() => String, {nullable:false})
    text1!: string;
    @Field(() => String, {nullable:false})
    text2!: string;
    @Field(() => String, {nullable:false})
    shippingAddress!: string;
    @Field(() => String, {nullable:false})
    note!: string;
    @Field(() => String, {nullable:false})
    orderId!: string;
    @Field(() => Boolean, {nullable:true})
    localTxn?: boolean;
    @Field(() => ConversationType, {nullable:true})
    conversationType?: `${ConversationType}`;
}

@InputType()
export class PaymentConfirmationSystemMessageOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    icon?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    text1?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    text2?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    shippingAddress?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    note?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    orderId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    localTxn?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    conversationType?: `${SortOrder}`;
}

@InputType()
export class PaymentConfirmationSystemMessageUpdateEnvelopeInput {
    @Field(() => PaymentConfirmationSystemMessageCreateInput, {nullable:true})
    @Type(() => PaymentConfirmationSystemMessageCreateInput)
    set?: InstanceType<typeof PaymentConfirmationSystemMessageCreateInput>;
    @Field(() => PaymentConfirmationSystemMessageUpdateInput, {nullable:true})
    @Type(() => PaymentConfirmationSystemMessageUpdateInput)
    update?: InstanceType<typeof PaymentConfirmationSystemMessageUpdateInput>;
}

@InputType()
export class PaymentConfirmationSystemMessageUpdateInput {
    @Field(() => EnumSystemIconsFieldUpdateOperationsInput, {nullable:true})
    icon?: InstanceType<typeof EnumSystemIconsFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    text1?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    text2?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    shippingAddress?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    note?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    orderId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    localTxn?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableEnumConversationTypeFieldUpdateOperationsInput, {nullable:true})
    conversationType?: InstanceType<typeof NullableEnumConversationTypeFieldUpdateOperationsInput>;
}

@InputType()
export class PaymentConfirmationSystemMessageWhereInput {
    @Field(() => [PaymentConfirmationSystemMessageWhereInput], {nullable:true})
    AND?: Array<PaymentConfirmationSystemMessageWhereInput>;
    @Field(() => [PaymentConfirmationSystemMessageWhereInput], {nullable:true})
    OR?: Array<PaymentConfirmationSystemMessageWhereInput>;
    @Field(() => [PaymentConfirmationSystemMessageWhereInput], {nullable:true})
    NOT?: Array<PaymentConfirmationSystemMessageWhereInput>;
    @Field(() => EnumSystemIconsFilter, {nullable:true})
    icon?: InstanceType<typeof EnumSystemIconsFilter>;
    @Field(() => StringFilter, {nullable:true})
    text1?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    text2?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    shippingAddress?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    note?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    orderId?: InstanceType<typeof StringFilter>;
    @Field(() => BoolNullableFilter, {nullable:true})
    localTxn?: InstanceType<typeof BoolNullableFilter>;
    @Field(() => EnumConversationTypeNullableFilter, {nullable:true})
    conversationType?: InstanceType<typeof EnumConversationTypeNullableFilter>;
}

@ObjectType()
export class PaymentConfirmationSystemMessage {
    @Field(() => SystemIcons, {nullable:false})
    icon!: `${SystemIcons}`;
    @Field(() => String, {nullable:false})
    text1!: string;
    @Field(() => String, {nullable:false})
    text2!: string;
    @Field(() => String, {nullable:false})
    shippingAddress!: string;
    @Field(() => String, {nullable:false})
    note!: string;
    @Field(() => String, {nullable:false})
    orderId!: string;
    @Field(() => Boolean, {nullable:true})
    localTxn!: boolean | null;
    @Field(() => ConversationType, {nullable:true})
    conversationType!: `${ConversationType}` | null;
}

@InputType()
export class PaymentLinkMessageCreateEnvelopeInput {
    @Field(() => PaymentLinkMessageCreateInput, {nullable:true})
    @Type(() => PaymentLinkMessageCreateInput)
    set?: InstanceType<typeof PaymentLinkMessageCreateInput>;
}

@InputType()
export class PaymentLinkMessageCreateInput {
    @Field(() => String, {nullable:false})
    mainText!: string;
    @Field(() => String, {nullable:false})
    disclaimerText!: string;
    @Field(() => String, {nullable:false})
    amount!: string;
}

@InputType()
export class PaymentLinkMessageOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    mainText?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    disclaimerText?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    amount?: `${SortOrder}`;
}

@InputType()
export class PaymentLinkMessageUpdateEnvelopeInput {
    @Field(() => PaymentLinkMessageCreateInput, {nullable:true})
    @Type(() => PaymentLinkMessageCreateInput)
    set?: InstanceType<typeof PaymentLinkMessageCreateInput>;
    @Field(() => PaymentLinkMessageUpdateInput, {nullable:true})
    @Type(() => PaymentLinkMessageUpdateInput)
    update?: InstanceType<typeof PaymentLinkMessageUpdateInput>;
}

@InputType()
export class PaymentLinkMessageUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    mainText?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    disclaimerText?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    amount?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}

@InputType()
export class PaymentLinkMessageWhereInput {
    @Field(() => [PaymentLinkMessageWhereInput], {nullable:true})
    AND?: Array<PaymentLinkMessageWhereInput>;
    @Field(() => [PaymentLinkMessageWhereInput], {nullable:true})
    OR?: Array<PaymentLinkMessageWhereInput>;
    @Field(() => [PaymentLinkMessageWhereInput], {nullable:true})
    NOT?: Array<PaymentLinkMessageWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    mainText?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    disclaimerText?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    amount?: InstanceType<typeof StringFilter>;
}

@ObjectType()
export class PaymentLinkMessage {
    @Field(() => String, {nullable:false})
    mainText!: string;
    @Field(() => String, {nullable:false})
    disclaimerText!: string;
    @Field(() => String, {nullable:false})
    amount!: string;
}

@InputType()
export class PaymentLinkUpdateMessageCreateEnvelopeInput {
    @Field(() => PaymentLinkUpdateMessageCreateInput, {nullable:true})
    @Type(() => PaymentLinkUpdateMessageCreateInput)
    set?: InstanceType<typeof PaymentLinkUpdateMessageCreateInput>;
}

@InputType()
export class PaymentLinkUpdateMessageCreateInput {
    @Field(() => PaymentLinkStatus, {nullable:false})
    status!: `${PaymentLinkStatus}`;
    @Field(() => String, {nullable:false})
    amount!: string;
}

@InputType()
export class PaymentLinkUpdateMessageOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    status?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    amount?: `${SortOrder}`;
}

@InputType()
export class PaymentLinkUpdateMessageUpdateInput {
    @Field(() => EnumPaymentLinkStatusFieldUpdateOperationsInput, {nullable:true})
    status?: InstanceType<typeof EnumPaymentLinkStatusFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    amount?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}

@InputType()
export class PaymentLinkUpdateMessageWhereInput {
    @Field(() => [PaymentLinkUpdateMessageWhereInput], {nullable:true})
    AND?: Array<PaymentLinkUpdateMessageWhereInput>;
    @Field(() => [PaymentLinkUpdateMessageWhereInput], {nullable:true})
    OR?: Array<PaymentLinkUpdateMessageWhereInput>;
    @Field(() => [PaymentLinkUpdateMessageWhereInput], {nullable:true})
    NOT?: Array<PaymentLinkUpdateMessageWhereInput>;
    @Field(() => EnumPaymentLinkStatusFilter, {nullable:true})
    status?: InstanceType<typeof EnumPaymentLinkStatusFilter>;
    @Field(() => StringFilter, {nullable:true})
    amount?: InstanceType<typeof StringFilter>;
}

@ObjectType()
export class PaymentLinkUpdateMessage {
    @Field(() => PaymentLinkStatus, {nullable:false})
    status!: `${PaymentLinkStatus}`;
    @Field(() => String, {nullable:false})
    amount!: string;
}

@InputType()
export class PayoutNotificationPayloadCreateEnvelopeInput {
    @Field(() => PayoutNotificationPayloadCreateInput, {nullable:true})
    @Type(() => PayoutNotificationPayloadCreateInput)
    set?: InstanceType<typeof PayoutNotificationPayloadCreateInput>;
}

@InputType()
export class PayoutNotificationPayloadCreateInput {
    @Field(() => PayoutNotificationType, {nullable:false})
    type!: `${PayoutNotificationType}`;
    @Field(() => String, {nullable:false})
    conversationId!: string;
    @Field(() => String, {nullable:false})
    orderId!: string;
    @Field(() => String, {nullable:false})
    payoutID!: string;
}

@InputType()
export class PayoutNotificationPayloadOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    conversationId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    orderId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    payoutID?: `${SortOrder}`;
}

@InputType()
export class PayoutNotificationPayloadUpdateEnvelopeInput {
    @Field(() => PayoutNotificationPayloadCreateInput, {nullable:true})
    @Type(() => PayoutNotificationPayloadCreateInput)
    set?: InstanceType<typeof PayoutNotificationPayloadCreateInput>;
    @Field(() => PayoutNotificationPayloadUpdateInput, {nullable:true})
    @Type(() => PayoutNotificationPayloadUpdateInput)
    update?: InstanceType<typeof PayoutNotificationPayloadUpdateInput>;
}

@InputType()
export class PayoutNotificationPayloadUpdateInput {
    @Field(() => EnumPayoutNotificationTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumPayoutNotificationTypeFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    conversationId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    orderId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    payoutID?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}

@InputType()
export class PayoutNotificationPayloadWhereInput {
    @Field(() => [PayoutNotificationPayloadWhereInput], {nullable:true})
    AND?: Array<PayoutNotificationPayloadWhereInput>;
    @Field(() => [PayoutNotificationPayloadWhereInput], {nullable:true})
    OR?: Array<PayoutNotificationPayloadWhereInput>;
    @Field(() => [PayoutNotificationPayloadWhereInput], {nullable:true})
    NOT?: Array<PayoutNotificationPayloadWhereInput>;
    @Field(() => EnumPayoutNotificationTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumPayoutNotificationTypeFilter>;
    @Field(() => StringFilter, {nullable:true})
    conversationId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    orderId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    payoutID?: InstanceType<typeof StringFilter>;
}

@ObjectType()
export class PayoutNotificationPayload {
    @Field(() => PayoutNotificationType, {nullable:false})
    type!: `${PayoutNotificationType}`;
    @Field(() => String, {nullable:false})
    conversationId!: string;
    @Field(() => String, {nullable:false})
    orderId!: string;
    @Field(() => String, {nullable:false})
    payoutID!: string;
}

@ArgsType()
export class CreateManyPayoutRequestLogArgs {
    @Field(() => [PayoutRequestLogCreateManyInput], {nullable:false})
    @Type(() => PayoutRequestLogCreateManyInput)
    data!: Array<PayoutRequestLogCreateManyInput>;
}

@ArgsType()
export class CreateOnePayoutRequestLogArgs {
    @Field(() => PayoutRequestLogCreateInput, {nullable:false})
    @Type(() => PayoutRequestLogCreateInput)
    data!: InstanceType<typeof PayoutRequestLogCreateInput>;
}

@ArgsType()
export class DeleteManyPayoutRequestLogArgs {
    @Field(() => PayoutRequestLogWhereInput, {nullable:true})
    @Type(() => PayoutRequestLogWhereInput)
    where?: InstanceType<typeof PayoutRequestLogWhereInput>;
}

@ArgsType()
export class DeleteOnePayoutRequestLogArgs {
    @Field(() => PayoutRequestLogWhereUniqueInput, {nullable:false})
    @Type(() => PayoutRequestLogWhereUniqueInput)
    where!: Prisma.AtLeast<PayoutRequestLogWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindFirstPayoutRequestLogOrThrowArgs {
    @Field(() => PayoutRequestLogWhereInput, {nullable:true})
    @Type(() => PayoutRequestLogWhereInput)
    where?: InstanceType<typeof PayoutRequestLogWhereInput>;
    @Field(() => [PayoutRequestLogOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<PayoutRequestLogOrderByWithRelationInput>;
    @Field(() => PayoutRequestLogWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<PayoutRequestLogWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [PayoutRequestLogScalarFieldEnum], {nullable:true})
    distinct?: Array<`${PayoutRequestLogScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstPayoutRequestLogArgs {
    @Field(() => PayoutRequestLogWhereInput, {nullable:true})
    @Type(() => PayoutRequestLogWhereInput)
    where?: InstanceType<typeof PayoutRequestLogWhereInput>;
    @Field(() => [PayoutRequestLogOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<PayoutRequestLogOrderByWithRelationInput>;
    @Field(() => PayoutRequestLogWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<PayoutRequestLogWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [PayoutRequestLogScalarFieldEnum], {nullable:true})
    distinct?: Array<`${PayoutRequestLogScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyPayoutRequestLogArgs {
    @Field(() => PayoutRequestLogWhereInput, {nullable:true})
    @Type(() => PayoutRequestLogWhereInput)
    where?: InstanceType<typeof PayoutRequestLogWhereInput>;
    @Field(() => [PayoutRequestLogOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<PayoutRequestLogOrderByWithRelationInput>;
    @Field(() => PayoutRequestLogWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<PayoutRequestLogWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [PayoutRequestLogScalarFieldEnum], {nullable:true})
    distinct?: Array<`${PayoutRequestLogScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniquePayoutRequestLogOrThrowArgs {
    @Field(() => PayoutRequestLogWhereUniqueInput, {nullable:false})
    @Type(() => PayoutRequestLogWhereUniqueInput)
    where!: Prisma.AtLeast<PayoutRequestLogWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindUniquePayoutRequestLogArgs {
    @Field(() => PayoutRequestLogWhereUniqueInput, {nullable:false})
    @Type(() => PayoutRequestLogWhereUniqueInput)
    where!: Prisma.AtLeast<PayoutRequestLogWhereUniqueInput, 'id'>;
}

@ArgsType()
export class PayoutRequestLogAggregateArgs {
    @Field(() => PayoutRequestLogWhereInput, {nullable:true})
    @Type(() => PayoutRequestLogWhereInput)
    where?: InstanceType<typeof PayoutRequestLogWhereInput>;
    @Field(() => [PayoutRequestLogOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<PayoutRequestLogOrderByWithRelationInput>;
    @Field(() => PayoutRequestLogWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<PayoutRequestLogWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class PayoutRequestLogCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    email?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    valid?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class PayoutRequestLogCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    email!: string;
    @Field(() => Boolean, {nullable:false})
    valid!: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class PayoutRequestLogCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    email!: string;
    @Field(() => Boolean, {nullable:false})
    valid!: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@ArgsType()
export class PayoutRequestLogGroupByArgs {
    @Field(() => PayoutRequestLogWhereInput, {nullable:true})
    @Type(() => PayoutRequestLogWhereInput)
    where?: InstanceType<typeof PayoutRequestLogWhereInput>;
    @Field(() => [PayoutRequestLogOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<PayoutRequestLogOrderByWithAggregationInput>;
    @Field(() => [PayoutRequestLogScalarFieldEnum], {nullable:false})
    by!: Array<`${PayoutRequestLogScalarFieldEnum}`>;
    @Field(() => PayoutRequestLogScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof PayoutRequestLogScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class PayoutRequestLogMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    email?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    valid?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class PayoutRequestLogMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    email?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    valid?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class PayoutRequestLogOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    email?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    valid?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => PayoutRequestLogCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof PayoutRequestLogCountOrderByAggregateInput>;
    @Field(() => PayoutRequestLogMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof PayoutRequestLogMaxOrderByAggregateInput>;
    @Field(() => PayoutRequestLogMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof PayoutRequestLogMinOrderByAggregateInput>;
}

@InputType()
export class PayoutRequestLogOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    email?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    valid?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class PayoutRequestLogScalarWhereWithAggregatesInput {
    @Field(() => [PayoutRequestLogScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<PayoutRequestLogScalarWhereWithAggregatesInput>;
    @Field(() => [PayoutRequestLogScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<PayoutRequestLogScalarWhereWithAggregatesInput>;
    @Field(() => [PayoutRequestLogScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<PayoutRequestLogScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    email?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => BoolWithAggregatesFilter, {nullable:true})
    valid?: InstanceType<typeof BoolWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
}

@InputType()
export class PayoutRequestLogUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    email!: string;
    @Field(() => Boolean, {nullable:false})
    valid!: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class PayoutRequestLogUncheckedUpdateManyInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    valid?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class PayoutRequestLogUncheckedUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    valid?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class PayoutRequestLogUpdateManyMutationInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    valid?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class PayoutRequestLogUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    valid?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class PayoutRequestLogWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => [PayoutRequestLogWhereInput], {nullable:true})
    AND?: Array<PayoutRequestLogWhereInput>;
    @Field(() => [PayoutRequestLogWhereInput], {nullable:true})
    OR?: Array<PayoutRequestLogWhereInput>;
    @Field(() => [PayoutRequestLogWhereInput], {nullable:true})
    NOT?: Array<PayoutRequestLogWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    email?: InstanceType<typeof StringFilter>;
    @Field(() => BoolFilter, {nullable:true})
    valid?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@InputType()
export class PayoutRequestLogWhereInput {
    @Field(() => [PayoutRequestLogWhereInput], {nullable:true})
    AND?: Array<PayoutRequestLogWhereInput>;
    @Field(() => [PayoutRequestLogWhereInput], {nullable:true})
    OR?: Array<PayoutRequestLogWhereInput>;
    @Field(() => [PayoutRequestLogWhereInput], {nullable:true})
    NOT?: Array<PayoutRequestLogWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    email?: InstanceType<typeof StringFilter>;
    @Field(() => BoolFilter, {nullable:true})
    valid?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@ObjectType()
export class PayoutRequestLog {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    email!: string;
    @Field(() => Boolean, {nullable:false})
    valid!: boolean;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
    @Field(() => Date, {nullable:false})
    updatedAt!: Date;
}

@ArgsType()
export class UpdateManyPayoutRequestLogArgs {
    @Field(() => PayoutRequestLogUpdateManyMutationInput, {nullable:false})
    @Type(() => PayoutRequestLogUpdateManyMutationInput)
    data!: InstanceType<typeof PayoutRequestLogUpdateManyMutationInput>;
    @Field(() => PayoutRequestLogWhereInput, {nullable:true})
    @Type(() => PayoutRequestLogWhereInput)
    where?: InstanceType<typeof PayoutRequestLogWhereInput>;
}

@ArgsType()
export class UpdateOnePayoutRequestLogArgs {
    @Field(() => PayoutRequestLogUpdateInput, {nullable:false})
    @Type(() => PayoutRequestLogUpdateInput)
    data!: InstanceType<typeof PayoutRequestLogUpdateInput>;
    @Field(() => PayoutRequestLogWhereUniqueInput, {nullable:false})
    @Type(() => PayoutRequestLogWhereUniqueInput)
    where!: Prisma.AtLeast<PayoutRequestLogWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpsertOnePayoutRequestLogArgs {
    @Field(() => PayoutRequestLogWhereUniqueInput, {nullable:false})
    @Type(() => PayoutRequestLogWhereUniqueInput)
    where!: Prisma.AtLeast<PayoutRequestLogWhereUniqueInput, 'id'>;
    @Field(() => PayoutRequestLogCreateInput, {nullable:false})
    @Type(() => PayoutRequestLogCreateInput)
    create!: InstanceType<typeof PayoutRequestLogCreateInput>;
    @Field(() => PayoutRequestLogUpdateInput, {nullable:false})
    @Type(() => PayoutRequestLogUpdateInput)
    update!: InstanceType<typeof PayoutRequestLogUpdateInput>;
}

@InputType()
export class PersonalDMCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    initiatedBy?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    participantIds?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    lastMessageId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    valid?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    enabled?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    payload?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    consumersLastSeen?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    providersLastSeen?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class PersonalDMCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    initiatedBy!: string;
    @Field(() => PersonalDMCreateparticipantIdsInput, {nullable:true})
    participantIds?: InstanceType<typeof PersonalDMCreateparticipantIdsInput>;
    @Field(() => String, {nullable:true})
    lastMessageId?: string;
    @Field(() => Boolean, {nullable:true})
    valid?: boolean;
    @Field(() => Boolean, {nullable:true})
    enabled?: boolean;
    @Field(() => String, {nullable:true})
    payload?: string;
    @Field(() => String, {nullable:true})
    consumersLastSeen?: string;
    @Field(() => String, {nullable:true})
    providersLastSeen?: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class PersonalDMCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    initiatedBy!: string;
    @Field(() => PersonalDMCreateparticipantIdsInput, {nullable:true})
    participantIds?: InstanceType<typeof PersonalDMCreateparticipantIdsInput>;
    @Field(() => String, {nullable:true})
    lastMessageId?: string;
    @Field(() => Boolean, {nullable:true})
    valid?: boolean;
    @Field(() => Boolean, {nullable:true})
    enabled?: boolean;
    @Field(() => String, {nullable:true})
    payload?: string;
    @Field(() => String, {nullable:true})
    consumersLastSeen?: string;
    @Field(() => String, {nullable:true})
    providersLastSeen?: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class PersonalDMCreateparticipantIdsInput {
    @Field(() => [String], {nullable:false})
    set!: Array<string>;
}

@InputType()
export class PersonalDMMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    initiatedBy?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    lastMessageId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    valid?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    enabled?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    payload?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    consumersLastSeen?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    providersLastSeen?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class PersonalDMMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    initiatedBy?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    lastMessageId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    valid?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    enabled?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    payload?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    consumersLastSeen?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    providersLastSeen?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class PersonalDMOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    initiatedBy?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    participantIds?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    lastMessageId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    valid?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    enabled?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    payload?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    consumersLastSeen?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    providersLastSeen?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => PersonalDMCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof PersonalDMCountOrderByAggregateInput>;
    @Field(() => PersonalDMMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof PersonalDMMaxOrderByAggregateInput>;
    @Field(() => PersonalDMMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof PersonalDMMinOrderByAggregateInput>;
}

@InputType()
export class PersonalDMOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    initiatedBy?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    participantIds?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    lastMessageId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    valid?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    enabled?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    payload?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    consumersLastSeen?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    providersLastSeen?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class PersonalDMScalarWhereWithAggregatesInput {
    @Field(() => [PersonalDMScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<PersonalDMScalarWhereWithAggregatesInput>;
    @Field(() => [PersonalDMScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<PersonalDMScalarWhereWithAggregatesInput>;
    @Field(() => [PersonalDMScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<PersonalDMScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    initiatedBy?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    participantIds?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    lastMessageId?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => BoolWithAggregatesFilter, {nullable:true})
    valid?: InstanceType<typeof BoolWithAggregatesFilter>;
    @Field(() => BoolWithAggregatesFilter, {nullable:true})
    enabled?: InstanceType<typeof BoolWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    payload?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    consumersLastSeen?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    providersLastSeen?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
}

@InputType()
export class PersonalDMUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    initiatedBy!: string;
    @Field(() => PersonalDMCreateparticipantIdsInput, {nullable:true})
    participantIds?: InstanceType<typeof PersonalDMCreateparticipantIdsInput>;
    @Field(() => String, {nullable:true})
    lastMessageId?: string;
    @Field(() => Boolean, {nullable:true})
    valid?: boolean;
    @Field(() => Boolean, {nullable:true})
    enabled?: boolean;
    @Field(() => String, {nullable:true})
    payload?: string;
    @Field(() => String, {nullable:true})
    consumersLastSeen?: string;
    @Field(() => String, {nullable:true})
    providersLastSeen?: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class PersonalDMUncheckedUpdateManyInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    initiatedBy?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => PersonalDMUpdateparticipantIdsInput, {nullable:true})
    participantIds?: InstanceType<typeof PersonalDMUpdateparticipantIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    lastMessageId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    valid?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    enabled?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    payload?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    consumersLastSeen?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    providersLastSeen?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class PersonalDMUncheckedUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    initiatedBy?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => PersonalDMUpdateparticipantIdsInput, {nullable:true})
    participantIds?: InstanceType<typeof PersonalDMUpdateparticipantIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    lastMessageId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    valid?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    enabled?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    payload?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    consumersLastSeen?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    providersLastSeen?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class PersonalDMUpdateManyMutationInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    initiatedBy?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => PersonalDMUpdateparticipantIdsInput, {nullable:true})
    participantIds?: InstanceType<typeof PersonalDMUpdateparticipantIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    lastMessageId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    valid?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    enabled?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    payload?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    consumersLastSeen?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    providersLastSeen?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class PersonalDMUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    initiatedBy?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => PersonalDMUpdateparticipantIdsInput, {nullable:true})
    participantIds?: InstanceType<typeof PersonalDMUpdateparticipantIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    lastMessageId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    valid?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    enabled?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    payload?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    consumersLastSeen?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    providersLastSeen?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class PersonalDMUpdateparticipantIdsInput {
    @Field(() => [String], {nullable:true})
    set?: Array<string>;
    @Field(() => [String], {nullable:true})
    push?: Array<string>;
}

@InputType()
export class PersonalDMWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => [PersonalDMWhereInput], {nullable:true})
    AND?: Array<PersonalDMWhereInput>;
    @Field(() => [PersonalDMWhereInput], {nullable:true})
    OR?: Array<PersonalDMWhereInput>;
    @Field(() => [PersonalDMWhereInput], {nullable:true})
    NOT?: Array<PersonalDMWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    initiatedBy?: InstanceType<typeof StringFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    participantIds?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    lastMessageId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => BoolFilter, {nullable:true})
    valid?: InstanceType<typeof BoolFilter>;
    @Field(() => BoolFilter, {nullable:true})
    enabled?: InstanceType<typeof BoolFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    payload?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    consumersLastSeen?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    providersLastSeen?: InstanceType<typeof StringNullableFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@InputType()
export class PersonalDMWhereInput {
    @Field(() => [PersonalDMWhereInput], {nullable:true})
    AND?: Array<PersonalDMWhereInput>;
    @Field(() => [PersonalDMWhereInput], {nullable:true})
    OR?: Array<PersonalDMWhereInput>;
    @Field(() => [PersonalDMWhereInput], {nullable:true})
    NOT?: Array<PersonalDMWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    initiatedBy?: InstanceType<typeof StringFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    participantIds?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    lastMessageId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => BoolFilter, {nullable:true})
    valid?: InstanceType<typeof BoolFilter>;
    @Field(() => BoolFilter, {nullable:true})
    enabled?: InstanceType<typeof BoolFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    payload?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    consumersLastSeen?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    providersLastSeen?: InstanceType<typeof StringNullableFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@ObjectType()
export class PersonalDM {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    initiatedBy!: string;
    @Field(() => [String], {nullable:true})
    participantIds!: Array<string>;
    @Field(() => String, {nullable:true})
    lastMessageId!: string | null;
    @Field(() => Boolean, {defaultValue:true,nullable:false})
    valid!: boolean;
    @Field(() => Boolean, {defaultValue:false,nullable:false})
    enabled!: boolean;
    @Field(() => String, {nullable:true})
    payload!: string | null;
    @Field(() => String, {nullable:true})
    consumersLastSeen!: string | null;
    @Field(() => String, {nullable:true})
    providersLastSeen!: string | null;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
    @Field(() => Date, {nullable:false})
    updatedAt!: Date;
}

@InputType()
export class AddressCompositeListFilter {
    @Field(() => [AddressObjectEqualityInput], {nullable:true})
    equals?: Array<AddressObjectEqualityInput>;
    @Field(() => AddressWhereInput, {nullable:true})
    every?: InstanceType<typeof AddressWhereInput>;
    @Field(() => AddressWhereInput, {nullable:true})
    some?: InstanceType<typeof AddressWhereInput>;
    @Field(() => AddressWhereInput, {nullable:true})
    none?: InstanceType<typeof AddressWhereInput>;
    @Field(() => Boolean, {nullable:true})
    isEmpty?: boolean;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class AddressDeleteManyInput {
    @Field(() => AddressWhereInput, {nullable:false})
    @Type(() => AddressWhereInput)
    where!: InstanceType<typeof AddressWhereInput>;
}

@InputType()
export class AddressListCreateEnvelopeInput {
    @Field(() => [AddressCreateInput], {nullable:true})
    @Type(() => AddressCreateInput)
    set?: Array<AddressCreateInput>;
}

@InputType()
export class AddressListUpdateEnvelopeInput {
    @Field(() => [AddressCreateInput], {nullable:true})
    @Type(() => AddressCreateInput)
    set?: Array<AddressCreateInput>;
    @Field(() => [AddressCreateInput], {nullable:true})
    push?: Array<AddressCreateInput>;
    @Field(() => AddressUpdateManyInput, {nullable:true})
    @Type(() => AddressUpdateManyInput)
    updateMany?: InstanceType<typeof AddressUpdateManyInput>;
    @Field(() => AddressDeleteManyInput, {nullable:true})
    @Type(() => AddressDeleteManyInput)
    deleteMany?: InstanceType<typeof AddressDeleteManyInput>;
}

@InputType()
export class AddressNullableCompositeFilter {
    @Field(() => AddressObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof AddressObjectEqualityInput>;
    @Field(() => AddressWhereInput, {nullable:true})
    is?: InstanceType<typeof AddressWhereInput>;
    @Field(() => AddressWhereInput, {nullable:true})
    isNot?: InstanceType<typeof AddressWhereInput>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class AddressNullableUpdateEnvelopeInput {
    @Field(() => AddressCreateInput, {nullable:true})
    @Type(() => AddressCreateInput)
    set?: InstanceType<typeof AddressCreateInput>;
    @Field(() => AddressUpsertInput, {nullable:true})
    @Type(() => AddressUpsertInput)
    upsert?: InstanceType<typeof AddressUpsertInput>;
    @Field(() => Boolean, {nullable:true})
    unset?: boolean;
}

@InputType()
export class AddressObjectEqualityInput {
    @Field(() => String, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    phoneNo!: string;
    @Field(() => String, {nullable:false})
    address1!: string;
    @Field(() => String, {nullable:true})
    address2?: string;
    @Field(() => String, {nullable:false})
    zip!: string;
    @Field(() => String, {nullable:false})
    state!: string;
    @Field(() => String, {nullable:false})
    city!: string;
    @Field(() => String, {nullable:false})
    country!: string;
    @Field(() => AddressType, {nullable:false})
    addressType!: `${AddressType}`;
}

@InputType()
export class AddressUpsertInput {
    @Field(() => AddressCreateInput, {nullable:false})
    @Type(() => AddressCreateInput)
    set!: InstanceType<typeof AddressCreateInput>;
    @Field(() => AddressUpdateInput, {nullable:false})
    @Type(() => AddressUpdateInput)
    update!: InstanceType<typeof AddressUpdateInput>;
}

@InputType()
export class AdminSessionCompositeListFilter {
    @Field(() => [AdminSessionObjectEqualityInput], {nullable:true})
    equals?: Array<AdminSessionObjectEqualityInput>;
    @Field(() => AdminSessionWhereInput, {nullable:true})
    every?: InstanceType<typeof AdminSessionWhereInput>;
    @Field(() => AdminSessionWhereInput, {nullable:true})
    some?: InstanceType<typeof AdminSessionWhereInput>;
    @Field(() => AdminSessionWhereInput, {nullable:true})
    none?: InstanceType<typeof AdminSessionWhereInput>;
    @Field(() => Boolean, {nullable:true})
    isEmpty?: boolean;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class AdminSessionDeleteManyInput {
    @Field(() => AdminSessionWhereInput, {nullable:false})
    @Type(() => AdminSessionWhereInput)
    where!: InstanceType<typeof AdminSessionWhereInput>;
}

@InputType()
export class AdminSessionListCreateEnvelopeInput {
    @Field(() => [AdminSessionCreateInput], {nullable:true})
    @Type(() => AdminSessionCreateInput)
    set?: Array<AdminSessionCreateInput>;
}

@InputType()
export class AdminSessionListUpdateEnvelopeInput {
    @Field(() => [AdminSessionCreateInput], {nullable:true})
    @Type(() => AdminSessionCreateInput)
    set?: Array<AdminSessionCreateInput>;
    @Field(() => [AdminSessionCreateInput], {nullable:true})
    push?: Array<AdminSessionCreateInput>;
    @Field(() => AdminSessionUpdateManyInput, {nullable:true})
    @Type(() => AdminSessionUpdateManyInput)
    updateMany?: InstanceType<typeof AdminSessionUpdateManyInput>;
    @Field(() => AdminSessionDeleteManyInput, {nullable:true})
    @Type(() => AdminSessionDeleteManyInput)
    deleteMany?: InstanceType<typeof AdminSessionDeleteManyInput>;
}

@InputType()
export class AdminSessionObjectEqualityInput {
    @Field(() => String, {nullable:false})
    token!: string;
    @Field(() => Boolean, {nullable:false})
    valid!: boolean;
    @Field(() => Date, {nullable:false})
    started!: Date | string;
    @Field(() => Date, {nullable:false})
    lastSeen!: Date | string;
}

@InputType()
export class AdvertiserPOCCompositeFilter {
    @Field(() => AdvertiserPOCObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof AdvertiserPOCObjectEqualityInput>;
    @Field(() => AdvertiserPOCWhereInput, {nullable:true})
    is?: InstanceType<typeof AdvertiserPOCWhereInput>;
    @Field(() => AdvertiserPOCWhereInput, {nullable:true})
    isNot?: InstanceType<typeof AdvertiserPOCWhereInput>;
}

@InputType()
export class AdvertiserPOCObjectEqualityInput {
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    phoneNumber!: string;
    @Field(() => String, {nullable:false})
    email!: string;
}

@ArgsType()
export class AggregateAdRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregateAdminRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregateAdvertiserRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregateAnnouncementBannerRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregateAppLovinRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregateAppPopupRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregateBannedWordRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregateBannedWordsCategoryRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregateBannerRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregateBrandRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregateCampaignRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregateCampusChatMessagePayloadRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregateCampusChatMessageRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregateCampusChatRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregateCampusChatReportRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregateChatBubblesRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregateColorRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregateConversationRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregateDealRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregateDirectMessageRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregateDmMessageTypeRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregateDmMessageTypeArgs {
    @Field(() => DMMessageTypeWhereInput, {nullable:true})
    @Type(() => DMMessageTypeWhereInput)
    where?: InstanceType<typeof DMMessageTypeWhereInput>;
    @Field(() => [DMMessageTypeOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<DMMessageTypeOrderByWithRelationInput>;
    @Field(() => DMMessageTypeWhereUniqueInput, {nullable:true})
    cursor?: InstanceType<typeof DMMessageTypeWhereUniqueInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@ArgsType()
export class AggregateEduInstituteRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregateEventRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregateHobbyRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregateInstitutionRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregateLegacyImagesRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregateListingSettingRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregateMessageRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregateNotificationPayloadsRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregateNotificationRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregateOrderPayoutRequestLogRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregateOrderRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregateOtpLogRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregatePassCodeRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregatePaymentRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregatePayoutRequestLogRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregatePersonalDmRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregatePersonalDmArgs {
    @Field(() => PersonalDMWhereInput, {nullable:true})
    @Type(() => PersonalDMWhereInput)
    where?: InstanceType<typeof PersonalDMWhereInput>;
    @Field(() => [PersonalDMOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<PersonalDMOrderByWithRelationInput>;
    @Field(() => PersonalDMWhereUniqueInput, {nullable:true})
    cursor?: InstanceType<typeof PersonalDMWhereUniqueInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@ArgsType()
export class AggregatePrivacyPolicyRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregateProductCategoryRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregateProductCommentRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregateProductListingRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregateProductReportRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregatePromoCodeRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregatePushNotificationCampaignRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregateShoppingPreferenceRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregateStoryPayloadRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregateStoryRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregateStoryReactionRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregateStoryViewRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregateSupportRequestRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregateSupportTicketRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregateUniversityAdminRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregateUserRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class AggregateWeightCategoryRawArgs {
    @Field(() => [GraphQLJSON], {nullable:true})
    pipeline?: Array<any>;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@InputType()
export class AltSignupNullableCompositeFilter {
    @Field(() => AltSignupObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof AltSignupObjectEqualityInput>;
    @Field(() => AltSignupWhereInput, {nullable:true})
    is?: InstanceType<typeof AltSignupWhereInput>;
    @Field(() => AltSignupWhereInput, {nullable:true})
    isNot?: InstanceType<typeof AltSignupWhereInput>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class AltSignupNullableCreateEnvelopeInput {
    @Field(() => AltSignupCreateInput, {nullable:true})
    @Type(() => AltSignupCreateInput)
    set?: InstanceType<typeof AltSignupCreateInput>;
}

@InputType()
export class AltSignupNullableUpdateEnvelopeInput {
    @Field(() => AltSignupCreateInput, {nullable:true})
    @Type(() => AltSignupCreateInput)
    set?: InstanceType<typeof AltSignupCreateInput>;
    @Field(() => AltSignupUpsertInput, {nullable:true})
    @Type(() => AltSignupUpsertInput)
    upsert?: InstanceType<typeof AltSignupUpsertInput>;
    @Field(() => Boolean, {nullable:true})
    unset?: boolean;
}

@InputType()
export class AltSignupObjectEqualityInput {
    @Field(() => String, {nullable:false})
    idProof!: string;
    @Field(() => Date, {nullable:false})
    uploadedAt!: Date | string;
    @Field(() => String, {nullable:false})
    tempEmailAllotted!: string;
    @Field(() => String, {nullable:false})
    emailClaimed!: string;
    @Field(() => AltSignupStatus, {nullable:false})
    status!: `${AltSignupStatus}`;
    @Field(() => String, {nullable:false})
    remarks!: string;
}

@InputType()
export class AltSignupUpsertInput {
    @Field(() => AltSignupCreateInput, {nullable:false})
    @Type(() => AltSignupCreateInput)
    set!: InstanceType<typeof AltSignupCreateInput>;
    @Field(() => AltSignupUpdateInput, {nullable:false})
    @Type(() => AltSignupUpdateInput)
    update!: InstanceType<typeof AltSignupUpdateInput>;
}

@InputType()
export class BannerImageCompositeFilter {
    @Field(() => BannerImageObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof BannerImageObjectEqualityInput>;
    @Field(() => BannerImageWhereInput, {nullable:true})
    is?: InstanceType<typeof BannerImageWhereInput>;
    @Field(() => BannerImageWhereInput, {nullable:true})
    isNot?: InstanceType<typeof BannerImageWhereInput>;
}

@InputType()
export class BannerImageCompositeListFilter {
    @Field(() => [BannerImageObjectEqualityInput], {nullable:true})
    equals?: Array<BannerImageObjectEqualityInput>;
    @Field(() => BannerImageWhereInput, {nullable:true})
    every?: InstanceType<typeof BannerImageWhereInput>;
    @Field(() => BannerImageWhereInput, {nullable:true})
    some?: InstanceType<typeof BannerImageWhereInput>;
    @Field(() => BannerImageWhereInput, {nullable:true})
    none?: InstanceType<typeof BannerImageWhereInput>;
    @Field(() => Boolean, {nullable:true})
    isEmpty?: boolean;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class BannerImageDeleteManyInput {
    @Field(() => BannerImageWhereInput, {nullable:false})
    @Type(() => BannerImageWhereInput)
    where!: InstanceType<typeof BannerImageWhereInput>;
}

@InputType()
export class BannerImageListCreateEnvelopeInput {
    @Field(() => [BannerImageCreateInput], {nullable:true})
    @Type(() => BannerImageCreateInput)
    set?: Array<BannerImageCreateInput>;
}

@InputType()
export class BannerImageListUpdateEnvelopeInput {
    @Field(() => [BannerImageCreateInput], {nullable:true})
    @Type(() => BannerImageCreateInput)
    set?: Array<BannerImageCreateInput>;
    @Field(() => [BannerImageCreateInput], {nullable:true})
    push?: Array<BannerImageCreateInput>;
    @Field(() => BannerImageUpdateManyInput, {nullable:true})
    @Type(() => BannerImageUpdateManyInput)
    updateMany?: InstanceType<typeof BannerImageUpdateManyInput>;
    @Field(() => BannerImageDeleteManyInput, {nullable:true})
    @Type(() => BannerImageDeleteManyInput)
    deleteMany?: InstanceType<typeof BannerImageDeleteManyInput>;
}

@InputType()
export class BannerImageObjectEqualityInput {
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => CTAType, {nullable:false})
    CTAType!: `${CTAType}`;
    @Field(() => String, {nullable:false})
    CTAPayload!: string;
}

@InputType()
export class BoolFieldUpdateOperationsInput {
    @Field(() => Boolean, {nullable:true})
    set?: boolean;
}

@InputType()
export class BoolFilter {
    @Field(() => Boolean, {nullable:true})
    equals?: boolean;
    @Field(() => NestedBoolFilter, {nullable:true})
    not?: InstanceType<typeof NestedBoolFilter>;
}

@InputType()
export class BoolNullableFilter {
    @Field(() => Boolean, {nullable:true})
    equals?: boolean;
    @Field(() => NestedBoolNullableFilter, {nullable:true})
    not?: InstanceType<typeof NestedBoolNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class BoolNullableWithAggregatesFilter {
    @Field(() => Boolean, {nullable:true})
    equals?: boolean;
    @Field(() => NestedBoolNullableWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedBoolNullableWithAggregatesFilter>;
    @Field(() => NestedIntNullableFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntNullableFilter>;
    @Field(() => NestedBoolNullableFilter, {nullable:true})
    _min?: InstanceType<typeof NestedBoolNullableFilter>;
    @Field(() => NestedBoolNullableFilter, {nullable:true})
    _max?: InstanceType<typeof NestedBoolNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class BoolWithAggregatesFilter {
    @Field(() => Boolean, {nullable:true})
    equals?: boolean;
    @Field(() => NestedBoolWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedBoolWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedBoolFilter, {nullable:true})
    _min?: InstanceType<typeof NestedBoolFilter>;
    @Field(() => NestedBoolFilter, {nullable:true})
    _max?: InstanceType<typeof NestedBoolFilter>;
}

@InputType()
export class CampusChatCommentCompositeListFilter {
    @Field(() => [CampusChatCommentObjectEqualityInput], {nullable:true})
    equals?: Array<CampusChatCommentObjectEqualityInput>;
    @Field(() => CampusChatCommentWhereInput, {nullable:true})
    every?: InstanceType<typeof CampusChatCommentWhereInput>;
    @Field(() => CampusChatCommentWhereInput, {nullable:true})
    some?: InstanceType<typeof CampusChatCommentWhereInput>;
    @Field(() => CampusChatCommentWhereInput, {nullable:true})
    none?: InstanceType<typeof CampusChatCommentWhereInput>;
    @Field(() => Boolean, {nullable:true})
    isEmpty?: boolean;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class CampusChatCommentDeleteManyInput {
    @Field(() => CampusChatCommentWhereInput, {nullable:false})
    @Type(() => CampusChatCommentWhereInput)
    where!: InstanceType<typeof CampusChatCommentWhereInput>;
}

@InputType()
export class CampusChatCommentListCreateEnvelopeInput {
    @Field(() => [CampusChatCommentCreateInput], {nullable:true})
    @Type(() => CampusChatCommentCreateInput)
    set?: Array<CampusChatCommentCreateInput>;
}

@InputType()
export class CampusChatCommentListUpdateEnvelopeInput {
    @Field(() => [CampusChatCommentCreateInput], {nullable:true})
    @Type(() => CampusChatCommentCreateInput)
    set?: Array<CampusChatCommentCreateInput>;
    @Field(() => [CampusChatCommentCreateInput], {nullable:true})
    push?: Array<CampusChatCommentCreateInput>;
    @Field(() => CampusChatCommentUpdateManyInput, {nullable:true})
    @Type(() => CampusChatCommentUpdateManyInput)
    updateMany?: InstanceType<typeof CampusChatCommentUpdateManyInput>;
    @Field(() => CampusChatCommentDeleteManyInput, {nullable:true})
    @Type(() => CampusChatCommentDeleteManyInput)
    deleteMany?: InstanceType<typeof CampusChatCommentDeleteManyInput>;
}

@InputType()
export class CampusChatCommentObjectEqualityInput {
    @Field(() => String, {nullable:false})
    clientId!: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => String, {nullable:false})
    text!: string;
    @Field(() => Date, {nullable:true})
    deletedAt?: Date | string;
    @Field(() => Date, {nullable:false})
    createdAt!: Date | string;
}

@InputType()
export class CampusChatReactionCompositeListFilter {
    @Field(() => [CampusChatReactionObjectEqualityInput], {nullable:true})
    equals?: Array<CampusChatReactionObjectEqualityInput>;
    @Field(() => CampusChatReactionWhereInput, {nullable:true})
    every?: InstanceType<typeof CampusChatReactionWhereInput>;
    @Field(() => CampusChatReactionWhereInput, {nullable:true})
    some?: InstanceType<typeof CampusChatReactionWhereInput>;
    @Field(() => CampusChatReactionWhereInput, {nullable:true})
    none?: InstanceType<typeof CampusChatReactionWhereInput>;
    @Field(() => Boolean, {nullable:true})
    isEmpty?: boolean;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class CampusChatReactionDeleteManyInput {
    @Field(() => CampusChatReactionWhereInput, {nullable:false})
    @Type(() => CampusChatReactionWhereInput)
    where!: InstanceType<typeof CampusChatReactionWhereInput>;
}

@InputType()
export class CampusChatReactionListCreateEnvelopeInput {
    @Field(() => [CampusChatReactionCreateInput], {nullable:true})
    @Type(() => CampusChatReactionCreateInput)
    set?: Array<CampusChatReactionCreateInput>;
}

@InputType()
export class CampusChatReactionListUpdateEnvelopeInput {
    @Field(() => [CampusChatReactionCreateInput], {nullable:true})
    @Type(() => CampusChatReactionCreateInput)
    set?: Array<CampusChatReactionCreateInput>;
    @Field(() => [CampusChatReactionCreateInput], {nullable:true})
    push?: Array<CampusChatReactionCreateInput>;
    @Field(() => CampusChatReactionUpdateManyInput, {nullable:true})
    @Type(() => CampusChatReactionUpdateManyInput)
    updateMany?: InstanceType<typeof CampusChatReactionUpdateManyInput>;
    @Field(() => CampusChatReactionDeleteManyInput, {nullable:true})
    @Type(() => CampusChatReactionDeleteManyInput)
    deleteMany?: InstanceType<typeof CampusChatReactionDeleteManyInput>;
}

@InputType()
export class CampusChatReactionObjectEqualityInput {
    @Field(() => ReactionType, {nullable:false})
    type!: `${ReactionType}`;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => Date, {nullable:false})
    createdAt!: Date | string;
}

@InputType()
export class CampusChatReplyNotficationPayloadCompositeFilter {
    @Field(() => CampusChatReplyNotficationPayloadObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof CampusChatReplyNotficationPayloadObjectEqualityInput>;
    @Field(() => CampusChatReplyNotficationPayloadWhereInput, {nullable:true})
    is?: InstanceType<typeof CampusChatReplyNotficationPayloadWhereInput>;
    @Field(() => CampusChatReplyNotficationPayloadWhereInput, {nullable:true})
    isNot?: InstanceType<typeof CampusChatReplyNotficationPayloadWhereInput>;
}

@InputType()
export class CampusChatReplyNotficationPayloadObjectEqualityInput {
    @Field(() => String, {nullable:false})
    messageId!: string;
    @Field(() => String, {nullable:false})
    commentId!: string;
    @Field(() => String, {nullable:false})
    commentedBy!: string;
    @Field(() => String, {nullable:false})
    commentExcerpt!: string;
}

@InputType()
export class CampusChatReportStatusCompositeFilter {
    @Field(() => CampusChatReportStatusObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof CampusChatReportStatusObjectEqualityInput>;
    @Field(() => CampusChatReportStatusWhereInput, {nullable:true})
    is?: InstanceType<typeof CampusChatReportStatusWhereInput>;
    @Field(() => CampusChatReportStatusWhereInput, {nullable:true})
    isNot?: InstanceType<typeof CampusChatReportStatusWhereInput>;
}

@InputType()
export class CampusChatReportStatusObjectEqualityInput {
    @Field(() => Boolean, {nullable:false})
    reviewed!: boolean;
    @Field(() => Date, {nullable:true})
    reviewedAt?: Date | string;
    @Field(() => String, {nullable:true})
    reviewedBy?: string;
    @Field(() => CampusChatReportAction, {nullable:true})
    action?: `${CampusChatReportAction}`;
}

@InputType()
export class CounterSellerOfferBubbleCompositeFilter {
    @Field(() => CounterSellerOfferBubbleObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof CounterSellerOfferBubbleObjectEqualityInput>;
    @Field(() => CounterSellerOfferBubbleWhereInput, {nullable:true})
    is?: InstanceType<typeof CounterSellerOfferBubbleWhereInput>;
    @Field(() => CounterSellerOfferBubbleWhereInput, {nullable:true})
    isNot?: InstanceType<typeof CounterSellerOfferBubbleWhereInput>;
}

@InputType()
export class CounterSellerOfferBubbleObjectEqualityInput {
    @Field(() => String, {nullable:false})
    headerText!: string;
    @Field(() => Float, {nullable:false})
    offerPrice!: number;
}

@ArgsType()
export class CreateManyDmMessageTypeArgs {
    @Field(() => [DMMessageTypeCreateManyInput], {nullable:false})
    @Type(() => DMMessageTypeCreateManyInput)
    data!: Array<DMMessageTypeCreateManyInput>;
}

@ArgsType()
export class CreateManyPersonalDmArgs {
    @Field(() => [PersonalDMCreateManyInput], {nullable:false})
    @Type(() => PersonalDMCreateManyInput)
    data!: Array<PersonalDMCreateManyInput>;
}

@ArgsType()
export class CreateOneDmMessageTypeArgs {
    @Field(() => DMMessageTypeCreateInput, {nullable:false})
    @Type(() => DMMessageTypeCreateInput)
    data!: InstanceType<typeof DMMessageTypeCreateInput>;
}

@ArgsType()
export class CreateOnePersonalDmArgs {
    @Field(() => PersonalDMCreateInput, {nullable:false})
    @Type(() => PersonalDMCreateInput)
    data!: InstanceType<typeof PersonalDMCreateInput>;
}

@InputType()
export class DateRangeCompositeFilter {
    @Field(() => DateRangeObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof DateRangeObjectEqualityInput>;
    @Field(() => DateRangeWhereInput, {nullable:true})
    is?: InstanceType<typeof DateRangeWhereInput>;
    @Field(() => DateRangeWhereInput, {nullable:true})
    isNot?: InstanceType<typeof DateRangeWhereInput>;
}

@InputType()
export class DateRangeObjectEqualityInput {
    @Field(() => Date, {nullable:false})
    startDate!: Date | string;
    @Field(() => Date, {nullable:false})
    endDate!: Date | string;
}

@InputType()
export class DateTimeFieldUpdateOperationsInput {
    @Field(() => Date, {nullable:true})
    set?: Date | string;
}

@InputType()
export class DateTimeFilter {
    @Field(() => Date, {nullable:true})
    equals?: Date | string;
    @Field(() => [Date], {nullable:true})
    in?: Array<Date> | Array<string>;
    @Field(() => [Date], {nullable:true})
    notIn?: Array<Date> | Array<string>;
    @Field(() => Date, {nullable:true})
    lt?: Date | string;
    @Field(() => Date, {nullable:true})
    lte?: Date | string;
    @Field(() => Date, {nullable:true})
    gt?: Date | string;
    @Field(() => Date, {nullable:true})
    gte?: Date | string;
    @Field(() => NestedDateTimeFilter, {nullable:true})
    not?: InstanceType<typeof NestedDateTimeFilter>;
}

@InputType()
export class DateTimeNullableFilter {
    @Field(() => Date, {nullable:true})
    equals?: Date | string;
    @Field(() => [Date], {nullable:true})
    in?: Array<Date> | Array<string>;
    @Field(() => [Date], {nullable:true})
    notIn?: Array<Date> | Array<string>;
    @Field(() => Date, {nullable:true})
    lt?: Date | string;
    @Field(() => Date, {nullable:true})
    lte?: Date | string;
    @Field(() => Date, {nullable:true})
    gt?: Date | string;
    @Field(() => Date, {nullable:true})
    gte?: Date | string;
    @Field(() => NestedDateTimeNullableFilter, {nullable:true})
    not?: InstanceType<typeof NestedDateTimeNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class DateTimeNullableWithAggregatesFilter {
    @Field(() => Date, {nullable:true})
    equals?: Date | string;
    @Field(() => [Date], {nullable:true})
    in?: Array<Date> | Array<string>;
    @Field(() => [Date], {nullable:true})
    notIn?: Array<Date> | Array<string>;
    @Field(() => Date, {nullable:true})
    lt?: Date | string;
    @Field(() => Date, {nullable:true})
    lte?: Date | string;
    @Field(() => Date, {nullable:true})
    gt?: Date | string;
    @Field(() => Date, {nullable:true})
    gte?: Date | string;
    @Field(() => NestedDateTimeNullableWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedDateTimeNullableWithAggregatesFilter>;
    @Field(() => NestedIntNullableFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntNullableFilter>;
    @Field(() => NestedDateTimeNullableFilter, {nullable:true})
    _min?: InstanceType<typeof NestedDateTimeNullableFilter>;
    @Field(() => NestedDateTimeNullableFilter, {nullable:true})
    _max?: InstanceType<typeof NestedDateTimeNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class DateTimeWithAggregatesFilter {
    @Field(() => Date, {nullable:true})
    equals?: Date | string;
    @Field(() => [Date], {nullable:true})
    in?: Array<Date> | Array<string>;
    @Field(() => [Date], {nullable:true})
    notIn?: Array<Date> | Array<string>;
    @Field(() => Date, {nullable:true})
    lt?: Date | string;
    @Field(() => Date, {nullable:true})
    lte?: Date | string;
    @Field(() => Date, {nullable:true})
    gt?: Date | string;
    @Field(() => Date, {nullable:true})
    gte?: Date | string;
    @Field(() => NestedDateTimeWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedDateTimeWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedDateTimeFilter, {nullable:true})
    _min?: InstanceType<typeof NestedDateTimeFilter>;
    @Field(() => NestedDateTimeFilter, {nullable:true})
    _max?: InstanceType<typeof NestedDateTimeFilter>;
}

@InputType()
export class DealBusinessDetailsCompositeFilter {
    @Field(() => DealBusinessDetailsObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof DealBusinessDetailsObjectEqualityInput>;
    @Field(() => DealBusinessDetailsWhereInput, {nullable:true})
    is?: InstanceType<typeof DealBusinessDetailsWhereInput>;
    @Field(() => DealBusinessDetailsWhereInput, {nullable:true})
    isNot?: InstanceType<typeof DealBusinessDetailsWhereInput>;
}

@InputType()
export class DealBusinessDetailsObjectEqualityInput {
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    address!: string;
    @Field(() => String, {nullable:false})
    logo!: string;
}

@InputType()
export class DealMeetupOfferBubbleCompositeFilter {
    @Field(() => DealMeetupOfferBubbleObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof DealMeetupOfferBubbleObjectEqualityInput>;
    @Field(() => DealMeetupOfferBubbleWhereInput, {nullable:true})
    is?: InstanceType<typeof DealMeetupOfferBubbleWhereInput>;
    @Field(() => DealMeetupOfferBubbleWhereInput, {nullable:true})
    isNot?: InstanceType<typeof DealMeetupOfferBubbleWhereInput>;
}

@InputType()
export class DealMeetupOfferBubbleObjectEqualityInput {
    @Field(() => String, {nullable:false})
    headerText!: string;
    @Field(() => DealMeetupPreferenceObjectEqualityInput, {nullable:false})
    meetupPreference!: InstanceType<typeof DealMeetupPreferenceObjectEqualityInput>;
    @Field(() => Float, {nullable:false})
    offerPrice!: number;
}

@InputType()
export class DealMeetupPreferenceCompositeFilter {
    @Field(() => DealMeetupPreferenceObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof DealMeetupPreferenceObjectEqualityInput>;
    @Field(() => DealMeetupPreferenceWhereInput, {nullable:true})
    is?: InstanceType<typeof DealMeetupPreferenceWhereInput>;
    @Field(() => DealMeetupPreferenceWhereInput, {nullable:true})
    isNot?: InstanceType<typeof DealMeetupPreferenceWhereInput>;
}

@InputType()
export class DealMeetupPreferenceObjectEqualityInput {
    @Field(() => String, {nullable:false})
    days!: string;
    @Field(() => String, {nullable:false})
    time!: string;
    @Field(() => String, {nullable:false})
    location!: string;
}

@InputType()
export class DealOfferBubbleCompositeFilter {
    @Field(() => DealOfferBubbleObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof DealOfferBubbleObjectEqualityInput>;
    @Field(() => DealOfferBubbleWhereInput, {nullable:true})
    is?: InstanceType<typeof DealOfferBubbleWhereInput>;
    @Field(() => DealOfferBubbleWhereInput, {nullable:true})
    isNot?: InstanceType<typeof DealOfferBubbleWhereInput>;
}

@InputType()
export class DealOfferBubbleObjectEqualityInput {
    @Field(() => String, {nullable:false})
    headerText!: string;
    @Field(() => ProductBubbleObjectEqualityInput, {nullable:false})
    product!: InstanceType<typeof ProductBubbleObjectEqualityInput>;
    @Field(() => Float, {nullable:false})
    offerPrice!: number;
    @Field(() => Float, {nullable:false})
    shippingFee!: number;
    @Field(() => Float, {nullable:false})
    totalPrice!: number;
    @Field(() => String, {nullable:false})
    sellerAddressId!: string;
    @Field(() => String, {nullable:false})
    buyerAddressId!: string;
}

@InputType()
export class DealTextContentCompositeFilter {
    @Field(() => DealTextContentObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof DealTextContentObjectEqualityInput>;
    @Field(() => DealTextContentWhereInput, {nullable:true})
    is?: InstanceType<typeof DealTextContentWhereInput>;
    @Field(() => DealTextContentWhereInput, {nullable:true})
    isNot?: InstanceType<typeof DealTextContentWhereInput>;
}

@InputType()
export class DealTextContentObjectEqualityInput {
    @Field(() => String, {nullable:false})
    heading!: string;
    @Field(() => String, {nullable:false})
    paragraph!: string;
    @Field(() => String, {nullable:false})
    pointers!: string;
}

@ArgsType()
export class DeleteManyDmMessageTypeArgs {
    @Field(() => DMMessageTypeWhereInput, {nullable:true})
    @Type(() => DMMessageTypeWhereInput)
    where?: InstanceType<typeof DMMessageTypeWhereInput>;
}

@ArgsType()
export class DeleteManyPersonalDmArgs {
    @Field(() => PersonalDMWhereInput, {nullable:true})
    @Type(() => PersonalDMWhereInput)
    where?: InstanceType<typeof PersonalDMWhereInput>;
}

@ArgsType()
export class DeleteOneDmMessageTypeArgs {
    @Field(() => DMMessageTypeWhereUniqueInput, {nullable:false})
    @Type(() => DMMessageTypeWhereUniqueInput)
    where!: InstanceType<typeof DMMessageTypeWhereUniqueInput>;
}

@ArgsType()
export class DeleteOnePersonalDmArgs {
    @Field(() => PersonalDMWhereUniqueInput, {nullable:false})
    @Type(() => PersonalDMWhereUniqueInput)
    where!: InstanceType<typeof PersonalDMWhereUniqueInput>;
}

@InputType()
export class DMStoryShareBubbleCompositeFilter {
    @Field(() => DMStoryShareBubbleObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof DMStoryShareBubbleObjectEqualityInput>;
    @Field(() => DMStoryShareBubbleWhereInput, {nullable:true})
    is?: InstanceType<typeof DMStoryShareBubbleWhereInput>;
    @Field(() => DMStoryShareBubbleWhereInput, {nullable:true})
    isNot?: InstanceType<typeof DMStoryShareBubbleWhereInput>;
}

@InputType()
export class DMStoryShareBubbleObjectEqualityInput {
    @Field(() => String, {nullable:false})
    text!: string;
    @Field(() => String, {nullable:false})
    thumbnail!: string;
}

@InputType()
export class DMTextBubbleCompositeFilter {
    @Field(() => DMTextBubbleObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof DMTextBubbleObjectEqualityInput>;
    @Field(() => DMTextBubbleWhereInput, {nullable:true})
    is?: InstanceType<typeof DMTextBubbleWhereInput>;
    @Field(() => DMTextBubbleWhereInput, {nullable:true})
    isNot?: InstanceType<typeof DMTextBubbleWhereInput>;
}

@InputType()
export class DMTextBubbleObjectEqualityInput {
    @Field(() => String, {nullable:false})
    text!: string;
}

@InputType()
export class EduInstituteSelectOptionCompositeListFilter {
    @Field(() => [EduInstituteSelectOptionObjectEqualityInput], {nullable:true})
    equals?: Array<EduInstituteSelectOptionObjectEqualityInput>;
    @Field(() => EduInstituteSelectOptionWhereInput, {nullable:true})
    every?: InstanceType<typeof EduInstituteSelectOptionWhereInput>;
    @Field(() => EduInstituteSelectOptionWhereInput, {nullable:true})
    some?: InstanceType<typeof EduInstituteSelectOptionWhereInput>;
    @Field(() => EduInstituteSelectOptionWhereInput, {nullable:true})
    none?: InstanceType<typeof EduInstituteSelectOptionWhereInput>;
    @Field(() => Boolean, {nullable:true})
    isEmpty?: boolean;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class EduInstituteSelectOptionDeleteManyInput {
    @Field(() => EduInstituteSelectOptionWhereInput, {nullable:false})
    @Type(() => EduInstituteSelectOptionWhereInput)
    where!: InstanceType<typeof EduInstituteSelectOptionWhereInput>;
}

@InputType()
export class EduInstituteSelectOptionListCreateEnvelopeInput {
    @Field(() => [EduInstituteSelectOptionCreateInput], {nullable:true})
    @Type(() => EduInstituteSelectOptionCreateInput)
    set?: Array<EduInstituteSelectOptionCreateInput>;
}

@InputType()
export class EduInstituteSelectOptionListUpdateEnvelopeInput {
    @Field(() => [EduInstituteSelectOptionCreateInput], {nullable:true})
    @Type(() => EduInstituteSelectOptionCreateInput)
    set?: Array<EduInstituteSelectOptionCreateInput>;
    @Field(() => [EduInstituteSelectOptionCreateInput], {nullable:true})
    push?: Array<EduInstituteSelectOptionCreateInput>;
    @Field(() => EduInstituteSelectOptionUpdateManyInput, {nullable:true})
    @Type(() => EduInstituteSelectOptionUpdateManyInput)
    updateMany?: InstanceType<typeof EduInstituteSelectOptionUpdateManyInput>;
    @Field(() => EduInstituteSelectOptionDeleteManyInput, {nullable:true})
    @Type(() => EduInstituteSelectOptionDeleteManyInput)
    deleteMany?: InstanceType<typeof EduInstituteSelectOptionDeleteManyInput>;
}

@InputType()
export class EduInstituteSelectOptionObjectEqualityInput {
    @Field(() => String, {nullable:false})
    label!: string;
    @Field(() => String, {nullable:false})
    value!: string;
}

@InputType()
export class EnumAdTypeFieldUpdateOperationsInput {
    @Field(() => AdType, {nullable:true})
    set?: `${AdType}`;
}

@InputType()
export class EnumAdTypeFilter {
    @Field(() => AdType, {nullable:true})
    equals?: `${AdType}`;
    @Field(() => [AdType], {nullable:true})
    in?: Array<`${AdType}`>;
    @Field(() => [AdType], {nullable:true})
    notIn?: Array<`${AdType}`>;
    @Field(() => NestedEnumAdTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumAdTypeFilter>;
}

@InputType()
export class EnumAdTypeWithAggregatesFilter {
    @Field(() => AdType, {nullable:true})
    equals?: `${AdType}`;
    @Field(() => [AdType], {nullable:true})
    in?: Array<`${AdType}`>;
    @Field(() => [AdType], {nullable:true})
    notIn?: Array<`${AdType}`>;
    @Field(() => NestedEnumAdTypeWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumAdTypeWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumAdTypeFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumAdTypeFilter>;
    @Field(() => NestedEnumAdTypeFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumAdTypeFilter>;
}

@InputType()
export class EnumAdVisibilityNullableListFilter {
    @Field(() => [AdVisibility], {nullable:true})
    equals?: Array<`${AdVisibility}`>;
    @Field(() => AdVisibility, {nullable:true})
    has?: `${AdVisibility}`;
    @Field(() => [AdVisibility], {nullable:true})
    hasEvery?: Array<`${AdVisibility}`>;
    @Field(() => [AdVisibility], {nullable:true})
    hasSome?: Array<`${AdVisibility}`>;
    @Field(() => Boolean, {nullable:true})
    isEmpty?: boolean;
}

@InputType()
export class EnumAddressTypeFieldUpdateOperationsInput {
    @Field(() => AddressType, {nullable:true})
    set?: `${AddressType}`;
}

@InputType()
export class EnumAddressTypeFilter {
    @Field(() => AddressType, {nullable:true})
    equals?: `${AddressType}`;
    @Field(() => [AddressType], {nullable:true})
    in?: Array<`${AddressType}`>;
    @Field(() => [AddressType], {nullable:true})
    notIn?: Array<`${AddressType}`>;
    @Field(() => NestedEnumAddressTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumAddressTypeFilter>;
}

@InputType()
export class EnumAdminRoleNullableListFilter {
    @Field(() => [AdminRole], {nullable:true})
    equals?: Array<`${AdminRole}`>;
    @Field(() => AdminRole, {nullable:true})
    has?: `${AdminRole}`;
    @Field(() => [AdminRole], {nullable:true})
    hasEvery?: Array<`${AdminRole}`>;
    @Field(() => [AdminRole], {nullable:true})
    hasSome?: Array<`${AdminRole}`>;
    @Field(() => Boolean, {nullable:true})
    isEmpty?: boolean;
}

@InputType()
export class EnumAltSignupStatusFieldUpdateOperationsInput {
    @Field(() => AltSignupStatus, {nullable:true})
    set?: `${AltSignupStatus}`;
}

@InputType()
export class EnumAltSignupStatusFilter {
    @Field(() => AltSignupStatus, {nullable:true})
    equals?: `${AltSignupStatus}`;
    @Field(() => [AltSignupStatus], {nullable:true})
    in?: Array<`${AltSignupStatus}`>;
    @Field(() => [AltSignupStatus], {nullable:true})
    notIn?: Array<`${AltSignupStatus}`>;
    @Field(() => NestedEnumAltSignupStatusFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumAltSignupStatusFilter>;
}

@InputType()
export class EnumAnnouncementBannerPositionFieldUpdateOperationsInput {
    @Field(() => AnnouncementBannerPosition, {nullable:true})
    set?: `${AnnouncementBannerPosition}`;
}

@InputType()
export class EnumAnnouncementBannerPositionFilter {
    @Field(() => AnnouncementBannerPosition, {nullable:true})
    equals?: `${AnnouncementBannerPosition}`;
    @Field(() => [AnnouncementBannerPosition], {nullable:true})
    in?: Array<`${AnnouncementBannerPosition}`>;
    @Field(() => [AnnouncementBannerPosition], {nullable:true})
    notIn?: Array<`${AnnouncementBannerPosition}`>;
    @Field(() => NestedEnumAnnouncementBannerPositionFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumAnnouncementBannerPositionFilter>;
}

@InputType()
export class EnumAnnouncementBannerPositionWithAggregatesFilter {
    @Field(() => AnnouncementBannerPosition, {nullable:true})
    equals?: `${AnnouncementBannerPosition}`;
    @Field(() => [AnnouncementBannerPosition], {nullable:true})
    in?: Array<`${AnnouncementBannerPosition}`>;
    @Field(() => [AnnouncementBannerPosition], {nullable:true})
    notIn?: Array<`${AnnouncementBannerPosition}`>;
    @Field(() => NestedEnumAnnouncementBannerPositionWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumAnnouncementBannerPositionWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumAnnouncementBannerPositionFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumAnnouncementBannerPositionFilter>;
    @Field(() => NestedEnumAnnouncementBannerPositionFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumAnnouncementBannerPositionFilter>;
}

@InputType()
export class EnumAppLovinPositionFieldUpdateOperationsInput {
    @Field(() => AppLovinPosition, {nullable:true})
    set?: `${AppLovinPosition}`;
}

@InputType()
export class EnumAppLovinPositionFilter {
    @Field(() => AppLovinPosition, {nullable:true})
    equals?: `${AppLovinPosition}`;
    @Field(() => [AppLovinPosition], {nullable:true})
    in?: Array<`${AppLovinPosition}`>;
    @Field(() => [AppLovinPosition], {nullable:true})
    notIn?: Array<`${AppLovinPosition}`>;
    @Field(() => NestedEnumAppLovinPositionFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumAppLovinPositionFilter>;
}

@InputType()
export class EnumAppLovinPositionWithAggregatesFilter {
    @Field(() => AppLovinPosition, {nullable:true})
    equals?: `${AppLovinPosition}`;
    @Field(() => [AppLovinPosition], {nullable:true})
    in?: Array<`${AppLovinPosition}`>;
    @Field(() => [AppLovinPosition], {nullable:true})
    notIn?: Array<`${AppLovinPosition}`>;
    @Field(() => NestedEnumAppLovinPositionWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumAppLovinPositionWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumAppLovinPositionFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumAppLovinPositionFilter>;
    @Field(() => NestedEnumAppLovinPositionFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumAppLovinPositionFilter>;
}

@InputType()
export class EnumAppLovingAdTypeFieldUpdateOperationsInput {
    @Field(() => AppLovingAdType, {nullable:true})
    set?: `${AppLovingAdType}`;
}

@InputType()
export class EnumAppLovingAdTypeFilter {
    @Field(() => AppLovingAdType, {nullable:true})
    equals?: `${AppLovingAdType}`;
    @Field(() => [AppLovingAdType], {nullable:true})
    in?: Array<`${AppLovingAdType}`>;
    @Field(() => [AppLovingAdType], {nullable:true})
    notIn?: Array<`${AppLovingAdType}`>;
    @Field(() => NestedEnumAppLovingAdTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumAppLovingAdTypeFilter>;
}

@InputType()
export class EnumAppLovingAdTypeWithAggregatesFilter {
    @Field(() => AppLovingAdType, {nullable:true})
    equals?: `${AppLovingAdType}`;
    @Field(() => [AppLovingAdType], {nullable:true})
    in?: Array<`${AppLovingAdType}`>;
    @Field(() => [AppLovingAdType], {nullable:true})
    notIn?: Array<`${AppLovingAdType}`>;
    @Field(() => NestedEnumAppLovingAdTypeWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumAppLovingAdTypeWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumAppLovingAdTypeFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumAppLovingAdTypeFilter>;
    @Field(() => NestedEnumAppLovingAdTypeFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumAppLovingAdTypeFilter>;
}

@InputType()
export class EnumAppPopupTemplateFieldUpdateOperationsInput {
    @Field(() => AppPopupTemplate, {nullable:true})
    set?: `${AppPopupTemplate}`;
}

@InputType()
export class EnumAppPopupTemplateFilter {
    @Field(() => AppPopupTemplate, {nullable:true})
    equals?: `${AppPopupTemplate}`;
    @Field(() => [AppPopupTemplate], {nullable:true})
    in?: Array<`${AppPopupTemplate}`>;
    @Field(() => [AppPopupTemplate], {nullable:true})
    notIn?: Array<`${AppPopupTemplate}`>;
    @Field(() => NestedEnumAppPopupTemplateFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumAppPopupTemplateFilter>;
}

@InputType()
export class EnumAppPopupTemplateWithAggregatesFilter {
    @Field(() => AppPopupTemplate, {nullable:true})
    equals?: `${AppPopupTemplate}`;
    @Field(() => [AppPopupTemplate], {nullable:true})
    in?: Array<`${AppPopupTemplate}`>;
    @Field(() => [AppPopupTemplate], {nullable:true})
    notIn?: Array<`${AppPopupTemplate}`>;
    @Field(() => NestedEnumAppPopupTemplateWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumAppPopupTemplateWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumAppPopupTemplateFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumAppPopupTemplateFilter>;
    @Field(() => NestedEnumAppPopupTemplateFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumAppPopupTemplateFilter>;
}

@InputType()
export class EnumAvailabilityNullableListFilter {
    @Field(() => [Availability], {nullable:true})
    equals?: Array<`${Availability}`>;
    @Field(() => Availability, {nullable:true})
    has?: `${Availability}`;
    @Field(() => [Availability], {nullable:true})
    hasEvery?: Array<`${Availability}`>;
    @Field(() => [Availability], {nullable:true})
    hasSome?: Array<`${Availability}`>;
    @Field(() => Boolean, {nullable:true})
    isEmpty?: boolean;
}

@InputType()
export class EnumBannerPositionNullableListFilter {
    @Field(() => [BannerPosition], {nullable:true})
    equals?: Array<`${BannerPosition}`>;
    @Field(() => BannerPosition, {nullable:true})
    has?: `${BannerPosition}`;
    @Field(() => [BannerPosition], {nullable:true})
    hasEvery?: Array<`${BannerPosition}`>;
    @Field(() => [BannerPosition], {nullable:true})
    hasSome?: Array<`${BannerPosition}`>;
    @Field(() => Boolean, {nullable:true})
    isEmpty?: boolean;
}

@InputType()
export class EnumBannerTypeFieldUpdateOperationsInput {
    @Field(() => BannerType, {nullable:true})
    set?: `${BannerType}`;
}

@InputType()
export class EnumBannerTypeFilter {
    @Field(() => BannerType, {nullable:true})
    equals?: `${BannerType}`;
    @Field(() => [BannerType], {nullable:true})
    in?: Array<`${BannerType}`>;
    @Field(() => [BannerType], {nullable:true})
    notIn?: Array<`${BannerType}`>;
    @Field(() => NestedEnumBannerTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumBannerTypeFilter>;
}

@InputType()
export class EnumBannerTypeWithAggregatesFilter {
    @Field(() => BannerType, {nullable:true})
    equals?: `${BannerType}`;
    @Field(() => [BannerType], {nullable:true})
    in?: Array<`${BannerType}`>;
    @Field(() => [BannerType], {nullable:true})
    notIn?: Array<`${BannerType}`>;
    @Field(() => NestedEnumBannerTypeWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumBannerTypeWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumBannerTypeFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumBannerTypeFilter>;
    @Field(() => NestedEnumBannerTypeFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumBannerTypeFilter>;
}

@InputType()
export class EnumBooleanChoiceNullableFilter {
    @Field(() => BooleanChoice, {nullable:true})
    equals?: `${BooleanChoice}`;
    @Field(() => [BooleanChoice], {nullable:true})
    in?: Array<`${BooleanChoice}`>;
    @Field(() => [BooleanChoice], {nullable:true})
    notIn?: Array<`${BooleanChoice}`>;
    @Field(() => NestedEnumBooleanChoiceNullableFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumBooleanChoiceNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class EnumCampaignTypeNullableListFilter {
    @Field(() => [CampaignType], {nullable:true})
    equals?: Array<`${CampaignType}`>;
    @Field(() => CampaignType, {nullable:true})
    has?: `${CampaignType}`;
    @Field(() => [CampaignType], {nullable:true})
    hasEvery?: Array<`${CampaignType}`>;
    @Field(() => [CampaignType], {nullable:true})
    hasSome?: Array<`${CampaignType}`>;
    @Field(() => Boolean, {nullable:true})
    isEmpty?: boolean;
}

@InputType()
export class EnumCampusChatMessageFlaggedByNullableFilter {
    @Field(() => CampusChatMessageFlaggedBy, {nullable:true})
    equals?: `${CampusChatMessageFlaggedBy}`;
    @Field(() => [CampusChatMessageFlaggedBy], {nullable:true})
    in?: Array<`${CampusChatMessageFlaggedBy}`>;
    @Field(() => [CampusChatMessageFlaggedBy], {nullable:true})
    notIn?: Array<`${CampusChatMessageFlaggedBy}`>;
    @Field(() => NestedEnumCampusChatMessageFlaggedByNullableFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumCampusChatMessageFlaggedByNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class EnumCampusChatMessageFlaggedByNullableWithAggregatesFilter {
    @Field(() => CampusChatMessageFlaggedBy, {nullable:true})
    equals?: `${CampusChatMessageFlaggedBy}`;
    @Field(() => [CampusChatMessageFlaggedBy], {nullable:true})
    in?: Array<`${CampusChatMessageFlaggedBy}`>;
    @Field(() => [CampusChatMessageFlaggedBy], {nullable:true})
    notIn?: Array<`${CampusChatMessageFlaggedBy}`>;
    @Field(() => NestedEnumCampusChatMessageFlaggedByNullableWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumCampusChatMessageFlaggedByNullableWithAggregatesFilter>;
    @Field(() => NestedIntNullableFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntNullableFilter>;
    @Field(() => NestedEnumCampusChatMessageFlaggedByNullableFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumCampusChatMessageFlaggedByNullableFilter>;
    @Field(() => NestedEnumCampusChatMessageFlaggedByNullableFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumCampusChatMessageFlaggedByNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class EnumCampusChatMessageTypeFieldUpdateOperationsInput {
    @Field(() => CampusChatMessageType, {nullable:true})
    set?: `${CampusChatMessageType}`;
}

@InputType()
export class EnumCampusChatMessageTypeFilter {
    @Field(() => CampusChatMessageType, {nullable:true})
    equals?: `${CampusChatMessageType}`;
    @Field(() => [CampusChatMessageType], {nullable:true})
    in?: Array<`${CampusChatMessageType}`>;
    @Field(() => [CampusChatMessageType], {nullable:true})
    notIn?: Array<`${CampusChatMessageType}`>;
    @Field(() => NestedEnumCampusChatMessageTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumCampusChatMessageTypeFilter>;
}

@InputType()
export class EnumCampusChatMessageTypeWithAggregatesFilter {
    @Field(() => CampusChatMessageType, {nullable:true})
    equals?: `${CampusChatMessageType}`;
    @Field(() => [CampusChatMessageType], {nullable:true})
    in?: Array<`${CampusChatMessageType}`>;
    @Field(() => [CampusChatMessageType], {nullable:true})
    notIn?: Array<`${CampusChatMessageType}`>;
    @Field(() => NestedEnumCampusChatMessageTypeWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumCampusChatMessageTypeWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumCampusChatMessageTypeFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumCampusChatMessageTypeFilter>;
    @Field(() => NestedEnumCampusChatMessageTypeFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumCampusChatMessageTypeFilter>;
}

@InputType()
export class EnumCampusChatReportActionNullableFilter {
    @Field(() => CampusChatReportAction, {nullable:true})
    equals?: `${CampusChatReportAction}`;
    @Field(() => [CampusChatReportAction], {nullable:true})
    in?: Array<`${CampusChatReportAction}`>;
    @Field(() => [CampusChatReportAction], {nullable:true})
    notIn?: Array<`${CampusChatReportAction}`>;
    @Field(() => NestedEnumCampusChatReportActionNullableFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumCampusChatReportActionNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class EnumCampusChatReportReasonFieldUpdateOperationsInput {
    @Field(() => CampusChatReportReason, {nullable:true})
    set?: `${CampusChatReportReason}`;
}

@InputType()
export class EnumCampusChatReportReasonFilter {
    @Field(() => CampusChatReportReason, {nullable:true})
    equals?: `${CampusChatReportReason}`;
    @Field(() => [CampusChatReportReason], {nullable:true})
    in?: Array<`${CampusChatReportReason}`>;
    @Field(() => [CampusChatReportReason], {nullable:true})
    notIn?: Array<`${CampusChatReportReason}`>;
    @Field(() => NestedEnumCampusChatReportReasonFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumCampusChatReportReasonFilter>;
}

@InputType()
export class EnumCampusChatReportReasonWithAggregatesFilter {
    @Field(() => CampusChatReportReason, {nullable:true})
    equals?: `${CampusChatReportReason}`;
    @Field(() => [CampusChatReportReason], {nullable:true})
    in?: Array<`${CampusChatReportReason}`>;
    @Field(() => [CampusChatReportReason], {nullable:true})
    notIn?: Array<`${CampusChatReportReason}`>;
    @Field(() => NestedEnumCampusChatReportReasonWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumCampusChatReportReasonWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumCampusChatReportReasonFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumCampusChatReportReasonFilter>;
    @Field(() => NestedEnumCampusChatReportReasonFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumCampusChatReportReasonFilter>;
}

@InputType()
export class EnumCampusChatTypeFieldUpdateOperationsInput {
    @Field(() => CampusChatType, {nullable:true})
    set?: `${CampusChatType}`;
}

@InputType()
export class EnumCampusChatTypeFilter {
    @Field(() => CampusChatType, {nullable:true})
    equals?: `${CampusChatType}`;
    @Field(() => [CampusChatType], {nullable:true})
    in?: Array<`${CampusChatType}`>;
    @Field(() => [CampusChatType], {nullable:true})
    notIn?: Array<`${CampusChatType}`>;
    @Field(() => NestedEnumCampusChatTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumCampusChatTypeFilter>;
}

@InputType()
export class EnumCampusChatTypeWithAggregatesFilter {
    @Field(() => CampusChatType, {nullable:true})
    equals?: `${CampusChatType}`;
    @Field(() => [CampusChatType], {nullable:true})
    in?: Array<`${CampusChatType}`>;
    @Field(() => [CampusChatType], {nullable:true})
    notIn?: Array<`${CampusChatType}`>;
    @Field(() => NestedEnumCampusChatTypeWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumCampusChatTypeWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumCampusChatTypeFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumCampusChatTypeFilter>;
    @Field(() => NestedEnumCampusChatTypeFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumCampusChatTypeFilter>;
}

@InputType()
export class EnumConversationTypeFieldUpdateOperationsInput {
    @Field(() => ConversationType, {nullable:true})
    set?: `${ConversationType}`;
}

@InputType()
export class EnumConversationTypeFilter {
    @Field(() => ConversationType, {nullable:true})
    equals?: `${ConversationType}`;
    @Field(() => [ConversationType], {nullable:true})
    in?: Array<`${ConversationType}`>;
    @Field(() => [ConversationType], {nullable:true})
    notIn?: Array<`${ConversationType}`>;
    @Field(() => NestedEnumConversationTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumConversationTypeFilter>;
}

@InputType()
export class EnumConversationTypeNullableFilter {
    @Field(() => ConversationType, {nullable:true})
    equals?: `${ConversationType}`;
    @Field(() => [ConversationType], {nullable:true})
    in?: Array<`${ConversationType}`>;
    @Field(() => [ConversationType], {nullable:true})
    notIn?: Array<`${ConversationType}`>;
    @Field(() => NestedEnumConversationTypeNullableFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumConversationTypeNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class EnumConversationTypeWithAggregatesFilter {
    @Field(() => ConversationType, {nullable:true})
    equals?: `${ConversationType}`;
    @Field(() => [ConversationType], {nullable:true})
    in?: Array<`${ConversationType}`>;
    @Field(() => [ConversationType], {nullable:true})
    notIn?: Array<`${ConversationType}`>;
    @Field(() => NestedEnumConversationTypeWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumConversationTypeWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumConversationTypeFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumConversationTypeFilter>;
    @Field(() => NestedEnumConversationTypeFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumConversationTypeFilter>;
}

@InputType()
export class EnumCTATypeFieldUpdateOperationsInput {
    @Field(() => CTAType, {nullable:true})
    set?: `${CTAType}`;
}

@InputType()
export class EnumCTATypeFilter {
    @Field(() => CTAType, {nullable:true})
    equals?: `${CTAType}`;
    @Field(() => [CTAType], {nullable:true})
    in?: Array<`${CTAType}`>;
    @Field(() => [CTAType], {nullable:true})
    notIn?: Array<`${CTAType}`>;
    @Field(() => NestedEnumCTATypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumCTATypeFilter>;
}

@InputType()
export class EnumDealTypeFieldUpdateOperationsInput {
    @Field(() => DealType, {nullable:true})
    set?: `${DealType}`;
}

@InputType()
export class EnumDealTypeFilter {
    @Field(() => DealType, {nullable:true})
    equals?: `${DealType}`;
    @Field(() => [DealType], {nullable:true})
    in?: Array<`${DealType}`>;
    @Field(() => [DealType], {nullable:true})
    notIn?: Array<`${DealType}`>;
    @Field(() => NestedEnumDealTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumDealTypeFilter>;
}

@InputType()
export class EnumDealTypeWithAggregatesFilter {
    @Field(() => DealType, {nullable:true})
    equals?: `${DealType}`;
    @Field(() => [DealType], {nullable:true})
    in?: Array<`${DealType}`>;
    @Field(() => [DealType], {nullable:true})
    notIn?: Array<`${DealType}`>;
    @Field(() => NestedEnumDealTypeWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumDealTypeWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumDealTypeFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumDealTypeFilter>;
    @Field(() => NestedEnumDealTypeFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumDealTypeFilter>;
}

@InputType()
export class EnumDMTypeFieldUpdateOperationsInput {
    @Field(() => DMType, {nullable:true})
    set?: `${DMType}`;
}

@InputType()
export class EnumDMTypeFilter {
    @Field(() => DMType, {nullable:true})
    equals?: `${DMType}`;
    @Field(() => [DMType], {nullable:true})
    in?: Array<`${DMType}`>;
    @Field(() => [DMType], {nullable:true})
    notIn?: Array<`${DMType}`>;
    @Field(() => NestedEnumDMTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumDMTypeFilter>;
}

@InputType()
export class EnumDMTypeWithAggregatesFilter {
    @Field(() => DMType, {nullable:true})
    equals?: `${DMType}`;
    @Field(() => [DMType], {nullable:true})
    in?: Array<`${DMType}`>;
    @Field(() => [DMType], {nullable:true})
    notIn?: Array<`${DMType}`>;
    @Field(() => NestedEnumDMTypeWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumDMTypeWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumDMTypeFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumDMTypeFilter>;
    @Field(() => NestedEnumDMTypeFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumDMTypeFilter>;
}

@InputType()
export class EnumEduSelectionListTypeFieldUpdateOperationsInput {
    @Field(() => EduSelectionListType, {nullable:true})
    set?: `${EduSelectionListType}`;
}

@InputType()
export class EnumEduSelectionListTypeFilter {
    @Field(() => EduSelectionListType, {nullable:true})
    equals?: `${EduSelectionListType}`;
    @Field(() => [EduSelectionListType], {nullable:true})
    in?: Array<`${EduSelectionListType}`>;
    @Field(() => [EduSelectionListType], {nullable:true})
    notIn?: Array<`${EduSelectionListType}`>;
    @Field(() => NestedEnumEduSelectionListTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumEduSelectionListTypeFilter>;
}

@InputType()
export class EnumEduSelectionListTypeWithAggregatesFilter {
    @Field(() => EduSelectionListType, {nullable:true})
    equals?: `${EduSelectionListType}`;
    @Field(() => [EduSelectionListType], {nullable:true})
    in?: Array<`${EduSelectionListType}`>;
    @Field(() => [EduSelectionListType], {nullable:true})
    notIn?: Array<`${EduSelectionListType}`>;
    @Field(() => NestedEnumEduSelectionListTypeWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumEduSelectionListTypeWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumEduSelectionListTypeFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumEduSelectionListTypeFilter>;
    @Field(() => NestedEnumEduSelectionListTypeFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumEduSelectionListTypeFilter>;
}

@InputType()
export class EnumEventTypeFieldUpdateOperationsInput {
    @Field(() => EventType, {nullable:true})
    set?: `${EventType}`;
}

@InputType()
export class EnumEventTypeFilter {
    @Field(() => EventType, {nullable:true})
    equals?: `${EventType}`;
    @Field(() => [EventType], {nullable:true})
    in?: Array<`${EventType}`>;
    @Field(() => [EventType], {nullable:true})
    notIn?: Array<`${EventType}`>;
    @Field(() => NestedEnumEventTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumEventTypeFilter>;
}

@InputType()
export class EnumEventTypeWithAggregatesFilter {
    @Field(() => EventType, {nullable:true})
    equals?: `${EventType}`;
    @Field(() => [EventType], {nullable:true})
    in?: Array<`${EventType}`>;
    @Field(() => [EventType], {nullable:true})
    notIn?: Array<`${EventType}`>;
    @Field(() => NestedEnumEventTypeWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumEventTypeWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumEventTypeFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumEventTypeFilter>;
    @Field(() => NestedEnumEventTypeFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumEventTypeFilter>;
}

@InputType()
export class EnumGatewayFieldUpdateOperationsInput {
    @Field(() => Gateway, {nullable:true})
    set?: `${Gateway}`;
}

@InputType()
export class EnumGatewayFilter {
    @Field(() => Gateway, {nullable:true})
    equals?: `${Gateway}`;
    @Field(() => [Gateway], {nullable:true})
    in?: Array<`${Gateway}`>;
    @Field(() => [Gateway], {nullable:true})
    notIn?: Array<`${Gateway}`>;
    @Field(() => NestedEnumGatewayFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumGatewayFilter>;
}

@InputType()
export class EnumGatewayWithAggregatesFilter {
    @Field(() => Gateway, {nullable:true})
    equals?: `${Gateway}`;
    @Field(() => [Gateway], {nullable:true})
    in?: Array<`${Gateway}`>;
    @Field(() => [Gateway], {nullable:true})
    notIn?: Array<`${Gateway}`>;
    @Field(() => NestedEnumGatewayWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumGatewayWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumGatewayFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumGatewayFilter>;
    @Field(() => NestedEnumGatewayFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumGatewayFilter>;
}

@InputType()
export class EnumGenderFieldUpdateOperationsInput {
    @Field(() => Gender, {nullable:true})
    set?: `${Gender}`;
}

@InputType()
export class EnumGenderFilter {
    @Field(() => Gender, {nullable:true})
    equals?: `${Gender}`;
    @Field(() => [Gender], {nullable:true})
    in?: Array<`${Gender}`>;
    @Field(() => [Gender], {nullable:true})
    notIn?: Array<`${Gender}`>;
    @Field(() => NestedEnumGenderFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumGenderFilter>;
}

@InputType()
export class EnumGenderNullableFilter {
    @Field(() => Gender, {nullable:true})
    equals?: `${Gender}`;
    @Field(() => [Gender], {nullable:true})
    in?: Array<`${Gender}`>;
    @Field(() => [Gender], {nullable:true})
    notIn?: Array<`${Gender}`>;
    @Field(() => NestedEnumGenderNullableFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumGenderNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class EnumGenderNullableListFilter {
    @Field(() => [Gender], {nullable:true})
    equals?: Array<`${Gender}`>;
    @Field(() => Gender, {nullable:true})
    has?: `${Gender}`;
    @Field(() => [Gender], {nullable:true})
    hasEvery?: Array<`${Gender}`>;
    @Field(() => [Gender], {nullable:true})
    hasSome?: Array<`${Gender}`>;
    @Field(() => Boolean, {nullable:true})
    isEmpty?: boolean;
}

@InputType()
export class EnumGenderNullableWithAggregatesFilter {
    @Field(() => Gender, {nullable:true})
    equals?: `${Gender}`;
    @Field(() => [Gender], {nullable:true})
    in?: Array<`${Gender}`>;
    @Field(() => [Gender], {nullable:true})
    notIn?: Array<`${Gender}`>;
    @Field(() => NestedEnumGenderNullableWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumGenderNullableWithAggregatesFilter>;
    @Field(() => NestedIntNullableFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntNullableFilter>;
    @Field(() => NestedEnumGenderNullableFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumGenderNullableFilter>;
    @Field(() => NestedEnumGenderNullableFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumGenderNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class EnumGenderWithAggregatesFilter {
    @Field(() => Gender, {nullable:true})
    equals?: `${Gender}`;
    @Field(() => [Gender], {nullable:true})
    in?: Array<`${Gender}`>;
    @Field(() => [Gender], {nullable:true})
    notIn?: Array<`${Gender}`>;
    @Field(() => NestedEnumGenderWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumGenderWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumGenderFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumGenderFilter>;
    @Field(() => NestedEnumGenderFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumGenderFilter>;
}

@InputType()
export class EnumInternalCTANullableFilter {
    @Field(() => InternalCTA, {nullable:true})
    equals?: `${InternalCTA}`;
    @Field(() => [InternalCTA], {nullable:true})
    in?: Array<`${InternalCTA}`>;
    @Field(() => [InternalCTA], {nullable:true})
    notIn?: Array<`${InternalCTA}`>;
    @Field(() => NestedEnumInternalCTANullableFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumInternalCTANullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class EnumInternalCTANullableWithAggregatesFilter {
    @Field(() => InternalCTA, {nullable:true})
    equals?: `${InternalCTA}`;
    @Field(() => [InternalCTA], {nullable:true})
    in?: Array<`${InternalCTA}`>;
    @Field(() => [InternalCTA], {nullable:true})
    notIn?: Array<`${InternalCTA}`>;
    @Field(() => NestedEnumInternalCTANullableWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumInternalCTANullableWithAggregatesFilter>;
    @Field(() => NestedIntNullableFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntNullableFilter>;
    @Field(() => NestedEnumInternalCTANullableFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumInternalCTANullableFilter>;
    @Field(() => NestedEnumInternalCTANullableFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumInternalCTANullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class EnumMediaTypeFieldUpdateOperationsInput {
    @Field(() => MediaType, {nullable:true})
    set?: `${MediaType}`;
}

@InputType()
export class EnumMediaTypeFilter {
    @Field(() => MediaType, {nullable:true})
    equals?: `${MediaType}`;
    @Field(() => [MediaType], {nullable:true})
    in?: Array<`${MediaType}`>;
    @Field(() => [MediaType], {nullable:true})
    notIn?: Array<`${MediaType}`>;
    @Field(() => NestedEnumMediaTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumMediaTypeFilter>;
}

@InputType()
export class EnumMessageActionTypeFieldUpdateOperationsInput {
    @Field(() => MessageActionType, {nullable:true})
    set?: `${MessageActionType}`;
}

@InputType()
export class EnumMessageActionTypeFilter {
    @Field(() => MessageActionType, {nullable:true})
    equals?: `${MessageActionType}`;
    @Field(() => [MessageActionType], {nullable:true})
    in?: Array<`${MessageActionType}`>;
    @Field(() => [MessageActionType], {nullable:true})
    notIn?: Array<`${MessageActionType}`>;
    @Field(() => NestedEnumMessageActionTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumMessageActionTypeFilter>;
}

@InputType()
export class EnumMessageStateNullableFilter {
    @Field(() => MessageState, {nullable:true})
    equals?: `${MessageState}`;
    @Field(() => [MessageState], {nullable:true})
    in?: Array<`${MessageState}`>;
    @Field(() => [MessageState], {nullable:true})
    notIn?: Array<`${MessageState}`>;
    @Field(() => NestedEnumMessageStateNullableFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumMessageStateNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class EnumMessageStateNullableWithAggregatesFilter {
    @Field(() => MessageState, {nullable:true})
    equals?: `${MessageState}`;
    @Field(() => [MessageState], {nullable:true})
    in?: Array<`${MessageState}`>;
    @Field(() => [MessageState], {nullable:true})
    notIn?: Array<`${MessageState}`>;
    @Field(() => NestedEnumMessageStateNullableWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumMessageStateNullableWithAggregatesFilter>;
    @Field(() => NestedIntNullableFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntNullableFilter>;
    @Field(() => NestedEnumMessageStateNullableFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumMessageStateNullableFilter>;
    @Field(() => NestedEnumMessageStateNullableFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumMessageStateNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class EnumMessageTypeFieldUpdateOperationsInput {
    @Field(() => MessageType, {nullable:true})
    set?: `${MessageType}`;
}

@InputType()
export class EnumMessageTypeFilter {
    @Field(() => MessageType, {nullable:true})
    equals?: `${MessageType}`;
    @Field(() => [MessageType], {nullable:true})
    in?: Array<`${MessageType}`>;
    @Field(() => [MessageType], {nullable:true})
    notIn?: Array<`${MessageType}`>;
    @Field(() => NestedEnumMessageTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumMessageTypeFilter>;
}

@InputType()
export class EnumMessageTypeWithAggregatesFilter {
    @Field(() => MessageType, {nullable:true})
    equals?: `${MessageType}`;
    @Field(() => [MessageType], {nullable:true})
    in?: Array<`${MessageType}`>;
    @Field(() => [MessageType], {nullable:true})
    notIn?: Array<`${MessageType}`>;
    @Field(() => NestedEnumMessageTypeWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumMessageTypeWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumMessageTypeFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumMessageTypeFilter>;
    @Field(() => NestedEnumMessageTypeFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumMessageTypeFilter>;
}

@InputType()
export class EnumNotificationTypeFieldUpdateOperationsInput {
    @Field(() => NotificationType, {nullable:true})
    set?: `${NotificationType}`;
}

@InputType()
export class EnumNotificationTypeFilter {
    @Field(() => NotificationType, {nullable:true})
    equals?: `${NotificationType}`;
    @Field(() => [NotificationType], {nullable:true})
    in?: Array<`${NotificationType}`>;
    @Field(() => [NotificationType], {nullable:true})
    notIn?: Array<`${NotificationType}`>;
    @Field(() => NestedEnumNotificationTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumNotificationTypeFilter>;
}

@InputType()
export class EnumNotificationTypeWithAggregatesFilter {
    @Field(() => NotificationType, {nullable:true})
    equals?: `${NotificationType}`;
    @Field(() => [NotificationType], {nullable:true})
    in?: Array<`${NotificationType}`>;
    @Field(() => [NotificationType], {nullable:true})
    notIn?: Array<`${NotificationType}`>;
    @Field(() => NestedEnumNotificationTypeWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumNotificationTypeWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumNotificationTypeFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumNotificationTypeFilter>;
    @Field(() => NestedEnumNotificationTypeFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumNotificationTypeFilter>;
}

@InputType()
export class EnumOfferNotificationTypeFieldUpdateOperationsInput {
    @Field(() => OfferNotificationType, {nullable:true})
    set?: `${OfferNotificationType}`;
}

@InputType()
export class EnumOfferNotificationTypeFilter {
    @Field(() => OfferNotificationType, {nullable:true})
    equals?: `${OfferNotificationType}`;
    @Field(() => [OfferNotificationType], {nullable:true})
    in?: Array<`${OfferNotificationType}`>;
    @Field(() => [OfferNotificationType], {nullable:true})
    notIn?: Array<`${OfferNotificationType}`>;
    @Field(() => NestedEnumOfferNotificationTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumOfferNotificationTypeFilter>;
}

@InputType()
export class EnumOrderNotificationTypeFieldUpdateOperationsInput {
    @Field(() => OrderNotificationType, {nullable:true})
    set?: `${OrderNotificationType}`;
}

@InputType()
export class EnumOrderNotificationTypeFilter {
    @Field(() => OrderNotificationType, {nullable:true})
    equals?: `${OrderNotificationType}`;
    @Field(() => [OrderNotificationType], {nullable:true})
    in?: Array<`${OrderNotificationType}`>;
    @Field(() => [OrderNotificationType], {nullable:true})
    notIn?: Array<`${OrderNotificationType}`>;
    @Field(() => NestedEnumOrderNotificationTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumOrderNotificationTypeFilter>;
}

@InputType()
export class EnumOrderNotificationTypeNullableFilter {
    @Field(() => OrderNotificationType, {nullable:true})
    equals?: `${OrderNotificationType}`;
    @Field(() => [OrderNotificationType], {nullable:true})
    in?: Array<`${OrderNotificationType}`>;
    @Field(() => [OrderNotificationType], {nullable:true})
    notIn?: Array<`${OrderNotificationType}`>;
    @Field(() => NestedEnumOrderNotificationTypeNullableFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumOrderNotificationTypeNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class EnumOrderStatusFieldUpdateOperationsInput {
    @Field(() => OrderStatus, {nullable:true})
    set?: `${OrderStatus}`;
}

@InputType()
export class EnumOrderStatusFilter {
    @Field(() => OrderStatus, {nullable:true})
    equals?: `${OrderStatus}`;
    @Field(() => [OrderStatus], {nullable:true})
    in?: Array<`${OrderStatus}`>;
    @Field(() => [OrderStatus], {nullable:true})
    notIn?: Array<`${OrderStatus}`>;
    @Field(() => NestedEnumOrderStatusFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumOrderStatusFilter>;
}

@InputType()
export class EnumOrderStatusWithAggregatesFilter {
    @Field(() => OrderStatus, {nullable:true})
    equals?: `${OrderStatus}`;
    @Field(() => [OrderStatus], {nullable:true})
    in?: Array<`${OrderStatus}`>;
    @Field(() => [OrderStatus], {nullable:true})
    notIn?: Array<`${OrderStatus}`>;
    @Field(() => NestedEnumOrderStatusWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumOrderStatusWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumOrderStatusFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumOrderStatusFilter>;
    @Field(() => NestedEnumOrderStatusFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumOrderStatusFilter>;
}

@InputType()
export class EnumOrderTypeFieldUpdateOperationsInput {
    @Field(() => OrderType, {nullable:true})
    set?: `${OrderType}`;
}

@InputType()
export class EnumOrderTypeFilter {
    @Field(() => OrderType, {nullable:true})
    equals?: `${OrderType}`;
    @Field(() => [OrderType], {nullable:true})
    in?: Array<`${OrderType}`>;
    @Field(() => [OrderType], {nullable:true})
    notIn?: Array<`${OrderType}`>;
    @Field(() => NestedEnumOrderTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumOrderTypeFilter>;
}

@InputType()
export class EnumOrderTypeWithAggregatesFilter {
    @Field(() => OrderType, {nullable:true})
    equals?: `${OrderType}`;
    @Field(() => [OrderType], {nullable:true})
    in?: Array<`${OrderType}`>;
    @Field(() => [OrderType], {nullable:true})
    notIn?: Array<`${OrderType}`>;
    @Field(() => NestedEnumOrderTypeWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumOrderTypeWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumOrderTypeFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumOrderTypeFilter>;
    @Field(() => NestedEnumOrderTypeFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumOrderTypeFilter>;
}

@InputType()
export class EnumPaymentLinkStatusFieldUpdateOperationsInput {
    @Field(() => PaymentLinkStatus, {nullable:true})
    set?: `${PaymentLinkStatus}`;
}

@InputType()
export class EnumPaymentLinkStatusFilter {
    @Field(() => PaymentLinkStatus, {nullable:true})
    equals?: `${PaymentLinkStatus}`;
    @Field(() => [PaymentLinkStatus], {nullable:true})
    in?: Array<`${PaymentLinkStatus}`>;
    @Field(() => [PaymentLinkStatus], {nullable:true})
    notIn?: Array<`${PaymentLinkStatus}`>;
    @Field(() => NestedEnumPaymentLinkStatusFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumPaymentLinkStatusFilter>;
}

@InputType()
export class EnumPayoutNotificationTypeFieldUpdateOperationsInput {
    @Field(() => PayoutNotificationType, {nullable:true})
    set?: `${PayoutNotificationType}`;
}

@InputType()
export class EnumPayoutNotificationTypeFilter {
    @Field(() => PayoutNotificationType, {nullable:true})
    equals?: `${PayoutNotificationType}`;
    @Field(() => [PayoutNotificationType], {nullable:true})
    in?: Array<`${PayoutNotificationType}`>;
    @Field(() => [PayoutNotificationType], {nullable:true})
    notIn?: Array<`${PayoutNotificationType}`>;
    @Field(() => NestedEnumPayoutNotificationTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumPayoutNotificationTypeFilter>;
}

@InputType()
export class EnumPlatformFieldUpdateOperationsInput {
    @Field(() => Platform, {nullable:true})
    set?: `${Platform}`;
}

@InputType()
export class EnumPlatformFilter {
    @Field(() => Platform, {nullable:true})
    equals?: `${Platform}`;
    @Field(() => [Platform], {nullable:true})
    in?: Array<`${Platform}`>;
    @Field(() => [Platform], {nullable:true})
    notIn?: Array<`${Platform}`>;
    @Field(() => NestedEnumPlatformFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumPlatformFilter>;
}

@InputType()
export class EnumPlatformNullableFilter {
    @Field(() => Platform, {nullable:true})
    equals?: `${Platform}`;
    @Field(() => [Platform], {nullable:true})
    in?: Array<`${Platform}`>;
    @Field(() => [Platform], {nullable:true})
    notIn?: Array<`${Platform}`>;
    @Field(() => NestedEnumPlatformNullableFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumPlatformNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class EnumPlatformNullableWithAggregatesFilter {
    @Field(() => Platform, {nullable:true})
    equals?: `${Platform}`;
    @Field(() => [Platform], {nullable:true})
    in?: Array<`${Platform}`>;
    @Field(() => [Platform], {nullable:true})
    notIn?: Array<`${Platform}`>;
    @Field(() => NestedEnumPlatformNullableWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumPlatformNullableWithAggregatesFilter>;
    @Field(() => NestedIntNullableFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntNullableFilter>;
    @Field(() => NestedEnumPlatformNullableFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumPlatformNullableFilter>;
    @Field(() => NestedEnumPlatformNullableFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumPlatformNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class EnumPreferredGenderNullableFilter {
    @Field(() => PreferredGender, {nullable:true})
    equals?: `${PreferredGender}`;
    @Field(() => [PreferredGender], {nullable:true})
    in?: Array<`${PreferredGender}`>;
    @Field(() => [PreferredGender], {nullable:true})
    notIn?: Array<`${PreferredGender}`>;
    @Field(() => NestedEnumPreferredGenderNullableFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumPreferredGenderNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class EnumPreferredGenderNullableWithAggregatesFilter {
    @Field(() => PreferredGender, {nullable:true})
    equals?: `${PreferredGender}`;
    @Field(() => [PreferredGender], {nullable:true})
    in?: Array<`${PreferredGender}`>;
    @Field(() => [PreferredGender], {nullable:true})
    notIn?: Array<`${PreferredGender}`>;
    @Field(() => NestedEnumPreferredGenderNullableWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumPreferredGenderNullableWithAggregatesFilter>;
    @Field(() => NestedIntNullableFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntNullableFilter>;
    @Field(() => NestedEnumPreferredGenderNullableFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumPreferredGenderNullableFilter>;
    @Field(() => NestedEnumPreferredGenderNullableFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumPreferredGenderNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class EnumProductConditionFieldUpdateOperationsInput {
    @Field(() => ProductCondition, {nullable:true})
    set?: `${ProductCondition}`;
}

@InputType()
export class EnumProductConditionFilter {
    @Field(() => ProductCondition, {nullable:true})
    equals?: `${ProductCondition}`;
    @Field(() => [ProductCondition], {nullable:true})
    in?: Array<`${ProductCondition}`>;
    @Field(() => [ProductCondition], {nullable:true})
    notIn?: Array<`${ProductCondition}`>;
    @Field(() => NestedEnumProductConditionFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumProductConditionFilter>;
}

@InputType()
export class EnumProductConditionWithAggregatesFilter {
    @Field(() => ProductCondition, {nullable:true})
    equals?: `${ProductCondition}`;
    @Field(() => [ProductCondition], {nullable:true})
    in?: Array<`${ProductCondition}`>;
    @Field(() => [ProductCondition], {nullable:true})
    notIn?: Array<`${ProductCondition}`>;
    @Field(() => NestedEnumProductConditionWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumProductConditionWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumProductConditionFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumProductConditionFilter>;
    @Field(() => NestedEnumProductConditionFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumProductConditionFilter>;
}

@InputType()
export class EnumProductDeliveryModeFieldUpdateOperationsInput {
    @Field(() => ProductDeliveryMode, {nullable:true})
    set?: `${ProductDeliveryMode}`;
}

@InputType()
export class EnumProductDeliveryModeFilter {
    @Field(() => ProductDeliveryMode, {nullable:true})
    equals?: `${ProductDeliveryMode}`;
    @Field(() => [ProductDeliveryMode], {nullable:true})
    in?: Array<`${ProductDeliveryMode}`>;
    @Field(() => [ProductDeliveryMode], {nullable:true})
    notIn?: Array<`${ProductDeliveryMode}`>;
    @Field(() => NestedEnumProductDeliveryModeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumProductDeliveryModeFilter>;
}

@InputType()
export class EnumProductDeliveryModeNullableFilter {
    @Field(() => ProductDeliveryMode, {nullable:true})
    equals?: `${ProductDeliveryMode}`;
    @Field(() => [ProductDeliveryMode], {nullable:true})
    in?: Array<`${ProductDeliveryMode}`>;
    @Field(() => [ProductDeliveryMode], {nullable:true})
    notIn?: Array<`${ProductDeliveryMode}`>;
    @Field(() => NestedEnumProductDeliveryModeNullableFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumProductDeliveryModeNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class EnumProductDeliveryModeNullableWithAggregatesFilter {
    @Field(() => ProductDeliveryMode, {nullable:true})
    equals?: `${ProductDeliveryMode}`;
    @Field(() => [ProductDeliveryMode], {nullable:true})
    in?: Array<`${ProductDeliveryMode}`>;
    @Field(() => [ProductDeliveryMode], {nullable:true})
    notIn?: Array<`${ProductDeliveryMode}`>;
    @Field(() => NestedEnumProductDeliveryModeNullableWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumProductDeliveryModeNullableWithAggregatesFilter>;
    @Field(() => NestedIntNullableFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntNullableFilter>;
    @Field(() => NestedEnumProductDeliveryModeNullableFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumProductDeliveryModeNullableFilter>;
    @Field(() => NestedEnumProductDeliveryModeNullableFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumProductDeliveryModeNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class EnumProductListingTypeFieldUpdateOperationsInput {
    @Field(() => ProductListingType, {nullable:true})
    set?: `${ProductListingType}`;
}

@InputType()
export class EnumProductListingTypeFilter {
    @Field(() => ProductListingType, {nullable:true})
    equals?: `${ProductListingType}`;
    @Field(() => [ProductListingType], {nullable:true})
    in?: Array<`${ProductListingType}`>;
    @Field(() => [ProductListingType], {nullable:true})
    notIn?: Array<`${ProductListingType}`>;
    @Field(() => NestedEnumProductListingTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumProductListingTypeFilter>;
}

@InputType()
export class EnumProductListingTypeWithAggregatesFilter {
    @Field(() => ProductListingType, {nullable:true})
    equals?: `${ProductListingType}`;
    @Field(() => [ProductListingType], {nullable:true})
    in?: Array<`${ProductListingType}`>;
    @Field(() => [ProductListingType], {nullable:true})
    notIn?: Array<`${ProductListingType}`>;
    @Field(() => NestedEnumProductListingTypeWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumProductListingTypeWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumProductListingTypeFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumProductListingTypeFilter>;
    @Field(() => NestedEnumProductListingTypeFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumProductListingTypeFilter>;
}

@InputType()
export class EnumProductReportActionNullableFilter {
    @Field(() => ProductReportAction, {nullable:true})
    equals?: `${ProductReportAction}`;
    @Field(() => [ProductReportAction], {nullable:true})
    in?: Array<`${ProductReportAction}`>;
    @Field(() => [ProductReportAction], {nullable:true})
    notIn?: Array<`${ProductReportAction}`>;
    @Field(() => NestedEnumProductReportActionNullableFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumProductReportActionNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class EnumProductReportReasonFieldUpdateOperationsInput {
    @Field(() => ProductReportReason, {nullable:true})
    set?: `${ProductReportReason}`;
}

@InputType()
export class EnumProductReportReasonFilter {
    @Field(() => ProductReportReason, {nullable:true})
    equals?: `${ProductReportReason}`;
    @Field(() => [ProductReportReason], {nullable:true})
    in?: Array<`${ProductReportReason}`>;
    @Field(() => [ProductReportReason], {nullable:true})
    notIn?: Array<`${ProductReportReason}`>;
    @Field(() => NestedEnumProductReportReasonFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumProductReportReasonFilter>;
}

@InputType()
export class EnumProductReportReasonWithAggregatesFilter {
    @Field(() => ProductReportReason, {nullable:true})
    equals?: `${ProductReportReason}`;
    @Field(() => [ProductReportReason], {nullable:true})
    in?: Array<`${ProductReportReason}`>;
    @Field(() => [ProductReportReason], {nullable:true})
    notIn?: Array<`${ProductReportReason}`>;
    @Field(() => NestedEnumProductReportReasonWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumProductReportReasonWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumProductReportReasonFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumProductReportReasonFilter>;
    @Field(() => NestedEnumProductReportReasonFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumProductReportReasonFilter>;
}

@InputType()
export class EnumPromoCodeTypeFieldUpdateOperationsInput {
    @Field(() => PromoCodeType, {nullable:true})
    set?: `${PromoCodeType}`;
}

@InputType()
export class EnumPromoCodeTypeFilter {
    @Field(() => PromoCodeType, {nullable:true})
    equals?: `${PromoCodeType}`;
    @Field(() => [PromoCodeType], {nullable:true})
    in?: Array<`${PromoCodeType}`>;
    @Field(() => [PromoCodeType], {nullable:true})
    notIn?: Array<`${PromoCodeType}`>;
    @Field(() => NestedEnumPromoCodeTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumPromoCodeTypeFilter>;
}

@InputType()
export class EnumPromoCodeTypeWithAggregatesFilter {
    @Field(() => PromoCodeType, {nullable:true})
    equals?: `${PromoCodeType}`;
    @Field(() => [PromoCodeType], {nullable:true})
    in?: Array<`${PromoCodeType}`>;
    @Field(() => [PromoCodeType], {nullable:true})
    notIn?: Array<`${PromoCodeType}`>;
    @Field(() => NestedEnumPromoCodeTypeWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumPromoCodeTypeWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumPromoCodeTypeFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumPromoCodeTypeFilter>;
    @Field(() => NestedEnumPromoCodeTypeFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumPromoCodeTypeFilter>;
}

@InputType()
export class EnumPushNotificationCampaignStatusFieldUpdateOperationsInput {
    @Field(() => PushNotificationCampaignStatus, {nullable:true})
    set?: `${PushNotificationCampaignStatus}`;
}

@InputType()
export class EnumPushNotificationCampaignStatusFilter {
    @Field(() => PushNotificationCampaignStatus, {nullable:true})
    equals?: `${PushNotificationCampaignStatus}`;
    @Field(() => [PushNotificationCampaignStatus], {nullable:true})
    in?: Array<`${PushNotificationCampaignStatus}`>;
    @Field(() => [PushNotificationCampaignStatus], {nullable:true})
    notIn?: Array<`${PushNotificationCampaignStatus}`>;
    @Field(() => NestedEnumPushNotificationCampaignStatusFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumPushNotificationCampaignStatusFilter>;
}

@InputType()
export class EnumPushNotificationCampaignStatusWithAggregatesFilter {
    @Field(() => PushNotificationCampaignStatus, {nullable:true})
    equals?: `${PushNotificationCampaignStatus}`;
    @Field(() => [PushNotificationCampaignStatus], {nullable:true})
    in?: Array<`${PushNotificationCampaignStatus}`>;
    @Field(() => [PushNotificationCampaignStatus], {nullable:true})
    notIn?: Array<`${PushNotificationCampaignStatus}`>;
    @Field(() => NestedEnumPushNotificationCampaignStatusWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumPushNotificationCampaignStatusWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumPushNotificationCampaignStatusFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumPushNotificationCampaignStatusFilter>;
    @Field(() => NestedEnumPushNotificationCampaignStatusFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumPushNotificationCampaignStatusFilter>;
}

@InputType()
export class EnumPushNotificationSenderListTypeFieldUpdateOperationsInput {
    @Field(() => PushNotificationSenderListType, {nullable:true})
    set?: `${PushNotificationSenderListType}`;
}

@InputType()
export class EnumPushNotificationSenderListTypeFilter {
    @Field(() => PushNotificationSenderListType, {nullable:true})
    equals?: `${PushNotificationSenderListType}`;
    @Field(() => [PushNotificationSenderListType], {nullable:true})
    in?: Array<`${PushNotificationSenderListType}`>;
    @Field(() => [PushNotificationSenderListType], {nullable:true})
    notIn?: Array<`${PushNotificationSenderListType}`>;
    @Field(() => NestedEnumPushNotificationSenderListTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumPushNotificationSenderListTypeFilter>;
}

@InputType()
export class EnumPushNotificationSenderListTypeWithAggregatesFilter {
    @Field(() => PushNotificationSenderListType, {nullable:true})
    equals?: `${PushNotificationSenderListType}`;
    @Field(() => [PushNotificationSenderListType], {nullable:true})
    in?: Array<`${PushNotificationSenderListType}`>;
    @Field(() => [PushNotificationSenderListType], {nullable:true})
    notIn?: Array<`${PushNotificationSenderListType}`>;
    @Field(() => NestedEnumPushNotificationSenderListTypeWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumPushNotificationSenderListTypeWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumPushNotificationSenderListTypeFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumPushNotificationSenderListTypeFilter>;
    @Field(() => NestedEnumPushNotificationSenderListTypeFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumPushNotificationSenderListTypeFilter>;
}

@InputType()
export class EnumReactionTypeFieldUpdateOperationsInput {
    @Field(() => ReactionType, {nullable:true})
    set?: `${ReactionType}`;
}

@InputType()
export class EnumReactionTypeFilter {
    @Field(() => ReactionType, {nullable:true})
    equals?: `${ReactionType}`;
    @Field(() => [ReactionType], {nullable:true})
    in?: Array<`${ReactionType}`>;
    @Field(() => [ReactionType], {nullable:true})
    notIn?: Array<`${ReactionType}`>;
    @Field(() => NestedEnumReactionTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumReactionTypeFilter>;
}

@InputType()
export class EnumReactionTypeWithAggregatesFilter {
    @Field(() => ReactionType, {nullable:true})
    equals?: `${ReactionType}`;
    @Field(() => [ReactionType], {nullable:true})
    in?: Array<`${ReactionType}`>;
    @Field(() => [ReactionType], {nullable:true})
    notIn?: Array<`${ReactionType}`>;
    @Field(() => NestedEnumReactionTypeWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumReactionTypeWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumReactionTypeFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumReactionTypeFilter>;
    @Field(() => NestedEnumReactionTypeFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumReactionTypeFilter>;
}

@InputType()
export class EnumRentalNotificationTypeFieldUpdateOperationsInput {
    @Field(() => RentalNotificationType, {nullable:true})
    set?: `${RentalNotificationType}`;
}

@InputType()
export class EnumRentalNotificationTypeFilter {
    @Field(() => RentalNotificationType, {nullable:true})
    equals?: `${RentalNotificationType}`;
    @Field(() => [RentalNotificationType], {nullable:true})
    in?: Array<`${RentalNotificationType}`>;
    @Field(() => [RentalNotificationType], {nullable:true})
    notIn?: Array<`${RentalNotificationType}`>;
    @Field(() => NestedEnumRentalNotificationTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumRentalNotificationTypeFilter>;
}

@InputType()
export class EnumRoleNullableListFilter {
    @Field(() => [Role], {nullable:true})
    equals?: Array<`${Role}`>;
    @Field(() => Role, {nullable:true})
    has?: `${Role}`;
    @Field(() => [Role], {nullable:true})
    hasEvery?: Array<`${Role}`>;
    @Field(() => [Role], {nullable:true})
    hasSome?: Array<`${Role}`>;
    @Field(() => Boolean, {nullable:true})
    isEmpty?: boolean;
}

@InputType()
export class EnumSelectionChoiceFieldUpdateOperationsInput {
    @Field(() => SelectionChoice, {nullable:true})
    set?: `${SelectionChoice}`;
}

@InputType()
export class EnumSelectionChoiceFilter {
    @Field(() => SelectionChoice, {nullable:true})
    equals?: `${SelectionChoice}`;
    @Field(() => [SelectionChoice], {nullable:true})
    in?: Array<`${SelectionChoice}`>;
    @Field(() => [SelectionChoice], {nullable:true})
    notIn?: Array<`${SelectionChoice}`>;
    @Field(() => NestedEnumSelectionChoiceFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumSelectionChoiceFilter>;
}

@InputType()
export class EnumSellerPayoutStatusFieldUpdateOperationsInput {
    @Field(() => SellerPayoutStatus, {nullable:true})
    set?: `${SellerPayoutStatus}`;
}

@InputType()
export class EnumSellerPayoutStatusFilter {
    @Field(() => SellerPayoutStatus, {nullable:true})
    equals?: `${SellerPayoutStatus}`;
    @Field(() => [SellerPayoutStatus], {nullable:true})
    in?: Array<`${SellerPayoutStatus}`>;
    @Field(() => [SellerPayoutStatus], {nullable:true})
    notIn?: Array<`${SellerPayoutStatus}`>;
    @Field(() => NestedEnumSellerPayoutStatusFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumSellerPayoutStatusFilter>;
}

@InputType()
export class EnumShippingChargePayerNullableFilter {
    @Field(() => ShippingChargePayer, {nullable:true})
    equals?: `${ShippingChargePayer}`;
    @Field(() => [ShippingChargePayer], {nullable:true})
    in?: Array<`${ShippingChargePayer}`>;
    @Field(() => [ShippingChargePayer], {nullable:true})
    notIn?: Array<`${ShippingChargePayer}`>;
    @Field(() => NestedEnumShippingChargePayerNullableFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumShippingChargePayerNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class EnumShippingChargePayerNullableWithAggregatesFilter {
    @Field(() => ShippingChargePayer, {nullable:true})
    equals?: `${ShippingChargePayer}`;
    @Field(() => [ShippingChargePayer], {nullable:true})
    in?: Array<`${ShippingChargePayer}`>;
    @Field(() => [ShippingChargePayer], {nullable:true})
    notIn?: Array<`${ShippingChargePayer}`>;
    @Field(() => NestedEnumShippingChargePayerNullableWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumShippingChargePayerNullableWithAggregatesFilter>;
    @Field(() => NestedIntNullableFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntNullableFilter>;
    @Field(() => NestedEnumShippingChargePayerNullableFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumShippingChargePayerNullableFilter>;
    @Field(() => NestedEnumShippingChargePayerNullableFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumShippingChargePayerNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class EnumStoryTypeFieldUpdateOperationsInput {
    @Field(() => StoryType, {nullable:true})
    set?: `${StoryType}`;
}

@InputType()
export class EnumStoryTypeFilter {
    @Field(() => StoryType, {nullable:true})
    equals?: `${StoryType}`;
    @Field(() => [StoryType], {nullable:true})
    in?: Array<`${StoryType}`>;
    @Field(() => [StoryType], {nullable:true})
    notIn?: Array<`${StoryType}`>;
    @Field(() => NestedEnumStoryTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumStoryTypeFilter>;
}

@InputType()
export class EnumStoryTypeWithAggregatesFilter {
    @Field(() => StoryType, {nullable:true})
    equals?: `${StoryType}`;
    @Field(() => [StoryType], {nullable:true})
    in?: Array<`${StoryType}`>;
    @Field(() => [StoryType], {nullable:true})
    notIn?: Array<`${StoryType}`>;
    @Field(() => NestedEnumStoryTypeWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumStoryTypeWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumStoryTypeFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumStoryTypeFilter>;
    @Field(() => NestedEnumStoryTypeFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumStoryTypeFilter>;
}

@InputType()
export class EnumSupportStatusTypeFieldUpdateOperationsInput {
    @Field(() => SupportStatusType, {nullable:true})
    set?: `${SupportStatusType}`;
}

@InputType()
export class EnumSupportStatusTypeFilter {
    @Field(() => SupportStatusType, {nullable:true})
    equals?: `${SupportStatusType}`;
    @Field(() => [SupportStatusType], {nullable:true})
    in?: Array<`${SupportStatusType}`>;
    @Field(() => [SupportStatusType], {nullable:true})
    notIn?: Array<`${SupportStatusType}`>;
    @Field(() => NestedEnumSupportStatusTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumSupportStatusTypeFilter>;
}

@InputType()
export class EnumSupportStatusTypeWithAggregatesFilter {
    @Field(() => SupportStatusType, {nullable:true})
    equals?: `${SupportStatusType}`;
    @Field(() => [SupportStatusType], {nullable:true})
    in?: Array<`${SupportStatusType}`>;
    @Field(() => [SupportStatusType], {nullable:true})
    notIn?: Array<`${SupportStatusType}`>;
    @Field(() => NestedEnumSupportStatusTypeWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumSupportStatusTypeWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumSupportStatusTypeFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumSupportStatusTypeFilter>;
    @Field(() => NestedEnumSupportStatusTypeFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumSupportStatusTypeFilter>;
}

@InputType()
export class EnumSupportTicketParticipantFieldUpdateOperationsInput {
    @Field(() => SupportTicketParticipant, {nullable:true})
    set?: `${SupportTicketParticipant}`;
}

@InputType()
export class EnumSupportTicketParticipantFilter {
    @Field(() => SupportTicketParticipant, {nullable:true})
    equals?: `${SupportTicketParticipant}`;
    @Field(() => [SupportTicketParticipant], {nullable:true})
    in?: Array<`${SupportTicketParticipant}`>;
    @Field(() => [SupportTicketParticipant], {nullable:true})
    notIn?: Array<`${SupportTicketParticipant}`>;
    @Field(() => NestedEnumSupportTicketParticipantFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumSupportTicketParticipantFilter>;
}

@InputType()
export class EnumSupportTicketParticipantWithAggregatesFilter {
    @Field(() => SupportTicketParticipant, {nullable:true})
    equals?: `${SupportTicketParticipant}`;
    @Field(() => [SupportTicketParticipant], {nullable:true})
    in?: Array<`${SupportTicketParticipant}`>;
    @Field(() => [SupportTicketParticipant], {nullable:true})
    notIn?: Array<`${SupportTicketParticipant}`>;
    @Field(() => NestedEnumSupportTicketParticipantWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumSupportTicketParticipantWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumSupportTicketParticipantFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumSupportTicketParticipantFilter>;
    @Field(() => NestedEnumSupportTicketParticipantFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumSupportTicketParticipantFilter>;
}

@InputType()
export class EnumSupportTicketTypeFieldUpdateOperationsInput {
    @Field(() => SupportTicketType, {nullable:true})
    set?: `${SupportTicketType}`;
}

@InputType()
export class EnumSupportTicketTypeFilter {
    @Field(() => SupportTicketType, {nullable:true})
    equals?: `${SupportTicketType}`;
    @Field(() => [SupportTicketType], {nullable:true})
    in?: Array<`${SupportTicketType}`>;
    @Field(() => [SupportTicketType], {nullable:true})
    notIn?: Array<`${SupportTicketType}`>;
    @Field(() => NestedEnumSupportTicketTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumSupportTicketTypeFilter>;
}

@InputType()
export class EnumSupportTicketTypeWithAggregatesFilter {
    @Field(() => SupportTicketType, {nullable:true})
    equals?: `${SupportTicketType}`;
    @Field(() => [SupportTicketType], {nullable:true})
    in?: Array<`${SupportTicketType}`>;
    @Field(() => [SupportTicketType], {nullable:true})
    notIn?: Array<`${SupportTicketType}`>;
    @Field(() => NestedEnumSupportTicketTypeWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumSupportTicketTypeWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumSupportTicketTypeFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumSupportTicketTypeFilter>;
    @Field(() => NestedEnumSupportTicketTypeFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumSupportTicketTypeFilter>;
}

@InputType()
export class EnumSystemIconsFieldUpdateOperationsInput {
    @Field(() => SystemIcons, {nullable:true})
    set?: `${SystemIcons}`;
}

@InputType()
export class EnumSystemIconsFilter {
    @Field(() => SystemIcons, {nullable:true})
    equals?: `${SystemIcons}`;
    @Field(() => [SystemIcons], {nullable:true})
    in?: Array<`${SystemIcons}`>;
    @Field(() => [SystemIcons], {nullable:true})
    notIn?: Array<`${SystemIcons}`>;
    @Field(() => NestedEnumSystemIconsFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumSystemIconsFilter>;
}

@InputType()
export class EnumSystemNotificationTypeFieldUpdateOperationsInput {
    @Field(() => SystemNotificationType, {nullable:true})
    set?: `${SystemNotificationType}`;
}

@InputType()
export class EnumSystemNotificationTypeFilter {
    @Field(() => SystemNotificationType, {nullable:true})
    equals?: `${SystemNotificationType}`;
    @Field(() => [SystemNotificationType], {nullable:true})
    in?: Array<`${SystemNotificationType}`>;
    @Field(() => [SystemNotificationType], {nullable:true})
    notIn?: Array<`${SystemNotificationType}`>;
    @Field(() => NestedEnumSystemNotificationTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumSystemNotificationTypeFilter>;
}

@InputType()
export class EnumTagFieldUpdateOperationsInput {
    @Field(() => Tag, {nullable:true})
    set?: `${Tag}`;
}

@InputType()
export class EnumTagFilter {
    @Field(() => Tag, {nullable:true})
    equals?: `${Tag}`;
    @Field(() => [Tag], {nullable:true})
    in?: Array<`${Tag}`>;
    @Field(() => [Tag], {nullable:true})
    notIn?: Array<`${Tag}`>;
    @Field(() => NestedEnumTagFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumTagFilter>;
}

@InputType()
export class EnumTagWithAggregatesFilter {
    @Field(() => Tag, {nullable:true})
    equals?: `${Tag}`;
    @Field(() => [Tag], {nullable:true})
    in?: Array<`${Tag}`>;
    @Field(() => [Tag], {nullable:true})
    notIn?: Array<`${Tag}`>;
    @Field(() => NestedEnumTagWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumTagWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumTagFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumTagFilter>;
    @Field(() => NestedEnumTagFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumTagFilter>;
}

@InputType()
export class EnumUniversityAdminTypeFieldUpdateOperationsInput {
    @Field(() => UniversityAdminType, {nullable:true})
    set?: `${UniversityAdminType}`;
}

@InputType()
export class EnumUniversityAdminTypeFilter {
    @Field(() => UniversityAdminType, {nullable:true})
    equals?: `${UniversityAdminType}`;
    @Field(() => [UniversityAdminType], {nullable:true})
    in?: Array<`${UniversityAdminType}`>;
    @Field(() => [UniversityAdminType], {nullable:true})
    notIn?: Array<`${UniversityAdminType}`>;
    @Field(() => NestedEnumUniversityAdminTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumUniversityAdminTypeFilter>;
}

@InputType()
export class EnumUniversityAdminTypeWithAggregatesFilter {
    @Field(() => UniversityAdminType, {nullable:true})
    equals?: `${UniversityAdminType}`;
    @Field(() => [UniversityAdminType], {nullable:true})
    in?: Array<`${UniversityAdminType}`>;
    @Field(() => [UniversityAdminType], {nullable:true})
    notIn?: Array<`${UniversityAdminType}`>;
    @Field(() => NestedEnumUniversityAdminTypeWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumUniversityAdminTypeWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumUniversityAdminTypeFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumUniversityAdminTypeFilter>;
    @Field(() => NestedEnumUniversityAdminTypeFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumUniversityAdminTypeFilter>;
}

@InputType()
export class EnumUserGenderFilterFieldUpdateOperationsInput {
    @Field(() => UserGenderFilter, {nullable:true})
    set?: `${UserGenderFilter}`;
}

@InputType()
export class EnumUserGenderFilterFilter {
    @Field(() => UserGenderFilter, {nullable:true})
    equals?: `${UserGenderFilter}`;
    @Field(() => [UserGenderFilter], {nullable:true})
    in?: Array<`${UserGenderFilter}`>;
    @Field(() => [UserGenderFilter], {nullable:true})
    notIn?: Array<`${UserGenderFilter}`>;
    @Field(() => NestedEnumUserGenderFilterFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumUserGenderFilterFilter>;
}

@InputType()
export class EnumUserListedFilterNullableFilter {
    @Field(() => UserListedFilter, {nullable:true})
    equals?: `${UserListedFilter}`;
    @Field(() => [UserListedFilter], {nullable:true})
    in?: Array<`${UserListedFilter}`>;
    @Field(() => [UserListedFilter], {nullable:true})
    notIn?: Array<`${UserListedFilter}`>;
    @Field(() => NestedEnumUserListedFilterNullableFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumUserListedFilterNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class FeaturedProductCategoryNullableCompositeFilter {
    @Field(() => FeaturedProductCategoryObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof FeaturedProductCategoryObjectEqualityInput>;
    @Field(() => FeaturedProductCategoryWhereInput, {nullable:true})
    is?: InstanceType<typeof FeaturedProductCategoryWhereInput>;
    @Field(() => FeaturedProductCategoryWhereInput, {nullable:true})
    isNot?: InstanceType<typeof FeaturedProductCategoryWhereInput>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class FeaturedProductCategoryNullableCreateEnvelopeInput {
    @Field(() => FeaturedProductCategoryCreateInput, {nullable:true})
    @Type(() => FeaturedProductCategoryCreateInput)
    set?: InstanceType<typeof FeaturedProductCategoryCreateInput>;
}

@InputType()
export class FeaturedProductCategoryNullableUpdateEnvelopeInput {
    @Field(() => FeaturedProductCategoryCreateInput, {nullable:true})
    @Type(() => FeaturedProductCategoryCreateInput)
    set?: InstanceType<typeof FeaturedProductCategoryCreateInput>;
    @Field(() => FeaturedProductCategoryUpsertInput, {nullable:true})
    @Type(() => FeaturedProductCategoryUpsertInput)
    upsert?: InstanceType<typeof FeaturedProductCategoryUpsertInput>;
    @Field(() => Boolean, {nullable:true})
    unset?: boolean;
}

@InputType()
export class FeaturedProductCategoryObjectEqualityInput {
    @Field(() => Boolean, {nullable:false})
    status!: boolean;
    @Field(() => String, {nullable:false})
    image!: string;
}

@InputType()
export class FeaturedProductCategoryUpsertInput {
    @Field(() => FeaturedProductCategoryCreateInput, {nullable:false})
    @Type(() => FeaturedProductCategoryCreateInput)
    set!: InstanceType<typeof FeaturedProductCategoryCreateInput>;
    @Field(() => FeaturedProductCategoryUpdateInput, {nullable:false})
    @Type(() => FeaturedProductCategoryUpdateInput)
    update!: InstanceType<typeof FeaturedProductCategoryUpdateInput>;
}

@InputType()
export class FilterChoiceCompositeListFilter {
    @Field(() => [FilterChoiceObjectEqualityInput], {nullable:true})
    equals?: Array<FilterChoiceObjectEqualityInput>;
    @Field(() => FilterChoiceWhereInput, {nullable:true})
    every?: InstanceType<typeof FilterChoiceWhereInput>;
    @Field(() => FilterChoiceWhereInput, {nullable:true})
    some?: InstanceType<typeof FilterChoiceWhereInput>;
    @Field(() => FilterChoiceWhereInput, {nullable:true})
    none?: InstanceType<typeof FilterChoiceWhereInput>;
    @Field(() => Boolean, {nullable:true})
    isEmpty?: boolean;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class FilterChoiceDeleteManyInput {
    @Field(() => FilterChoiceWhereInput, {nullable:false})
    @Type(() => FilterChoiceWhereInput)
    where!: InstanceType<typeof FilterChoiceWhereInput>;
}

@InputType()
export class FilterChoiceListUpdateEnvelopeInput {
    @Field(() => [FilterChoiceCreateInput], {nullable:true})
    @Type(() => FilterChoiceCreateInput)
    set?: Array<FilterChoiceCreateInput>;
    @Field(() => [FilterChoiceCreateInput], {nullable:true})
    push?: Array<FilterChoiceCreateInput>;
    @Field(() => FilterChoiceUpdateManyInput, {nullable:true})
    @Type(() => FilterChoiceUpdateManyInput)
    updateMany?: InstanceType<typeof FilterChoiceUpdateManyInput>;
    @Field(() => FilterChoiceDeleteManyInput, {nullable:true})
    @Type(() => FilterChoiceDeleteManyInput)
    deleteMany?: InstanceType<typeof FilterChoiceDeleteManyInput>;
}

@InputType()
export class FilterChoiceObjectEqualityInput {
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    value!: string;
}

@ArgsType()
export class FindAdRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindAdminRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindAdvertiserRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindAnnouncementBannerRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindAppLovinRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindAppPopupRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindBannedWordRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindBannedWordsCategoryRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindBannerRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindBrandRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindCampaignRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindCampusChatMessagePayloadRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindCampusChatMessageRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindCampusChatRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindCampusChatReportRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindChatBubblesRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindColorRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindConversationRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindDealRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindDirectMessageRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindDmMessageTypeRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindEduInstituteRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindEventRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindFirstDmMessageTypeOrThrowArgs {
    @Field(() => DMMessageTypeWhereInput, {nullable:true})
    @Type(() => DMMessageTypeWhereInput)
    where?: InstanceType<typeof DMMessageTypeWhereInput>;
    @Field(() => [DMMessageTypeOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<DMMessageTypeOrderByWithRelationInput>;
    @Field(() => DMMessageTypeWhereUniqueInput, {nullable:true})
    cursor?: InstanceType<typeof DMMessageTypeWhereUniqueInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [DMMessageTypeScalarFieldEnum], {nullable:true})
    distinct?: Array<`${DMMessageTypeScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstDmMessageTypeArgs {
    @Field(() => DMMessageTypeWhereInput, {nullable:true})
    @Type(() => DMMessageTypeWhereInput)
    where?: InstanceType<typeof DMMessageTypeWhereInput>;
    @Field(() => [DMMessageTypeOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<DMMessageTypeOrderByWithRelationInput>;
    @Field(() => DMMessageTypeWhereUniqueInput, {nullable:true})
    cursor?: InstanceType<typeof DMMessageTypeWhereUniqueInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [DMMessageTypeScalarFieldEnum], {nullable:true})
    distinct?: Array<`${DMMessageTypeScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstPersonalDmOrThrowArgs {
    @Field(() => PersonalDMWhereInput, {nullable:true})
    @Type(() => PersonalDMWhereInput)
    where?: InstanceType<typeof PersonalDMWhereInput>;
    @Field(() => [PersonalDMOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<PersonalDMOrderByWithRelationInput>;
    @Field(() => PersonalDMWhereUniqueInput, {nullable:true})
    cursor?: InstanceType<typeof PersonalDMWhereUniqueInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [PersonalDMScalarFieldEnum], {nullable:true})
    distinct?: Array<`${PersonalDMScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstPersonalDmArgs {
    @Field(() => PersonalDMWhereInput, {nullable:true})
    @Type(() => PersonalDMWhereInput)
    where?: InstanceType<typeof PersonalDMWhereInput>;
    @Field(() => [PersonalDMOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<PersonalDMOrderByWithRelationInput>;
    @Field(() => PersonalDMWhereUniqueInput, {nullable:true})
    cursor?: InstanceType<typeof PersonalDMWhereUniqueInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [PersonalDMScalarFieldEnum], {nullable:true})
    distinct?: Array<`${PersonalDMScalarFieldEnum}`>;
}

@ArgsType()
export class FindHobbyRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindInstitutionRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindLegacyImagesRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindListingSettingRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindManyDmMessageTypeArgs {
    @Field(() => DMMessageTypeWhereInput, {nullable:true})
    @Type(() => DMMessageTypeWhereInput)
    where?: InstanceType<typeof DMMessageTypeWhereInput>;
    @Field(() => [DMMessageTypeOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<DMMessageTypeOrderByWithRelationInput>;
    @Field(() => DMMessageTypeWhereUniqueInput, {nullable:true})
    cursor?: InstanceType<typeof DMMessageTypeWhereUniqueInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [DMMessageTypeScalarFieldEnum], {nullable:true})
    distinct?: Array<`${DMMessageTypeScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyPersonalDmArgs {
    @Field(() => PersonalDMWhereInput, {nullable:true})
    @Type(() => PersonalDMWhereInput)
    where?: InstanceType<typeof PersonalDMWhereInput>;
    @Field(() => [PersonalDMOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<PersonalDMOrderByWithRelationInput>;
    @Field(() => PersonalDMWhereUniqueInput, {nullable:true})
    cursor?: InstanceType<typeof PersonalDMWhereUniqueInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [PersonalDMScalarFieldEnum], {nullable:true})
    distinct?: Array<`${PersonalDMScalarFieldEnum}`>;
}

@ArgsType()
export class FindMessageRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindNotificationPayloadsRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindNotificationRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindOrderPayoutRequestLogRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindOrderRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindOtpLogRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindPassCodeRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindPaymentRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindPayoutRequestLogRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindPersonalDmRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindPrivacyPolicyRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindProductCategoryRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindProductCommentRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindProductListingRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindProductReportRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindPromoCodeRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindPushNotificationCampaignRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindShoppingPreferenceRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindStoryPayloadRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindStoryRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindStoryReactionRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindStoryViewRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindSupportRequestRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindSupportTicketRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindUniqueDmMessageTypeOrThrowArgs {
    @Field(() => DMMessageTypeWhereUniqueInput, {nullable:false})
    @Type(() => DMMessageTypeWhereUniqueInput)
    where!: InstanceType<typeof DMMessageTypeWhereUniqueInput>;
}

@ArgsType()
export class FindUniqueDmMessageTypeArgs {
    @Field(() => DMMessageTypeWhereUniqueInput, {nullable:false})
    @Type(() => DMMessageTypeWhereUniqueInput)
    where!: InstanceType<typeof DMMessageTypeWhereUniqueInput>;
}

@ArgsType()
export class FindUniquePersonalDmOrThrowArgs {
    @Field(() => PersonalDMWhereUniqueInput, {nullable:false})
    @Type(() => PersonalDMWhereUniqueInput)
    where!: InstanceType<typeof PersonalDMWhereUniqueInput>;
}

@ArgsType()
export class FindUniquePersonalDmArgs {
    @Field(() => PersonalDMWhereUniqueInput, {nullable:false})
    @Type(() => PersonalDMWhereUniqueInput)
    where!: InstanceType<typeof PersonalDMWhereUniqueInput>;
}

@ArgsType()
export class FindUniversityAdminRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindUserRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@ArgsType()
export class FindWeightCategoryRawArgs {
    @Field(() => GraphQLJSON, {nullable:true})
    filter?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    options?: any;
}

@InputType()
export class FloatFieldUpdateOperationsInput {
    @Field(() => Float, {nullable:true})
    set?: number;
    @Field(() => Float, {nullable:true})
    increment?: number;
    @Field(() => Float, {nullable:true})
    decrement?: number;
    @Field(() => Float, {nullable:true})
    multiply?: number;
    @Field(() => Float, {nullable:true})
    divide?: number;
}

@InputType()
export class FloatFilter {
    @Field(() => Float, {nullable:true})
    equals?: number;
    @Field(() => [Float], {nullable:true})
    in?: Array<number>;
    @Field(() => [Float], {nullable:true})
    notIn?: Array<number>;
    @Field(() => Float, {nullable:true})
    lt?: number;
    @Field(() => Float, {nullable:true})
    lte?: number;
    @Field(() => Float, {nullable:true})
    gt?: number;
    @Field(() => Float, {nullable:true})
    gte?: number;
    @Field(() => NestedFloatFilter, {nullable:true})
    not?: InstanceType<typeof NestedFloatFilter>;
}

@InputType()
export class FloatNullableFilter {
    @Field(() => Float, {nullable:true})
    equals?: number;
    @Field(() => [Float], {nullable:true})
    in?: Array<number>;
    @Field(() => [Float], {nullable:true})
    notIn?: Array<number>;
    @Field(() => Float, {nullable:true})
    lt?: number;
    @Field(() => Float, {nullable:true})
    lte?: number;
    @Field(() => Float, {nullable:true})
    gt?: number;
    @Field(() => Float, {nullable:true})
    gte?: number;
    @Field(() => NestedFloatNullableFilter, {nullable:true})
    not?: InstanceType<typeof NestedFloatNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class FloatWithAggregatesFilter {
    @Field(() => Float, {nullable:true})
    equals?: number;
    @Field(() => [Float], {nullable:true})
    in?: Array<number>;
    @Field(() => [Float], {nullable:true})
    notIn?: Array<number>;
    @Field(() => Float, {nullable:true})
    lt?: number;
    @Field(() => Float, {nullable:true})
    lte?: number;
    @Field(() => Float, {nullable:true})
    gt?: number;
    @Field(() => Float, {nullable:true})
    gte?: number;
    @Field(() => NestedFloatWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedFloatWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedFloatFilter, {nullable:true})
    _avg?: InstanceType<typeof NestedFloatFilter>;
    @Field(() => NestedFloatFilter, {nullable:true})
    _sum?: InstanceType<typeof NestedFloatFilter>;
    @Field(() => NestedFloatFilter, {nullable:true})
    _min?: InstanceType<typeof NestedFloatFilter>;
    @Field(() => NestedFloatFilter, {nullable:true})
    _max?: InstanceType<typeof NestedFloatFilter>;
}

@ArgsType()
export class GroupByDmMessageTypeArgs {
    @Field(() => DMMessageTypeWhereInput, {nullable:true})
    @Type(() => DMMessageTypeWhereInput)
    where?: InstanceType<typeof DMMessageTypeWhereInput>;
    @Field(() => [DMMessageTypeOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<DMMessageTypeOrderByWithAggregationInput>;
    @Field(() => [DMMessageTypeScalarFieldEnum], {nullable:false})
    by!: Array<`${DMMessageTypeScalarFieldEnum}`>;
    @Field(() => DMMessageTypeScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof DMMessageTypeScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@ArgsType()
export class GroupByPersonalDmArgs {
    @Field(() => PersonalDMWhereInput, {nullable:true})
    @Type(() => PersonalDMWhereInput)
    where?: InstanceType<typeof PersonalDMWhereInput>;
    @Field(() => [PersonalDMOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<PersonalDMOrderByWithAggregationInput>;
    @Field(() => [PersonalDMScalarFieldEnum], {nullable:false})
    by!: Array<`${PersonalDMScalarFieldEnum}`>;
    @Field(() => PersonalDMScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof PersonalDMScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class ImageCompositeListFilter {
    @Field(() => [ImageObjectEqualityInput], {nullable:true})
    equals?: Array<ImageObjectEqualityInput>;
    @Field(() => ImageWhereInput, {nullable:true})
    every?: InstanceType<typeof ImageWhereInput>;
    @Field(() => ImageWhereInput, {nullable:true})
    some?: InstanceType<typeof ImageWhereInput>;
    @Field(() => ImageWhereInput, {nullable:true})
    none?: InstanceType<typeof ImageWhereInput>;
    @Field(() => Boolean, {nullable:true})
    isEmpty?: boolean;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class ImageDeleteManyInput {
    @Field(() => ImageWhereInput, {nullable:false})
    @Type(() => ImageWhereInput)
    where!: InstanceType<typeof ImageWhereInput>;
}

@InputType()
export class ImageListCreateEnvelopeInput {
    @Field(() => [ImageCreateInput], {nullable:true})
    @Type(() => ImageCreateInput)
    set?: Array<ImageCreateInput>;
}

@InputType()
export class ImageListUpdateEnvelopeInput {
    @Field(() => [ImageCreateInput], {nullable:true})
    @Type(() => ImageCreateInput)
    set?: Array<ImageCreateInput>;
    @Field(() => [ImageCreateInput], {nullable:true})
    push?: Array<ImageCreateInput>;
    @Field(() => ImageUpdateManyInput, {nullable:true})
    @Type(() => ImageUpdateManyInput)
    updateMany?: InstanceType<typeof ImageUpdateManyInput>;
    @Field(() => ImageDeleteManyInput, {nullable:true})
    @Type(() => ImageDeleteManyInput)
    deleteMany?: InstanceType<typeof ImageDeleteManyInput>;
}

@InputType()
export class ImageObjectEqualityInput {
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => Int, {nullable:true})
    order?: number;
    @Field(() => Boolean, {nullable:true})
    mainImage?: boolean;
}

@InputType()
export class ImageStoryPayloadCompositeFilter {
    @Field(() => ImageStoryPayloadObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof ImageStoryPayloadObjectEqualityInput>;
    @Field(() => ImageStoryPayloadWhereInput, {nullable:true})
    is?: InstanceType<typeof ImageStoryPayloadWhereInput>;
    @Field(() => ImageStoryPayloadWhereInput, {nullable:true})
    isNot?: InstanceType<typeof ImageStoryPayloadWhereInput>;
}

@InputType()
export class ImageStoryPayloadObjectEqualityInput {
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => String, {nullable:true})
    fontColor?: string;
    @Field(() => String, {nullable:true})
    textPosX?: string;
    @Field(() => String, {nullable:true})
    textPosY?: string;
    @Field(() => String, {nullable:true})
    textHexCode?: string;
}

@InputType()
export class InfoSystemMessageCompositeFilter {
    @Field(() => InfoSystemMessageObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof InfoSystemMessageObjectEqualityInput>;
    @Field(() => InfoSystemMessageWhereInput, {nullable:true})
    is?: InstanceType<typeof InfoSystemMessageWhereInput>;
    @Field(() => InfoSystemMessageWhereInput, {nullable:true})
    isNot?: InstanceType<typeof InfoSystemMessageWhereInput>;
}

@InputType()
export class InfoSystemMessageObjectEqualityInput {
    @Field(() => SystemIcons, {nullable:false})
    icon!: `${SystemIcons}`;
    @Field(() => String, {nullable:false})
    text1!: string;
    @Field(() => String, {nullable:false})
    text2!: string;
}

@InputType()
export class IntFieldUpdateOperationsInput {
    @Field(() => Int, {nullable:true})
    set?: number;
    @Field(() => Int, {nullable:true})
    increment?: number;
    @Field(() => Int, {nullable:true})
    decrement?: number;
    @Field(() => Int, {nullable:true})
    multiply?: number;
    @Field(() => Int, {nullable:true})
    divide?: number;
}

@InputType()
export class IntFilter {
    @Field(() => Int, {nullable:true})
    equals?: number;
    @Field(() => [Int], {nullable:true})
    in?: Array<number>;
    @Field(() => [Int], {nullable:true})
    notIn?: Array<number>;
    @Field(() => Int, {nullable:true})
    lt?: number;
    @Field(() => Int, {nullable:true})
    lte?: number;
    @Field(() => Int, {nullable:true})
    gt?: number;
    @Field(() => Int, {nullable:true})
    gte?: number;
    @Field(() => NestedIntFilter, {nullable:true})
    not?: InstanceType<typeof NestedIntFilter>;
}

@InputType()
export class IntNullableFilter {
    @Field(() => Int, {nullable:true})
    equals?: number;
    @Field(() => [Int], {nullable:true})
    in?: Array<number>;
    @Field(() => [Int], {nullable:true})
    notIn?: Array<number>;
    @Field(() => Int, {nullable:true})
    lt?: number;
    @Field(() => Int, {nullable:true})
    lte?: number;
    @Field(() => Int, {nullable:true})
    gt?: number;
    @Field(() => Int, {nullable:true})
    gte?: number;
    @Field(() => NestedIntNullableFilter, {nullable:true})
    not?: InstanceType<typeof NestedIntNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class IntNullableWithAggregatesFilter {
    @Field(() => Int, {nullable:true})
    equals?: number;
    @Field(() => [Int], {nullable:true})
    in?: Array<number>;
    @Field(() => [Int], {nullable:true})
    notIn?: Array<number>;
    @Field(() => Int, {nullable:true})
    lt?: number;
    @Field(() => Int, {nullable:true})
    lte?: number;
    @Field(() => Int, {nullable:true})
    gt?: number;
    @Field(() => Int, {nullable:true})
    gte?: number;
    @Field(() => NestedIntNullableWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedIntNullableWithAggregatesFilter>;
    @Field(() => NestedIntNullableFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntNullableFilter>;
    @Field(() => NestedFloatNullableFilter, {nullable:true})
    _avg?: InstanceType<typeof NestedFloatNullableFilter>;
    @Field(() => NestedIntNullableFilter, {nullable:true})
    _sum?: InstanceType<typeof NestedIntNullableFilter>;
    @Field(() => NestedIntNullableFilter, {nullable:true})
    _min?: InstanceType<typeof NestedIntNullableFilter>;
    @Field(() => NestedIntNullableFilter, {nullable:true})
    _max?: InstanceType<typeof NestedIntNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class IntWithAggregatesFilter {
    @Field(() => Int, {nullable:true})
    equals?: number;
    @Field(() => [Int], {nullable:true})
    in?: Array<number>;
    @Field(() => [Int], {nullable:true})
    notIn?: Array<number>;
    @Field(() => Int, {nullable:true})
    lt?: number;
    @Field(() => Int, {nullable:true})
    lte?: number;
    @Field(() => Int, {nullable:true})
    gt?: number;
    @Field(() => Int, {nullable:true})
    gte?: number;
    @Field(() => NestedIntWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedIntWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedFloatFilter, {nullable:true})
    _avg?: InstanceType<typeof NestedFloatFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _sum?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _min?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _max?: InstanceType<typeof NestedIntFilter>;
}

@InputType()
export class JsonFilter {
    @Field(() => GraphQLJSON, {nullable:true})
    equals?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    not?: any;
}

@InputType()
export class JsonNullableFilter {
    @Field(() => GraphQLJSON, {nullable:true})
    equals?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    not?: any;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class JsonNullableWithAggregatesFilter {
    @Field(() => GraphQLJSON, {nullable:true})
    equals?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    not?: any;
    @Field(() => NestedIntNullableFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntNullableFilter>;
    @Field(() => NestedJsonNullableFilter, {nullable:true})
    _min?: InstanceType<typeof NestedJsonNullableFilter>;
    @Field(() => NestedJsonNullableFilter, {nullable:true})
    _max?: InstanceType<typeof NestedJsonNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class JsonWithAggregatesFilter {
    @Field(() => GraphQLJSON, {nullable:true})
    equals?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    not?: any;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedJsonFilter, {nullable:true})
    _min?: InstanceType<typeof NestedJsonFilter>;
    @Field(() => NestedJsonFilter, {nullable:true})
    _max?: InstanceType<typeof NestedJsonFilter>;
}

@InputType()
export class LocalOrderHandedOverMessageCompositeFilter {
    @Field(() => LocalOrderHandedOverMessageObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof LocalOrderHandedOverMessageObjectEqualityInput>;
    @Field(() => LocalOrderHandedOverMessageWhereInput, {nullable:true})
    is?: InstanceType<typeof LocalOrderHandedOverMessageWhereInput>;
    @Field(() => LocalOrderHandedOverMessageWhereInput, {nullable:true})
    isNot?: InstanceType<typeof LocalOrderHandedOverMessageWhereInput>;
}

@InputType()
export class LocalOrderHandedOverMessageObjectEqualityInput {
    @Field(() => String, {nullable:false})
    buyerHeading!: string;
    @Field(() => String, {nullable:false})
    buyerDescription!: string;
    @Field(() => String, {nullable:false})
    sellerHeading!: string;
    @Field(() => String, {nullable:false})
    sellerDescription!: string;
}

@InputType()
export class LocalOrderUpdateMessageCompositeFilter {
    @Field(() => LocalOrderUpdateMessageObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof LocalOrderUpdateMessageObjectEqualityInput>;
    @Field(() => LocalOrderUpdateMessageWhereInput, {nullable:true})
    is?: InstanceType<typeof LocalOrderUpdateMessageWhereInput>;
    @Field(() => LocalOrderUpdateMessageWhereInput, {nullable:true})
    isNot?: InstanceType<typeof LocalOrderUpdateMessageWhereInput>;
}

@InputType()
export class LocalOrderUpdateMessageObjectEqualityInput {
    @Field(() => String, {nullable:false})
    heading!: string;
    @Field(() => String, {nullable:false})
    description!: string;
}

@InputType()
export class LocalOrderUpdateMessageUpdateEnvelopeInput {
    @Field(() => LocalOrderUpdateMessageCreateInput, {nullable:true})
    @Type(() => LocalOrderUpdateMessageCreateInput)
    set?: InstanceType<typeof LocalOrderUpdateMessageCreateInput>;
    @Field(() => LocalOrderUpdateMessageUpdateInput, {nullable:true})
    @Type(() => LocalOrderUpdateMessageUpdateInput)
    update?: InstanceType<typeof LocalOrderUpdateMessageUpdateInput>;
}

@InputType()
export class MediaItemCompositeFilter {
    @Field(() => MediaItemObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof MediaItemObjectEqualityInput>;
    @Field(() => MediaItemWhereInput, {nullable:true})
    is?: InstanceType<typeof MediaItemWhereInput>;
    @Field(() => MediaItemWhereInput, {nullable:true})
    isNot?: InstanceType<typeof MediaItemWhereInput>;
}

@InputType()
export class MediaItemCompositeListFilter {
    @Field(() => [MediaItemObjectEqualityInput], {nullable:true})
    equals?: Array<MediaItemObjectEqualityInput>;
    @Field(() => MediaItemWhereInput, {nullable:true})
    every?: InstanceType<typeof MediaItemWhereInput>;
    @Field(() => MediaItemWhereInput, {nullable:true})
    some?: InstanceType<typeof MediaItemWhereInput>;
    @Field(() => MediaItemWhereInput, {nullable:true})
    none?: InstanceType<typeof MediaItemWhereInput>;
    @Field(() => Boolean, {nullable:true})
    isEmpty?: boolean;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class MediaItemDeleteManyInput {
    @Field(() => MediaItemWhereInput, {nullable:false})
    @Type(() => MediaItemWhereInput)
    where!: InstanceType<typeof MediaItemWhereInput>;
}

@InputType()
export class MediaItemListCreateEnvelopeInput {
    @Field(() => [MediaItemCreateInput], {nullable:true})
    @Type(() => MediaItemCreateInput)
    set?: Array<MediaItemCreateInput>;
}

@InputType()
export class MediaItemListUpdateEnvelopeInput {
    @Field(() => [MediaItemCreateInput], {nullable:true})
    @Type(() => MediaItemCreateInput)
    set?: Array<MediaItemCreateInput>;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    push?: Array<MediaItemCreateInput>;
    @Field(() => MediaItemUpdateManyInput, {nullable:true})
    @Type(() => MediaItemUpdateManyInput)
    updateMany?: InstanceType<typeof MediaItemUpdateManyInput>;
    @Field(() => MediaItemDeleteManyInput, {nullable:true})
    @Type(() => MediaItemDeleteManyInput)
    deleteMany?: InstanceType<typeof MediaItemDeleteManyInput>;
}

@InputType()
export class MediaItemObjectEqualityInput {
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => MediaType, {nullable:false})
    type!: `${MediaType}`;
    @Field(() => Boolean, {nullable:false})
    thumb!: boolean;
}

@InputType()
export class MessageActionCompositeListFilter {
    @Field(() => [MessageActionObjectEqualityInput], {nullable:true})
    equals?: Array<MessageActionObjectEqualityInput>;
    @Field(() => MessageActionWhereInput, {nullable:true})
    every?: InstanceType<typeof MessageActionWhereInput>;
    @Field(() => MessageActionWhereInput, {nullable:true})
    some?: InstanceType<typeof MessageActionWhereInput>;
    @Field(() => MessageActionWhereInput, {nullable:true})
    none?: InstanceType<typeof MessageActionWhereInput>;
    @Field(() => Boolean, {nullable:true})
    isEmpty?: boolean;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class MessageActionDeleteManyInput {
    @Field(() => MessageActionWhereInput, {nullable:false})
    @Type(() => MessageActionWhereInput)
    where!: InstanceType<typeof MessageActionWhereInput>;
}

@InputType()
export class MessageActionListUpdateEnvelopeInput {
    @Field(() => [MessageActionCreateInput], {nullable:true})
    @Type(() => MessageActionCreateInput)
    set?: Array<MessageActionCreateInput>;
    @Field(() => [MessageActionCreateInput], {nullable:true})
    push?: Array<MessageActionCreateInput>;
    @Field(() => MessageActionUpdateManyInput, {nullable:true})
    @Type(() => MessageActionUpdateManyInput)
    updateMany?: InstanceType<typeof MessageActionUpdateManyInput>;
    @Field(() => MessageActionDeleteManyInput, {nullable:true})
    @Type(() => MessageActionDeleteManyInput)
    deleteMany?: InstanceType<typeof MessageActionDeleteManyInput>;
}

@InputType()
export class MessageActionObjectEqualityInput {
    @Field(() => MessageActionType, {nullable:false})
    type!: `${MessageActionType}`;
    @Field(() => String, {nullable:false})
    label!: string;
}

@InputType()
export class MessageActionsNullableCompositeFilter {
    @Field(() => MessageActionsObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof MessageActionsObjectEqualityInput>;
    @Field(() => MessageActionsWhereInput, {nullable:true})
    is?: InstanceType<typeof MessageActionsWhereInput>;
    @Field(() => MessageActionsWhereInput, {nullable:true})
    isNot?: InstanceType<typeof MessageActionsWhereInput>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class MessageActionsNullableCreateEnvelopeInput {
    @Field(() => MessageActionsCreateInput, {nullable:true})
    @Type(() => MessageActionsCreateInput)
    set?: InstanceType<typeof MessageActionsCreateInput>;
}

@InputType()
export class MessageActionsNullableUpdateEnvelopeInput {
    @Field(() => MessageActionsCreateInput, {nullable:true})
    @Type(() => MessageActionsCreateInput)
    set?: InstanceType<typeof MessageActionsCreateInput>;
    @Field(() => MessageActionsUpsertInput, {nullable:true})
    @Type(() => MessageActionsUpsertInput)
    upsert?: InstanceType<typeof MessageActionsUpsertInput>;
    @Field(() => Boolean, {nullable:true})
    unset?: boolean;
}

@InputType()
export class MessageActionsObjectEqualityInput {
    @Field(() => [MessageActionObjectEqualityInput], {nullable:true})
    senderActions?: Array<MessageActionObjectEqualityInput>;
    @Field(() => [MessageActionObjectEqualityInput], {nullable:true})
    receiverActions?: Array<MessageActionObjectEqualityInput>;
}

@InputType()
export class MessageActionsUpsertInput {
    @Field(() => MessageActionsCreateInput, {nullable:false})
    @Type(() => MessageActionsCreateInput)
    set!: InstanceType<typeof MessageActionsCreateInput>;
    @Field(() => MessageActionsUpdateInput, {nullable:false})
    @Type(() => MessageActionsUpdateInput)
    update!: InstanceType<typeof MessageActionsUpdateInput>;
}

@InputType()
export class NameAndImageCompositeListFilter {
    @Field(() => [NameAndImageObjectEqualityInput], {nullable:true})
    equals?: Array<NameAndImageObjectEqualityInput>;
    @Field(() => NameAndImageWhereInput, {nullable:true})
    every?: InstanceType<typeof NameAndImageWhereInput>;
    @Field(() => NameAndImageWhereInput, {nullable:true})
    some?: InstanceType<typeof NameAndImageWhereInput>;
    @Field(() => NameAndImageWhereInput, {nullable:true})
    none?: InstanceType<typeof NameAndImageWhereInput>;
    @Field(() => Boolean, {nullable:true})
    isEmpty?: boolean;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class NameAndImageDeleteManyInput {
    @Field(() => NameAndImageWhereInput, {nullable:false})
    @Type(() => NameAndImageWhereInput)
    where!: InstanceType<typeof NameAndImageWhereInput>;
}

@InputType()
export class NameAndImageListCreateEnvelopeInput {
    @Field(() => [NameAndImageCreateInput], {nullable:true})
    @Type(() => NameAndImageCreateInput)
    set?: Array<NameAndImageCreateInput>;
}

@InputType()
export class NameAndImageListUpdateEnvelopeInput {
    @Field(() => [NameAndImageCreateInput], {nullable:true})
    @Type(() => NameAndImageCreateInput)
    set?: Array<NameAndImageCreateInput>;
    @Field(() => [NameAndImageCreateInput], {nullable:true})
    push?: Array<NameAndImageCreateInput>;
    @Field(() => NameAndImageUpdateManyInput, {nullable:true})
    @Type(() => NameAndImageUpdateManyInput)
    updateMany?: InstanceType<typeof NameAndImageUpdateManyInput>;
    @Field(() => NameAndImageDeleteManyInput, {nullable:true})
    @Type(() => NameAndImageDeleteManyInput)
    deleteMany?: InstanceType<typeof NameAndImageDeleteManyInput>;
}

@InputType()
export class NameAndImageObjectEqualityInput {
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    image!: string;
}

@InputType()
export class NestedBoolFilter {
    @Field(() => Boolean, {nullable:true})
    equals?: boolean;
    @Field(() => NestedBoolFilter, {nullable:true})
    not?: InstanceType<typeof NestedBoolFilter>;
}

@InputType()
export class NestedBoolNullableFilter {
    @Field(() => Boolean, {nullable:true})
    equals?: boolean;
    @Field(() => NestedBoolNullableFilter, {nullable:true})
    not?: InstanceType<typeof NestedBoolNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class NestedBoolNullableWithAggregatesFilter {
    @Field(() => Boolean, {nullable:true})
    equals?: boolean;
    @Field(() => NestedBoolNullableWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedBoolNullableWithAggregatesFilter>;
    @Field(() => NestedIntNullableFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntNullableFilter>;
    @Field(() => NestedBoolNullableFilter, {nullable:true})
    _min?: InstanceType<typeof NestedBoolNullableFilter>;
    @Field(() => NestedBoolNullableFilter, {nullable:true})
    _max?: InstanceType<typeof NestedBoolNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class NestedBoolWithAggregatesFilter {
    @Field(() => Boolean, {nullable:true})
    equals?: boolean;
    @Field(() => NestedBoolWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedBoolWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedBoolFilter, {nullable:true})
    _min?: InstanceType<typeof NestedBoolFilter>;
    @Field(() => NestedBoolFilter, {nullable:true})
    _max?: InstanceType<typeof NestedBoolFilter>;
}

@InputType()
export class NestedDateTimeFilter {
    @Field(() => Date, {nullable:true})
    equals?: Date | string;
    @Field(() => [Date], {nullable:true})
    in?: Array<Date> | Array<string>;
    @Field(() => [Date], {nullable:true})
    notIn?: Array<Date> | Array<string>;
    @Field(() => Date, {nullable:true})
    lt?: Date | string;
    @Field(() => Date, {nullable:true})
    lte?: Date | string;
    @Field(() => Date, {nullable:true})
    gt?: Date | string;
    @Field(() => Date, {nullable:true})
    gte?: Date | string;
    @Field(() => NestedDateTimeFilter, {nullable:true})
    not?: InstanceType<typeof NestedDateTimeFilter>;
}

@InputType()
export class NestedDateTimeNullableFilter {
    @Field(() => Date, {nullable:true})
    equals?: Date | string;
    @Field(() => [Date], {nullable:true})
    in?: Array<Date> | Array<string>;
    @Field(() => [Date], {nullable:true})
    notIn?: Array<Date> | Array<string>;
    @Field(() => Date, {nullable:true})
    lt?: Date | string;
    @Field(() => Date, {nullable:true})
    lte?: Date | string;
    @Field(() => Date, {nullable:true})
    gt?: Date | string;
    @Field(() => Date, {nullable:true})
    gte?: Date | string;
    @Field(() => NestedDateTimeNullableFilter, {nullable:true})
    not?: InstanceType<typeof NestedDateTimeNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class NestedDateTimeNullableWithAggregatesFilter {
    @Field(() => Date, {nullable:true})
    equals?: Date | string;
    @Field(() => [Date], {nullable:true})
    in?: Array<Date> | Array<string>;
    @Field(() => [Date], {nullable:true})
    notIn?: Array<Date> | Array<string>;
    @Field(() => Date, {nullable:true})
    lt?: Date | string;
    @Field(() => Date, {nullable:true})
    lte?: Date | string;
    @Field(() => Date, {nullable:true})
    gt?: Date | string;
    @Field(() => Date, {nullable:true})
    gte?: Date | string;
    @Field(() => NestedDateTimeNullableWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedDateTimeNullableWithAggregatesFilter>;
    @Field(() => NestedIntNullableFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntNullableFilter>;
    @Field(() => NestedDateTimeNullableFilter, {nullable:true})
    _min?: InstanceType<typeof NestedDateTimeNullableFilter>;
    @Field(() => NestedDateTimeNullableFilter, {nullable:true})
    _max?: InstanceType<typeof NestedDateTimeNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class NestedDateTimeWithAggregatesFilter {
    @Field(() => Date, {nullable:true})
    equals?: Date | string;
    @Field(() => [Date], {nullable:true})
    in?: Array<Date> | Array<string>;
    @Field(() => [Date], {nullable:true})
    notIn?: Array<Date> | Array<string>;
    @Field(() => Date, {nullable:true})
    lt?: Date | string;
    @Field(() => Date, {nullable:true})
    lte?: Date | string;
    @Field(() => Date, {nullable:true})
    gt?: Date | string;
    @Field(() => Date, {nullable:true})
    gte?: Date | string;
    @Field(() => NestedDateTimeWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedDateTimeWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedDateTimeFilter, {nullable:true})
    _min?: InstanceType<typeof NestedDateTimeFilter>;
    @Field(() => NestedDateTimeFilter, {nullable:true})
    _max?: InstanceType<typeof NestedDateTimeFilter>;
}

@InputType()
export class NestedEnumAdTypeFilter {
    @Field(() => AdType, {nullable:true})
    equals?: `${AdType}`;
    @Field(() => [AdType], {nullable:true})
    in?: Array<`${AdType}`>;
    @Field(() => [AdType], {nullable:true})
    notIn?: Array<`${AdType}`>;
    @Field(() => NestedEnumAdTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumAdTypeFilter>;
}

@InputType()
export class NestedEnumAdTypeWithAggregatesFilter {
    @Field(() => AdType, {nullable:true})
    equals?: `${AdType}`;
    @Field(() => [AdType], {nullable:true})
    in?: Array<`${AdType}`>;
    @Field(() => [AdType], {nullable:true})
    notIn?: Array<`${AdType}`>;
    @Field(() => NestedEnumAdTypeWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumAdTypeWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumAdTypeFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumAdTypeFilter>;
    @Field(() => NestedEnumAdTypeFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumAdTypeFilter>;
}

@InputType()
export class NestedEnumAddressTypeFilter {
    @Field(() => AddressType, {nullable:true})
    equals?: `${AddressType}`;
    @Field(() => [AddressType], {nullable:true})
    in?: Array<`${AddressType}`>;
    @Field(() => [AddressType], {nullable:true})
    notIn?: Array<`${AddressType}`>;
    @Field(() => NestedEnumAddressTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumAddressTypeFilter>;
}

@InputType()
export class NestedEnumAltSignupStatusFilter {
    @Field(() => AltSignupStatus, {nullable:true})
    equals?: `${AltSignupStatus}`;
    @Field(() => [AltSignupStatus], {nullable:true})
    in?: Array<`${AltSignupStatus}`>;
    @Field(() => [AltSignupStatus], {nullable:true})
    notIn?: Array<`${AltSignupStatus}`>;
    @Field(() => NestedEnumAltSignupStatusFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumAltSignupStatusFilter>;
}

@InputType()
export class NestedEnumAnnouncementBannerPositionFilter {
    @Field(() => AnnouncementBannerPosition, {nullable:true})
    equals?: `${AnnouncementBannerPosition}`;
    @Field(() => [AnnouncementBannerPosition], {nullable:true})
    in?: Array<`${AnnouncementBannerPosition}`>;
    @Field(() => [AnnouncementBannerPosition], {nullable:true})
    notIn?: Array<`${AnnouncementBannerPosition}`>;
    @Field(() => NestedEnumAnnouncementBannerPositionFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumAnnouncementBannerPositionFilter>;
}

@InputType()
export class NestedEnumAnnouncementBannerPositionWithAggregatesFilter {
    @Field(() => AnnouncementBannerPosition, {nullable:true})
    equals?: `${AnnouncementBannerPosition}`;
    @Field(() => [AnnouncementBannerPosition], {nullable:true})
    in?: Array<`${AnnouncementBannerPosition}`>;
    @Field(() => [AnnouncementBannerPosition], {nullable:true})
    notIn?: Array<`${AnnouncementBannerPosition}`>;
    @Field(() => NestedEnumAnnouncementBannerPositionWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumAnnouncementBannerPositionWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumAnnouncementBannerPositionFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumAnnouncementBannerPositionFilter>;
    @Field(() => NestedEnumAnnouncementBannerPositionFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumAnnouncementBannerPositionFilter>;
}

@InputType()
export class NestedEnumAppLovinPositionFilter {
    @Field(() => AppLovinPosition, {nullable:true})
    equals?: `${AppLovinPosition}`;
    @Field(() => [AppLovinPosition], {nullable:true})
    in?: Array<`${AppLovinPosition}`>;
    @Field(() => [AppLovinPosition], {nullable:true})
    notIn?: Array<`${AppLovinPosition}`>;
    @Field(() => NestedEnumAppLovinPositionFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumAppLovinPositionFilter>;
}

@InputType()
export class NestedEnumAppLovinPositionWithAggregatesFilter {
    @Field(() => AppLovinPosition, {nullable:true})
    equals?: `${AppLovinPosition}`;
    @Field(() => [AppLovinPosition], {nullable:true})
    in?: Array<`${AppLovinPosition}`>;
    @Field(() => [AppLovinPosition], {nullable:true})
    notIn?: Array<`${AppLovinPosition}`>;
    @Field(() => NestedEnumAppLovinPositionWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumAppLovinPositionWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumAppLovinPositionFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumAppLovinPositionFilter>;
    @Field(() => NestedEnumAppLovinPositionFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumAppLovinPositionFilter>;
}

@InputType()
export class NestedEnumAppLovingAdTypeFilter {
    @Field(() => AppLovingAdType, {nullable:true})
    equals?: `${AppLovingAdType}`;
    @Field(() => [AppLovingAdType], {nullable:true})
    in?: Array<`${AppLovingAdType}`>;
    @Field(() => [AppLovingAdType], {nullable:true})
    notIn?: Array<`${AppLovingAdType}`>;
    @Field(() => NestedEnumAppLovingAdTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumAppLovingAdTypeFilter>;
}

@InputType()
export class NestedEnumAppLovingAdTypeWithAggregatesFilter {
    @Field(() => AppLovingAdType, {nullable:true})
    equals?: `${AppLovingAdType}`;
    @Field(() => [AppLovingAdType], {nullable:true})
    in?: Array<`${AppLovingAdType}`>;
    @Field(() => [AppLovingAdType], {nullable:true})
    notIn?: Array<`${AppLovingAdType}`>;
    @Field(() => NestedEnumAppLovingAdTypeWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumAppLovingAdTypeWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumAppLovingAdTypeFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumAppLovingAdTypeFilter>;
    @Field(() => NestedEnumAppLovingAdTypeFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumAppLovingAdTypeFilter>;
}

@InputType()
export class NestedEnumAppPopupTemplateFilter {
    @Field(() => AppPopupTemplate, {nullable:true})
    equals?: `${AppPopupTemplate}`;
    @Field(() => [AppPopupTemplate], {nullable:true})
    in?: Array<`${AppPopupTemplate}`>;
    @Field(() => [AppPopupTemplate], {nullable:true})
    notIn?: Array<`${AppPopupTemplate}`>;
    @Field(() => NestedEnumAppPopupTemplateFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumAppPopupTemplateFilter>;
}

@InputType()
export class NestedEnumAppPopupTemplateWithAggregatesFilter {
    @Field(() => AppPopupTemplate, {nullable:true})
    equals?: `${AppPopupTemplate}`;
    @Field(() => [AppPopupTemplate], {nullable:true})
    in?: Array<`${AppPopupTemplate}`>;
    @Field(() => [AppPopupTemplate], {nullable:true})
    notIn?: Array<`${AppPopupTemplate}`>;
    @Field(() => NestedEnumAppPopupTemplateWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumAppPopupTemplateWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumAppPopupTemplateFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumAppPopupTemplateFilter>;
    @Field(() => NestedEnumAppPopupTemplateFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumAppPopupTemplateFilter>;
}

@InputType()
export class NestedEnumBannerTypeFilter {
    @Field(() => BannerType, {nullable:true})
    equals?: `${BannerType}`;
    @Field(() => [BannerType], {nullable:true})
    in?: Array<`${BannerType}`>;
    @Field(() => [BannerType], {nullable:true})
    notIn?: Array<`${BannerType}`>;
    @Field(() => NestedEnumBannerTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumBannerTypeFilter>;
}

@InputType()
export class NestedEnumBannerTypeWithAggregatesFilter {
    @Field(() => BannerType, {nullable:true})
    equals?: `${BannerType}`;
    @Field(() => [BannerType], {nullable:true})
    in?: Array<`${BannerType}`>;
    @Field(() => [BannerType], {nullable:true})
    notIn?: Array<`${BannerType}`>;
    @Field(() => NestedEnumBannerTypeWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumBannerTypeWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumBannerTypeFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumBannerTypeFilter>;
    @Field(() => NestedEnumBannerTypeFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumBannerTypeFilter>;
}

@InputType()
export class NestedEnumBooleanChoiceNullableFilter {
    @Field(() => BooleanChoice, {nullable:true})
    equals?: `${BooleanChoice}`;
    @Field(() => [BooleanChoice], {nullable:true})
    in?: Array<`${BooleanChoice}`>;
    @Field(() => [BooleanChoice], {nullable:true})
    notIn?: Array<`${BooleanChoice}`>;
    @Field(() => NestedEnumBooleanChoiceNullableFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumBooleanChoiceNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class NestedEnumCampusChatMessageFlaggedByNullableFilter {
    @Field(() => CampusChatMessageFlaggedBy, {nullable:true})
    equals?: `${CampusChatMessageFlaggedBy}`;
    @Field(() => [CampusChatMessageFlaggedBy], {nullable:true})
    in?: Array<`${CampusChatMessageFlaggedBy}`>;
    @Field(() => [CampusChatMessageFlaggedBy], {nullable:true})
    notIn?: Array<`${CampusChatMessageFlaggedBy}`>;
    @Field(() => NestedEnumCampusChatMessageFlaggedByNullableFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumCampusChatMessageFlaggedByNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class NestedEnumCampusChatMessageFlaggedByNullableWithAggregatesFilter {
    @Field(() => CampusChatMessageFlaggedBy, {nullable:true})
    equals?: `${CampusChatMessageFlaggedBy}`;
    @Field(() => [CampusChatMessageFlaggedBy], {nullable:true})
    in?: Array<`${CampusChatMessageFlaggedBy}`>;
    @Field(() => [CampusChatMessageFlaggedBy], {nullable:true})
    notIn?: Array<`${CampusChatMessageFlaggedBy}`>;
    @Field(() => NestedEnumCampusChatMessageFlaggedByNullableWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumCampusChatMessageFlaggedByNullableWithAggregatesFilter>;
    @Field(() => NestedIntNullableFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntNullableFilter>;
    @Field(() => NestedEnumCampusChatMessageFlaggedByNullableFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumCampusChatMessageFlaggedByNullableFilter>;
    @Field(() => NestedEnumCampusChatMessageFlaggedByNullableFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumCampusChatMessageFlaggedByNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class NestedEnumCampusChatMessageTypeFilter {
    @Field(() => CampusChatMessageType, {nullable:true})
    equals?: `${CampusChatMessageType}`;
    @Field(() => [CampusChatMessageType], {nullable:true})
    in?: Array<`${CampusChatMessageType}`>;
    @Field(() => [CampusChatMessageType], {nullable:true})
    notIn?: Array<`${CampusChatMessageType}`>;
    @Field(() => NestedEnumCampusChatMessageTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumCampusChatMessageTypeFilter>;
}

@InputType()
export class NestedEnumCampusChatMessageTypeWithAggregatesFilter {
    @Field(() => CampusChatMessageType, {nullable:true})
    equals?: `${CampusChatMessageType}`;
    @Field(() => [CampusChatMessageType], {nullable:true})
    in?: Array<`${CampusChatMessageType}`>;
    @Field(() => [CampusChatMessageType], {nullable:true})
    notIn?: Array<`${CampusChatMessageType}`>;
    @Field(() => NestedEnumCampusChatMessageTypeWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumCampusChatMessageTypeWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumCampusChatMessageTypeFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumCampusChatMessageTypeFilter>;
    @Field(() => NestedEnumCampusChatMessageTypeFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumCampusChatMessageTypeFilter>;
}

@InputType()
export class NestedEnumCampusChatReportActionNullableFilter {
    @Field(() => CampusChatReportAction, {nullable:true})
    equals?: `${CampusChatReportAction}`;
    @Field(() => [CampusChatReportAction], {nullable:true})
    in?: Array<`${CampusChatReportAction}`>;
    @Field(() => [CampusChatReportAction], {nullable:true})
    notIn?: Array<`${CampusChatReportAction}`>;
    @Field(() => NestedEnumCampusChatReportActionNullableFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumCampusChatReportActionNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class NestedEnumCampusChatReportReasonFilter {
    @Field(() => CampusChatReportReason, {nullable:true})
    equals?: `${CampusChatReportReason}`;
    @Field(() => [CampusChatReportReason], {nullable:true})
    in?: Array<`${CampusChatReportReason}`>;
    @Field(() => [CampusChatReportReason], {nullable:true})
    notIn?: Array<`${CampusChatReportReason}`>;
    @Field(() => NestedEnumCampusChatReportReasonFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumCampusChatReportReasonFilter>;
}

@InputType()
export class NestedEnumCampusChatReportReasonWithAggregatesFilter {
    @Field(() => CampusChatReportReason, {nullable:true})
    equals?: `${CampusChatReportReason}`;
    @Field(() => [CampusChatReportReason], {nullable:true})
    in?: Array<`${CampusChatReportReason}`>;
    @Field(() => [CampusChatReportReason], {nullable:true})
    notIn?: Array<`${CampusChatReportReason}`>;
    @Field(() => NestedEnumCampusChatReportReasonWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumCampusChatReportReasonWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumCampusChatReportReasonFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumCampusChatReportReasonFilter>;
    @Field(() => NestedEnumCampusChatReportReasonFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumCampusChatReportReasonFilter>;
}

@InputType()
export class NestedEnumCampusChatTypeFilter {
    @Field(() => CampusChatType, {nullable:true})
    equals?: `${CampusChatType}`;
    @Field(() => [CampusChatType], {nullable:true})
    in?: Array<`${CampusChatType}`>;
    @Field(() => [CampusChatType], {nullable:true})
    notIn?: Array<`${CampusChatType}`>;
    @Field(() => NestedEnumCampusChatTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumCampusChatTypeFilter>;
}

@InputType()
export class NestedEnumCampusChatTypeWithAggregatesFilter {
    @Field(() => CampusChatType, {nullable:true})
    equals?: `${CampusChatType}`;
    @Field(() => [CampusChatType], {nullable:true})
    in?: Array<`${CampusChatType}`>;
    @Field(() => [CampusChatType], {nullable:true})
    notIn?: Array<`${CampusChatType}`>;
    @Field(() => NestedEnumCampusChatTypeWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumCampusChatTypeWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumCampusChatTypeFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumCampusChatTypeFilter>;
    @Field(() => NestedEnumCampusChatTypeFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumCampusChatTypeFilter>;
}

@InputType()
export class NestedEnumConversationTypeFilter {
    @Field(() => ConversationType, {nullable:true})
    equals?: `${ConversationType}`;
    @Field(() => [ConversationType], {nullable:true})
    in?: Array<`${ConversationType}`>;
    @Field(() => [ConversationType], {nullable:true})
    notIn?: Array<`${ConversationType}`>;
    @Field(() => NestedEnumConversationTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumConversationTypeFilter>;
}

@InputType()
export class NestedEnumConversationTypeNullableFilter {
    @Field(() => ConversationType, {nullable:true})
    equals?: `${ConversationType}`;
    @Field(() => [ConversationType], {nullable:true})
    in?: Array<`${ConversationType}`>;
    @Field(() => [ConversationType], {nullable:true})
    notIn?: Array<`${ConversationType}`>;
    @Field(() => NestedEnumConversationTypeNullableFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumConversationTypeNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class NestedEnumConversationTypeWithAggregatesFilter {
    @Field(() => ConversationType, {nullable:true})
    equals?: `${ConversationType}`;
    @Field(() => [ConversationType], {nullable:true})
    in?: Array<`${ConversationType}`>;
    @Field(() => [ConversationType], {nullable:true})
    notIn?: Array<`${ConversationType}`>;
    @Field(() => NestedEnumConversationTypeWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumConversationTypeWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumConversationTypeFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumConversationTypeFilter>;
    @Field(() => NestedEnumConversationTypeFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumConversationTypeFilter>;
}

@InputType()
export class NestedEnumCTATypeFilter {
    @Field(() => CTAType, {nullable:true})
    equals?: `${CTAType}`;
    @Field(() => [CTAType], {nullable:true})
    in?: Array<`${CTAType}`>;
    @Field(() => [CTAType], {nullable:true})
    notIn?: Array<`${CTAType}`>;
    @Field(() => NestedEnumCTATypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumCTATypeFilter>;
}

@InputType()
export class NestedEnumDealTypeFilter {
    @Field(() => DealType, {nullable:true})
    equals?: `${DealType}`;
    @Field(() => [DealType], {nullable:true})
    in?: Array<`${DealType}`>;
    @Field(() => [DealType], {nullable:true})
    notIn?: Array<`${DealType}`>;
    @Field(() => NestedEnumDealTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumDealTypeFilter>;
}

@InputType()
export class NestedEnumDealTypeWithAggregatesFilter {
    @Field(() => DealType, {nullable:true})
    equals?: `${DealType}`;
    @Field(() => [DealType], {nullable:true})
    in?: Array<`${DealType}`>;
    @Field(() => [DealType], {nullable:true})
    notIn?: Array<`${DealType}`>;
    @Field(() => NestedEnumDealTypeWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumDealTypeWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumDealTypeFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumDealTypeFilter>;
    @Field(() => NestedEnumDealTypeFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumDealTypeFilter>;
}

@InputType()
export class NestedEnumDMTypeFilter {
    @Field(() => DMType, {nullable:true})
    equals?: `${DMType}`;
    @Field(() => [DMType], {nullable:true})
    in?: Array<`${DMType}`>;
    @Field(() => [DMType], {nullable:true})
    notIn?: Array<`${DMType}`>;
    @Field(() => NestedEnumDMTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumDMTypeFilter>;
}

@InputType()
export class NestedEnumDMTypeWithAggregatesFilter {
    @Field(() => DMType, {nullable:true})
    equals?: `${DMType}`;
    @Field(() => [DMType], {nullable:true})
    in?: Array<`${DMType}`>;
    @Field(() => [DMType], {nullable:true})
    notIn?: Array<`${DMType}`>;
    @Field(() => NestedEnumDMTypeWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumDMTypeWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumDMTypeFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumDMTypeFilter>;
    @Field(() => NestedEnumDMTypeFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumDMTypeFilter>;
}

@InputType()
export class NestedEnumEduSelectionListTypeFilter {
    @Field(() => EduSelectionListType, {nullable:true})
    equals?: `${EduSelectionListType}`;
    @Field(() => [EduSelectionListType], {nullable:true})
    in?: Array<`${EduSelectionListType}`>;
    @Field(() => [EduSelectionListType], {nullable:true})
    notIn?: Array<`${EduSelectionListType}`>;
    @Field(() => NestedEnumEduSelectionListTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumEduSelectionListTypeFilter>;
}

@InputType()
export class NestedEnumEduSelectionListTypeWithAggregatesFilter {
    @Field(() => EduSelectionListType, {nullable:true})
    equals?: `${EduSelectionListType}`;
    @Field(() => [EduSelectionListType], {nullable:true})
    in?: Array<`${EduSelectionListType}`>;
    @Field(() => [EduSelectionListType], {nullable:true})
    notIn?: Array<`${EduSelectionListType}`>;
    @Field(() => NestedEnumEduSelectionListTypeWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumEduSelectionListTypeWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumEduSelectionListTypeFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumEduSelectionListTypeFilter>;
    @Field(() => NestedEnumEduSelectionListTypeFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumEduSelectionListTypeFilter>;
}

@InputType()
export class NestedEnumEventTypeFilter {
    @Field(() => EventType, {nullable:true})
    equals?: `${EventType}`;
    @Field(() => [EventType], {nullable:true})
    in?: Array<`${EventType}`>;
    @Field(() => [EventType], {nullable:true})
    notIn?: Array<`${EventType}`>;
    @Field(() => NestedEnumEventTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumEventTypeFilter>;
}

@InputType()
export class NestedEnumEventTypeWithAggregatesFilter {
    @Field(() => EventType, {nullable:true})
    equals?: `${EventType}`;
    @Field(() => [EventType], {nullable:true})
    in?: Array<`${EventType}`>;
    @Field(() => [EventType], {nullable:true})
    notIn?: Array<`${EventType}`>;
    @Field(() => NestedEnumEventTypeWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumEventTypeWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumEventTypeFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumEventTypeFilter>;
    @Field(() => NestedEnumEventTypeFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumEventTypeFilter>;
}

@InputType()
export class NestedEnumGatewayFilter {
    @Field(() => Gateway, {nullable:true})
    equals?: `${Gateway}`;
    @Field(() => [Gateway], {nullable:true})
    in?: Array<`${Gateway}`>;
    @Field(() => [Gateway], {nullable:true})
    notIn?: Array<`${Gateway}`>;
    @Field(() => NestedEnumGatewayFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumGatewayFilter>;
}

@InputType()
export class NestedEnumGatewayWithAggregatesFilter {
    @Field(() => Gateway, {nullable:true})
    equals?: `${Gateway}`;
    @Field(() => [Gateway], {nullable:true})
    in?: Array<`${Gateway}`>;
    @Field(() => [Gateway], {nullable:true})
    notIn?: Array<`${Gateway}`>;
    @Field(() => NestedEnumGatewayWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumGatewayWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumGatewayFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumGatewayFilter>;
    @Field(() => NestedEnumGatewayFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumGatewayFilter>;
}

@InputType()
export class NestedEnumGenderFilter {
    @Field(() => Gender, {nullable:true})
    equals?: `${Gender}`;
    @Field(() => [Gender], {nullable:true})
    in?: Array<`${Gender}`>;
    @Field(() => [Gender], {nullable:true})
    notIn?: Array<`${Gender}`>;
    @Field(() => NestedEnumGenderFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumGenderFilter>;
}

@InputType()
export class NestedEnumGenderNullableFilter {
    @Field(() => Gender, {nullable:true})
    equals?: `${Gender}`;
    @Field(() => [Gender], {nullable:true})
    in?: Array<`${Gender}`>;
    @Field(() => [Gender], {nullable:true})
    notIn?: Array<`${Gender}`>;
    @Field(() => NestedEnumGenderNullableFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumGenderNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class NestedEnumGenderNullableWithAggregatesFilter {
    @Field(() => Gender, {nullable:true})
    equals?: `${Gender}`;
    @Field(() => [Gender], {nullable:true})
    in?: Array<`${Gender}`>;
    @Field(() => [Gender], {nullable:true})
    notIn?: Array<`${Gender}`>;
    @Field(() => NestedEnumGenderNullableWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumGenderNullableWithAggregatesFilter>;
    @Field(() => NestedIntNullableFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntNullableFilter>;
    @Field(() => NestedEnumGenderNullableFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumGenderNullableFilter>;
    @Field(() => NestedEnumGenderNullableFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumGenderNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class NestedEnumGenderWithAggregatesFilter {
    @Field(() => Gender, {nullable:true})
    equals?: `${Gender}`;
    @Field(() => [Gender], {nullable:true})
    in?: Array<`${Gender}`>;
    @Field(() => [Gender], {nullable:true})
    notIn?: Array<`${Gender}`>;
    @Field(() => NestedEnumGenderWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumGenderWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumGenderFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumGenderFilter>;
    @Field(() => NestedEnumGenderFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumGenderFilter>;
}

@InputType()
export class NestedEnumInternalCTANullableFilter {
    @Field(() => InternalCTA, {nullable:true})
    equals?: `${InternalCTA}`;
    @Field(() => [InternalCTA], {nullable:true})
    in?: Array<`${InternalCTA}`>;
    @Field(() => [InternalCTA], {nullable:true})
    notIn?: Array<`${InternalCTA}`>;
    @Field(() => NestedEnumInternalCTANullableFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumInternalCTANullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class NestedEnumInternalCTANullableWithAggregatesFilter {
    @Field(() => InternalCTA, {nullable:true})
    equals?: `${InternalCTA}`;
    @Field(() => [InternalCTA], {nullable:true})
    in?: Array<`${InternalCTA}`>;
    @Field(() => [InternalCTA], {nullable:true})
    notIn?: Array<`${InternalCTA}`>;
    @Field(() => NestedEnumInternalCTANullableWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumInternalCTANullableWithAggregatesFilter>;
    @Field(() => NestedIntNullableFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntNullableFilter>;
    @Field(() => NestedEnumInternalCTANullableFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumInternalCTANullableFilter>;
    @Field(() => NestedEnumInternalCTANullableFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumInternalCTANullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class NestedEnumMediaTypeFilter {
    @Field(() => MediaType, {nullable:true})
    equals?: `${MediaType}`;
    @Field(() => [MediaType], {nullable:true})
    in?: Array<`${MediaType}`>;
    @Field(() => [MediaType], {nullable:true})
    notIn?: Array<`${MediaType}`>;
    @Field(() => NestedEnumMediaTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumMediaTypeFilter>;
}

@InputType()
export class NestedEnumMessageActionTypeFilter {
    @Field(() => MessageActionType, {nullable:true})
    equals?: `${MessageActionType}`;
    @Field(() => [MessageActionType], {nullable:true})
    in?: Array<`${MessageActionType}`>;
    @Field(() => [MessageActionType], {nullable:true})
    notIn?: Array<`${MessageActionType}`>;
    @Field(() => NestedEnumMessageActionTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumMessageActionTypeFilter>;
}

@InputType()
export class NestedEnumMessageStateNullableFilter {
    @Field(() => MessageState, {nullable:true})
    equals?: `${MessageState}`;
    @Field(() => [MessageState], {nullable:true})
    in?: Array<`${MessageState}`>;
    @Field(() => [MessageState], {nullable:true})
    notIn?: Array<`${MessageState}`>;
    @Field(() => NestedEnumMessageStateNullableFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumMessageStateNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class NestedEnumMessageStateNullableWithAggregatesFilter {
    @Field(() => MessageState, {nullable:true})
    equals?: `${MessageState}`;
    @Field(() => [MessageState], {nullable:true})
    in?: Array<`${MessageState}`>;
    @Field(() => [MessageState], {nullable:true})
    notIn?: Array<`${MessageState}`>;
    @Field(() => NestedEnumMessageStateNullableWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumMessageStateNullableWithAggregatesFilter>;
    @Field(() => NestedIntNullableFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntNullableFilter>;
    @Field(() => NestedEnumMessageStateNullableFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumMessageStateNullableFilter>;
    @Field(() => NestedEnumMessageStateNullableFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumMessageStateNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class NestedEnumMessageTypeFilter {
    @Field(() => MessageType, {nullable:true})
    equals?: `${MessageType}`;
    @Field(() => [MessageType], {nullable:true})
    in?: Array<`${MessageType}`>;
    @Field(() => [MessageType], {nullable:true})
    notIn?: Array<`${MessageType}`>;
    @Field(() => NestedEnumMessageTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumMessageTypeFilter>;
}

@InputType()
export class NestedEnumMessageTypeWithAggregatesFilter {
    @Field(() => MessageType, {nullable:true})
    equals?: `${MessageType}`;
    @Field(() => [MessageType], {nullable:true})
    in?: Array<`${MessageType}`>;
    @Field(() => [MessageType], {nullable:true})
    notIn?: Array<`${MessageType}`>;
    @Field(() => NestedEnumMessageTypeWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumMessageTypeWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumMessageTypeFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumMessageTypeFilter>;
    @Field(() => NestedEnumMessageTypeFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumMessageTypeFilter>;
}

@InputType()
export class NestedEnumNotificationTypeFilter {
    @Field(() => NotificationType, {nullable:true})
    equals?: `${NotificationType}`;
    @Field(() => [NotificationType], {nullable:true})
    in?: Array<`${NotificationType}`>;
    @Field(() => [NotificationType], {nullable:true})
    notIn?: Array<`${NotificationType}`>;
    @Field(() => NestedEnumNotificationTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumNotificationTypeFilter>;
}

@InputType()
export class NestedEnumNotificationTypeWithAggregatesFilter {
    @Field(() => NotificationType, {nullable:true})
    equals?: `${NotificationType}`;
    @Field(() => [NotificationType], {nullable:true})
    in?: Array<`${NotificationType}`>;
    @Field(() => [NotificationType], {nullable:true})
    notIn?: Array<`${NotificationType}`>;
    @Field(() => NestedEnumNotificationTypeWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumNotificationTypeWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumNotificationTypeFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumNotificationTypeFilter>;
    @Field(() => NestedEnumNotificationTypeFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumNotificationTypeFilter>;
}

@InputType()
export class NestedEnumOfferNotificationTypeFilter {
    @Field(() => OfferNotificationType, {nullable:true})
    equals?: `${OfferNotificationType}`;
    @Field(() => [OfferNotificationType], {nullable:true})
    in?: Array<`${OfferNotificationType}`>;
    @Field(() => [OfferNotificationType], {nullable:true})
    notIn?: Array<`${OfferNotificationType}`>;
    @Field(() => NestedEnumOfferNotificationTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumOfferNotificationTypeFilter>;
}

@InputType()
export class NestedEnumOrderNotificationTypeFilter {
    @Field(() => OrderNotificationType, {nullable:true})
    equals?: `${OrderNotificationType}`;
    @Field(() => [OrderNotificationType], {nullable:true})
    in?: Array<`${OrderNotificationType}`>;
    @Field(() => [OrderNotificationType], {nullable:true})
    notIn?: Array<`${OrderNotificationType}`>;
    @Field(() => NestedEnumOrderNotificationTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumOrderNotificationTypeFilter>;
}

@InputType()
export class NestedEnumOrderNotificationTypeNullableFilter {
    @Field(() => OrderNotificationType, {nullable:true})
    equals?: `${OrderNotificationType}`;
    @Field(() => [OrderNotificationType], {nullable:true})
    in?: Array<`${OrderNotificationType}`>;
    @Field(() => [OrderNotificationType], {nullable:true})
    notIn?: Array<`${OrderNotificationType}`>;
    @Field(() => NestedEnumOrderNotificationTypeNullableFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumOrderNotificationTypeNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class NestedEnumOrderStatusFilter {
    @Field(() => OrderStatus, {nullable:true})
    equals?: `${OrderStatus}`;
    @Field(() => [OrderStatus], {nullable:true})
    in?: Array<`${OrderStatus}`>;
    @Field(() => [OrderStatus], {nullable:true})
    notIn?: Array<`${OrderStatus}`>;
    @Field(() => NestedEnumOrderStatusFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumOrderStatusFilter>;
}

@InputType()
export class NestedEnumOrderStatusWithAggregatesFilter {
    @Field(() => OrderStatus, {nullable:true})
    equals?: `${OrderStatus}`;
    @Field(() => [OrderStatus], {nullable:true})
    in?: Array<`${OrderStatus}`>;
    @Field(() => [OrderStatus], {nullable:true})
    notIn?: Array<`${OrderStatus}`>;
    @Field(() => NestedEnumOrderStatusWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumOrderStatusWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumOrderStatusFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumOrderStatusFilter>;
    @Field(() => NestedEnumOrderStatusFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumOrderStatusFilter>;
}

@InputType()
export class NestedEnumOrderTypeFilter {
    @Field(() => OrderType, {nullable:true})
    equals?: `${OrderType}`;
    @Field(() => [OrderType], {nullable:true})
    in?: Array<`${OrderType}`>;
    @Field(() => [OrderType], {nullable:true})
    notIn?: Array<`${OrderType}`>;
    @Field(() => NestedEnumOrderTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumOrderTypeFilter>;
}

@InputType()
export class NestedEnumOrderTypeWithAggregatesFilter {
    @Field(() => OrderType, {nullable:true})
    equals?: `${OrderType}`;
    @Field(() => [OrderType], {nullable:true})
    in?: Array<`${OrderType}`>;
    @Field(() => [OrderType], {nullable:true})
    notIn?: Array<`${OrderType}`>;
    @Field(() => NestedEnumOrderTypeWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumOrderTypeWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumOrderTypeFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumOrderTypeFilter>;
    @Field(() => NestedEnumOrderTypeFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumOrderTypeFilter>;
}

@InputType()
export class NestedEnumPaymentLinkStatusFilter {
    @Field(() => PaymentLinkStatus, {nullable:true})
    equals?: `${PaymentLinkStatus}`;
    @Field(() => [PaymentLinkStatus], {nullable:true})
    in?: Array<`${PaymentLinkStatus}`>;
    @Field(() => [PaymentLinkStatus], {nullable:true})
    notIn?: Array<`${PaymentLinkStatus}`>;
    @Field(() => NestedEnumPaymentLinkStatusFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumPaymentLinkStatusFilter>;
}

@InputType()
export class NestedEnumPayoutNotificationTypeFilter {
    @Field(() => PayoutNotificationType, {nullable:true})
    equals?: `${PayoutNotificationType}`;
    @Field(() => [PayoutNotificationType], {nullable:true})
    in?: Array<`${PayoutNotificationType}`>;
    @Field(() => [PayoutNotificationType], {nullable:true})
    notIn?: Array<`${PayoutNotificationType}`>;
    @Field(() => NestedEnumPayoutNotificationTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumPayoutNotificationTypeFilter>;
}

@InputType()
export class NestedEnumPlatformFilter {
    @Field(() => Platform, {nullable:true})
    equals?: `${Platform}`;
    @Field(() => [Platform], {nullable:true})
    in?: Array<`${Platform}`>;
    @Field(() => [Platform], {nullable:true})
    notIn?: Array<`${Platform}`>;
    @Field(() => NestedEnumPlatformFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumPlatformFilter>;
}

@InputType()
export class NestedEnumPlatformNullableFilter {
    @Field(() => Platform, {nullable:true})
    equals?: `${Platform}`;
    @Field(() => [Platform], {nullable:true})
    in?: Array<`${Platform}`>;
    @Field(() => [Platform], {nullable:true})
    notIn?: Array<`${Platform}`>;
    @Field(() => NestedEnumPlatformNullableFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumPlatformNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class NestedEnumPlatformNullableWithAggregatesFilter {
    @Field(() => Platform, {nullable:true})
    equals?: `${Platform}`;
    @Field(() => [Platform], {nullable:true})
    in?: Array<`${Platform}`>;
    @Field(() => [Platform], {nullable:true})
    notIn?: Array<`${Platform}`>;
    @Field(() => NestedEnumPlatformNullableWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumPlatformNullableWithAggregatesFilter>;
    @Field(() => NestedIntNullableFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntNullableFilter>;
    @Field(() => NestedEnumPlatformNullableFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumPlatformNullableFilter>;
    @Field(() => NestedEnumPlatformNullableFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumPlatformNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class NestedEnumPreferredGenderNullableFilter {
    @Field(() => PreferredGender, {nullable:true})
    equals?: `${PreferredGender}`;
    @Field(() => [PreferredGender], {nullable:true})
    in?: Array<`${PreferredGender}`>;
    @Field(() => [PreferredGender], {nullable:true})
    notIn?: Array<`${PreferredGender}`>;
    @Field(() => NestedEnumPreferredGenderNullableFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumPreferredGenderNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class NestedEnumPreferredGenderNullableWithAggregatesFilter {
    @Field(() => PreferredGender, {nullable:true})
    equals?: `${PreferredGender}`;
    @Field(() => [PreferredGender], {nullable:true})
    in?: Array<`${PreferredGender}`>;
    @Field(() => [PreferredGender], {nullable:true})
    notIn?: Array<`${PreferredGender}`>;
    @Field(() => NestedEnumPreferredGenderNullableWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumPreferredGenderNullableWithAggregatesFilter>;
    @Field(() => NestedIntNullableFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntNullableFilter>;
    @Field(() => NestedEnumPreferredGenderNullableFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumPreferredGenderNullableFilter>;
    @Field(() => NestedEnumPreferredGenderNullableFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumPreferredGenderNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class NestedEnumProductConditionFilter {
    @Field(() => ProductCondition, {nullable:true})
    equals?: `${ProductCondition}`;
    @Field(() => [ProductCondition], {nullable:true})
    in?: Array<`${ProductCondition}`>;
    @Field(() => [ProductCondition], {nullable:true})
    notIn?: Array<`${ProductCondition}`>;
    @Field(() => NestedEnumProductConditionFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumProductConditionFilter>;
}

@InputType()
export class NestedEnumProductConditionWithAggregatesFilter {
    @Field(() => ProductCondition, {nullable:true})
    equals?: `${ProductCondition}`;
    @Field(() => [ProductCondition], {nullable:true})
    in?: Array<`${ProductCondition}`>;
    @Field(() => [ProductCondition], {nullable:true})
    notIn?: Array<`${ProductCondition}`>;
    @Field(() => NestedEnumProductConditionWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumProductConditionWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumProductConditionFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumProductConditionFilter>;
    @Field(() => NestedEnumProductConditionFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumProductConditionFilter>;
}

@InputType()
export class NestedEnumProductDeliveryModeFilter {
    @Field(() => ProductDeliveryMode, {nullable:true})
    equals?: `${ProductDeliveryMode}`;
    @Field(() => [ProductDeliveryMode], {nullable:true})
    in?: Array<`${ProductDeliveryMode}`>;
    @Field(() => [ProductDeliveryMode], {nullable:true})
    notIn?: Array<`${ProductDeliveryMode}`>;
    @Field(() => NestedEnumProductDeliveryModeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumProductDeliveryModeFilter>;
}

@InputType()
export class NestedEnumProductDeliveryModeNullableFilter {
    @Field(() => ProductDeliveryMode, {nullable:true})
    equals?: `${ProductDeliveryMode}`;
    @Field(() => [ProductDeliveryMode], {nullable:true})
    in?: Array<`${ProductDeliveryMode}`>;
    @Field(() => [ProductDeliveryMode], {nullable:true})
    notIn?: Array<`${ProductDeliveryMode}`>;
    @Field(() => NestedEnumProductDeliveryModeNullableFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumProductDeliveryModeNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class NestedEnumProductDeliveryModeNullableWithAggregatesFilter {
    @Field(() => ProductDeliveryMode, {nullable:true})
    equals?: `${ProductDeliveryMode}`;
    @Field(() => [ProductDeliveryMode], {nullable:true})
    in?: Array<`${ProductDeliveryMode}`>;
    @Field(() => [ProductDeliveryMode], {nullable:true})
    notIn?: Array<`${ProductDeliveryMode}`>;
    @Field(() => NestedEnumProductDeliveryModeNullableWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumProductDeliveryModeNullableWithAggregatesFilter>;
    @Field(() => NestedIntNullableFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntNullableFilter>;
    @Field(() => NestedEnumProductDeliveryModeNullableFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumProductDeliveryModeNullableFilter>;
    @Field(() => NestedEnumProductDeliveryModeNullableFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumProductDeliveryModeNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class NestedEnumProductListingTypeFilter {
    @Field(() => ProductListingType, {nullable:true})
    equals?: `${ProductListingType}`;
    @Field(() => [ProductListingType], {nullable:true})
    in?: Array<`${ProductListingType}`>;
    @Field(() => [ProductListingType], {nullable:true})
    notIn?: Array<`${ProductListingType}`>;
    @Field(() => NestedEnumProductListingTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumProductListingTypeFilter>;
}

@InputType()
export class NestedEnumProductListingTypeWithAggregatesFilter {
    @Field(() => ProductListingType, {nullable:true})
    equals?: `${ProductListingType}`;
    @Field(() => [ProductListingType], {nullable:true})
    in?: Array<`${ProductListingType}`>;
    @Field(() => [ProductListingType], {nullable:true})
    notIn?: Array<`${ProductListingType}`>;
    @Field(() => NestedEnumProductListingTypeWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumProductListingTypeWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumProductListingTypeFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumProductListingTypeFilter>;
    @Field(() => NestedEnumProductListingTypeFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumProductListingTypeFilter>;
}

@InputType()
export class NestedEnumProductReportActionNullableFilter {
    @Field(() => ProductReportAction, {nullable:true})
    equals?: `${ProductReportAction}`;
    @Field(() => [ProductReportAction], {nullable:true})
    in?: Array<`${ProductReportAction}`>;
    @Field(() => [ProductReportAction], {nullable:true})
    notIn?: Array<`${ProductReportAction}`>;
    @Field(() => NestedEnumProductReportActionNullableFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumProductReportActionNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class NestedEnumProductReportReasonFilter {
    @Field(() => ProductReportReason, {nullable:true})
    equals?: `${ProductReportReason}`;
    @Field(() => [ProductReportReason], {nullable:true})
    in?: Array<`${ProductReportReason}`>;
    @Field(() => [ProductReportReason], {nullable:true})
    notIn?: Array<`${ProductReportReason}`>;
    @Field(() => NestedEnumProductReportReasonFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumProductReportReasonFilter>;
}

@InputType()
export class NestedEnumProductReportReasonWithAggregatesFilter {
    @Field(() => ProductReportReason, {nullable:true})
    equals?: `${ProductReportReason}`;
    @Field(() => [ProductReportReason], {nullable:true})
    in?: Array<`${ProductReportReason}`>;
    @Field(() => [ProductReportReason], {nullable:true})
    notIn?: Array<`${ProductReportReason}`>;
    @Field(() => NestedEnumProductReportReasonWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumProductReportReasonWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumProductReportReasonFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumProductReportReasonFilter>;
    @Field(() => NestedEnumProductReportReasonFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumProductReportReasonFilter>;
}

@InputType()
export class NestedEnumPromoCodeTypeFilter {
    @Field(() => PromoCodeType, {nullable:true})
    equals?: `${PromoCodeType}`;
    @Field(() => [PromoCodeType], {nullable:true})
    in?: Array<`${PromoCodeType}`>;
    @Field(() => [PromoCodeType], {nullable:true})
    notIn?: Array<`${PromoCodeType}`>;
    @Field(() => NestedEnumPromoCodeTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumPromoCodeTypeFilter>;
}

@InputType()
export class NestedEnumPromoCodeTypeWithAggregatesFilter {
    @Field(() => PromoCodeType, {nullable:true})
    equals?: `${PromoCodeType}`;
    @Field(() => [PromoCodeType], {nullable:true})
    in?: Array<`${PromoCodeType}`>;
    @Field(() => [PromoCodeType], {nullable:true})
    notIn?: Array<`${PromoCodeType}`>;
    @Field(() => NestedEnumPromoCodeTypeWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumPromoCodeTypeWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumPromoCodeTypeFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumPromoCodeTypeFilter>;
    @Field(() => NestedEnumPromoCodeTypeFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumPromoCodeTypeFilter>;
}

@InputType()
export class NestedEnumPushNotificationCampaignStatusFilter {
    @Field(() => PushNotificationCampaignStatus, {nullable:true})
    equals?: `${PushNotificationCampaignStatus}`;
    @Field(() => [PushNotificationCampaignStatus], {nullable:true})
    in?: Array<`${PushNotificationCampaignStatus}`>;
    @Field(() => [PushNotificationCampaignStatus], {nullable:true})
    notIn?: Array<`${PushNotificationCampaignStatus}`>;
    @Field(() => NestedEnumPushNotificationCampaignStatusFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumPushNotificationCampaignStatusFilter>;
}

@InputType()
export class NestedEnumPushNotificationCampaignStatusWithAggregatesFilter {
    @Field(() => PushNotificationCampaignStatus, {nullable:true})
    equals?: `${PushNotificationCampaignStatus}`;
    @Field(() => [PushNotificationCampaignStatus], {nullable:true})
    in?: Array<`${PushNotificationCampaignStatus}`>;
    @Field(() => [PushNotificationCampaignStatus], {nullable:true})
    notIn?: Array<`${PushNotificationCampaignStatus}`>;
    @Field(() => NestedEnumPushNotificationCampaignStatusWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumPushNotificationCampaignStatusWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumPushNotificationCampaignStatusFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumPushNotificationCampaignStatusFilter>;
    @Field(() => NestedEnumPushNotificationCampaignStatusFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumPushNotificationCampaignStatusFilter>;
}

@InputType()
export class NestedEnumPushNotificationSenderListTypeFilter {
    @Field(() => PushNotificationSenderListType, {nullable:true})
    equals?: `${PushNotificationSenderListType}`;
    @Field(() => [PushNotificationSenderListType], {nullable:true})
    in?: Array<`${PushNotificationSenderListType}`>;
    @Field(() => [PushNotificationSenderListType], {nullable:true})
    notIn?: Array<`${PushNotificationSenderListType}`>;
    @Field(() => NestedEnumPushNotificationSenderListTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumPushNotificationSenderListTypeFilter>;
}

@InputType()
export class NestedEnumPushNotificationSenderListTypeWithAggregatesFilter {
    @Field(() => PushNotificationSenderListType, {nullable:true})
    equals?: `${PushNotificationSenderListType}`;
    @Field(() => [PushNotificationSenderListType], {nullable:true})
    in?: Array<`${PushNotificationSenderListType}`>;
    @Field(() => [PushNotificationSenderListType], {nullable:true})
    notIn?: Array<`${PushNotificationSenderListType}`>;
    @Field(() => NestedEnumPushNotificationSenderListTypeWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumPushNotificationSenderListTypeWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumPushNotificationSenderListTypeFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumPushNotificationSenderListTypeFilter>;
    @Field(() => NestedEnumPushNotificationSenderListTypeFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumPushNotificationSenderListTypeFilter>;
}

@InputType()
export class NestedEnumReactionTypeFilter {
    @Field(() => ReactionType, {nullable:true})
    equals?: `${ReactionType}`;
    @Field(() => [ReactionType], {nullable:true})
    in?: Array<`${ReactionType}`>;
    @Field(() => [ReactionType], {nullable:true})
    notIn?: Array<`${ReactionType}`>;
    @Field(() => NestedEnumReactionTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumReactionTypeFilter>;
}

@InputType()
export class NestedEnumReactionTypeWithAggregatesFilter {
    @Field(() => ReactionType, {nullable:true})
    equals?: `${ReactionType}`;
    @Field(() => [ReactionType], {nullable:true})
    in?: Array<`${ReactionType}`>;
    @Field(() => [ReactionType], {nullable:true})
    notIn?: Array<`${ReactionType}`>;
    @Field(() => NestedEnumReactionTypeWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumReactionTypeWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumReactionTypeFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumReactionTypeFilter>;
    @Field(() => NestedEnumReactionTypeFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumReactionTypeFilter>;
}

@InputType()
export class NestedEnumRentalNotificationTypeFilter {
    @Field(() => RentalNotificationType, {nullable:true})
    equals?: `${RentalNotificationType}`;
    @Field(() => [RentalNotificationType], {nullable:true})
    in?: Array<`${RentalNotificationType}`>;
    @Field(() => [RentalNotificationType], {nullable:true})
    notIn?: Array<`${RentalNotificationType}`>;
    @Field(() => NestedEnumRentalNotificationTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumRentalNotificationTypeFilter>;
}

@InputType()
export class NestedEnumSelectionChoiceFilter {
    @Field(() => SelectionChoice, {nullable:true})
    equals?: `${SelectionChoice}`;
    @Field(() => [SelectionChoice], {nullable:true})
    in?: Array<`${SelectionChoice}`>;
    @Field(() => [SelectionChoice], {nullable:true})
    notIn?: Array<`${SelectionChoice}`>;
    @Field(() => NestedEnumSelectionChoiceFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumSelectionChoiceFilter>;
}

@InputType()
export class NestedEnumSellerPayoutStatusFilter {
    @Field(() => SellerPayoutStatus, {nullable:true})
    equals?: `${SellerPayoutStatus}`;
    @Field(() => [SellerPayoutStatus], {nullable:true})
    in?: Array<`${SellerPayoutStatus}`>;
    @Field(() => [SellerPayoutStatus], {nullable:true})
    notIn?: Array<`${SellerPayoutStatus}`>;
    @Field(() => NestedEnumSellerPayoutStatusFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumSellerPayoutStatusFilter>;
}

@InputType()
export class NestedEnumShippingChargePayerNullableFilter {
    @Field(() => ShippingChargePayer, {nullable:true})
    equals?: `${ShippingChargePayer}`;
    @Field(() => [ShippingChargePayer], {nullable:true})
    in?: Array<`${ShippingChargePayer}`>;
    @Field(() => [ShippingChargePayer], {nullable:true})
    notIn?: Array<`${ShippingChargePayer}`>;
    @Field(() => NestedEnumShippingChargePayerNullableFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumShippingChargePayerNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class NestedEnumShippingChargePayerNullableWithAggregatesFilter {
    @Field(() => ShippingChargePayer, {nullable:true})
    equals?: `${ShippingChargePayer}`;
    @Field(() => [ShippingChargePayer], {nullable:true})
    in?: Array<`${ShippingChargePayer}`>;
    @Field(() => [ShippingChargePayer], {nullable:true})
    notIn?: Array<`${ShippingChargePayer}`>;
    @Field(() => NestedEnumShippingChargePayerNullableWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumShippingChargePayerNullableWithAggregatesFilter>;
    @Field(() => NestedIntNullableFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntNullableFilter>;
    @Field(() => NestedEnumShippingChargePayerNullableFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumShippingChargePayerNullableFilter>;
    @Field(() => NestedEnumShippingChargePayerNullableFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumShippingChargePayerNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class NestedEnumStoryTypeFilter {
    @Field(() => StoryType, {nullable:true})
    equals?: `${StoryType}`;
    @Field(() => [StoryType], {nullable:true})
    in?: Array<`${StoryType}`>;
    @Field(() => [StoryType], {nullable:true})
    notIn?: Array<`${StoryType}`>;
    @Field(() => NestedEnumStoryTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumStoryTypeFilter>;
}

@InputType()
export class NestedEnumStoryTypeWithAggregatesFilter {
    @Field(() => StoryType, {nullable:true})
    equals?: `${StoryType}`;
    @Field(() => [StoryType], {nullable:true})
    in?: Array<`${StoryType}`>;
    @Field(() => [StoryType], {nullable:true})
    notIn?: Array<`${StoryType}`>;
    @Field(() => NestedEnumStoryTypeWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumStoryTypeWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumStoryTypeFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumStoryTypeFilter>;
    @Field(() => NestedEnumStoryTypeFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumStoryTypeFilter>;
}

@InputType()
export class NestedEnumSupportStatusTypeFilter {
    @Field(() => SupportStatusType, {nullable:true})
    equals?: `${SupportStatusType}`;
    @Field(() => [SupportStatusType], {nullable:true})
    in?: Array<`${SupportStatusType}`>;
    @Field(() => [SupportStatusType], {nullable:true})
    notIn?: Array<`${SupportStatusType}`>;
    @Field(() => NestedEnumSupportStatusTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumSupportStatusTypeFilter>;
}

@InputType()
export class NestedEnumSupportStatusTypeWithAggregatesFilter {
    @Field(() => SupportStatusType, {nullable:true})
    equals?: `${SupportStatusType}`;
    @Field(() => [SupportStatusType], {nullable:true})
    in?: Array<`${SupportStatusType}`>;
    @Field(() => [SupportStatusType], {nullable:true})
    notIn?: Array<`${SupportStatusType}`>;
    @Field(() => NestedEnumSupportStatusTypeWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumSupportStatusTypeWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumSupportStatusTypeFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumSupportStatusTypeFilter>;
    @Field(() => NestedEnumSupportStatusTypeFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumSupportStatusTypeFilter>;
}

@InputType()
export class NestedEnumSupportTicketParticipantFilter {
    @Field(() => SupportTicketParticipant, {nullable:true})
    equals?: `${SupportTicketParticipant}`;
    @Field(() => [SupportTicketParticipant], {nullable:true})
    in?: Array<`${SupportTicketParticipant}`>;
    @Field(() => [SupportTicketParticipant], {nullable:true})
    notIn?: Array<`${SupportTicketParticipant}`>;
    @Field(() => NestedEnumSupportTicketParticipantFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumSupportTicketParticipantFilter>;
}

@InputType()
export class NestedEnumSupportTicketParticipantWithAggregatesFilter {
    @Field(() => SupportTicketParticipant, {nullable:true})
    equals?: `${SupportTicketParticipant}`;
    @Field(() => [SupportTicketParticipant], {nullable:true})
    in?: Array<`${SupportTicketParticipant}`>;
    @Field(() => [SupportTicketParticipant], {nullable:true})
    notIn?: Array<`${SupportTicketParticipant}`>;
    @Field(() => NestedEnumSupportTicketParticipantWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumSupportTicketParticipantWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumSupportTicketParticipantFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumSupportTicketParticipantFilter>;
    @Field(() => NestedEnumSupportTicketParticipantFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumSupportTicketParticipantFilter>;
}

@InputType()
export class NestedEnumSupportTicketTypeFilter {
    @Field(() => SupportTicketType, {nullable:true})
    equals?: `${SupportTicketType}`;
    @Field(() => [SupportTicketType], {nullable:true})
    in?: Array<`${SupportTicketType}`>;
    @Field(() => [SupportTicketType], {nullable:true})
    notIn?: Array<`${SupportTicketType}`>;
    @Field(() => NestedEnumSupportTicketTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumSupportTicketTypeFilter>;
}

@InputType()
export class NestedEnumSupportTicketTypeWithAggregatesFilter {
    @Field(() => SupportTicketType, {nullable:true})
    equals?: `${SupportTicketType}`;
    @Field(() => [SupportTicketType], {nullable:true})
    in?: Array<`${SupportTicketType}`>;
    @Field(() => [SupportTicketType], {nullable:true})
    notIn?: Array<`${SupportTicketType}`>;
    @Field(() => NestedEnumSupportTicketTypeWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumSupportTicketTypeWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumSupportTicketTypeFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumSupportTicketTypeFilter>;
    @Field(() => NestedEnumSupportTicketTypeFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumSupportTicketTypeFilter>;
}

@InputType()
export class NestedEnumSystemIconsFilter {
    @Field(() => SystemIcons, {nullable:true})
    equals?: `${SystemIcons}`;
    @Field(() => [SystemIcons], {nullable:true})
    in?: Array<`${SystemIcons}`>;
    @Field(() => [SystemIcons], {nullable:true})
    notIn?: Array<`${SystemIcons}`>;
    @Field(() => NestedEnumSystemIconsFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumSystemIconsFilter>;
}

@InputType()
export class NestedEnumSystemNotificationTypeFilter {
    @Field(() => SystemNotificationType, {nullable:true})
    equals?: `${SystemNotificationType}`;
    @Field(() => [SystemNotificationType], {nullable:true})
    in?: Array<`${SystemNotificationType}`>;
    @Field(() => [SystemNotificationType], {nullable:true})
    notIn?: Array<`${SystemNotificationType}`>;
    @Field(() => NestedEnumSystemNotificationTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumSystemNotificationTypeFilter>;
}

@InputType()
export class NestedEnumTagFilter {
    @Field(() => Tag, {nullable:true})
    equals?: `${Tag}`;
    @Field(() => [Tag], {nullable:true})
    in?: Array<`${Tag}`>;
    @Field(() => [Tag], {nullable:true})
    notIn?: Array<`${Tag}`>;
    @Field(() => NestedEnumTagFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumTagFilter>;
}

@InputType()
export class NestedEnumTagWithAggregatesFilter {
    @Field(() => Tag, {nullable:true})
    equals?: `${Tag}`;
    @Field(() => [Tag], {nullable:true})
    in?: Array<`${Tag}`>;
    @Field(() => [Tag], {nullable:true})
    notIn?: Array<`${Tag}`>;
    @Field(() => NestedEnumTagWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumTagWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumTagFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumTagFilter>;
    @Field(() => NestedEnumTagFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumTagFilter>;
}

@InputType()
export class NestedEnumUniversityAdminTypeFilter {
    @Field(() => UniversityAdminType, {nullable:true})
    equals?: `${UniversityAdminType}`;
    @Field(() => [UniversityAdminType], {nullable:true})
    in?: Array<`${UniversityAdminType}`>;
    @Field(() => [UniversityAdminType], {nullable:true})
    notIn?: Array<`${UniversityAdminType}`>;
    @Field(() => NestedEnumUniversityAdminTypeFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumUniversityAdminTypeFilter>;
}

@InputType()
export class NestedEnumUniversityAdminTypeWithAggregatesFilter {
    @Field(() => UniversityAdminType, {nullable:true})
    equals?: `${UniversityAdminType}`;
    @Field(() => [UniversityAdminType], {nullable:true})
    in?: Array<`${UniversityAdminType}`>;
    @Field(() => [UniversityAdminType], {nullable:true})
    notIn?: Array<`${UniversityAdminType}`>;
    @Field(() => NestedEnumUniversityAdminTypeWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumUniversityAdminTypeWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedEnumUniversityAdminTypeFilter, {nullable:true})
    _min?: InstanceType<typeof NestedEnumUniversityAdminTypeFilter>;
    @Field(() => NestedEnumUniversityAdminTypeFilter, {nullable:true})
    _max?: InstanceType<typeof NestedEnumUniversityAdminTypeFilter>;
}

@InputType()
export class NestedEnumUserGenderFilterFilter {
    @Field(() => UserGenderFilter, {nullable:true})
    equals?: `${UserGenderFilter}`;
    @Field(() => [UserGenderFilter], {nullable:true})
    in?: Array<`${UserGenderFilter}`>;
    @Field(() => [UserGenderFilter], {nullable:true})
    notIn?: Array<`${UserGenderFilter}`>;
    @Field(() => NestedEnumUserGenderFilterFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumUserGenderFilterFilter>;
}

@InputType()
export class NestedEnumUserListedFilterNullableFilter {
    @Field(() => UserListedFilter, {nullable:true})
    equals?: `${UserListedFilter}`;
    @Field(() => [UserListedFilter], {nullable:true})
    in?: Array<`${UserListedFilter}`>;
    @Field(() => [UserListedFilter], {nullable:true})
    notIn?: Array<`${UserListedFilter}`>;
    @Field(() => NestedEnumUserListedFilterNullableFilter, {nullable:true})
    not?: InstanceType<typeof NestedEnumUserListedFilterNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class NestedFloatFilter {
    @Field(() => Float, {nullable:true})
    equals?: number;
    @Field(() => [Float], {nullable:true})
    in?: Array<number>;
    @Field(() => [Float], {nullable:true})
    notIn?: Array<number>;
    @Field(() => Float, {nullable:true})
    lt?: number;
    @Field(() => Float, {nullable:true})
    lte?: number;
    @Field(() => Float, {nullable:true})
    gt?: number;
    @Field(() => Float, {nullable:true})
    gte?: number;
    @Field(() => NestedFloatFilter, {nullable:true})
    not?: InstanceType<typeof NestedFloatFilter>;
}

@InputType()
export class NestedFloatNullableFilter {
    @Field(() => Float, {nullable:true})
    equals?: number;
    @Field(() => [Float], {nullable:true})
    in?: Array<number>;
    @Field(() => [Float], {nullable:true})
    notIn?: Array<number>;
    @Field(() => Float, {nullable:true})
    lt?: number;
    @Field(() => Float, {nullable:true})
    lte?: number;
    @Field(() => Float, {nullable:true})
    gt?: number;
    @Field(() => Float, {nullable:true})
    gte?: number;
    @Field(() => NestedFloatNullableFilter, {nullable:true})
    not?: InstanceType<typeof NestedFloatNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class NestedFloatWithAggregatesFilter {
    @Field(() => Float, {nullable:true})
    equals?: number;
    @Field(() => [Float], {nullable:true})
    in?: Array<number>;
    @Field(() => [Float], {nullable:true})
    notIn?: Array<number>;
    @Field(() => Float, {nullable:true})
    lt?: number;
    @Field(() => Float, {nullable:true})
    lte?: number;
    @Field(() => Float, {nullable:true})
    gt?: number;
    @Field(() => Float, {nullable:true})
    gte?: number;
    @Field(() => NestedFloatWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedFloatWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedFloatFilter, {nullable:true})
    _avg?: InstanceType<typeof NestedFloatFilter>;
    @Field(() => NestedFloatFilter, {nullable:true})
    _sum?: InstanceType<typeof NestedFloatFilter>;
    @Field(() => NestedFloatFilter, {nullable:true})
    _min?: InstanceType<typeof NestedFloatFilter>;
    @Field(() => NestedFloatFilter, {nullable:true})
    _max?: InstanceType<typeof NestedFloatFilter>;
}

@InputType()
export class NestedIntFilter {
    @Field(() => Int, {nullable:true})
    equals?: number;
    @Field(() => [Int], {nullable:true})
    in?: Array<number>;
    @Field(() => [Int], {nullable:true})
    notIn?: Array<number>;
    @Field(() => Int, {nullable:true})
    lt?: number;
    @Field(() => Int, {nullable:true})
    lte?: number;
    @Field(() => Int, {nullable:true})
    gt?: number;
    @Field(() => Int, {nullable:true})
    gte?: number;
    @Field(() => NestedIntFilter, {nullable:true})
    not?: InstanceType<typeof NestedIntFilter>;
}

@InputType()
export class NestedIntNullableFilter {
    @Field(() => Int, {nullable:true})
    equals?: number;
    @Field(() => [Int], {nullable:true})
    in?: Array<number>;
    @Field(() => [Int], {nullable:true})
    notIn?: Array<number>;
    @Field(() => Int, {nullable:true})
    lt?: number;
    @Field(() => Int, {nullable:true})
    lte?: number;
    @Field(() => Int, {nullable:true})
    gt?: number;
    @Field(() => Int, {nullable:true})
    gte?: number;
    @Field(() => NestedIntNullableFilter, {nullable:true})
    not?: InstanceType<typeof NestedIntNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class NestedIntNullableWithAggregatesFilter {
    @Field(() => Int, {nullable:true})
    equals?: number;
    @Field(() => [Int], {nullable:true})
    in?: Array<number>;
    @Field(() => [Int], {nullable:true})
    notIn?: Array<number>;
    @Field(() => Int, {nullable:true})
    lt?: number;
    @Field(() => Int, {nullable:true})
    lte?: number;
    @Field(() => Int, {nullable:true})
    gt?: number;
    @Field(() => Int, {nullable:true})
    gte?: number;
    @Field(() => NestedIntNullableWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedIntNullableWithAggregatesFilter>;
    @Field(() => NestedIntNullableFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntNullableFilter>;
    @Field(() => NestedFloatNullableFilter, {nullable:true})
    _avg?: InstanceType<typeof NestedFloatNullableFilter>;
    @Field(() => NestedIntNullableFilter, {nullable:true})
    _sum?: InstanceType<typeof NestedIntNullableFilter>;
    @Field(() => NestedIntNullableFilter, {nullable:true})
    _min?: InstanceType<typeof NestedIntNullableFilter>;
    @Field(() => NestedIntNullableFilter, {nullable:true})
    _max?: InstanceType<typeof NestedIntNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class NestedIntWithAggregatesFilter {
    @Field(() => Int, {nullable:true})
    equals?: number;
    @Field(() => [Int], {nullable:true})
    in?: Array<number>;
    @Field(() => [Int], {nullable:true})
    notIn?: Array<number>;
    @Field(() => Int, {nullable:true})
    lt?: number;
    @Field(() => Int, {nullable:true})
    lte?: number;
    @Field(() => Int, {nullable:true})
    gt?: number;
    @Field(() => Int, {nullable:true})
    gte?: number;
    @Field(() => NestedIntWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedIntWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedFloatFilter, {nullable:true})
    _avg?: InstanceType<typeof NestedFloatFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _sum?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _min?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _max?: InstanceType<typeof NestedIntFilter>;
}

@InputType()
export class NestedJsonFilter {
    @Field(() => GraphQLJSON, {nullable:true})
    equals?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    not?: any;
}

@InputType()
export class NestedJsonNullableFilter {
    @Field(() => GraphQLJSON, {nullable:true})
    equals?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    not?: any;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class NestedStringFilter {
    @Field(() => String, {nullable:true})
    equals?: string;
    @Field(() => [String], {nullable:true})
    in?: Array<string>;
    @Field(() => [String], {nullable:true})
    notIn?: Array<string>;
    @Field(() => String, {nullable:true})
    lt?: string;
    @Field(() => String, {nullable:true})
    lte?: string;
    @Field(() => String, {nullable:true})
    gt?: string;
    @Field(() => String, {nullable:true})
    gte?: string;
    @Field(() => String, {nullable:true})
    contains?: string;
    @Field(() => String, {nullable:true})
    startsWith?: string;
    @Field(() => String, {nullable:true})
    endsWith?: string;
    @Field(() => NestedStringFilter, {nullable:true})
    not?: InstanceType<typeof NestedStringFilter>;
}

@InputType()
export class NestedStringNullableFilter {
    @Field(() => String, {nullable:true})
    equals?: string;
    @Field(() => [String], {nullable:true})
    in?: Array<string>;
    @Field(() => [String], {nullable:true})
    notIn?: Array<string>;
    @Field(() => String, {nullable:true})
    lt?: string;
    @Field(() => String, {nullable:true})
    lte?: string;
    @Field(() => String, {nullable:true})
    gt?: string;
    @Field(() => String, {nullable:true})
    gte?: string;
    @Field(() => String, {nullable:true})
    contains?: string;
    @Field(() => String, {nullable:true})
    startsWith?: string;
    @Field(() => String, {nullable:true})
    endsWith?: string;
    @Field(() => NestedStringNullableFilter, {nullable:true})
    not?: InstanceType<typeof NestedStringNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class NestedStringNullableWithAggregatesFilter {
    @Field(() => String, {nullable:true})
    equals?: string;
    @Field(() => [String], {nullable:true})
    in?: Array<string>;
    @Field(() => [String], {nullable:true})
    notIn?: Array<string>;
    @Field(() => String, {nullable:true})
    lt?: string;
    @Field(() => String, {nullable:true})
    lte?: string;
    @Field(() => String, {nullable:true})
    gt?: string;
    @Field(() => String, {nullable:true})
    gte?: string;
    @Field(() => String, {nullable:true})
    contains?: string;
    @Field(() => String, {nullable:true})
    startsWith?: string;
    @Field(() => String, {nullable:true})
    endsWith?: string;
    @Field(() => NestedStringNullableWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedStringNullableWithAggregatesFilter>;
    @Field(() => NestedIntNullableFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntNullableFilter>;
    @Field(() => NestedStringNullableFilter, {nullable:true})
    _min?: InstanceType<typeof NestedStringNullableFilter>;
    @Field(() => NestedStringNullableFilter, {nullable:true})
    _max?: InstanceType<typeof NestedStringNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class NestedStringWithAggregatesFilter {
    @Field(() => String, {nullable:true})
    equals?: string;
    @Field(() => [String], {nullable:true})
    in?: Array<string>;
    @Field(() => [String], {nullable:true})
    notIn?: Array<string>;
    @Field(() => String, {nullable:true})
    lt?: string;
    @Field(() => String, {nullable:true})
    lte?: string;
    @Field(() => String, {nullable:true})
    gt?: string;
    @Field(() => String, {nullable:true})
    gte?: string;
    @Field(() => String, {nullable:true})
    contains?: string;
    @Field(() => String, {nullable:true})
    startsWith?: string;
    @Field(() => String, {nullable:true})
    endsWith?: string;
    @Field(() => NestedStringWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedStringWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedStringFilter, {nullable:true})
    _min?: InstanceType<typeof NestedStringFilter>;
    @Field(() => NestedStringFilter, {nullable:true})
    _max?: InstanceType<typeof NestedStringFilter>;
}

@InputType()
export class NullableBoolFieldUpdateOperationsInput {
    @Field(() => Boolean, {nullable:true})
    set?: boolean;
    @Field(() => Boolean, {nullable:true})
    unset?: boolean;
}

@InputType()
export class NullableDateTimeFieldUpdateOperationsInput {
    @Field(() => Date, {nullable:true})
    set?: Date | string;
    @Field(() => Boolean, {nullable:true})
    unset?: boolean;
}

@InputType()
export class NullableEnumBooleanChoiceFieldUpdateOperationsInput {
    @Field(() => BooleanChoice, {nullable:true})
    set?: `${BooleanChoice}`;
    @Field(() => Boolean, {nullable:true})
    unset?: boolean;
}

@InputType()
export class NullableEnumCampusChatMessageFlaggedByFieldUpdateOperationsInput {
    @Field(() => CampusChatMessageFlaggedBy, {nullable:true})
    set?: `${CampusChatMessageFlaggedBy}`;
    @Field(() => Boolean, {nullable:true})
    unset?: boolean;
}

@InputType()
export class NullableEnumCampusChatReportActionFieldUpdateOperationsInput {
    @Field(() => CampusChatReportAction, {nullable:true})
    set?: `${CampusChatReportAction}`;
    @Field(() => Boolean, {nullable:true})
    unset?: boolean;
}

@InputType()
export class NullableEnumConversationTypeFieldUpdateOperationsInput {
    @Field(() => ConversationType, {nullable:true})
    set?: `${ConversationType}`;
    @Field(() => Boolean, {nullable:true})
    unset?: boolean;
}

@InputType()
export class NullableEnumGenderFieldUpdateOperationsInput {
    @Field(() => Gender, {nullable:true})
    set?: `${Gender}`;
    @Field(() => Boolean, {nullable:true})
    unset?: boolean;
}

@InputType()
export class NullableEnumInternalCTAFieldUpdateOperationsInput {
    @Field(() => InternalCTA, {nullable:true})
    set?: `${InternalCTA}`;
    @Field(() => Boolean, {nullable:true})
    unset?: boolean;
}

@InputType()
export class NullableEnumMessageStateFieldUpdateOperationsInput {
    @Field(() => MessageState, {nullable:true})
    set?: `${MessageState}`;
    @Field(() => Boolean, {nullable:true})
    unset?: boolean;
}

@InputType()
export class NullableEnumOrderNotificationTypeFieldUpdateOperationsInput {
    @Field(() => OrderNotificationType, {nullable:true})
    set?: `${OrderNotificationType}`;
    @Field(() => Boolean, {nullable:true})
    unset?: boolean;
}

@InputType()
export class NullableEnumPlatformFieldUpdateOperationsInput {
    @Field(() => Platform, {nullable:true})
    set?: `${Platform}`;
    @Field(() => Boolean, {nullable:true})
    unset?: boolean;
}

@InputType()
export class NullableEnumPreferredGenderFieldUpdateOperationsInput {
    @Field(() => PreferredGender, {nullable:true})
    set?: `${PreferredGender}`;
    @Field(() => Boolean, {nullable:true})
    unset?: boolean;
}

@InputType()
export class NullableEnumProductDeliveryModeFieldUpdateOperationsInput {
    @Field(() => ProductDeliveryMode, {nullable:true})
    set?: `${ProductDeliveryMode}`;
    @Field(() => Boolean, {nullable:true})
    unset?: boolean;
}

@InputType()
export class NullableEnumProductReportActionFieldUpdateOperationsInput {
    @Field(() => ProductReportAction, {nullable:true})
    set?: `${ProductReportAction}`;
    @Field(() => Boolean, {nullable:true})
    unset?: boolean;
}

@InputType()
export class NullableEnumShippingChargePayerFieldUpdateOperationsInput {
    @Field(() => ShippingChargePayer, {nullable:true})
    set?: `${ShippingChargePayer}`;
    @Field(() => Boolean, {nullable:true})
    unset?: boolean;
}

@InputType()
export class NullableEnumUserListedFilterFieldUpdateOperationsInput {
    @Field(() => UserListedFilter, {nullable:true})
    set?: `${UserListedFilter}`;
    @Field(() => Boolean, {nullable:true})
    unset?: boolean;
}

@InputType()
export class NullableFloatFieldUpdateOperationsInput {
    @Field(() => Float, {nullable:true})
    set?: number;
    @Field(() => Float, {nullable:true})
    increment?: number;
    @Field(() => Float, {nullable:true})
    decrement?: number;
    @Field(() => Float, {nullable:true})
    multiply?: number;
    @Field(() => Float, {nullable:true})
    divide?: number;
    @Field(() => Boolean, {nullable:true})
    unset?: boolean;
}

@InputType()
export class NullableIntFieldUpdateOperationsInput {
    @Field(() => Int, {nullable:true})
    set?: number;
    @Field(() => Int, {nullable:true})
    increment?: number;
    @Field(() => Int, {nullable:true})
    decrement?: number;
    @Field(() => Int, {nullable:true})
    multiply?: number;
    @Field(() => Int, {nullable:true})
    divide?: number;
    @Field(() => Boolean, {nullable:true})
    unset?: boolean;
}

@InputType()
export class NullableStringFieldUpdateOperationsInput {
    @Field(() => String, {nullable:true})
    set?: string;
    @Field(() => Boolean, {nullable:true})
    unset?: boolean;
}

@InputType()
export class OfferNotificationPayloadCompositeFilter {
    @Field(() => OfferNotificationPayloadObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof OfferNotificationPayloadObjectEqualityInput>;
    @Field(() => OfferNotificationPayloadWhereInput, {nullable:true})
    is?: InstanceType<typeof OfferNotificationPayloadWhereInput>;
    @Field(() => OfferNotificationPayloadWhereInput, {nullable:true})
    isNot?: InstanceType<typeof OfferNotificationPayloadWhereInput>;
}

@InputType()
export class OfferNotificationPayloadObjectEqualityInput {
    @Field(() => OfferNotificationType, {nullable:false})
    type!: `${OfferNotificationType}`;
    @Field(() => String, {nullable:false})
    conversationId!: string;
    @Field(() => String, {nullable:false})
    otherParticipantFullName!: string;
    @Field(() => String, {nullable:false})
    otherParticipantUserId!: string;
}

@InputType()
export class OrderNotificationPayloadCompositeFilter {
    @Field(() => OrderNotificationPayloadObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof OrderNotificationPayloadObjectEqualityInput>;
    @Field(() => OrderNotificationPayloadWhereInput, {nullable:true})
    is?: InstanceType<typeof OrderNotificationPayloadWhereInput>;
    @Field(() => OrderNotificationPayloadWhereInput, {nullable:true})
    isNot?: InstanceType<typeof OrderNotificationPayloadWhereInput>;
}

@InputType()
export class OrderNotificationPayloadObjectEqualityInput {
    @Field(() => OrderNotificationType, {nullable:false})
    type!: `${OrderNotificationType}`;
    @Field(() => String, {nullable:false})
    conversationId!: string;
    @Field(() => String, {nullable:false})
    orderId!: string;
    @Field(() => String, {nullable:false})
    listingTitle!: string;
}

@InputType()
export class OrderPayoutCompositeFilter {
    @Field(() => OrderPayoutObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof OrderPayoutObjectEqualityInput>;
    @Field(() => OrderPayoutWhereInput, {nullable:true})
    is?: InstanceType<typeof OrderPayoutWhereInput>;
    @Field(() => OrderPayoutWhereInput, {nullable:true})
    isNot?: InstanceType<typeof OrderPayoutWhereInput>;
}

@InputType()
export class OrderPayoutObjectEqualityInput {
    @Field(() => SellerPayoutStatus, {nullable:false})
    status!: `${SellerPayoutStatus}`;
    @Field(() => Date, {nullable:true})
    creditedAt?: Date | string;
    @Field(() => String, {nullable:true})
    payoutId?: string;
}

@InputType()
export class PackageDimensionsCompositeFilter {
    @Field(() => PackageDimensionsObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof PackageDimensionsObjectEqualityInput>;
    @Field(() => PackageDimensionsWhereInput, {nullable:true})
    is?: InstanceType<typeof PackageDimensionsWhereInput>;
    @Field(() => PackageDimensionsWhereInput, {nullable:true})
    isNot?: InstanceType<typeof PackageDimensionsWhereInput>;
}

@InputType()
export class PackageDimensionsNullableCompositeFilter {
    @Field(() => PackageDimensionsObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof PackageDimensionsObjectEqualityInput>;
    @Field(() => PackageDimensionsWhereInput, {nullable:true})
    is?: InstanceType<typeof PackageDimensionsWhereInput>;
    @Field(() => PackageDimensionsWhereInput, {nullable:true})
    isNot?: InstanceType<typeof PackageDimensionsWhereInput>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class PackageDimensionsNullableUpdateEnvelopeInput {
    @Field(() => PackageDimensionsCreateInput, {nullable:true})
    @Type(() => PackageDimensionsCreateInput)
    set?: InstanceType<typeof PackageDimensionsCreateInput>;
    @Field(() => PackageDimensionsUpsertInput, {nullable:true})
    @Type(() => PackageDimensionsUpsertInput)
    upsert?: InstanceType<typeof PackageDimensionsUpsertInput>;
    @Field(() => Boolean, {nullable:true})
    unset?: boolean;
}

@InputType()
export class PackageDimensionsObjectEqualityInput {
    @Field(() => Float, {nullable:false})
    height!: number;
    @Field(() => Float, {nullable:false})
    width!: number;
    @Field(() => Float, {nullable:false})
    length!: number;
    @Field(() => String, {nullable:false})
    unit!: string;
}

@InputType()
export class PackageDimensionsUpsertInput {
    @Field(() => PackageDimensionsCreateInput, {nullable:false})
    @Type(() => PackageDimensionsCreateInput)
    set!: InstanceType<typeof PackageDimensionsCreateInput>;
    @Field(() => PackageDimensionsUpdateInput, {nullable:false})
    @Type(() => PackageDimensionsUpdateInput)
    update!: InstanceType<typeof PackageDimensionsUpdateInput>;
}

@InputType()
export class PackageWeightCompositeFilter {
    @Field(() => PackageWeightObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof PackageWeightObjectEqualityInput>;
    @Field(() => PackageWeightWhereInput, {nullable:true})
    is?: InstanceType<typeof PackageWeightWhereInput>;
    @Field(() => PackageWeightWhereInput, {nullable:true})
    isNot?: InstanceType<typeof PackageWeightWhereInput>;
}

@InputType()
export class PackageWeightNullableCompositeFilter {
    @Field(() => PackageWeightObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof PackageWeightObjectEqualityInput>;
    @Field(() => PackageWeightWhereInput, {nullable:true})
    is?: InstanceType<typeof PackageWeightWhereInput>;
    @Field(() => PackageWeightWhereInput, {nullable:true})
    isNot?: InstanceType<typeof PackageWeightWhereInput>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class PackageWeightNullableUpdateEnvelopeInput {
    @Field(() => PackageWeightCreateInput, {nullable:true})
    @Type(() => PackageWeightCreateInput)
    set?: InstanceType<typeof PackageWeightCreateInput>;
    @Field(() => PackageWeightUpsertInput, {nullable:true})
    @Type(() => PackageWeightUpsertInput)
    upsert?: InstanceType<typeof PackageWeightUpsertInput>;
    @Field(() => Boolean, {nullable:true})
    unset?: boolean;
}

@InputType()
export class PackageWeightObjectEqualityInput {
    @Field(() => Float, {nullable:false})
    value!: number;
    @Field(() => String, {nullable:false})
    unit!: string;
}

@InputType()
export class PackageWeightUpsertInput {
    @Field(() => PackageWeightCreateInput, {nullable:false})
    @Type(() => PackageWeightCreateInput)
    set!: InstanceType<typeof PackageWeightCreateInput>;
    @Field(() => PackageWeightUpdateInput, {nullable:false})
    @Type(() => PackageWeightUpdateInput)
    update!: InstanceType<typeof PackageWeightUpdateInput>;
}

@InputType()
export class PaymentConfirmationSystemMessageCompositeFilter {
    @Field(() => PaymentConfirmationSystemMessageObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof PaymentConfirmationSystemMessageObjectEqualityInput>;
    @Field(() => PaymentConfirmationSystemMessageWhereInput, {nullable:true})
    is?: InstanceType<typeof PaymentConfirmationSystemMessageWhereInput>;
    @Field(() => PaymentConfirmationSystemMessageWhereInput, {nullable:true})
    isNot?: InstanceType<typeof PaymentConfirmationSystemMessageWhereInput>;
}

@InputType()
export class PaymentConfirmationSystemMessageObjectEqualityInput {
    @Field(() => SystemIcons, {nullable:false})
    icon!: `${SystemIcons}`;
    @Field(() => String, {nullable:false})
    text1!: string;
    @Field(() => String, {nullable:false})
    text2!: string;
    @Field(() => String, {nullable:false})
    shippingAddress!: string;
    @Field(() => String, {nullable:false})
    note!: string;
    @Field(() => String, {nullable:false})
    orderId!: string;
    @Field(() => Boolean, {nullable:true})
    localTxn?: boolean;
    @Field(() => ConversationType, {nullable:true})
    conversationType?: `${ConversationType}`;
}

@InputType()
export class PaymentLinkMessageCompositeFilter {
    @Field(() => PaymentLinkMessageObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof PaymentLinkMessageObjectEqualityInput>;
    @Field(() => PaymentLinkMessageWhereInput, {nullable:true})
    is?: InstanceType<typeof PaymentLinkMessageWhereInput>;
    @Field(() => PaymentLinkMessageWhereInput, {nullable:true})
    isNot?: InstanceType<typeof PaymentLinkMessageWhereInput>;
}

@InputType()
export class PaymentLinkMessageObjectEqualityInput {
    @Field(() => String, {nullable:false})
    mainText!: string;
    @Field(() => String, {nullable:false})
    disclaimerText!: string;
    @Field(() => String, {nullable:false})
    amount!: string;
}

@InputType()
export class PaymentLinkUpdateMessageCompositeFilter {
    @Field(() => PaymentLinkUpdateMessageObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof PaymentLinkUpdateMessageObjectEqualityInput>;
    @Field(() => PaymentLinkUpdateMessageWhereInput, {nullable:true})
    is?: InstanceType<typeof PaymentLinkUpdateMessageWhereInput>;
    @Field(() => PaymentLinkUpdateMessageWhereInput, {nullable:true})
    isNot?: InstanceType<typeof PaymentLinkUpdateMessageWhereInput>;
}

@InputType()
export class PaymentLinkUpdateMessageObjectEqualityInput {
    @Field(() => PaymentLinkStatus, {nullable:false})
    status!: `${PaymentLinkStatus}`;
    @Field(() => String, {nullable:false})
    amount!: string;
}

@InputType()
export class PaymentLinkUpdateMessageUpdateEnvelopeInput {
    @Field(() => PaymentLinkUpdateMessageCreateInput, {nullable:true})
    @Type(() => PaymentLinkUpdateMessageCreateInput)
    set?: InstanceType<typeof PaymentLinkUpdateMessageCreateInput>;
    @Field(() => PaymentLinkUpdateMessageUpdateInput, {nullable:true})
    @Type(() => PaymentLinkUpdateMessageUpdateInput)
    update?: InstanceType<typeof PaymentLinkUpdateMessageUpdateInput>;
}

@InputType()
export class PayoutNotificationPayloadCompositeFilter {
    @Field(() => PayoutNotificationPayloadObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof PayoutNotificationPayloadObjectEqualityInput>;
    @Field(() => PayoutNotificationPayloadWhereInput, {nullable:true})
    is?: InstanceType<typeof PayoutNotificationPayloadWhereInput>;
    @Field(() => PayoutNotificationPayloadWhereInput, {nullable:true})
    isNot?: InstanceType<typeof PayoutNotificationPayloadWhereInput>;
}

@InputType()
export class PayoutNotificationPayloadObjectEqualityInput {
    @Field(() => PayoutNotificationType, {nullable:false})
    type!: `${PayoutNotificationType}`;
    @Field(() => String, {nullable:false})
    conversationId!: string;
    @Field(() => String, {nullable:false})
    orderId!: string;
    @Field(() => String, {nullable:false})
    payoutID!: string;
}

@InputType()
export class ProductBubbleCompositeFilter {
    @Field(() => ProductBubbleObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof ProductBubbleObjectEqualityInput>;
    @Field(() => ProductBubbleWhereInput, {nullable:true})
    is?: InstanceType<typeof ProductBubbleWhereInput>;
    @Field(() => ProductBubbleWhereInput, {nullable:true})
    isNot?: InstanceType<typeof ProductBubbleWhereInput>;
}

@InputType()
export class ProductBubbleObjectEqualityInput {
    @Field(() => String, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => String, {nullable:false})
    description!: string;
    @Field(() => String, {nullable:false})
    mediaType!: string;
}

@InputType()
export class ProductCategoryAppFiltersCompositeListFilter {
    @Field(() => [ProductCategoryAppFiltersObjectEqualityInput], {nullable:true})
    equals?: Array<ProductCategoryAppFiltersObjectEqualityInput>;
    @Field(() => ProductCategoryAppFiltersWhereInput, {nullable:true})
    every?: InstanceType<typeof ProductCategoryAppFiltersWhereInput>;
    @Field(() => ProductCategoryAppFiltersWhereInput, {nullable:true})
    some?: InstanceType<typeof ProductCategoryAppFiltersWhereInput>;
    @Field(() => ProductCategoryAppFiltersWhereInput, {nullable:true})
    none?: InstanceType<typeof ProductCategoryAppFiltersWhereInput>;
    @Field(() => Boolean, {nullable:true})
    isEmpty?: boolean;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class ProductCategoryAppFiltersDeleteManyInput {
    @Field(() => ProductCategoryAppFiltersWhereInput, {nullable:false})
    @Type(() => ProductCategoryAppFiltersWhereInput)
    where!: InstanceType<typeof ProductCategoryAppFiltersWhereInput>;
}

@InputType()
export class ProductCategoryAppFiltersListCreateEnvelopeInput {
    @Field(() => [ProductCategoryAppFiltersCreateInput], {nullable:true})
    @Type(() => ProductCategoryAppFiltersCreateInput)
    set?: Array<ProductCategoryAppFiltersCreateInput>;
}

@InputType()
export class ProductCategoryAppFiltersListUpdateEnvelopeInput {
    @Field(() => [ProductCategoryAppFiltersCreateInput], {nullable:true})
    @Type(() => ProductCategoryAppFiltersCreateInput)
    set?: Array<ProductCategoryAppFiltersCreateInput>;
    @Field(() => [ProductCategoryAppFiltersCreateInput], {nullable:true})
    push?: Array<ProductCategoryAppFiltersCreateInput>;
    @Field(() => ProductCategoryAppFiltersUpdateManyInput, {nullable:true})
    @Type(() => ProductCategoryAppFiltersUpdateManyInput)
    updateMany?: InstanceType<typeof ProductCategoryAppFiltersUpdateManyInput>;
    @Field(() => ProductCategoryAppFiltersDeleteManyInput, {nullable:true})
    @Type(() => ProductCategoryAppFiltersDeleteManyInput)
    deleteMany?: InstanceType<typeof ProductCategoryAppFiltersDeleteManyInput>;
}

@InputType()
export class ProductCategoryAppFiltersObjectEqualityInput {
    @Field(() => String, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => SelectionChoice, {nullable:false})
    selectionType!: `${SelectionChoice}`;
    @Field(() => [FilterChoiceObjectEqualityInput], {nullable:true})
    choices?: Array<FilterChoiceObjectEqualityInput>;
    @Field(() => String, {nullable:false})
    infoImage!: string;
}

@InputType()
export class ProductListingSnapshotCompositeFilter {
    @Field(() => ProductListingSnapshotObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof ProductListingSnapshotObjectEqualityInput>;
    @Field(() => ProductListingSnapshotWhereInput, {nullable:true})
    is?: InstanceType<typeof ProductListingSnapshotWhereInput>;
    @Field(() => ProductListingSnapshotWhereInput, {nullable:true})
    isNot?: InstanceType<typeof ProductListingSnapshotWhereInput>;
}

@InputType()
export class ProductListingSnapshotObjectEqualityInput {
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => String, {nullable:false})
    price!: string;
    @Field(() => String, {nullable:false})
    productCondition!: string;
    @Field(() => String, {nullable:true})
    colorName?: string;
    @Field(() => String, {nullable:true})
    brandName?: string;
    @Field(() => [MediaItemObjectEqualityInput], {nullable:true})
    media?: Array<MediaItemObjectEqualityInput>;
    @Field(() => ProductDeliveryMode, {nullable:false})
    deliveryMode!: `${ProductDeliveryMode}`;
    @Field(() => ProductListingType, {nullable:false})
    type!: `${ProductListingType}`;
    @Field(() => String, {nullable:true})
    shippingFrom?: string;
    @Field(() => PackageWeightObjectEqualityInput, {nullable:true})
    packageWeight?: InstanceType<typeof PackageWeightObjectEqualityInput>;
    @Field(() => PackageDimensionsObjectEqualityInput, {nullable:true})
    packageDimensions?: InstanceType<typeof PackageDimensionsObjectEqualityInput>;
}

@InputType()
export class ProductReportStatusCompositeFilter {
    @Field(() => ProductReportStatusObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof ProductReportStatusObjectEqualityInput>;
    @Field(() => ProductReportStatusWhereInput, {nullable:true})
    is?: InstanceType<typeof ProductReportStatusWhereInput>;
    @Field(() => ProductReportStatusWhereInput, {nullable:true})
    isNot?: InstanceType<typeof ProductReportStatusWhereInput>;
}

@InputType()
export class ProductReportStatusObjectEqualityInput {
    @Field(() => Boolean, {nullable:false})
    reviewed!: boolean;
    @Field(() => Date, {nullable:true})
    reviewedAt?: Date | string;
    @Field(() => String, {nullable:true})
    reviewedBy?: string;
    @Field(() => ProductReportAction, {nullable:true})
    action?: `${ProductReportAction}`;
}

@InputType()
export class ProductShareCampusChatPayloadCompositeFilter {
    @Field(() => ProductShareCampusChatPayloadObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof ProductShareCampusChatPayloadObjectEqualityInput>;
    @Field(() => ProductShareCampusChatPayloadWhereInput, {nullable:true})
    is?: InstanceType<typeof ProductShareCampusChatPayloadWhereInput>;
    @Field(() => ProductShareCampusChatPayloadWhereInput, {nullable:true})
    isNot?: InstanceType<typeof ProductShareCampusChatPayloadWhereInput>;
}

@InputType()
export class ProductShareCampusChatPayloadObjectEqualityInput {
    @Field(() => String, {nullable:false})
    productId!: string;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => Float, {nullable:false})
    price!: number;
    @Field(() => String, {nullable:false})
    priceString!: string;
    @Field(() => MediaItemObjectEqualityInput, {nullable:false})
    mediaItem!: InstanceType<typeof MediaItemObjectEqualityInput>;
    @Field(() => ProductListingType, {nullable:false})
    type!: `${ProductListingType}`;
    @Field(() => String, {nullable:true})
    text?: string;
}

@InputType()
export class PushNotificationDataCompositeFilter {
    @Field(() => PushNotificationDataObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof PushNotificationDataObjectEqualityInput>;
    @Field(() => PushNotificationDataWhereInput, {nullable:true})
    is?: InstanceType<typeof PushNotificationDataWhereInput>;
    @Field(() => PushNotificationDataWhereInput, {nullable:true})
    isNot?: InstanceType<typeof PushNotificationDataWhereInput>;
}

@InputType()
export class PushNotificationDataObjectEqualityInput {
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => String, {nullable:false})
    body!: string;
    @Field(() => String, {nullable:true})
    icon?: string;
    @Field(() => String, {nullable:true})
    cardImage?: string;
}

@InputType()
export class RentDateTimeCompositeFilter {
    @Field(() => RentDateTimeObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof RentDateTimeObjectEqualityInput>;
    @Field(() => RentDateTimeWhereInput, {nullable:true})
    is?: InstanceType<typeof RentDateTimeWhereInput>;
    @Field(() => RentDateTimeWhereInput, {nullable:true})
    isNot?: InstanceType<typeof RentDateTimeWhereInput>;
}

@InputType()
export class RentDateTimeObjectEqualityInput {
    @Field(() => String, {nullable:false})
    date!: string;
    @Field(() => String, {nullable:false})
    time!: string;
}

@InputType()
export class RentOfferBubbleCompositeFilter {
    @Field(() => RentOfferBubbleObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof RentOfferBubbleObjectEqualityInput>;
    @Field(() => RentOfferBubbleWhereInput, {nullable:true})
    is?: InstanceType<typeof RentOfferBubbleWhereInput>;
    @Field(() => RentOfferBubbleWhereInput, {nullable:true})
    isNot?: InstanceType<typeof RentOfferBubbleWhereInput>;
}

@InputType()
export class RentOfferBubbleObjectEqualityInput {
    @Field(() => String, {nullable:false})
    headerText!: string;
    @Field(() => ProductBubbleObjectEqualityInput, {nullable:false})
    product!: InstanceType<typeof ProductBubbleObjectEqualityInput>;
    @Field(() => RentDateTimeObjectEqualityInput, {nullable:false})
    start!: InstanceType<typeof RentDateTimeObjectEqualityInput>;
    @Field(() => RentDateTimeObjectEqualityInput, {nullable:false})
    end!: InstanceType<typeof RentDateTimeObjectEqualityInput>;
    @Field(() => String, {nullable:false})
    totalPrice!: string;
    @Field(() => String, {nullable:false})
    buyerFee!: string;
    @Field(() => String, {nullable:false})
    totalPriceWithBuyerFee!: string;
    @Field(() => String, {nullable:false})
    consideredWeeks!: string;
    @Field(() => String, {nullable:false})
    duration!: string;
    @Field(() => String, {nullable:false})
    deliveryMode!: string;
    @Field(() => String, {nullable:false})
    address!: string;
    @Field(() => String, {nullable:false})
    startDateTime!: string;
    @Field(() => String, {nullable:false})
    endDateTime!: string;
    @Field(() => String, {nullable:false})
    userIdHavingAddress!: string;
    @Field(() => String, {nullable:false})
    addressIdSelected!: string;
}

@InputType()
export class RentOrderNullableCompositeFilter {
    @Field(() => RentOrderObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof RentOrderObjectEqualityInput>;
    @Field(() => RentOrderWhereInput, {nullable:true})
    is?: InstanceType<typeof RentOrderWhereInput>;
    @Field(() => RentOrderWhereInput, {nullable:true})
    isNot?: InstanceType<typeof RentOrderWhereInput>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class RentOrderNullableCreateEnvelopeInput {
    @Field(() => RentOrderCreateInput, {nullable:true})
    @Type(() => RentOrderCreateInput)
    set?: InstanceType<typeof RentOrderCreateInput>;
}

@InputType()
export class RentOrderNullableUpdateEnvelopeInput {
    @Field(() => RentOrderCreateInput, {nullable:true})
    @Type(() => RentOrderCreateInput)
    set?: InstanceType<typeof RentOrderCreateInput>;
    @Field(() => RentOrderUpsertInput, {nullable:true})
    @Type(() => RentOrderUpsertInput)
    upsert?: InstanceType<typeof RentOrderUpsertInput>;
    @Field(() => Boolean, {nullable:true})
    unset?: boolean;
}

@InputType()
export class RentOrderObjectEqualityInput {
    @Field(() => String, {nullable:true})
    startDate?: string;
    @Field(() => String, {nullable:true})
    endDate?: string;
    @Field(() => [String], {nullable:true})
    initialImages?: Array<string>;
    @Field(() => [String], {nullable:true})
    completionImages?: Array<string>;
}

@InputType()
export class RentOrderUpsertInput {
    @Field(() => RentOrderCreateInput, {nullable:false})
    @Type(() => RentOrderCreateInput)
    set!: InstanceType<typeof RentOrderCreateInput>;
    @Field(() => RentOrderUpdateInput, {nullable:false})
    @Type(() => RentOrderUpdateInput)
    update!: InstanceType<typeof RentOrderUpdateInput>;
}

@InputType()
export class RentalNotificationPayloadCompositeFilter {
    @Field(() => RentalNotificationPayloadObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof RentalNotificationPayloadObjectEqualityInput>;
    @Field(() => RentalNotificationPayloadWhereInput, {nullable:true})
    is?: InstanceType<typeof RentalNotificationPayloadWhereInput>;
    @Field(() => RentalNotificationPayloadWhereInput, {nullable:true})
    isNot?: InstanceType<typeof RentalNotificationPayloadWhereInput>;
}

@InputType()
export class RentalNotificationPayloadObjectEqualityInput {
    @Field(() => RentalNotificationType, {nullable:false})
    type!: `${RentalNotificationType}`;
    @Field(() => String, {nullable:false})
    conversationId!: string;
    @Field(() => String, {nullable:false})
    orderId!: string;
    @Field(() => String, {nullable:false})
    listingTitle!: string;
}

@InputType()
export class RentingPreferenceNullableCompositeFilter {
    @Field(() => RentingPreferenceObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof RentingPreferenceObjectEqualityInput>;
    @Field(() => RentingPreferenceWhereInput, {nullable:true})
    is?: InstanceType<typeof RentingPreferenceWhereInput>;
    @Field(() => RentingPreferenceWhereInput, {nullable:true})
    isNot?: InstanceType<typeof RentingPreferenceWhereInput>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class RentingPreferenceNullableCreateEnvelopeInput {
    @Field(() => RentingPreferenceCreateInput, {nullable:true})
    @Type(() => RentingPreferenceCreateInput)
    set?: InstanceType<typeof RentingPreferenceCreateInput>;
}

@InputType()
export class RentingPreferenceNullableUpdateEnvelopeInput {
    @Field(() => RentingPreferenceCreateInput, {nullable:true})
    @Type(() => RentingPreferenceCreateInput)
    set?: InstanceType<typeof RentingPreferenceCreateInput>;
    @Field(() => RentingPreferenceUpsertInput, {nullable:true})
    @Type(() => RentingPreferenceUpsertInput)
    upsert?: InstanceType<typeof RentingPreferenceUpsertInput>;
    @Field(() => Boolean, {nullable:true})
    unset?: boolean;
}

@InputType()
export class RentingPreferenceObjectEqualityInput {
    @Field(() => String, {nullable:true})
    addressId?: string;
    @Field(() => [Availability], {nullable:true})
    availability?: Array<`${Availability}`>;
    @Field(() => String, {nullable:true})
    addressDescription?: string;
}

@InputType()
export class RentingPreferenceUpsertInput {
    @Field(() => RentingPreferenceCreateInput, {nullable:false})
    @Type(() => RentingPreferenceCreateInput)
    set!: InstanceType<typeof RentingPreferenceCreateInput>;
    @Field(() => RentingPreferenceUpdateInput, {nullable:false})
    @Type(() => RentingPreferenceUpdateInput)
    update!: InstanceType<typeof RentingPreferenceUpdateInput>;
}

@ArgsType()
export class RunCommandRawArgs {
    @Field(() => GraphQLJSON, {nullable:false})
    command!: any;
}

@InputType()
export class SessionCompositeListFilter {
    @Field(() => [SessionObjectEqualityInput], {nullable:true})
    equals?: Array<SessionObjectEqualityInput>;
    @Field(() => SessionWhereInput, {nullable:true})
    every?: InstanceType<typeof SessionWhereInput>;
    @Field(() => SessionWhereInput, {nullable:true})
    some?: InstanceType<typeof SessionWhereInput>;
    @Field(() => SessionWhereInput, {nullable:true})
    none?: InstanceType<typeof SessionWhereInput>;
    @Field(() => Boolean, {nullable:true})
    isEmpty?: boolean;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class SessionDeleteManyInput {
    @Field(() => SessionWhereInput, {nullable:false})
    @Type(() => SessionWhereInput)
    where!: InstanceType<typeof SessionWhereInput>;
}

@InputType()
export class SessionListCreateEnvelopeInput {
    @Field(() => [SessionCreateInput], {nullable:true})
    @Type(() => SessionCreateInput)
    set?: Array<SessionCreateInput>;
}

@InputType()
export class SessionListUpdateEnvelopeInput {
    @Field(() => [SessionCreateInput], {nullable:true})
    @Type(() => SessionCreateInput)
    set?: Array<SessionCreateInput>;
    @Field(() => [SessionCreateInput], {nullable:true})
    push?: Array<SessionCreateInput>;
    @Field(() => SessionUpdateManyInput, {nullable:true})
    @Type(() => SessionUpdateManyInput)
    updateMany?: InstanceType<typeof SessionUpdateManyInput>;
    @Field(() => SessionDeleteManyInput, {nullable:true})
    @Type(() => SessionDeleteManyInput)
    deleteMany?: InstanceType<typeof SessionDeleteManyInput>;
}

@InputType()
export class SessionObjectEqualityInput {
    @Field(() => String, {nullable:false})
    token!: string;
    @Field(() => String, {nullable:false})
    deviceModel!: string;
    @Field(() => Boolean, {nullable:false})
    valid!: boolean;
    @Field(() => Date, {nullable:false})
    started!: Date | string;
    @Field(() => Date, {nullable:false})
    lastSeen!: Date | string;
}

@InputType()
export class ShipmentNullableCompositeFilter {
    @Field(() => ShipmentObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof ShipmentObjectEqualityInput>;
    @Field(() => ShipmentWhereInput, {nullable:true})
    is?: InstanceType<typeof ShipmentWhereInput>;
    @Field(() => ShipmentWhereInput, {nullable:true})
    isNot?: InstanceType<typeof ShipmentWhereInput>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class ShipmentNullableCreateEnvelopeInput {
    @Field(() => ShipmentCreateInput, {nullable:true})
    @Type(() => ShipmentCreateInput)
    set?: InstanceType<typeof ShipmentCreateInput>;
}

@InputType()
export class ShipmentNullableUpdateEnvelopeInput {
    @Field(() => ShipmentCreateInput, {nullable:true})
    @Type(() => ShipmentCreateInput)
    set?: InstanceType<typeof ShipmentCreateInput>;
    @Field(() => ShipmentUpsertInput, {nullable:true})
    @Type(() => ShipmentUpsertInput)
    upsert?: InstanceType<typeof ShipmentUpsertInput>;
    @Field(() => Boolean, {nullable:true})
    unset?: boolean;
}

@InputType()
export class ShipmentObjectEqualityInput {
    @Field(() => String, {nullable:true})
    labelId?: string;
    @Field(() => AddressObjectEqualityInput, {nullable:true})
    from?: InstanceType<typeof AddressObjectEqualityInput>;
    @Field(() => AddressObjectEqualityInput, {nullable:true})
    to?: InstanceType<typeof AddressObjectEqualityInput>;
    @Field(() => String, {nullable:true})
    labelDownloadlink?: string;
    @Field(() => String, {nullable:true})
    trackingNumber?: string;
    @Field(() => Float, {nullable:true})
    shippingCharge?: number;
    @Field(() => ShippingChargePayer, {nullable:true})
    shippingChargePayer?: `${ShippingChargePayer}`;
    @Field(() => GraphQLJSON, {nullable:true})
    events?: any;
    @Field(() => String, {nullable:true})
    status_description?: string;
    @Field(() => OrderNotificationType, {nullable:true})
    status?: `${OrderNotificationType}`;
}

@InputType()
export class ShipmentUpsertInput {
    @Field(() => ShipmentCreateInput, {nullable:false})
    @Type(() => ShipmentCreateInput)
    set!: InstanceType<typeof ShipmentCreateInput>;
    @Field(() => ShipmentUpdateInput, {nullable:false})
    @Type(() => ShipmentUpdateInput)
    update!: InstanceType<typeof ShipmentUpdateInput>;
}

@InputType()
export class SizesNullableCompositeFilter {
    @Field(() => SizesObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof SizesObjectEqualityInput>;
    @Field(() => SizesWhereInput, {nullable:true})
    is?: InstanceType<typeof SizesWhereInput>;
    @Field(() => SizesWhereInput, {nullable:true})
    isNot?: InstanceType<typeof SizesWhereInput>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class SizesNullableCreateEnvelopeInput {
    @Field(() => SizesCreateInput, {nullable:true})
    @Type(() => SizesCreateInput)
    set?: InstanceType<typeof SizesCreateInput>;
}

@InputType()
export class SizesNullableUpdateEnvelopeInput {
    @Field(() => SizesCreateInput, {nullable:true})
    @Type(() => SizesCreateInput)
    set?: InstanceType<typeof SizesCreateInput>;
    @Field(() => SizesUpsertInput, {nullable:true})
    @Type(() => SizesUpsertInput)
    upsert?: InstanceType<typeof SizesUpsertInput>;
    @Field(() => Boolean, {nullable:true})
    unset?: boolean;
}

@InputType()
export class SizesObjectEqualityInput {
    @Field(() => String, {nullable:false})
    shoes!: string;
    @Field(() => String, {nullable:false})
    upperWear!: string;
    @Field(() => String, {nullable:false})
    lowerWear!: string;
}

@InputType()
export class SizesUpsertInput {
    @Field(() => SizesCreateInput, {nullable:false})
    @Type(() => SizesCreateInput)
    set!: InstanceType<typeof SizesCreateInput>;
    @Field(() => SizesUpdateInput, {nullable:false})
    @Type(() => SizesUpdateInput)
    update!: InstanceType<typeof SizesUpdateInput>;
}

@InputType()
export class StoryMediaCompositeFilter {
    @Field(() => StoryMediaObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof StoryMediaObjectEqualityInput>;
    @Field(() => StoryMediaWhereInput, {nullable:true})
    is?: InstanceType<typeof StoryMediaWhereInput>;
    @Field(() => StoryMediaWhereInput, {nullable:true})
    isNot?: InstanceType<typeof StoryMediaWhereInput>;
}

@InputType()
export class StoryMediaObjectEqualityInput {
    @Field(() => String, {nullable:false})
    url!: string;
    @Field(() => StoryType, {nullable:false})
    type!: `${StoryType}`;
    @Field(() => Int, {nullable:true})
    duration?: number;
    @Field(() => String, {nullable:true})
    thumbnail?: string;
}

@InputType()
export class StoryProductPayloadCompositeFilter {
    @Field(() => StoryProductPayloadObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof StoryProductPayloadObjectEqualityInput>;
    @Field(() => StoryProductPayloadWhereInput, {nullable:true})
    is?: InstanceType<typeof StoryProductPayloadWhereInput>;
    @Field(() => StoryProductPayloadWhereInput, {nullable:true})
    isNot?: InstanceType<typeof StoryProductPayloadWhereInput>;
}

@InputType()
export class StoryProductPayloadObjectEqualityInput {
    @Field(() => String, {nullable:false})
    productId!: string;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => String, {nullable:true})
    fontColor?: string;
    @Field(() => String, {nullable:true})
    textPosX?: string;
    @Field(() => String, {nullable:true})
    textPosY?: string;
    @Field(() => String, {nullable:true})
    textHexCode?: string;
}

@InputType()
export class StringFieldUpdateOperationsInput {
    @Field(() => String, {nullable:true})
    set?: string;
}

@InputType()
export class StringFilter {
    @Field(() => String, {nullable:true})
    equals?: string;
    @Field(() => [String], {nullable:true})
    in?: Array<string>;
    @Field(() => [String], {nullable:true})
    notIn?: Array<string>;
    @Field(() => String, {nullable:true})
    lt?: string;
    @Field(() => String, {nullable:true})
    lte?: string;
    @Field(() => String, {nullable:true})
    gt?: string;
    @Field(() => String, {nullable:true})
    gte?: string;
    @Field(() => String, {nullable:true})
    contains?: string;
    @Field(() => String, {nullable:true})
    startsWith?: string;
    @Field(() => String, {nullable:true})
    endsWith?: string;
    @Field(() => QueryMode, {nullable:true})
    mode?: `${QueryMode}`;
    @Field(() => NestedStringFilter, {nullable:true})
    not?: InstanceType<typeof NestedStringFilter>;
}

@InputType()
export class StringNullableFilter {
    @Field(() => String, {nullable:true})
    equals?: string;
    @Field(() => [String], {nullable:true})
    in?: Array<string>;
    @Field(() => [String], {nullable:true})
    notIn?: Array<string>;
    @Field(() => String, {nullable:true})
    lt?: string;
    @Field(() => String, {nullable:true})
    lte?: string;
    @Field(() => String, {nullable:true})
    gt?: string;
    @Field(() => String, {nullable:true})
    gte?: string;
    @Field(() => String, {nullable:true})
    contains?: string;
    @Field(() => String, {nullable:true})
    startsWith?: string;
    @Field(() => String, {nullable:true})
    endsWith?: string;
    @Field(() => QueryMode, {nullable:true})
    mode?: `${QueryMode}`;
    @Field(() => NestedStringNullableFilter, {nullable:true})
    not?: InstanceType<typeof NestedStringNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class StringNullableListFilter {
    @Field(() => [String], {nullable:true})
    equals?: Array<string>;
    @Field(() => String, {nullable:true})
    has?: string;
    @Field(() => [String], {nullable:true})
    hasEvery?: Array<string>;
    @Field(() => [String], {nullable:true})
    hasSome?: Array<string>;
    @Field(() => Boolean, {nullable:true})
    isEmpty?: boolean;
}

@InputType()
export class StringNullableWithAggregatesFilter {
    @Field(() => String, {nullable:true})
    equals?: string;
    @Field(() => [String], {nullable:true})
    in?: Array<string>;
    @Field(() => [String], {nullable:true})
    notIn?: Array<string>;
    @Field(() => String, {nullable:true})
    lt?: string;
    @Field(() => String, {nullable:true})
    lte?: string;
    @Field(() => String, {nullable:true})
    gt?: string;
    @Field(() => String, {nullable:true})
    gte?: string;
    @Field(() => String, {nullable:true})
    contains?: string;
    @Field(() => String, {nullable:true})
    startsWith?: string;
    @Field(() => String, {nullable:true})
    endsWith?: string;
    @Field(() => QueryMode, {nullable:true})
    mode?: `${QueryMode}`;
    @Field(() => NestedStringNullableWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedStringNullableWithAggregatesFilter>;
    @Field(() => NestedIntNullableFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntNullableFilter>;
    @Field(() => NestedStringNullableFilter, {nullable:true})
    _min?: InstanceType<typeof NestedStringNullableFilter>;
    @Field(() => NestedStringNullableFilter, {nullable:true})
    _max?: InstanceType<typeof NestedStringNullableFilter>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class StringWithAggregatesFilter {
    @Field(() => String, {nullable:true})
    equals?: string;
    @Field(() => [String], {nullable:true})
    in?: Array<string>;
    @Field(() => [String], {nullable:true})
    notIn?: Array<string>;
    @Field(() => String, {nullable:true})
    lt?: string;
    @Field(() => String, {nullable:true})
    lte?: string;
    @Field(() => String, {nullable:true})
    gt?: string;
    @Field(() => String, {nullable:true})
    gte?: string;
    @Field(() => String, {nullable:true})
    contains?: string;
    @Field(() => String, {nullable:true})
    startsWith?: string;
    @Field(() => String, {nullable:true})
    endsWith?: string;
    @Field(() => QueryMode, {nullable:true})
    mode?: `${QueryMode}`;
    @Field(() => NestedStringWithAggregatesFilter, {nullable:true})
    not?: InstanceType<typeof NestedStringWithAggregatesFilter>;
    @Field(() => NestedIntFilter, {nullable:true})
    _count?: InstanceType<typeof NestedIntFilter>;
    @Field(() => NestedStringFilter, {nullable:true})
    _min?: InstanceType<typeof NestedStringFilter>;
    @Field(() => NestedStringFilter, {nullable:true})
    _max?: InstanceType<typeof NestedStringFilter>;
}

@InputType()
export class SupportMessageCompositeListFilter {
    @Field(() => [SupportMessageObjectEqualityInput], {nullable:true})
    equals?: Array<SupportMessageObjectEqualityInput>;
    @Field(() => SupportMessageWhereInput, {nullable:true})
    every?: InstanceType<typeof SupportMessageWhereInput>;
    @Field(() => SupportMessageWhereInput, {nullable:true})
    some?: InstanceType<typeof SupportMessageWhereInput>;
    @Field(() => SupportMessageWhereInput, {nullable:true})
    none?: InstanceType<typeof SupportMessageWhereInput>;
    @Field(() => Boolean, {nullable:true})
    isEmpty?: boolean;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class SupportMessageDeleteManyInput {
    @Field(() => SupportMessageWhereInput, {nullable:false})
    @Type(() => SupportMessageWhereInput)
    where!: InstanceType<typeof SupportMessageWhereInput>;
}

@InputType()
export class SupportMessageListCreateEnvelopeInput {
    @Field(() => [SupportMessageCreateInput], {nullable:true})
    @Type(() => SupportMessageCreateInput)
    set?: Array<SupportMessageCreateInput>;
}

@InputType()
export class SupportMessageListUpdateEnvelopeInput {
    @Field(() => [SupportMessageCreateInput], {nullable:true})
    @Type(() => SupportMessageCreateInput)
    set?: Array<SupportMessageCreateInput>;
    @Field(() => [SupportMessageCreateInput], {nullable:true})
    push?: Array<SupportMessageCreateInput>;
    @Field(() => SupportMessageUpdateManyInput, {nullable:true})
    @Type(() => SupportMessageUpdateManyInput)
    updateMany?: InstanceType<typeof SupportMessageUpdateManyInput>;
    @Field(() => SupportMessageDeleteManyInput, {nullable:true})
    @Type(() => SupportMessageDeleteManyInput)
    deleteMany?: InstanceType<typeof SupportMessageDeleteManyInput>;
}

@InputType()
export class SupportMessageObjectEqualityInput {
    @Field(() => String, {nullable:false})
    id!: string;
    @Field(() => SupportTicketParticipant, {nullable:false})
    sender!: `${SupportTicketParticipant}`;
    @Field(() => String, {nullable:false})
    text!: string;
    @Field(() => Date, {nullable:false})
    createdAt!: Date | string;
}

@InputType()
export class SystemNotificationPayloadCompositeFilter {
    @Field(() => SystemNotificationPayloadObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof SystemNotificationPayloadObjectEqualityInput>;
    @Field(() => SystemNotificationPayloadWhereInput, {nullable:true})
    is?: InstanceType<typeof SystemNotificationPayloadWhereInput>;
    @Field(() => SystemNotificationPayloadWhereInput, {nullable:true})
    isNot?: InstanceType<typeof SystemNotificationPayloadWhereInput>;
}

@InputType()
export class SystemNotificationPayloadObjectEqualityInput {
    @Field(() => SystemNotificationType, {nullable:false})
    type!: `${SystemNotificationType}`;
    @Field(() => String, {nullable:true})
    conversationId?: string;
    @Field(() => String, {nullable:true})
    orderId?: string;
    @Field(() => String, {nullable:true})
    payoutID?: string;
    @Field(() => String, {nullable:true})
    userID?: string;
}

@InputType()
export class TextCampusChatPayloadCompositeFilter {
    @Field(() => TextCampusChatPayloadObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof TextCampusChatPayloadObjectEqualityInput>;
    @Field(() => TextCampusChatPayloadWhereInput, {nullable:true})
    is?: InstanceType<typeof TextCampusChatPayloadWhereInput>;
    @Field(() => TextCampusChatPayloadWhereInput, {nullable:true})
    isNot?: InstanceType<typeof TextCampusChatPayloadWhereInput>;
}

@InputType()
export class TextCampusChatPayloadObjectEqualityInput {
    @Field(() => String, {nullable:true})
    title?: string;
    @Field(() => String, {nullable:false})
    text!: string;
}

@ArgsType()
export class UpdateManyDmMessageTypeArgs {
    @Field(() => DMMessageTypeUpdateManyMutationInput, {nullable:false})
    @Type(() => DMMessageTypeUpdateManyMutationInput)
    data!: InstanceType<typeof DMMessageTypeUpdateManyMutationInput>;
    @Field(() => DMMessageTypeWhereInput, {nullable:true})
    @Type(() => DMMessageTypeWhereInput)
    where?: InstanceType<typeof DMMessageTypeWhereInput>;
}

@ArgsType()
export class UpdateManyPersonalDmArgs {
    @Field(() => PersonalDMUpdateManyMutationInput, {nullable:false})
    @Type(() => PersonalDMUpdateManyMutationInput)
    data!: InstanceType<typeof PersonalDMUpdateManyMutationInput>;
    @Field(() => PersonalDMWhereInput, {nullable:true})
    @Type(() => PersonalDMWhereInput)
    where?: InstanceType<typeof PersonalDMWhereInput>;
}

@ArgsType()
export class UpdateOneDmMessageTypeArgs {
    @Field(() => DMMessageTypeUpdateInput, {nullable:false})
    @Type(() => DMMessageTypeUpdateInput)
    data!: InstanceType<typeof DMMessageTypeUpdateInput>;
    @Field(() => DMMessageTypeWhereUniqueInput, {nullable:false})
    @Type(() => DMMessageTypeWhereUniqueInput)
    where!: InstanceType<typeof DMMessageTypeWhereUniqueInput>;
}

@ArgsType()
export class UpdateOnePersonalDmArgs {
    @Field(() => PersonalDMUpdateInput, {nullable:false})
    @Type(() => PersonalDMUpdateInput)
    data!: InstanceType<typeof PersonalDMUpdateInput>;
    @Field(() => PersonalDMWhereUniqueInput, {nullable:false})
    @Type(() => PersonalDMWhereUniqueInput)
    where!: InstanceType<typeof PersonalDMWhereUniqueInput>;
}

@ArgsType()
export class UpsertOneDmMessageTypeArgs {
    @Field(() => DMMessageTypeWhereUniqueInput, {nullable:false})
    @Type(() => DMMessageTypeWhereUniqueInput)
    where!: InstanceType<typeof DMMessageTypeWhereUniqueInput>;
    @Field(() => DMMessageTypeCreateInput, {nullable:false})
    @Type(() => DMMessageTypeCreateInput)
    create!: InstanceType<typeof DMMessageTypeCreateInput>;
    @Field(() => DMMessageTypeUpdateInput, {nullable:false})
    @Type(() => DMMessageTypeUpdateInput)
    update!: InstanceType<typeof DMMessageTypeUpdateInput>;
}

@ArgsType()
export class UpsertOnePersonalDmArgs {
    @Field(() => PersonalDMWhereUniqueInput, {nullable:false})
    @Type(() => PersonalDMWhereUniqueInput)
    where!: InstanceType<typeof PersonalDMWhereUniqueInput>;
    @Field(() => PersonalDMCreateInput, {nullable:false})
    @Type(() => PersonalDMCreateInput)
    create!: InstanceType<typeof PersonalDMCreateInput>;
    @Field(() => PersonalDMUpdateInput, {nullable:false})
    @Type(() => PersonalDMUpdateInput)
    update!: InstanceType<typeof PersonalDMUpdateInput>;
}

@InputType()
export class UserSessionCompositeListFilter {
    @Field(() => [UserSessionObjectEqualityInput], {nullable:true})
    equals?: Array<UserSessionObjectEqualityInput>;
    @Field(() => UserSessionWhereInput, {nullable:true})
    every?: InstanceType<typeof UserSessionWhereInput>;
    @Field(() => UserSessionWhereInput, {nullable:true})
    some?: InstanceType<typeof UserSessionWhereInput>;
    @Field(() => UserSessionWhereInput, {nullable:true})
    none?: InstanceType<typeof UserSessionWhereInput>;
    @Field(() => Boolean, {nullable:true})
    isEmpty?: boolean;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class UserSessionDeleteManyInput {
    @Field(() => UserSessionWhereInput, {nullable:false})
    @Type(() => UserSessionWhereInput)
    where!: InstanceType<typeof UserSessionWhereInput>;
}

@InputType()
export class UserSessionListCreateEnvelopeInput {
    @Field(() => [UserSessionCreateInput], {nullable:true})
    @Type(() => UserSessionCreateInput)
    set?: Array<UserSessionCreateInput>;
}

@InputType()
export class UserSessionListUpdateEnvelopeInput {
    @Field(() => [UserSessionCreateInput], {nullable:true})
    @Type(() => UserSessionCreateInput)
    set?: Array<UserSessionCreateInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    push?: Array<UserSessionCreateInput>;
    @Field(() => UserSessionUpdateManyInput, {nullable:true})
    @Type(() => UserSessionUpdateManyInput)
    updateMany?: InstanceType<typeof UserSessionUpdateManyInput>;
    @Field(() => UserSessionDeleteManyInput, {nullable:true})
    @Type(() => UserSessionDeleteManyInput)
    deleteMany?: InstanceType<typeof UserSessionDeleteManyInput>;
}

@InputType()
export class UserSessionObjectEqualityInput {
    @Field(() => String, {nullable:false})
    token!: string;
    @Field(() => String, {nullable:true})
    pushToken?: string;
    @Field(() => String, {nullable:false})
    deviceModel!: string;
    @Field(() => Platform, {nullable:false})
    platform!: `${Platform}`;
    @Field(() => Boolean, {nullable:false})
    valid!: boolean;
    @Field(() => Date, {nullable:false})
    started!: Date | string;
    @Field(() => Date, {nullable:false})
    lastSeen!: Date | string;
}

@InputType()
export class UserStripeNullableCompositeFilter {
    @Field(() => UserStripeObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof UserStripeObjectEqualityInput>;
    @Field(() => UserStripeWhereInput, {nullable:true})
    is?: InstanceType<typeof UserStripeWhereInput>;
    @Field(() => UserStripeWhereInput, {nullable:true})
    isNot?: InstanceType<typeof UserStripeWhereInput>;
    @Field(() => Boolean, {nullable:true})
    isSet?: boolean;
}

@InputType()
export class UserStripeNullableCreateEnvelopeInput {
    @Field(() => UserStripeCreateInput, {nullable:true})
    @Type(() => UserStripeCreateInput)
    set?: InstanceType<typeof UserStripeCreateInput>;
}

@InputType()
export class UserStripeNullableUpdateEnvelopeInput {
    @Field(() => UserStripeCreateInput, {nullable:true})
    @Type(() => UserStripeCreateInput)
    set?: InstanceType<typeof UserStripeCreateInput>;
    @Field(() => UserStripeUpsertInput, {nullable:true})
    @Type(() => UserStripeUpsertInput)
    upsert?: InstanceType<typeof UserStripeUpsertInput>;
    @Field(() => Boolean, {nullable:true})
    unset?: boolean;
}

@InputType()
export class UserStripeObjectEqualityInput {
    @Field(() => String, {nullable:true})
    customerId?: string;
    @Field(() => String, {nullable:true})
    expressAccountId?: string;
    @Field(() => Boolean, {nullable:true})
    onboardingComplete?: boolean;
}

@InputType()
export class UserStripeUpsertInput {
    @Field(() => UserStripeCreateInput, {nullable:false})
    @Type(() => UserStripeCreateInput)
    set!: InstanceType<typeof UserStripeCreateInput>;
    @Field(() => UserStripeUpdateInput, {nullable:false})
    @Type(() => UserStripeUpdateInput)
    update!: InstanceType<typeof UserStripeUpdateInput>;
}

@ArgsType()
export class CreateManyPrivacyPolicyArgs {
    @Field(() => [PrivacyPolicyCreateManyInput], {nullable:false})
    @Type(() => PrivacyPolicyCreateManyInput)
    data!: Array<PrivacyPolicyCreateManyInput>;
}

@ArgsType()
export class CreateOnePrivacyPolicyArgs {
    @Field(() => PrivacyPolicyCreateInput, {nullable:false})
    @Type(() => PrivacyPolicyCreateInput)
    data!: InstanceType<typeof PrivacyPolicyCreateInput>;
}

@ArgsType()
export class DeleteManyPrivacyPolicyArgs {
    @Field(() => PrivacyPolicyWhereInput, {nullable:true})
    @Type(() => PrivacyPolicyWhereInput)
    where?: InstanceType<typeof PrivacyPolicyWhereInput>;
}

@ArgsType()
export class DeleteOnePrivacyPolicyArgs {
    @Field(() => PrivacyPolicyWhereUniqueInput, {nullable:false})
    @Type(() => PrivacyPolicyWhereUniqueInput)
    where!: Prisma.AtLeast<PrivacyPolicyWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindFirstPrivacyPolicyOrThrowArgs {
    @Field(() => PrivacyPolicyWhereInput, {nullable:true})
    @Type(() => PrivacyPolicyWhereInput)
    where?: InstanceType<typeof PrivacyPolicyWhereInput>;
    @Field(() => [PrivacyPolicyOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<PrivacyPolicyOrderByWithRelationInput>;
    @Field(() => PrivacyPolicyWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<PrivacyPolicyWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [PrivacyPolicyScalarFieldEnum], {nullable:true})
    distinct?: Array<`${PrivacyPolicyScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstPrivacyPolicyArgs {
    @Field(() => PrivacyPolicyWhereInput, {nullable:true})
    @Type(() => PrivacyPolicyWhereInput)
    where?: InstanceType<typeof PrivacyPolicyWhereInput>;
    @Field(() => [PrivacyPolicyOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<PrivacyPolicyOrderByWithRelationInput>;
    @Field(() => PrivacyPolicyWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<PrivacyPolicyWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [PrivacyPolicyScalarFieldEnum], {nullable:true})
    distinct?: Array<`${PrivacyPolicyScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyPrivacyPolicyArgs {
    @Field(() => PrivacyPolicyWhereInput, {nullable:true})
    @Type(() => PrivacyPolicyWhereInput)
    where?: InstanceType<typeof PrivacyPolicyWhereInput>;
    @Field(() => [PrivacyPolicyOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<PrivacyPolicyOrderByWithRelationInput>;
    @Field(() => PrivacyPolicyWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<PrivacyPolicyWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [PrivacyPolicyScalarFieldEnum], {nullable:true})
    distinct?: Array<`${PrivacyPolicyScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniquePrivacyPolicyOrThrowArgs {
    @Field(() => PrivacyPolicyWhereUniqueInput, {nullable:false})
    @Type(() => PrivacyPolicyWhereUniqueInput)
    where!: Prisma.AtLeast<PrivacyPolicyWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindUniquePrivacyPolicyArgs {
    @Field(() => PrivacyPolicyWhereUniqueInput, {nullable:false})
    @Type(() => PrivacyPolicyWhereUniqueInput)
    where!: Prisma.AtLeast<PrivacyPolicyWhereUniqueInput, 'id'>;
}

@ArgsType()
export class PrivacyPolicyAggregateArgs {
    @Field(() => PrivacyPolicyWhereInput, {nullable:true})
    @Type(() => PrivacyPolicyWhereInput)
    where?: InstanceType<typeof PrivacyPolicyWhereInput>;
    @Field(() => [PrivacyPolicyOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<PrivacyPolicyOrderByWithRelationInput>;
    @Field(() => PrivacyPolicyWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<PrivacyPolicyWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class PrivacyPolicyCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    question?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    answer?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class PrivacyPolicyCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    question!: string;
    @Field(() => String, {nullable:false})
    answer!: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class PrivacyPolicyCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    question!: string;
    @Field(() => String, {nullable:false})
    answer!: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@ArgsType()
export class PrivacyPolicyGroupByArgs {
    @Field(() => PrivacyPolicyWhereInput, {nullable:true})
    @Type(() => PrivacyPolicyWhereInput)
    where?: InstanceType<typeof PrivacyPolicyWhereInput>;
    @Field(() => [PrivacyPolicyOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<PrivacyPolicyOrderByWithAggregationInput>;
    @Field(() => [PrivacyPolicyScalarFieldEnum], {nullable:false})
    by!: Array<`${PrivacyPolicyScalarFieldEnum}`>;
    @Field(() => PrivacyPolicyScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof PrivacyPolicyScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class PrivacyPolicyMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    question?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    answer?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class PrivacyPolicyMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    question?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    answer?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class PrivacyPolicyOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    question?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    answer?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => PrivacyPolicyCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof PrivacyPolicyCountOrderByAggregateInput>;
    @Field(() => PrivacyPolicyMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof PrivacyPolicyMaxOrderByAggregateInput>;
    @Field(() => PrivacyPolicyMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof PrivacyPolicyMinOrderByAggregateInput>;
}

@InputType()
export class PrivacyPolicyOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    question?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    answer?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class PrivacyPolicyScalarWhereWithAggregatesInput {
    @Field(() => [PrivacyPolicyScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<PrivacyPolicyScalarWhereWithAggregatesInput>;
    @Field(() => [PrivacyPolicyScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<PrivacyPolicyScalarWhereWithAggregatesInput>;
    @Field(() => [PrivacyPolicyScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<PrivacyPolicyScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    question?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    answer?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
}

@InputType()
export class PrivacyPolicyUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    question!: string;
    @Field(() => String, {nullable:false})
    answer!: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class PrivacyPolicyUncheckedUpdateManyInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    question?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    answer?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class PrivacyPolicyUncheckedUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    question?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    answer?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class PrivacyPolicyUpdateManyMutationInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    question?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    answer?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class PrivacyPolicyUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    question?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    answer?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class PrivacyPolicyWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => [PrivacyPolicyWhereInput], {nullable:true})
    AND?: Array<PrivacyPolicyWhereInput>;
    @Field(() => [PrivacyPolicyWhereInput], {nullable:true})
    OR?: Array<PrivacyPolicyWhereInput>;
    @Field(() => [PrivacyPolicyWhereInput], {nullable:true})
    NOT?: Array<PrivacyPolicyWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    question?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    answer?: InstanceType<typeof StringFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@InputType()
export class PrivacyPolicyWhereInput {
    @Field(() => [PrivacyPolicyWhereInput], {nullable:true})
    AND?: Array<PrivacyPolicyWhereInput>;
    @Field(() => [PrivacyPolicyWhereInput], {nullable:true})
    OR?: Array<PrivacyPolicyWhereInput>;
    @Field(() => [PrivacyPolicyWhereInput], {nullable:true})
    NOT?: Array<PrivacyPolicyWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    question?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    answer?: InstanceType<typeof StringFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@ObjectType()
export class PrivacyPolicy {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    question!: string;
    @Field(() => String, {nullable:false})
    answer!: string;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
    @Field(() => Date, {nullable:false})
    updatedAt!: Date;
}

@ArgsType()
export class UpdateManyPrivacyPolicyArgs {
    @Field(() => PrivacyPolicyUpdateManyMutationInput, {nullable:false})
    @Type(() => PrivacyPolicyUpdateManyMutationInput)
    data!: InstanceType<typeof PrivacyPolicyUpdateManyMutationInput>;
    @Field(() => PrivacyPolicyWhereInput, {nullable:true})
    @Type(() => PrivacyPolicyWhereInput)
    where?: InstanceType<typeof PrivacyPolicyWhereInput>;
}

@ArgsType()
export class UpdateOnePrivacyPolicyArgs {
    @Field(() => PrivacyPolicyUpdateInput, {nullable:false})
    @Type(() => PrivacyPolicyUpdateInput)
    data!: InstanceType<typeof PrivacyPolicyUpdateInput>;
    @Field(() => PrivacyPolicyWhereUniqueInput, {nullable:false})
    @Type(() => PrivacyPolicyWhereUniqueInput)
    where!: Prisma.AtLeast<PrivacyPolicyWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpsertOnePrivacyPolicyArgs {
    @Field(() => PrivacyPolicyWhereUniqueInput, {nullable:false})
    @Type(() => PrivacyPolicyWhereUniqueInput)
    where!: Prisma.AtLeast<PrivacyPolicyWhereUniqueInput, 'id'>;
    @Field(() => PrivacyPolicyCreateInput, {nullable:false})
    @Type(() => PrivacyPolicyCreateInput)
    create!: InstanceType<typeof PrivacyPolicyCreateInput>;
    @Field(() => PrivacyPolicyUpdateInput, {nullable:false})
    @Type(() => PrivacyPolicyUpdateInput)
    update!: InstanceType<typeof PrivacyPolicyUpdateInput>;
}

@InputType()
export class ProductBubbleCreateEnvelopeInput {
    @Field(() => ProductBubbleCreateInput, {nullable:true})
    @Type(() => ProductBubbleCreateInput)
    set?: InstanceType<typeof ProductBubbleCreateInput>;
}

@InputType()
export class ProductBubbleCreateInput {
    @Field(() => String, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => String, {nullable:false})
    description!: string;
    @Field(() => String, {nullable:false})
    mediaType!: string;
}

@InputType()
export class ProductBubbleOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    image?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    title?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    description?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    mediaType?: `${SortOrder}`;
}

@InputType()
export class ProductBubbleUpdateEnvelopeInput {
    @Field(() => ProductBubbleCreateInput, {nullable:true})
    @Type(() => ProductBubbleCreateInput)
    set?: InstanceType<typeof ProductBubbleCreateInput>;
    @Field(() => ProductBubbleUpdateInput, {nullable:true})
    @Type(() => ProductBubbleUpdateInput)
    update?: InstanceType<typeof ProductBubbleUpdateInput>;
}

@InputType()
export class ProductBubbleUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    mediaType?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}

@InputType()
export class ProductBubbleWhereInput {
    @Field(() => [ProductBubbleWhereInput], {nullable:true})
    AND?: Array<ProductBubbleWhereInput>;
    @Field(() => [ProductBubbleWhereInput], {nullable:true})
    OR?: Array<ProductBubbleWhereInput>;
    @Field(() => [ProductBubbleWhereInput], {nullable:true})
    NOT?: Array<ProductBubbleWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    image?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    title?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    description?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    mediaType?: InstanceType<typeof StringFilter>;
}

@ObjectType()
export class ProductBubble {
    @Field(() => String, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => String, {nullable:false})
    description!: string;
    @Field(() => String, {nullable:false})
    mediaType!: string;
}

@ArgsType()
export class CreateManyProductCategoryArgs {
    @Field(() => [ProductCategoryCreateManyInput], {nullable:false})
    @Type(() => ProductCategoryCreateManyInput)
    data!: Array<ProductCategoryCreateManyInput>;
}

@ArgsType()
export class CreateOneProductCategoryArgs {
    @Field(() => ProductCategoryCreateInput, {nullable:false})
    @Type(() => ProductCategoryCreateInput)
    data!: InstanceType<typeof ProductCategoryCreateInput>;
}

@ArgsType()
export class DeleteManyProductCategoryArgs {
    @Field(() => ProductCategoryWhereInput, {nullable:true})
    @Type(() => ProductCategoryWhereInput)
    where?: InstanceType<typeof ProductCategoryWhereInput>;
}

@ArgsType()
export class DeleteOneProductCategoryArgs {
    @Field(() => ProductCategoryWhereUniqueInput, {nullable:false})
    @Type(() => ProductCategoryWhereUniqueInput)
    where!: Prisma.AtLeast<ProductCategoryWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindFirstProductCategoryOrThrowArgs {
    @Field(() => ProductCategoryWhereInput, {nullable:true})
    @Type(() => ProductCategoryWhereInput)
    where?: InstanceType<typeof ProductCategoryWhereInput>;
    @Field(() => [ProductCategoryOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<ProductCategoryOrderByWithRelationInput>;
    @Field(() => ProductCategoryWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<ProductCategoryWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [ProductCategoryScalarFieldEnum], {nullable:true})
    distinct?: Array<`${ProductCategoryScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstProductCategoryArgs {
    @Field(() => ProductCategoryWhereInput, {nullable:true})
    @Type(() => ProductCategoryWhereInput)
    where?: InstanceType<typeof ProductCategoryWhereInput>;
    @Field(() => [ProductCategoryOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<ProductCategoryOrderByWithRelationInput>;
    @Field(() => ProductCategoryWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<ProductCategoryWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [ProductCategoryScalarFieldEnum], {nullable:true})
    distinct?: Array<`${ProductCategoryScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyProductCategoryArgs {
    @Field(() => ProductCategoryWhereInput, {nullable:true})
    @Type(() => ProductCategoryWhereInput)
    where?: InstanceType<typeof ProductCategoryWhereInput>;
    @Field(() => [ProductCategoryOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<ProductCategoryOrderByWithRelationInput>;
    @Field(() => ProductCategoryWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<ProductCategoryWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [ProductCategoryScalarFieldEnum], {nullable:true})
    distinct?: Array<`${ProductCategoryScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniqueProductCategoryOrThrowArgs {
    @Field(() => ProductCategoryWhereUniqueInput, {nullable:false})
    @Type(() => ProductCategoryWhereUniqueInput)
    where!: Prisma.AtLeast<ProductCategoryWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindUniqueProductCategoryArgs {
    @Field(() => ProductCategoryWhereUniqueInput, {nullable:false})
    @Type(() => ProductCategoryWhereUniqueInput)
    where!: Prisma.AtLeast<ProductCategoryWhereUniqueInput, 'id'>;
}

@ArgsType()
export class ProductCategoryAggregateArgs {
    @Field(() => ProductCategoryWhereInput, {nullable:true})
    @Type(() => ProductCategoryWhereInput)
    where?: InstanceType<typeof ProductCategoryWhereInput>;
    @Field(() => [ProductCategoryOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<ProductCategoryOrderByWithRelationInput>;
    @Field(() => ProductCategoryWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<ProductCategoryWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class ProductCategoryCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    image?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    parentId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    preferredGender?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    shippable?: `${SortOrder}`;
}

@InputType()
export class ProductCategoryCreateManyParentInputEnvelope {
    @Field(() => [ProductCategoryCreateManyParentInput], {nullable:false})
    @Type(() => ProductCategoryCreateManyParentInput)
    data!: Array<ProductCategoryCreateManyParentInput>;
}

@InputType()
export class ProductCategoryCreateManyParentInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => FeaturedProductCategoryNullableCreateEnvelopeInput, {nullable:true})
    featured?: InstanceType<typeof FeaturedProductCategoryNullableCreateEnvelopeInput>;
    @Field(() => [ProductCategoryAppFiltersCreateInput], {nullable:true})
    filters?: Array<ProductCategoryAppFiltersCreateInput>;
    @Field(() => PreferredGender, {nullable:true})
    preferredGender?: `${PreferredGender}`;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Boolean, {nullable:true})
    shippable?: boolean;
}

@InputType()
export class ProductCategoryCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => String, {nullable:true})
    parentId?: string;
    @Field(() => FeaturedProductCategoryNullableCreateEnvelopeInput, {nullable:true})
    featured?: InstanceType<typeof FeaturedProductCategoryNullableCreateEnvelopeInput>;
    @Field(() => [ProductCategoryAppFiltersCreateInput], {nullable:true})
    filters?: Array<ProductCategoryAppFiltersCreateInput>;
    @Field(() => PreferredGender, {nullable:true})
    preferredGender?: `${PreferredGender}`;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Boolean, {nullable:true})
    shippable?: boolean;
}

@InputType()
export class ProductCategoryCreateNestedManyWithoutParentInput {
    @Field(() => [ProductCategoryCreateWithoutParentInput], {nullable:true})
    @Type(() => ProductCategoryCreateWithoutParentInput)
    create?: Array<ProductCategoryCreateWithoutParentInput>;
    @Field(() => [ProductCategoryCreateOrConnectWithoutParentInput], {nullable:true})
    @Type(() => ProductCategoryCreateOrConnectWithoutParentInput)
    connectOrCreate?: Array<ProductCategoryCreateOrConnectWithoutParentInput>;
    @Field(() => ProductCategoryCreateManyParentInputEnvelope, {nullable:true})
    @Type(() => ProductCategoryCreateManyParentInputEnvelope)
    createMany?: InstanceType<typeof ProductCategoryCreateManyParentInputEnvelope>;
    @Field(() => [ProductCategoryWhereUniqueInput], {nullable:true})
    @Type(() => ProductCategoryWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ProductCategoryWhereUniqueInput, 'id'>>;
}

@InputType()
export class ProductCategoryCreateNestedOneWithoutChildrenInput {
    @Field(() => ProductCategoryCreateWithoutChildrenInput, {nullable:true})
    @Type(() => ProductCategoryCreateWithoutChildrenInput)
    create?: InstanceType<typeof ProductCategoryCreateWithoutChildrenInput>;
    @Field(() => ProductCategoryCreateOrConnectWithoutChildrenInput, {nullable:true})
    @Type(() => ProductCategoryCreateOrConnectWithoutChildrenInput)
    connectOrCreate?: InstanceType<typeof ProductCategoryCreateOrConnectWithoutChildrenInput>;
    @Field(() => ProductCategoryWhereUniqueInput, {nullable:true})
    @Type(() => ProductCategoryWhereUniqueInput)
    connect?: Prisma.AtLeast<ProductCategoryWhereUniqueInput, 'id'>;
}

@InputType()
export class ProductCategoryCreateNestedOneWithoutProductListingsInput {
    @Field(() => ProductCategoryCreateWithoutProductListingsInput, {nullable:true})
    @Type(() => ProductCategoryCreateWithoutProductListingsInput)
    create?: InstanceType<typeof ProductCategoryCreateWithoutProductListingsInput>;
    @Field(() => ProductCategoryCreateOrConnectWithoutProductListingsInput, {nullable:true})
    @Type(() => ProductCategoryCreateOrConnectWithoutProductListingsInput)
    connectOrCreate?: InstanceType<typeof ProductCategoryCreateOrConnectWithoutProductListingsInput>;
    @Field(() => ProductCategoryWhereUniqueInput, {nullable:true})
    @Type(() => ProductCategoryWhereUniqueInput)
    connect?: Prisma.AtLeast<ProductCategoryWhereUniqueInput, 'id'>;
}

@InputType()
export class ProductCategoryCreateOrConnectWithoutChildrenInput {
    @Field(() => ProductCategoryWhereUniqueInput, {nullable:false})
    @Type(() => ProductCategoryWhereUniqueInput)
    where!: Prisma.AtLeast<ProductCategoryWhereUniqueInput, 'id'>;
    @Field(() => ProductCategoryCreateWithoutChildrenInput, {nullable:false})
    @Type(() => ProductCategoryCreateWithoutChildrenInput)
    create!: InstanceType<typeof ProductCategoryCreateWithoutChildrenInput>;
}

@InputType()
export class ProductCategoryCreateOrConnectWithoutParentInput {
    @Field(() => ProductCategoryWhereUniqueInput, {nullable:false})
    @Type(() => ProductCategoryWhereUniqueInput)
    where!: Prisma.AtLeast<ProductCategoryWhereUniqueInput, 'id'>;
    @Field(() => ProductCategoryCreateWithoutParentInput, {nullable:false})
    @Type(() => ProductCategoryCreateWithoutParentInput)
    create!: InstanceType<typeof ProductCategoryCreateWithoutParentInput>;
}

@InputType()
export class ProductCategoryCreateOrConnectWithoutProductListingsInput {
    @Field(() => ProductCategoryWhereUniqueInput, {nullable:false})
    @Type(() => ProductCategoryWhereUniqueInput)
    where!: Prisma.AtLeast<ProductCategoryWhereUniqueInput, 'id'>;
    @Field(() => ProductCategoryCreateWithoutProductListingsInput, {nullable:false})
    @Type(() => ProductCategoryCreateWithoutProductListingsInput)
    create!: InstanceType<typeof ProductCategoryCreateWithoutProductListingsInput>;
}

@InputType()
export class ProductCategoryCreateWithoutChildrenInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => FeaturedProductCategoryNullableCreateEnvelopeInput, {nullable:true})
    featured?: InstanceType<typeof FeaturedProductCategoryNullableCreateEnvelopeInput>;
    @Field(() => [ProductCategoryAppFiltersCreateInput], {nullable:true})
    filters?: Array<ProductCategoryAppFiltersCreateInput>;
    @Field(() => PreferredGender, {nullable:true})
    preferredGender?: `${PreferredGender}`;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Boolean, {nullable:true})
    shippable?: boolean;
    @Field(() => ProductCategoryCreateNestedOneWithoutChildrenInput, {nullable:true})
    parent?: InstanceType<typeof ProductCategoryCreateNestedOneWithoutChildrenInput>;
    @Field(() => ProductListingCreateNestedManyWithoutCategoryInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingCreateNestedManyWithoutCategoryInput>;
}

@InputType()
export class ProductCategoryCreateWithoutParentInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => FeaturedProductCategoryNullableCreateEnvelopeInput, {nullable:true})
    featured?: InstanceType<typeof FeaturedProductCategoryNullableCreateEnvelopeInput>;
    @Field(() => [ProductCategoryAppFiltersCreateInput], {nullable:true})
    filters?: Array<ProductCategoryAppFiltersCreateInput>;
    @Field(() => PreferredGender, {nullable:true})
    preferredGender?: `${PreferredGender}`;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Boolean, {nullable:true})
    shippable?: boolean;
    @Field(() => ProductCategoryCreateNestedManyWithoutParentInput, {nullable:true})
    children?: InstanceType<typeof ProductCategoryCreateNestedManyWithoutParentInput>;
    @Field(() => ProductListingCreateNestedManyWithoutCategoryInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingCreateNestedManyWithoutCategoryInput>;
}

@InputType()
export class ProductCategoryCreateWithoutProductListingsInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => FeaturedProductCategoryNullableCreateEnvelopeInput, {nullable:true})
    featured?: InstanceType<typeof FeaturedProductCategoryNullableCreateEnvelopeInput>;
    @Field(() => [ProductCategoryAppFiltersCreateInput], {nullable:true})
    filters?: Array<ProductCategoryAppFiltersCreateInput>;
    @Field(() => PreferredGender, {nullable:true})
    preferredGender?: `${PreferredGender}`;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Boolean, {nullable:true})
    shippable?: boolean;
    @Field(() => ProductCategoryCreateNestedOneWithoutChildrenInput, {nullable:true})
    parent?: InstanceType<typeof ProductCategoryCreateNestedOneWithoutChildrenInput>;
    @Field(() => ProductCategoryCreateNestedManyWithoutParentInput, {nullable:true})
    children?: InstanceType<typeof ProductCategoryCreateNestedManyWithoutParentInput>;
}

@InputType()
export class ProductCategoryCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => FeaturedProductCategoryNullableCreateEnvelopeInput, {nullable:true})
    featured?: InstanceType<typeof FeaturedProductCategoryNullableCreateEnvelopeInput>;
    @Field(() => [ProductCategoryAppFiltersCreateInput], {nullable:true})
    filters?: Array<ProductCategoryAppFiltersCreateInput>;
    @Field(() => PreferredGender, {nullable:true})
    preferredGender?: `${PreferredGender}`;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Boolean, {nullable:true})
    shippable?: boolean;
    @Field(() => ProductCategoryCreateNestedOneWithoutChildrenInput, {nullable:true})
    parent?: InstanceType<typeof ProductCategoryCreateNestedOneWithoutChildrenInput>;
    @Field(() => ProductCategoryCreateNestedManyWithoutParentInput, {nullable:true})
    children?: InstanceType<typeof ProductCategoryCreateNestedManyWithoutParentInput>;
    @Field(() => ProductListingCreateNestedManyWithoutCategoryInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingCreateNestedManyWithoutCategoryInput>;
}

@ArgsType()
export class ProductCategoryGroupByArgs {
    @Field(() => ProductCategoryWhereInput, {nullable:true})
    @Type(() => ProductCategoryWhereInput)
    where?: InstanceType<typeof ProductCategoryWhereInput>;
    @Field(() => [ProductCategoryOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<ProductCategoryOrderByWithAggregationInput>;
    @Field(() => [ProductCategoryScalarFieldEnum], {nullable:false})
    by!: Array<`${ProductCategoryScalarFieldEnum}`>;
    @Field(() => ProductCategoryScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof ProductCategoryScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class ProductCategoryListRelationFilter {
    @Field(() => ProductCategoryWhereInput, {nullable:true})
    every?: InstanceType<typeof ProductCategoryWhereInput>;
    @Field(() => ProductCategoryWhereInput, {nullable:true})
    some?: InstanceType<typeof ProductCategoryWhereInput>;
    @Field(() => ProductCategoryWhereInput, {nullable:true})
    none?: InstanceType<typeof ProductCategoryWhereInput>;
}

@InputType()
export class ProductCategoryMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    image?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    parentId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    preferredGender?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    shippable?: `${SortOrder}`;
}

@InputType()
export class ProductCategoryMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    image?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    parentId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    preferredGender?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    shippable?: `${SortOrder}`;
}

@InputType()
export class ProductCategoryNullableRelationFilter {
    @Field(() => ProductCategoryWhereInput, {nullable:true})
    is?: InstanceType<typeof ProductCategoryWhereInput>;
    @Field(() => ProductCategoryWhereInput, {nullable:true})
    isNot?: InstanceType<typeof ProductCategoryWhereInput>;
}

@InputType()
export class ProductCategoryOrderByRelationAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    _count?: `${SortOrder}`;
}

@InputType()
export class ProductCategoryOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    image?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    parentId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    preferredGender?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    shippable?: `${SortOrder}`;
    @Field(() => ProductCategoryCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof ProductCategoryCountOrderByAggregateInput>;
    @Field(() => ProductCategoryMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof ProductCategoryMaxOrderByAggregateInput>;
    @Field(() => ProductCategoryMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof ProductCategoryMinOrderByAggregateInput>;
}

@InputType()
export class ProductCategoryOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    image?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    parentId?: `${SortOrder}`;
    @Field(() => FeaturedProductCategoryOrderByInput, {nullable:true})
    featured?: InstanceType<typeof FeaturedProductCategoryOrderByInput>;
    @Field(() => ProductCategoryAppFiltersOrderByCompositeAggregateInput, {nullable:true})
    filters?: InstanceType<typeof ProductCategoryAppFiltersOrderByCompositeAggregateInput>;
    @Field(() => SortOrder, {nullable:true})
    preferredGender?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    shippable?: `${SortOrder}`;
    @Field(() => ProductCategoryOrderByWithRelationInput, {nullable:true})
    parent?: InstanceType<typeof ProductCategoryOrderByWithRelationInput>;
    @Field(() => ProductCategoryOrderByRelationAggregateInput, {nullable:true})
    children?: InstanceType<typeof ProductCategoryOrderByRelationAggregateInput>;
    @Field(() => ProductListingOrderByRelationAggregateInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingOrderByRelationAggregateInput>;
}

@InputType()
export class ProductCategoryScalarWhereWithAggregatesInput {
    @Field(() => [ProductCategoryScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<ProductCategoryScalarWhereWithAggregatesInput>;
    @Field(() => [ProductCategoryScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<ProductCategoryScalarWhereWithAggregatesInput>;
    @Field(() => [ProductCategoryScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<ProductCategoryScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    name?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    image?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    parentId?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => EnumPreferredGenderNullableWithAggregatesFilter, {nullable:true})
    preferredGender?: InstanceType<typeof EnumPreferredGenderNullableWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => BoolWithAggregatesFilter, {nullable:true})
    active?: InstanceType<typeof BoolWithAggregatesFilter>;
    @Field(() => BoolWithAggregatesFilter, {nullable:true})
    shippable?: InstanceType<typeof BoolWithAggregatesFilter>;
}

@InputType()
export class ProductCategoryScalarWhereInput {
    @Field(() => [ProductCategoryScalarWhereInput], {nullable:true})
    AND?: Array<ProductCategoryScalarWhereInput>;
    @Field(() => [ProductCategoryScalarWhereInput], {nullable:true})
    OR?: Array<ProductCategoryScalarWhereInput>;
    @Field(() => [ProductCategoryScalarWhereInput], {nullable:true})
    NOT?: Array<ProductCategoryScalarWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    name?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    image?: InstanceType<typeof StringFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    parentId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => EnumPreferredGenderNullableFilter, {nullable:true})
    preferredGender?: InstanceType<typeof EnumPreferredGenderNullableFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => BoolFilter, {nullable:true})
    active?: InstanceType<typeof BoolFilter>;
    @Field(() => BoolFilter, {nullable:true})
    shippable?: InstanceType<typeof BoolFilter>;
}

@InputType()
export class ProductCategoryUncheckedCreateNestedManyWithoutParentInput {
    @Field(() => [ProductCategoryCreateWithoutParentInput], {nullable:true})
    @Type(() => ProductCategoryCreateWithoutParentInput)
    create?: Array<ProductCategoryCreateWithoutParentInput>;
    @Field(() => [ProductCategoryCreateOrConnectWithoutParentInput], {nullable:true})
    @Type(() => ProductCategoryCreateOrConnectWithoutParentInput)
    connectOrCreate?: Array<ProductCategoryCreateOrConnectWithoutParentInput>;
    @Field(() => ProductCategoryCreateManyParentInputEnvelope, {nullable:true})
    @Type(() => ProductCategoryCreateManyParentInputEnvelope)
    createMany?: InstanceType<typeof ProductCategoryCreateManyParentInputEnvelope>;
    @Field(() => [ProductCategoryWhereUniqueInput], {nullable:true})
    @Type(() => ProductCategoryWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ProductCategoryWhereUniqueInput, 'id'>>;
}

@InputType()
export class ProductCategoryUncheckedCreateWithoutChildrenInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => String, {nullable:true})
    parentId?: string;
    @Field(() => FeaturedProductCategoryNullableCreateEnvelopeInput, {nullable:true})
    featured?: InstanceType<typeof FeaturedProductCategoryNullableCreateEnvelopeInput>;
    @Field(() => [ProductCategoryAppFiltersCreateInput], {nullable:true})
    filters?: Array<ProductCategoryAppFiltersCreateInput>;
    @Field(() => PreferredGender, {nullable:true})
    preferredGender?: `${PreferredGender}`;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Boolean, {nullable:true})
    shippable?: boolean;
    @Field(() => ProductListingUncheckedCreateNestedManyWithoutCategoryInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUncheckedCreateNestedManyWithoutCategoryInput>;
}

@InputType()
export class ProductCategoryUncheckedCreateWithoutParentInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => FeaturedProductCategoryNullableCreateEnvelopeInput, {nullable:true})
    featured?: InstanceType<typeof FeaturedProductCategoryNullableCreateEnvelopeInput>;
    @Field(() => [ProductCategoryAppFiltersCreateInput], {nullable:true})
    filters?: Array<ProductCategoryAppFiltersCreateInput>;
    @Field(() => PreferredGender, {nullable:true})
    preferredGender?: `${PreferredGender}`;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Boolean, {nullable:true})
    shippable?: boolean;
    @Field(() => ProductCategoryUncheckedCreateNestedManyWithoutParentInput, {nullable:true})
    children?: InstanceType<typeof ProductCategoryUncheckedCreateNestedManyWithoutParentInput>;
    @Field(() => ProductListingUncheckedCreateNestedManyWithoutCategoryInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUncheckedCreateNestedManyWithoutCategoryInput>;
}

@InputType()
export class ProductCategoryUncheckedCreateWithoutProductListingsInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => String, {nullable:true})
    parentId?: string;
    @Field(() => FeaturedProductCategoryNullableCreateEnvelopeInput, {nullable:true})
    featured?: InstanceType<typeof FeaturedProductCategoryNullableCreateEnvelopeInput>;
    @Field(() => [ProductCategoryAppFiltersCreateInput], {nullable:true})
    filters?: Array<ProductCategoryAppFiltersCreateInput>;
    @Field(() => PreferredGender, {nullable:true})
    preferredGender?: `${PreferredGender}`;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Boolean, {nullable:true})
    shippable?: boolean;
    @Field(() => ProductCategoryUncheckedCreateNestedManyWithoutParentInput, {nullable:true})
    children?: InstanceType<typeof ProductCategoryUncheckedCreateNestedManyWithoutParentInput>;
}

@InputType()
export class ProductCategoryUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => String, {nullable:true})
    parentId?: string;
    @Field(() => FeaturedProductCategoryNullableCreateEnvelopeInput, {nullable:true})
    featured?: InstanceType<typeof FeaturedProductCategoryNullableCreateEnvelopeInput>;
    @Field(() => [ProductCategoryAppFiltersCreateInput], {nullable:true})
    filters?: Array<ProductCategoryAppFiltersCreateInput>;
    @Field(() => PreferredGender, {nullable:true})
    preferredGender?: `${PreferredGender}`;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Boolean, {nullable:true})
    shippable?: boolean;
    @Field(() => ProductCategoryUncheckedCreateNestedManyWithoutParentInput, {nullable:true})
    children?: InstanceType<typeof ProductCategoryUncheckedCreateNestedManyWithoutParentInput>;
    @Field(() => ProductListingUncheckedCreateNestedManyWithoutCategoryInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUncheckedCreateNestedManyWithoutCategoryInput>;
}

@InputType()
export class ProductCategoryUncheckedUpdateManyWithoutParentNestedInput {
    @Field(() => [ProductCategoryCreateWithoutParentInput], {nullable:true})
    @Type(() => ProductCategoryCreateWithoutParentInput)
    create?: Array<ProductCategoryCreateWithoutParentInput>;
    @Field(() => [ProductCategoryCreateOrConnectWithoutParentInput], {nullable:true})
    @Type(() => ProductCategoryCreateOrConnectWithoutParentInput)
    connectOrCreate?: Array<ProductCategoryCreateOrConnectWithoutParentInput>;
    @Field(() => [ProductCategoryUpsertWithWhereUniqueWithoutParentInput], {nullable:true})
    @Type(() => ProductCategoryUpsertWithWhereUniqueWithoutParentInput)
    upsert?: Array<ProductCategoryUpsertWithWhereUniqueWithoutParentInput>;
    @Field(() => ProductCategoryCreateManyParentInputEnvelope, {nullable:true})
    @Type(() => ProductCategoryCreateManyParentInputEnvelope)
    createMany?: InstanceType<typeof ProductCategoryCreateManyParentInputEnvelope>;
    @Field(() => [ProductCategoryWhereUniqueInput], {nullable:true})
    @Type(() => ProductCategoryWhereUniqueInput)
    set?: Array<Prisma.AtLeast<ProductCategoryWhereUniqueInput, 'id'>>;
    @Field(() => [ProductCategoryWhereUniqueInput], {nullable:true})
    @Type(() => ProductCategoryWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<ProductCategoryWhereUniqueInput, 'id'>>;
    @Field(() => [ProductCategoryWhereUniqueInput], {nullable:true})
    @Type(() => ProductCategoryWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<ProductCategoryWhereUniqueInput, 'id'>>;
    @Field(() => [ProductCategoryWhereUniqueInput], {nullable:true})
    @Type(() => ProductCategoryWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ProductCategoryWhereUniqueInput, 'id'>>;
    @Field(() => [ProductCategoryUpdateWithWhereUniqueWithoutParentInput], {nullable:true})
    @Type(() => ProductCategoryUpdateWithWhereUniqueWithoutParentInput)
    update?: Array<ProductCategoryUpdateWithWhereUniqueWithoutParentInput>;
    @Field(() => [ProductCategoryUpdateManyWithWhereWithoutParentInput], {nullable:true})
    @Type(() => ProductCategoryUpdateManyWithWhereWithoutParentInput)
    updateMany?: Array<ProductCategoryUpdateManyWithWhereWithoutParentInput>;
    @Field(() => [ProductCategoryScalarWhereInput], {nullable:true})
    @Type(() => ProductCategoryScalarWhereInput)
    deleteMany?: Array<ProductCategoryScalarWhereInput>;
}

@InputType()
export class ProductCategoryUncheckedUpdateManyWithoutParentInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => FeaturedProductCategoryNullableUpdateEnvelopeInput, {nullable:true})
    featured?: InstanceType<typeof FeaturedProductCategoryNullableUpdateEnvelopeInput>;
    @Field(() => [ProductCategoryAppFiltersCreateInput], {nullable:true})
    filters?: Array<ProductCategoryAppFiltersCreateInput>;
    @Field(() => NullableEnumPreferredGenderFieldUpdateOperationsInput, {nullable:true})
    preferredGender?: InstanceType<typeof NullableEnumPreferredGenderFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    shippable?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
}

@InputType()
export class ProductCategoryUncheckedUpdateManyInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    parentId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => FeaturedProductCategoryNullableUpdateEnvelopeInput, {nullable:true})
    featured?: InstanceType<typeof FeaturedProductCategoryNullableUpdateEnvelopeInput>;
    @Field(() => [ProductCategoryAppFiltersCreateInput], {nullable:true})
    filters?: Array<ProductCategoryAppFiltersCreateInput>;
    @Field(() => NullableEnumPreferredGenderFieldUpdateOperationsInput, {nullable:true})
    preferredGender?: InstanceType<typeof NullableEnumPreferredGenderFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    shippable?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
}

@InputType()
export class ProductCategoryUncheckedUpdateWithoutChildrenInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    parentId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => FeaturedProductCategoryNullableUpdateEnvelopeInput, {nullable:true})
    featured?: InstanceType<typeof FeaturedProductCategoryNullableUpdateEnvelopeInput>;
    @Field(() => [ProductCategoryAppFiltersCreateInput], {nullable:true})
    filters?: Array<ProductCategoryAppFiltersCreateInput>;
    @Field(() => NullableEnumPreferredGenderFieldUpdateOperationsInput, {nullable:true})
    preferredGender?: InstanceType<typeof NullableEnumPreferredGenderFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    shippable?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => ProductListingUncheckedUpdateManyWithoutCategoryNestedInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUncheckedUpdateManyWithoutCategoryNestedInput>;
}

@InputType()
export class ProductCategoryUncheckedUpdateWithoutParentInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => FeaturedProductCategoryNullableUpdateEnvelopeInput, {nullable:true})
    featured?: InstanceType<typeof FeaturedProductCategoryNullableUpdateEnvelopeInput>;
    @Field(() => [ProductCategoryAppFiltersCreateInput], {nullable:true})
    filters?: Array<ProductCategoryAppFiltersCreateInput>;
    @Field(() => NullableEnumPreferredGenderFieldUpdateOperationsInput, {nullable:true})
    preferredGender?: InstanceType<typeof NullableEnumPreferredGenderFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    shippable?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => ProductCategoryUncheckedUpdateManyWithoutParentNestedInput, {nullable:true})
    children?: InstanceType<typeof ProductCategoryUncheckedUpdateManyWithoutParentNestedInput>;
    @Field(() => ProductListingUncheckedUpdateManyWithoutCategoryNestedInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUncheckedUpdateManyWithoutCategoryNestedInput>;
}

@InputType()
export class ProductCategoryUncheckedUpdateWithoutProductListingsInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    parentId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => FeaturedProductCategoryNullableUpdateEnvelopeInput, {nullable:true})
    featured?: InstanceType<typeof FeaturedProductCategoryNullableUpdateEnvelopeInput>;
    @Field(() => [ProductCategoryAppFiltersCreateInput], {nullable:true})
    filters?: Array<ProductCategoryAppFiltersCreateInput>;
    @Field(() => NullableEnumPreferredGenderFieldUpdateOperationsInput, {nullable:true})
    preferredGender?: InstanceType<typeof NullableEnumPreferredGenderFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    shippable?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => ProductCategoryUncheckedUpdateManyWithoutParentNestedInput, {nullable:true})
    children?: InstanceType<typeof ProductCategoryUncheckedUpdateManyWithoutParentNestedInput>;
}

@InputType()
export class ProductCategoryUncheckedUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    parentId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => FeaturedProductCategoryNullableUpdateEnvelopeInput, {nullable:true})
    featured?: InstanceType<typeof FeaturedProductCategoryNullableUpdateEnvelopeInput>;
    @Field(() => [ProductCategoryAppFiltersCreateInput], {nullable:true})
    filters?: Array<ProductCategoryAppFiltersCreateInput>;
    @Field(() => NullableEnumPreferredGenderFieldUpdateOperationsInput, {nullable:true})
    preferredGender?: InstanceType<typeof NullableEnumPreferredGenderFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    shippable?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => ProductCategoryUncheckedUpdateManyWithoutParentNestedInput, {nullable:true})
    children?: InstanceType<typeof ProductCategoryUncheckedUpdateManyWithoutParentNestedInput>;
    @Field(() => ProductListingUncheckedUpdateManyWithoutCategoryNestedInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUncheckedUpdateManyWithoutCategoryNestedInput>;
}

@InputType()
export class ProductCategoryUpdateManyMutationInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => FeaturedProductCategoryNullableUpdateEnvelopeInput, {nullable:true})
    featured?: InstanceType<typeof FeaturedProductCategoryNullableUpdateEnvelopeInput>;
    @Field(() => [ProductCategoryAppFiltersCreateInput], {nullable:true})
    filters?: Array<ProductCategoryAppFiltersCreateInput>;
    @Field(() => NullableEnumPreferredGenderFieldUpdateOperationsInput, {nullable:true})
    preferredGender?: InstanceType<typeof NullableEnumPreferredGenderFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    shippable?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
}

@InputType()
export class ProductCategoryUpdateManyWithWhereWithoutParentInput {
    @Field(() => ProductCategoryScalarWhereInput, {nullable:false})
    @Type(() => ProductCategoryScalarWhereInput)
    where!: InstanceType<typeof ProductCategoryScalarWhereInput>;
    @Field(() => ProductCategoryUpdateManyMutationInput, {nullable:false})
    @Type(() => ProductCategoryUpdateManyMutationInput)
    data!: InstanceType<typeof ProductCategoryUpdateManyMutationInput>;
}

@InputType()
export class ProductCategoryUpdateManyWithoutParentNestedInput {
    @Field(() => [ProductCategoryCreateWithoutParentInput], {nullable:true})
    @Type(() => ProductCategoryCreateWithoutParentInput)
    create?: Array<ProductCategoryCreateWithoutParentInput>;
    @Field(() => [ProductCategoryCreateOrConnectWithoutParentInput], {nullable:true})
    @Type(() => ProductCategoryCreateOrConnectWithoutParentInput)
    connectOrCreate?: Array<ProductCategoryCreateOrConnectWithoutParentInput>;
    @Field(() => [ProductCategoryUpsertWithWhereUniqueWithoutParentInput], {nullable:true})
    @Type(() => ProductCategoryUpsertWithWhereUniqueWithoutParentInput)
    upsert?: Array<ProductCategoryUpsertWithWhereUniqueWithoutParentInput>;
    @Field(() => ProductCategoryCreateManyParentInputEnvelope, {nullable:true})
    @Type(() => ProductCategoryCreateManyParentInputEnvelope)
    createMany?: InstanceType<typeof ProductCategoryCreateManyParentInputEnvelope>;
    @Field(() => [ProductCategoryWhereUniqueInput], {nullable:true})
    @Type(() => ProductCategoryWhereUniqueInput)
    set?: Array<Prisma.AtLeast<ProductCategoryWhereUniqueInput, 'id'>>;
    @Field(() => [ProductCategoryWhereUniqueInput], {nullable:true})
    @Type(() => ProductCategoryWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<ProductCategoryWhereUniqueInput, 'id'>>;
    @Field(() => [ProductCategoryWhereUniqueInput], {nullable:true})
    @Type(() => ProductCategoryWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<ProductCategoryWhereUniqueInput, 'id'>>;
    @Field(() => [ProductCategoryWhereUniqueInput], {nullable:true})
    @Type(() => ProductCategoryWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ProductCategoryWhereUniqueInput, 'id'>>;
    @Field(() => [ProductCategoryUpdateWithWhereUniqueWithoutParentInput], {nullable:true})
    @Type(() => ProductCategoryUpdateWithWhereUniqueWithoutParentInput)
    update?: Array<ProductCategoryUpdateWithWhereUniqueWithoutParentInput>;
    @Field(() => [ProductCategoryUpdateManyWithWhereWithoutParentInput], {nullable:true})
    @Type(() => ProductCategoryUpdateManyWithWhereWithoutParentInput)
    updateMany?: Array<ProductCategoryUpdateManyWithWhereWithoutParentInput>;
    @Field(() => [ProductCategoryScalarWhereInput], {nullable:true})
    @Type(() => ProductCategoryScalarWhereInput)
    deleteMany?: Array<ProductCategoryScalarWhereInput>;
}

@InputType()
export class ProductCategoryUpdateOneWithoutChildrenNestedInput {
    @Field(() => ProductCategoryCreateWithoutChildrenInput, {nullable:true})
    @Type(() => ProductCategoryCreateWithoutChildrenInput)
    create?: InstanceType<typeof ProductCategoryCreateWithoutChildrenInput>;
    @Field(() => ProductCategoryCreateOrConnectWithoutChildrenInput, {nullable:true})
    @Type(() => ProductCategoryCreateOrConnectWithoutChildrenInput)
    connectOrCreate?: InstanceType<typeof ProductCategoryCreateOrConnectWithoutChildrenInput>;
    @Field(() => ProductCategoryUpsertWithoutChildrenInput, {nullable:true})
    @Type(() => ProductCategoryUpsertWithoutChildrenInput)
    upsert?: InstanceType<typeof ProductCategoryUpsertWithoutChildrenInput>;
    @Field(() => Boolean, {nullable:true})
    disconnect?: boolean;
    @Field(() => ProductCategoryWhereInput, {nullable:true})
    @Type(() => ProductCategoryWhereInput)
    delete?: InstanceType<typeof ProductCategoryWhereInput>;
    @Field(() => ProductCategoryWhereUniqueInput, {nullable:true})
    @Type(() => ProductCategoryWhereUniqueInput)
    connect?: Prisma.AtLeast<ProductCategoryWhereUniqueInput, 'id'>;
    @Field(() => ProductCategoryUpdateToOneWithWhereWithoutChildrenInput, {nullable:true})
    @Type(() => ProductCategoryUpdateToOneWithWhereWithoutChildrenInput)
    update?: InstanceType<typeof ProductCategoryUpdateToOneWithWhereWithoutChildrenInput>;
}

@InputType()
export class ProductCategoryUpdateOneWithoutProductListingsNestedInput {
    @Field(() => ProductCategoryCreateWithoutProductListingsInput, {nullable:true})
    @Type(() => ProductCategoryCreateWithoutProductListingsInput)
    create?: InstanceType<typeof ProductCategoryCreateWithoutProductListingsInput>;
    @Field(() => ProductCategoryCreateOrConnectWithoutProductListingsInput, {nullable:true})
    @Type(() => ProductCategoryCreateOrConnectWithoutProductListingsInput)
    connectOrCreate?: InstanceType<typeof ProductCategoryCreateOrConnectWithoutProductListingsInput>;
    @Field(() => ProductCategoryUpsertWithoutProductListingsInput, {nullable:true})
    @Type(() => ProductCategoryUpsertWithoutProductListingsInput)
    upsert?: InstanceType<typeof ProductCategoryUpsertWithoutProductListingsInput>;
    @Field(() => Boolean, {nullable:true})
    disconnect?: boolean;
    @Field(() => ProductCategoryWhereInput, {nullable:true})
    @Type(() => ProductCategoryWhereInput)
    delete?: InstanceType<typeof ProductCategoryWhereInput>;
    @Field(() => ProductCategoryWhereUniqueInput, {nullable:true})
    @Type(() => ProductCategoryWhereUniqueInput)
    connect?: Prisma.AtLeast<ProductCategoryWhereUniqueInput, 'id'>;
    @Field(() => ProductCategoryUpdateToOneWithWhereWithoutProductListingsInput, {nullable:true})
    @Type(() => ProductCategoryUpdateToOneWithWhereWithoutProductListingsInput)
    update?: InstanceType<typeof ProductCategoryUpdateToOneWithWhereWithoutProductListingsInput>;
}

@InputType()
export class ProductCategoryUpdateToOneWithWhereWithoutChildrenInput {
    @Field(() => ProductCategoryWhereInput, {nullable:true})
    @Type(() => ProductCategoryWhereInput)
    where?: InstanceType<typeof ProductCategoryWhereInput>;
    @Field(() => ProductCategoryUpdateWithoutChildrenInput, {nullable:false})
    @Type(() => ProductCategoryUpdateWithoutChildrenInput)
    data!: InstanceType<typeof ProductCategoryUpdateWithoutChildrenInput>;
}

@InputType()
export class ProductCategoryUpdateToOneWithWhereWithoutProductListingsInput {
    @Field(() => ProductCategoryWhereInput, {nullable:true})
    @Type(() => ProductCategoryWhereInput)
    where?: InstanceType<typeof ProductCategoryWhereInput>;
    @Field(() => ProductCategoryUpdateWithoutProductListingsInput, {nullable:false})
    @Type(() => ProductCategoryUpdateWithoutProductListingsInput)
    data!: InstanceType<typeof ProductCategoryUpdateWithoutProductListingsInput>;
}

@InputType()
export class ProductCategoryUpdateWithWhereUniqueWithoutParentInput {
    @Field(() => ProductCategoryWhereUniqueInput, {nullable:false})
    @Type(() => ProductCategoryWhereUniqueInput)
    where!: Prisma.AtLeast<ProductCategoryWhereUniqueInput, 'id'>;
    @Field(() => ProductCategoryUpdateWithoutParentInput, {nullable:false})
    @Type(() => ProductCategoryUpdateWithoutParentInput)
    data!: InstanceType<typeof ProductCategoryUpdateWithoutParentInput>;
}

@InputType()
export class ProductCategoryUpdateWithoutChildrenInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => FeaturedProductCategoryNullableUpdateEnvelopeInput, {nullable:true})
    featured?: InstanceType<typeof FeaturedProductCategoryNullableUpdateEnvelopeInput>;
    @Field(() => [ProductCategoryAppFiltersCreateInput], {nullable:true})
    filters?: Array<ProductCategoryAppFiltersCreateInput>;
    @Field(() => NullableEnumPreferredGenderFieldUpdateOperationsInput, {nullable:true})
    preferredGender?: InstanceType<typeof NullableEnumPreferredGenderFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    shippable?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => ProductCategoryUpdateOneWithoutChildrenNestedInput, {nullable:true})
    parent?: InstanceType<typeof ProductCategoryUpdateOneWithoutChildrenNestedInput>;
    @Field(() => ProductListingUpdateManyWithoutCategoryNestedInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUpdateManyWithoutCategoryNestedInput>;
}

@InputType()
export class ProductCategoryUpdateWithoutParentInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => FeaturedProductCategoryNullableUpdateEnvelopeInput, {nullable:true})
    featured?: InstanceType<typeof FeaturedProductCategoryNullableUpdateEnvelopeInput>;
    @Field(() => [ProductCategoryAppFiltersCreateInput], {nullable:true})
    filters?: Array<ProductCategoryAppFiltersCreateInput>;
    @Field(() => NullableEnumPreferredGenderFieldUpdateOperationsInput, {nullable:true})
    preferredGender?: InstanceType<typeof NullableEnumPreferredGenderFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    shippable?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => ProductCategoryUpdateManyWithoutParentNestedInput, {nullable:true})
    children?: InstanceType<typeof ProductCategoryUpdateManyWithoutParentNestedInput>;
    @Field(() => ProductListingUpdateManyWithoutCategoryNestedInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUpdateManyWithoutCategoryNestedInput>;
}

@InputType()
export class ProductCategoryUpdateWithoutProductListingsInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => FeaturedProductCategoryNullableUpdateEnvelopeInput, {nullable:true})
    featured?: InstanceType<typeof FeaturedProductCategoryNullableUpdateEnvelopeInput>;
    @Field(() => [ProductCategoryAppFiltersCreateInput], {nullable:true})
    filters?: Array<ProductCategoryAppFiltersCreateInput>;
    @Field(() => NullableEnumPreferredGenderFieldUpdateOperationsInput, {nullable:true})
    preferredGender?: InstanceType<typeof NullableEnumPreferredGenderFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    shippable?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => ProductCategoryUpdateOneWithoutChildrenNestedInput, {nullable:true})
    parent?: InstanceType<typeof ProductCategoryUpdateOneWithoutChildrenNestedInput>;
    @Field(() => ProductCategoryUpdateManyWithoutParentNestedInput, {nullable:true})
    children?: InstanceType<typeof ProductCategoryUpdateManyWithoutParentNestedInput>;
}

@InputType()
export class ProductCategoryUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => FeaturedProductCategoryNullableUpdateEnvelopeInput, {nullable:true})
    featured?: InstanceType<typeof FeaturedProductCategoryNullableUpdateEnvelopeInput>;
    @Field(() => [ProductCategoryAppFiltersCreateInput], {nullable:true})
    filters?: Array<ProductCategoryAppFiltersCreateInput>;
    @Field(() => NullableEnumPreferredGenderFieldUpdateOperationsInput, {nullable:true})
    preferredGender?: InstanceType<typeof NullableEnumPreferredGenderFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    shippable?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => ProductCategoryUpdateOneWithoutChildrenNestedInput, {nullable:true})
    parent?: InstanceType<typeof ProductCategoryUpdateOneWithoutChildrenNestedInput>;
    @Field(() => ProductCategoryUpdateManyWithoutParentNestedInput, {nullable:true})
    children?: InstanceType<typeof ProductCategoryUpdateManyWithoutParentNestedInput>;
    @Field(() => ProductListingUpdateManyWithoutCategoryNestedInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUpdateManyWithoutCategoryNestedInput>;
}

@InputType()
export class ProductCategoryUpsertWithWhereUniqueWithoutParentInput {
    @Field(() => ProductCategoryWhereUniqueInput, {nullable:false})
    @Type(() => ProductCategoryWhereUniqueInput)
    where!: Prisma.AtLeast<ProductCategoryWhereUniqueInput, 'id'>;
    @Field(() => ProductCategoryUpdateWithoutParentInput, {nullable:false})
    @Type(() => ProductCategoryUpdateWithoutParentInput)
    update!: InstanceType<typeof ProductCategoryUpdateWithoutParentInput>;
    @Field(() => ProductCategoryCreateWithoutParentInput, {nullable:false})
    @Type(() => ProductCategoryCreateWithoutParentInput)
    create!: InstanceType<typeof ProductCategoryCreateWithoutParentInput>;
}

@InputType()
export class ProductCategoryUpsertWithoutChildrenInput {
    @Field(() => ProductCategoryUpdateWithoutChildrenInput, {nullable:false})
    @Type(() => ProductCategoryUpdateWithoutChildrenInput)
    update!: InstanceType<typeof ProductCategoryUpdateWithoutChildrenInput>;
    @Field(() => ProductCategoryCreateWithoutChildrenInput, {nullable:false})
    @Type(() => ProductCategoryCreateWithoutChildrenInput)
    create!: InstanceType<typeof ProductCategoryCreateWithoutChildrenInput>;
    @Field(() => ProductCategoryWhereInput, {nullable:true})
    @Type(() => ProductCategoryWhereInput)
    where?: InstanceType<typeof ProductCategoryWhereInput>;
}

@InputType()
export class ProductCategoryUpsertWithoutProductListingsInput {
    @Field(() => ProductCategoryUpdateWithoutProductListingsInput, {nullable:false})
    @Type(() => ProductCategoryUpdateWithoutProductListingsInput)
    update!: InstanceType<typeof ProductCategoryUpdateWithoutProductListingsInput>;
    @Field(() => ProductCategoryCreateWithoutProductListingsInput, {nullable:false})
    @Type(() => ProductCategoryCreateWithoutProductListingsInput)
    create!: InstanceType<typeof ProductCategoryCreateWithoutProductListingsInput>;
    @Field(() => ProductCategoryWhereInput, {nullable:true})
    @Type(() => ProductCategoryWhereInput)
    where?: InstanceType<typeof ProductCategoryWhereInput>;
}

@InputType()
export class ProductCategoryWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => [ProductCategoryWhereInput], {nullable:true})
    AND?: Array<ProductCategoryWhereInput>;
    @Field(() => [ProductCategoryWhereInput], {nullable:true})
    OR?: Array<ProductCategoryWhereInput>;
    @Field(() => [ProductCategoryWhereInput], {nullable:true})
    NOT?: Array<ProductCategoryWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    name?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    image?: InstanceType<typeof StringFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    parentId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => FeaturedProductCategoryNullableCompositeFilter, {nullable:true})
    featured?: InstanceType<typeof FeaturedProductCategoryNullableCompositeFilter>;
    @Field(() => [ProductCategoryAppFiltersObjectEqualityInput], {nullable:true})
    filters?: Array<ProductCategoryAppFiltersObjectEqualityInput>;
    @Field(() => EnumPreferredGenderNullableFilter, {nullable:true})
    preferredGender?: InstanceType<typeof EnumPreferredGenderNullableFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => BoolFilter, {nullable:true})
    active?: InstanceType<typeof BoolFilter>;
    @Field(() => BoolFilter, {nullable:true})
    shippable?: InstanceType<typeof BoolFilter>;
    @Field(() => ProductCategoryNullableRelationFilter, {nullable:true})
    parent?: InstanceType<typeof ProductCategoryNullableRelationFilter>;
    @Field(() => ProductCategoryListRelationFilter, {nullable:true})
    children?: InstanceType<typeof ProductCategoryListRelationFilter>;
    @Field(() => ProductListingListRelationFilter, {nullable:true})
    productListings?: InstanceType<typeof ProductListingListRelationFilter>;
}

@InputType()
export class ProductCategoryWhereInput {
    @Field(() => [ProductCategoryWhereInput], {nullable:true})
    AND?: Array<ProductCategoryWhereInput>;
    @Field(() => [ProductCategoryWhereInput], {nullable:true})
    OR?: Array<ProductCategoryWhereInput>;
    @Field(() => [ProductCategoryWhereInput], {nullable:true})
    NOT?: Array<ProductCategoryWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    name?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    image?: InstanceType<typeof StringFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    parentId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => FeaturedProductCategoryNullableCompositeFilter, {nullable:true})
    featured?: InstanceType<typeof FeaturedProductCategoryNullableCompositeFilter>;
    @Field(() => [ProductCategoryAppFiltersObjectEqualityInput], {nullable:true})
    filters?: Array<ProductCategoryAppFiltersObjectEqualityInput>;
    @Field(() => EnumPreferredGenderNullableFilter, {nullable:true})
    preferredGender?: InstanceType<typeof EnumPreferredGenderNullableFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => BoolFilter, {nullable:true})
    active?: InstanceType<typeof BoolFilter>;
    @Field(() => BoolFilter, {nullable:true})
    shippable?: InstanceType<typeof BoolFilter>;
    @Field(() => ProductCategoryNullableRelationFilter, {nullable:true})
    parent?: InstanceType<typeof ProductCategoryNullableRelationFilter>;
    @Field(() => ProductCategoryListRelationFilter, {nullable:true})
    children?: InstanceType<typeof ProductCategoryListRelationFilter>;
    @Field(() => ProductListingListRelationFilter, {nullable:true})
    productListings?: InstanceType<typeof ProductListingListRelationFilter>;
}

@ObjectType()
export class ProductCategory {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => String, {nullable:true})
    parentId!: string | null;
    @Field(() => FeaturedProductCategory, {nullable:true})
    featured?: InstanceType<typeof FeaturedProductCategory> | null;
    @Field(() => [ProductCategoryAppFilters], {nullable:true})
    filters?: Array<ProductCategoryAppFilters>;
    @Field(() => PreferredGender, {nullable:true})
    preferredGender!: `${PreferredGender}` | null;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
    @Field(() => Date, {nullable:false})
    updatedAt!: Date;
    @Field(() => Boolean, {defaultValue:false,nullable:false})
    active!: boolean;
    @Field(() => Boolean, {defaultValue:false,nullable:false})
    shippable!: boolean;
    @Field(() => ProductCategory, {nullable:true})
    parent?: InstanceType<typeof ProductCategory> | null;
    @Field(() => [ProductCategory], {nullable:true})
    children?: Array<ProductCategory>;
    @Field(() => [ProductListing], {nullable:true})
    productListings?: Array<ProductListing>;
}

@ArgsType()
export class UpdateManyProductCategoryArgs {
    @Field(() => ProductCategoryUpdateManyMutationInput, {nullable:false})
    @Type(() => ProductCategoryUpdateManyMutationInput)
    data!: InstanceType<typeof ProductCategoryUpdateManyMutationInput>;
    @Field(() => ProductCategoryWhereInput, {nullable:true})
    @Type(() => ProductCategoryWhereInput)
    where?: InstanceType<typeof ProductCategoryWhereInput>;
}

@ArgsType()
export class UpdateOneProductCategoryArgs {
    @Field(() => ProductCategoryUpdateInput, {nullable:false})
    @Type(() => ProductCategoryUpdateInput)
    data!: InstanceType<typeof ProductCategoryUpdateInput>;
    @Field(() => ProductCategoryWhereUniqueInput, {nullable:false})
    @Type(() => ProductCategoryWhereUniqueInput)
    where!: Prisma.AtLeast<ProductCategoryWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpsertOneProductCategoryArgs {
    @Field(() => ProductCategoryWhereUniqueInput, {nullable:false})
    @Type(() => ProductCategoryWhereUniqueInput)
    where!: Prisma.AtLeast<ProductCategoryWhereUniqueInput, 'id'>;
    @Field(() => ProductCategoryCreateInput, {nullable:false})
    @Type(() => ProductCategoryCreateInput)
    create!: InstanceType<typeof ProductCategoryCreateInput>;
    @Field(() => ProductCategoryUpdateInput, {nullable:false})
    @Type(() => ProductCategoryUpdateInput)
    update!: InstanceType<typeof ProductCategoryUpdateInput>;
}

@InputType()
export class ProductCategoryAppFiltersCreateInput {
    @Field(() => String, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => SelectionChoice, {nullable:false})
    selectionType!: `${SelectionChoice}`;
    @Field(() => [FilterChoiceCreateInput], {nullable:true})
    choices?: Array<FilterChoiceCreateInput>;
    @Field(() => String, {nullable:false})
    infoImage!: string;
}

@InputType()
export class ProductCategoryAppFiltersOrderByCompositeAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    _count?: `${SortOrder}`;
}

@InputType()
export class ProductCategoryAppFiltersUpdateManyInput {
    @Field(() => ProductCategoryAppFiltersWhereInput, {nullable:false})
    @Type(() => ProductCategoryAppFiltersWhereInput)
    where!: InstanceType<typeof ProductCategoryAppFiltersWhereInput>;
    @Field(() => ProductCategoryAppFiltersUpdateInput, {nullable:false})
    @Type(() => ProductCategoryAppFiltersUpdateInput)
    data!: InstanceType<typeof ProductCategoryAppFiltersUpdateInput>;
}

@InputType()
export class ProductCategoryAppFiltersUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumSelectionChoiceFieldUpdateOperationsInput, {nullable:true})
    selectionType?: InstanceType<typeof EnumSelectionChoiceFieldUpdateOperationsInput>;
    @Field(() => [FilterChoiceCreateInput], {nullable:true})
    choices?: Array<FilterChoiceCreateInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    infoImage?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}

@InputType()
export class ProductCategoryAppFiltersWhereInput {
    @Field(() => [ProductCategoryAppFiltersWhereInput], {nullable:true})
    AND?: Array<ProductCategoryAppFiltersWhereInput>;
    @Field(() => [ProductCategoryAppFiltersWhereInput], {nullable:true})
    OR?: Array<ProductCategoryAppFiltersWhereInput>;
    @Field(() => [ProductCategoryAppFiltersWhereInput], {nullable:true})
    NOT?: Array<ProductCategoryAppFiltersWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    name?: InstanceType<typeof StringFilter>;
    @Field(() => EnumSelectionChoiceFilter, {nullable:true})
    selectionType?: InstanceType<typeof EnumSelectionChoiceFilter>;
    @Field(() => [FilterChoiceObjectEqualityInput], {nullable:true})
    choices?: Array<FilterChoiceObjectEqualityInput>;
    @Field(() => StringFilter, {nullable:true})
    infoImage?: InstanceType<typeof StringFilter>;
}

@ObjectType()
export class ProductCategoryAppFilters {
    @Field(() => String, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => SelectionChoice, {nullable:false})
    selectionType!: `${SelectionChoice}`;
    @Field(() => [FilterChoice], {nullable:true})
    choices?: Array<FilterChoice>;
    @Field(() => String, {nullable:false})
    infoImage!: string;
}

@ArgsType()
export class CreateManyProductCommentArgs {
    @Field(() => [ProductCommentCreateManyInput], {nullable:false})
    @Type(() => ProductCommentCreateManyInput)
    data!: Array<ProductCommentCreateManyInput>;
}

@ArgsType()
export class CreateOneProductCommentArgs {
    @Field(() => ProductCommentCreateInput, {nullable:false})
    @Type(() => ProductCommentCreateInput)
    data!: InstanceType<typeof ProductCommentCreateInput>;
}

@ArgsType()
export class DeleteManyProductCommentArgs {
    @Field(() => ProductCommentWhereInput, {nullable:true})
    @Type(() => ProductCommentWhereInput)
    where?: InstanceType<typeof ProductCommentWhereInput>;
}

@ArgsType()
export class DeleteOneProductCommentArgs {
    @Field(() => ProductCommentWhereUniqueInput, {nullable:false})
    @Type(() => ProductCommentWhereUniqueInput)
    where!: Prisma.AtLeast<ProductCommentWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindFirstProductCommentOrThrowArgs {
    @Field(() => ProductCommentWhereInput, {nullable:true})
    @Type(() => ProductCommentWhereInput)
    where?: InstanceType<typeof ProductCommentWhereInput>;
    @Field(() => [ProductCommentOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<ProductCommentOrderByWithRelationInput>;
    @Field(() => ProductCommentWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<ProductCommentWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [ProductCommentScalarFieldEnum], {nullable:true})
    distinct?: Array<`${ProductCommentScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstProductCommentArgs {
    @Field(() => ProductCommentWhereInput, {nullable:true})
    @Type(() => ProductCommentWhereInput)
    where?: InstanceType<typeof ProductCommentWhereInput>;
    @Field(() => [ProductCommentOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<ProductCommentOrderByWithRelationInput>;
    @Field(() => ProductCommentWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<ProductCommentWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [ProductCommentScalarFieldEnum], {nullable:true})
    distinct?: Array<`${ProductCommentScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyProductCommentArgs {
    @Field(() => ProductCommentWhereInput, {nullable:true})
    @Type(() => ProductCommentWhereInput)
    where?: InstanceType<typeof ProductCommentWhereInput>;
    @Field(() => [ProductCommentOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<ProductCommentOrderByWithRelationInput>;
    @Field(() => ProductCommentWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<ProductCommentWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [ProductCommentScalarFieldEnum], {nullable:true})
    distinct?: Array<`${ProductCommentScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniqueProductCommentOrThrowArgs {
    @Field(() => ProductCommentWhereUniqueInput, {nullable:false})
    @Type(() => ProductCommentWhereUniqueInput)
    where!: Prisma.AtLeast<ProductCommentWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindUniqueProductCommentArgs {
    @Field(() => ProductCommentWhereUniqueInput, {nullable:false})
    @Type(() => ProductCommentWhereUniqueInput)
    where!: Prisma.AtLeast<ProductCommentWhereUniqueInput, 'id'>;
}

@ArgsType()
export class ProductCommentAggregateArgs {
    @Field(() => ProductCommentWhereInput, {nullable:true})
    @Type(() => ProductCommentWhereInput)
    where?: InstanceType<typeof ProductCommentWhereInput>;
    @Field(() => [ProductCommentOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<ProductCommentOrderByWithRelationInput>;
    @Field(() => ProductCommentWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<ProductCommentWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class ProductCommentCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    text?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    parentId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    productListingId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    flagged?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    archived?: `${SortOrder}`;
}

@InputType()
export class ProductCommentCreateManyParentInputEnvelope {
    @Field(() => [ProductCommentCreateManyParentInput], {nullable:false})
    @Type(() => ProductCommentCreateManyParentInput)
    data!: Array<ProductCommentCreateManyParentInput>;
}

@InputType()
export class ProductCommentCreateManyParentInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    text!: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => String, {nullable:true})
    productListingId?: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => Boolean, {nullable:true})
    flagged?: boolean;
    @Field(() => Boolean, {nullable:true})
    archived?: boolean;
}

@InputType()
export class ProductCommentCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    text!: string;
    @Field(() => String, {nullable:true})
    parentId?: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => String, {nullable:true})
    productListingId?: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => Boolean, {nullable:true})
    flagged?: boolean;
    @Field(() => Boolean, {nullable:true})
    archived?: boolean;
}

@InputType()
export class ProductCommentCreateNestedManyWithoutParentInput {
    @Field(() => [ProductCommentCreateWithoutParentInput], {nullable:true})
    @Type(() => ProductCommentCreateWithoutParentInput)
    create?: Array<ProductCommentCreateWithoutParentInput>;
    @Field(() => [ProductCommentCreateOrConnectWithoutParentInput], {nullable:true})
    @Type(() => ProductCommentCreateOrConnectWithoutParentInput)
    connectOrCreate?: Array<ProductCommentCreateOrConnectWithoutParentInput>;
    @Field(() => ProductCommentCreateManyParentInputEnvelope, {nullable:true})
    @Type(() => ProductCommentCreateManyParentInputEnvelope)
    createMany?: InstanceType<typeof ProductCommentCreateManyParentInputEnvelope>;
    @Field(() => [ProductCommentWhereUniqueInput], {nullable:true})
    @Type(() => ProductCommentWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ProductCommentWhereUniqueInput, 'id'>>;
}

@InputType()
export class ProductCommentCreateNestedOneWithoutChildrenInput {
    @Field(() => ProductCommentCreateWithoutChildrenInput, {nullable:true})
    @Type(() => ProductCommentCreateWithoutChildrenInput)
    create?: InstanceType<typeof ProductCommentCreateWithoutChildrenInput>;
    @Field(() => ProductCommentCreateOrConnectWithoutChildrenInput, {nullable:true})
    @Type(() => ProductCommentCreateOrConnectWithoutChildrenInput)
    connectOrCreate?: InstanceType<typeof ProductCommentCreateOrConnectWithoutChildrenInput>;
    @Field(() => ProductCommentWhereUniqueInput, {nullable:true})
    @Type(() => ProductCommentWhereUniqueInput)
    connect?: Prisma.AtLeast<ProductCommentWhereUniqueInput, 'id'>;
}

@InputType()
export class ProductCommentCreateOrConnectWithoutChildrenInput {
    @Field(() => ProductCommentWhereUniqueInput, {nullable:false})
    @Type(() => ProductCommentWhereUniqueInput)
    where!: Prisma.AtLeast<ProductCommentWhereUniqueInput, 'id'>;
    @Field(() => ProductCommentCreateWithoutChildrenInput, {nullable:false})
    @Type(() => ProductCommentCreateWithoutChildrenInput)
    create!: InstanceType<typeof ProductCommentCreateWithoutChildrenInput>;
}

@InputType()
export class ProductCommentCreateOrConnectWithoutParentInput {
    @Field(() => ProductCommentWhereUniqueInput, {nullable:false})
    @Type(() => ProductCommentWhereUniqueInput)
    where!: Prisma.AtLeast<ProductCommentWhereUniqueInput, 'id'>;
    @Field(() => ProductCommentCreateWithoutParentInput, {nullable:false})
    @Type(() => ProductCommentCreateWithoutParentInput)
    create!: InstanceType<typeof ProductCommentCreateWithoutParentInput>;
}

@InputType()
export class ProductCommentCreateWithoutChildrenInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    text!: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => String, {nullable:true})
    productListingId?: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => Boolean, {nullable:true})
    flagged?: boolean;
    @Field(() => Boolean, {nullable:true})
    archived?: boolean;
    @Field(() => ProductCommentCreateNestedOneWithoutChildrenInput, {nullable:true})
    parent?: InstanceType<typeof ProductCommentCreateNestedOneWithoutChildrenInput>;
}

@InputType()
export class ProductCommentCreateWithoutParentInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    text!: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => String, {nullable:true})
    productListingId?: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => Boolean, {nullable:true})
    flagged?: boolean;
    @Field(() => Boolean, {nullable:true})
    archived?: boolean;
    @Field(() => ProductCommentCreateNestedManyWithoutParentInput, {nullable:true})
    children?: InstanceType<typeof ProductCommentCreateNestedManyWithoutParentInput>;
}

@InputType()
export class ProductCommentCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    text!: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => String, {nullable:true})
    productListingId?: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => Boolean, {nullable:true})
    flagged?: boolean;
    @Field(() => Boolean, {nullable:true})
    archived?: boolean;
    @Field(() => ProductCommentCreateNestedOneWithoutChildrenInput, {nullable:true})
    parent?: InstanceType<typeof ProductCommentCreateNestedOneWithoutChildrenInput>;
    @Field(() => ProductCommentCreateNestedManyWithoutParentInput, {nullable:true})
    children?: InstanceType<typeof ProductCommentCreateNestedManyWithoutParentInput>;
}

@ArgsType()
export class ProductCommentGroupByArgs {
    @Field(() => ProductCommentWhereInput, {nullable:true})
    @Type(() => ProductCommentWhereInput)
    where?: InstanceType<typeof ProductCommentWhereInput>;
    @Field(() => [ProductCommentOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<ProductCommentOrderByWithAggregationInput>;
    @Field(() => [ProductCommentScalarFieldEnum], {nullable:false})
    by!: Array<`${ProductCommentScalarFieldEnum}`>;
    @Field(() => ProductCommentScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof ProductCommentScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class ProductCommentListRelationFilter {
    @Field(() => ProductCommentWhereInput, {nullable:true})
    every?: InstanceType<typeof ProductCommentWhereInput>;
    @Field(() => ProductCommentWhereInput, {nullable:true})
    some?: InstanceType<typeof ProductCommentWhereInput>;
    @Field(() => ProductCommentWhereInput, {nullable:true})
    none?: InstanceType<typeof ProductCommentWhereInput>;
}

@InputType()
export class ProductCommentMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    text?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    parentId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    productListingId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    flagged?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    archived?: `${SortOrder}`;
}

@InputType()
export class ProductCommentMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    text?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    parentId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    productListingId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    flagged?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    archived?: `${SortOrder}`;
}

@InputType()
export class ProductCommentNullableRelationFilter {
    @Field(() => ProductCommentWhereInput, {nullable:true})
    is?: InstanceType<typeof ProductCommentWhereInput>;
    @Field(() => ProductCommentWhereInput, {nullable:true})
    isNot?: InstanceType<typeof ProductCommentWhereInput>;
}

@InputType()
export class ProductCommentOrderByRelationAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    _count?: `${SortOrder}`;
}

@InputType()
export class ProductCommentOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    text?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    parentId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    productListingId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    flagged?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    archived?: `${SortOrder}`;
    @Field(() => ProductCommentCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof ProductCommentCountOrderByAggregateInput>;
    @Field(() => ProductCommentMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof ProductCommentMaxOrderByAggregateInput>;
    @Field(() => ProductCommentMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof ProductCommentMinOrderByAggregateInput>;
}

@InputType()
export class ProductCommentOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    text?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    parentId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    productListingId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    flagged?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    archived?: `${SortOrder}`;
    @Field(() => ProductCommentOrderByWithRelationInput, {nullable:true})
    parent?: InstanceType<typeof ProductCommentOrderByWithRelationInput>;
    @Field(() => ProductCommentOrderByRelationAggregateInput, {nullable:true})
    children?: InstanceType<typeof ProductCommentOrderByRelationAggregateInput>;
}

@InputType()
export class ProductCommentScalarWhereWithAggregatesInput {
    @Field(() => [ProductCommentScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<ProductCommentScalarWhereWithAggregatesInput>;
    @Field(() => [ProductCommentScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<ProductCommentScalarWhereWithAggregatesInput>;
    @Field(() => [ProductCommentScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<ProductCommentScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    text?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    parentId?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    productListingId?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    userId?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => BoolWithAggregatesFilter, {nullable:true})
    flagged?: InstanceType<typeof BoolWithAggregatesFilter>;
    @Field(() => BoolWithAggregatesFilter, {nullable:true})
    archived?: InstanceType<typeof BoolWithAggregatesFilter>;
}

@InputType()
export class ProductCommentScalarWhereInput {
    @Field(() => [ProductCommentScalarWhereInput], {nullable:true})
    AND?: Array<ProductCommentScalarWhereInput>;
    @Field(() => [ProductCommentScalarWhereInput], {nullable:true})
    OR?: Array<ProductCommentScalarWhereInput>;
    @Field(() => [ProductCommentScalarWhereInput], {nullable:true})
    NOT?: Array<ProductCommentScalarWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    text?: InstanceType<typeof StringFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    parentId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    productListingId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringFilter, {nullable:true})
    userId?: InstanceType<typeof StringFilter>;
    @Field(() => BoolFilter, {nullable:true})
    flagged?: InstanceType<typeof BoolFilter>;
    @Field(() => BoolFilter, {nullable:true})
    archived?: InstanceType<typeof BoolFilter>;
}

@InputType()
export class ProductCommentUncheckedCreateNestedManyWithoutParentInput {
    @Field(() => [ProductCommentCreateWithoutParentInput], {nullable:true})
    @Type(() => ProductCommentCreateWithoutParentInput)
    create?: Array<ProductCommentCreateWithoutParentInput>;
    @Field(() => [ProductCommentCreateOrConnectWithoutParentInput], {nullable:true})
    @Type(() => ProductCommentCreateOrConnectWithoutParentInput)
    connectOrCreate?: Array<ProductCommentCreateOrConnectWithoutParentInput>;
    @Field(() => ProductCommentCreateManyParentInputEnvelope, {nullable:true})
    @Type(() => ProductCommentCreateManyParentInputEnvelope)
    createMany?: InstanceType<typeof ProductCommentCreateManyParentInputEnvelope>;
    @Field(() => [ProductCommentWhereUniqueInput], {nullable:true})
    @Type(() => ProductCommentWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ProductCommentWhereUniqueInput, 'id'>>;
}

@InputType()
export class ProductCommentUncheckedCreateWithoutChildrenInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    text!: string;
    @Field(() => String, {nullable:true})
    parentId?: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => String, {nullable:true})
    productListingId?: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => Boolean, {nullable:true})
    flagged?: boolean;
    @Field(() => Boolean, {nullable:true})
    archived?: boolean;
}

@InputType()
export class ProductCommentUncheckedCreateWithoutParentInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    text!: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => String, {nullable:true})
    productListingId?: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => Boolean, {nullable:true})
    flagged?: boolean;
    @Field(() => Boolean, {nullable:true})
    archived?: boolean;
    @Field(() => ProductCommentUncheckedCreateNestedManyWithoutParentInput, {nullable:true})
    children?: InstanceType<typeof ProductCommentUncheckedCreateNestedManyWithoutParentInput>;
}

@InputType()
export class ProductCommentUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    text!: string;
    @Field(() => String, {nullable:true})
    parentId?: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => String, {nullable:true})
    productListingId?: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => Boolean, {nullable:true})
    flagged?: boolean;
    @Field(() => Boolean, {nullable:true})
    archived?: boolean;
    @Field(() => ProductCommentUncheckedCreateNestedManyWithoutParentInput, {nullable:true})
    children?: InstanceType<typeof ProductCommentUncheckedCreateNestedManyWithoutParentInput>;
}

@InputType()
export class ProductCommentUncheckedUpdateManyWithoutParentNestedInput {
    @Field(() => [ProductCommentCreateWithoutParentInput], {nullable:true})
    @Type(() => ProductCommentCreateWithoutParentInput)
    create?: Array<ProductCommentCreateWithoutParentInput>;
    @Field(() => [ProductCommentCreateOrConnectWithoutParentInput], {nullable:true})
    @Type(() => ProductCommentCreateOrConnectWithoutParentInput)
    connectOrCreate?: Array<ProductCommentCreateOrConnectWithoutParentInput>;
    @Field(() => [ProductCommentUpsertWithWhereUniqueWithoutParentInput], {nullable:true})
    @Type(() => ProductCommentUpsertWithWhereUniqueWithoutParentInput)
    upsert?: Array<ProductCommentUpsertWithWhereUniqueWithoutParentInput>;
    @Field(() => ProductCommentCreateManyParentInputEnvelope, {nullable:true})
    @Type(() => ProductCommentCreateManyParentInputEnvelope)
    createMany?: InstanceType<typeof ProductCommentCreateManyParentInputEnvelope>;
    @Field(() => [ProductCommentWhereUniqueInput], {nullable:true})
    @Type(() => ProductCommentWhereUniqueInput)
    set?: Array<Prisma.AtLeast<ProductCommentWhereUniqueInput, 'id'>>;
    @Field(() => [ProductCommentWhereUniqueInput], {nullable:true})
    @Type(() => ProductCommentWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<ProductCommentWhereUniqueInput, 'id'>>;
    @Field(() => [ProductCommentWhereUniqueInput], {nullable:true})
    @Type(() => ProductCommentWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<ProductCommentWhereUniqueInput, 'id'>>;
    @Field(() => [ProductCommentWhereUniqueInput], {nullable:true})
    @Type(() => ProductCommentWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ProductCommentWhereUniqueInput, 'id'>>;
    @Field(() => [ProductCommentUpdateWithWhereUniqueWithoutParentInput], {nullable:true})
    @Type(() => ProductCommentUpdateWithWhereUniqueWithoutParentInput)
    update?: Array<ProductCommentUpdateWithWhereUniqueWithoutParentInput>;
    @Field(() => [ProductCommentUpdateManyWithWhereWithoutParentInput], {nullable:true})
    @Type(() => ProductCommentUpdateManyWithWhereWithoutParentInput)
    updateMany?: Array<ProductCommentUpdateManyWithWhereWithoutParentInput>;
    @Field(() => [ProductCommentScalarWhereInput], {nullable:true})
    @Type(() => ProductCommentScalarWhereInput)
    deleteMany?: Array<ProductCommentScalarWhereInput>;
}

@InputType()
export class ProductCommentUncheckedUpdateManyWithoutParentInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    text?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    productListingId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    flagged?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    archived?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
}

@InputType()
export class ProductCommentUncheckedUpdateManyInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    text?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    parentId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    productListingId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    flagged?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    archived?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
}

@InputType()
export class ProductCommentUncheckedUpdateWithoutChildrenInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    text?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    parentId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    productListingId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    flagged?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    archived?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
}

@InputType()
export class ProductCommentUncheckedUpdateWithoutParentInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    text?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    productListingId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    flagged?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    archived?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => ProductCommentUncheckedUpdateManyWithoutParentNestedInput, {nullable:true})
    children?: InstanceType<typeof ProductCommentUncheckedUpdateManyWithoutParentNestedInput>;
}

@InputType()
export class ProductCommentUncheckedUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    text?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    parentId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    productListingId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    flagged?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    archived?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => ProductCommentUncheckedUpdateManyWithoutParentNestedInput, {nullable:true})
    children?: InstanceType<typeof ProductCommentUncheckedUpdateManyWithoutParentNestedInput>;
}

@InputType()
export class ProductCommentUpdateManyMutationInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    text?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    productListingId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    flagged?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    archived?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
}

@InputType()
export class ProductCommentUpdateManyWithWhereWithoutParentInput {
    @Field(() => ProductCommentScalarWhereInput, {nullable:false})
    @Type(() => ProductCommentScalarWhereInput)
    where!: InstanceType<typeof ProductCommentScalarWhereInput>;
    @Field(() => ProductCommentUpdateManyMutationInput, {nullable:false})
    @Type(() => ProductCommentUpdateManyMutationInput)
    data!: InstanceType<typeof ProductCommentUpdateManyMutationInput>;
}

@InputType()
export class ProductCommentUpdateManyWithoutParentNestedInput {
    @Field(() => [ProductCommentCreateWithoutParentInput], {nullable:true})
    @Type(() => ProductCommentCreateWithoutParentInput)
    create?: Array<ProductCommentCreateWithoutParentInput>;
    @Field(() => [ProductCommentCreateOrConnectWithoutParentInput], {nullable:true})
    @Type(() => ProductCommentCreateOrConnectWithoutParentInput)
    connectOrCreate?: Array<ProductCommentCreateOrConnectWithoutParentInput>;
    @Field(() => [ProductCommentUpsertWithWhereUniqueWithoutParentInput], {nullable:true})
    @Type(() => ProductCommentUpsertWithWhereUniqueWithoutParentInput)
    upsert?: Array<ProductCommentUpsertWithWhereUniqueWithoutParentInput>;
    @Field(() => ProductCommentCreateManyParentInputEnvelope, {nullable:true})
    @Type(() => ProductCommentCreateManyParentInputEnvelope)
    createMany?: InstanceType<typeof ProductCommentCreateManyParentInputEnvelope>;
    @Field(() => [ProductCommentWhereUniqueInput], {nullable:true})
    @Type(() => ProductCommentWhereUniqueInput)
    set?: Array<Prisma.AtLeast<ProductCommentWhereUniqueInput, 'id'>>;
    @Field(() => [ProductCommentWhereUniqueInput], {nullable:true})
    @Type(() => ProductCommentWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<ProductCommentWhereUniqueInput, 'id'>>;
    @Field(() => [ProductCommentWhereUniqueInput], {nullable:true})
    @Type(() => ProductCommentWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<ProductCommentWhereUniqueInput, 'id'>>;
    @Field(() => [ProductCommentWhereUniqueInput], {nullable:true})
    @Type(() => ProductCommentWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ProductCommentWhereUniqueInput, 'id'>>;
    @Field(() => [ProductCommentUpdateWithWhereUniqueWithoutParentInput], {nullable:true})
    @Type(() => ProductCommentUpdateWithWhereUniqueWithoutParentInput)
    update?: Array<ProductCommentUpdateWithWhereUniqueWithoutParentInput>;
    @Field(() => [ProductCommentUpdateManyWithWhereWithoutParentInput], {nullable:true})
    @Type(() => ProductCommentUpdateManyWithWhereWithoutParentInput)
    updateMany?: Array<ProductCommentUpdateManyWithWhereWithoutParentInput>;
    @Field(() => [ProductCommentScalarWhereInput], {nullable:true})
    @Type(() => ProductCommentScalarWhereInput)
    deleteMany?: Array<ProductCommentScalarWhereInput>;
}

@InputType()
export class ProductCommentUpdateOneWithoutChildrenNestedInput {
    @Field(() => ProductCommentCreateWithoutChildrenInput, {nullable:true})
    @Type(() => ProductCommentCreateWithoutChildrenInput)
    create?: InstanceType<typeof ProductCommentCreateWithoutChildrenInput>;
    @Field(() => ProductCommentCreateOrConnectWithoutChildrenInput, {nullable:true})
    @Type(() => ProductCommentCreateOrConnectWithoutChildrenInput)
    connectOrCreate?: InstanceType<typeof ProductCommentCreateOrConnectWithoutChildrenInput>;
    @Field(() => ProductCommentUpsertWithoutChildrenInput, {nullable:true})
    @Type(() => ProductCommentUpsertWithoutChildrenInput)
    upsert?: InstanceType<typeof ProductCommentUpsertWithoutChildrenInput>;
    @Field(() => Boolean, {nullable:true})
    disconnect?: boolean;
    @Field(() => ProductCommentWhereInput, {nullable:true})
    @Type(() => ProductCommentWhereInput)
    delete?: InstanceType<typeof ProductCommentWhereInput>;
    @Field(() => ProductCommentWhereUniqueInput, {nullable:true})
    @Type(() => ProductCommentWhereUniqueInput)
    connect?: Prisma.AtLeast<ProductCommentWhereUniqueInput, 'id'>;
    @Field(() => ProductCommentUpdateToOneWithWhereWithoutChildrenInput, {nullable:true})
    @Type(() => ProductCommentUpdateToOneWithWhereWithoutChildrenInput)
    update?: InstanceType<typeof ProductCommentUpdateToOneWithWhereWithoutChildrenInput>;
}

@InputType()
export class ProductCommentUpdateToOneWithWhereWithoutChildrenInput {
    @Field(() => ProductCommentWhereInput, {nullable:true})
    @Type(() => ProductCommentWhereInput)
    where?: InstanceType<typeof ProductCommentWhereInput>;
    @Field(() => ProductCommentUpdateWithoutChildrenInput, {nullable:false})
    @Type(() => ProductCommentUpdateWithoutChildrenInput)
    data!: InstanceType<typeof ProductCommentUpdateWithoutChildrenInput>;
}

@InputType()
export class ProductCommentUpdateWithWhereUniqueWithoutParentInput {
    @Field(() => ProductCommentWhereUniqueInput, {nullable:false})
    @Type(() => ProductCommentWhereUniqueInput)
    where!: Prisma.AtLeast<ProductCommentWhereUniqueInput, 'id'>;
    @Field(() => ProductCommentUpdateWithoutParentInput, {nullable:false})
    @Type(() => ProductCommentUpdateWithoutParentInput)
    data!: InstanceType<typeof ProductCommentUpdateWithoutParentInput>;
}

@InputType()
export class ProductCommentUpdateWithoutChildrenInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    text?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    productListingId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    flagged?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    archived?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => ProductCommentUpdateOneWithoutChildrenNestedInput, {nullable:true})
    parent?: InstanceType<typeof ProductCommentUpdateOneWithoutChildrenNestedInput>;
}

@InputType()
export class ProductCommentUpdateWithoutParentInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    text?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    productListingId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    flagged?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    archived?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => ProductCommentUpdateManyWithoutParentNestedInput, {nullable:true})
    children?: InstanceType<typeof ProductCommentUpdateManyWithoutParentNestedInput>;
}

@InputType()
export class ProductCommentUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    text?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    productListingId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    flagged?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    archived?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => ProductCommentUpdateOneWithoutChildrenNestedInput, {nullable:true})
    parent?: InstanceType<typeof ProductCommentUpdateOneWithoutChildrenNestedInput>;
    @Field(() => ProductCommentUpdateManyWithoutParentNestedInput, {nullable:true})
    children?: InstanceType<typeof ProductCommentUpdateManyWithoutParentNestedInput>;
}

@InputType()
export class ProductCommentUpsertWithWhereUniqueWithoutParentInput {
    @Field(() => ProductCommentWhereUniqueInput, {nullable:false})
    @Type(() => ProductCommentWhereUniqueInput)
    where!: Prisma.AtLeast<ProductCommentWhereUniqueInput, 'id'>;
    @Field(() => ProductCommentUpdateWithoutParentInput, {nullable:false})
    @Type(() => ProductCommentUpdateWithoutParentInput)
    update!: InstanceType<typeof ProductCommentUpdateWithoutParentInput>;
    @Field(() => ProductCommentCreateWithoutParentInput, {nullable:false})
    @Type(() => ProductCommentCreateWithoutParentInput)
    create!: InstanceType<typeof ProductCommentCreateWithoutParentInput>;
}

@InputType()
export class ProductCommentUpsertWithoutChildrenInput {
    @Field(() => ProductCommentUpdateWithoutChildrenInput, {nullable:false})
    @Type(() => ProductCommentUpdateWithoutChildrenInput)
    update!: InstanceType<typeof ProductCommentUpdateWithoutChildrenInput>;
    @Field(() => ProductCommentCreateWithoutChildrenInput, {nullable:false})
    @Type(() => ProductCommentCreateWithoutChildrenInput)
    create!: InstanceType<typeof ProductCommentCreateWithoutChildrenInput>;
    @Field(() => ProductCommentWhereInput, {nullable:true})
    @Type(() => ProductCommentWhereInput)
    where?: InstanceType<typeof ProductCommentWhereInput>;
}

@InputType()
export class ProductCommentWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => [ProductCommentWhereInput], {nullable:true})
    AND?: Array<ProductCommentWhereInput>;
    @Field(() => [ProductCommentWhereInput], {nullable:true})
    OR?: Array<ProductCommentWhereInput>;
    @Field(() => [ProductCommentWhereInput], {nullable:true})
    NOT?: Array<ProductCommentWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    text?: InstanceType<typeof StringFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    parentId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    productListingId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringFilter, {nullable:true})
    userId?: InstanceType<typeof StringFilter>;
    @Field(() => BoolFilter, {nullable:true})
    flagged?: InstanceType<typeof BoolFilter>;
    @Field(() => BoolFilter, {nullable:true})
    archived?: InstanceType<typeof BoolFilter>;
    @Field(() => ProductCommentNullableRelationFilter, {nullable:true})
    parent?: InstanceType<typeof ProductCommentNullableRelationFilter>;
    @Field(() => ProductCommentListRelationFilter, {nullable:true})
    children?: InstanceType<typeof ProductCommentListRelationFilter>;
}

@InputType()
export class ProductCommentWhereInput {
    @Field(() => [ProductCommentWhereInput], {nullable:true})
    AND?: Array<ProductCommentWhereInput>;
    @Field(() => [ProductCommentWhereInput], {nullable:true})
    OR?: Array<ProductCommentWhereInput>;
    @Field(() => [ProductCommentWhereInput], {nullable:true})
    NOT?: Array<ProductCommentWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    text?: InstanceType<typeof StringFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    parentId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    productListingId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringFilter, {nullable:true})
    userId?: InstanceType<typeof StringFilter>;
    @Field(() => BoolFilter, {nullable:true})
    flagged?: InstanceType<typeof BoolFilter>;
    @Field(() => BoolFilter, {nullable:true})
    archived?: InstanceType<typeof BoolFilter>;
    @Field(() => ProductCommentNullableRelationFilter, {nullable:true})
    parent?: InstanceType<typeof ProductCommentNullableRelationFilter>;
    @Field(() => ProductCommentListRelationFilter, {nullable:true})
    children?: InstanceType<typeof ProductCommentListRelationFilter>;
}

@ObjectType()
export class ProductComment {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    text!: string;
    @Field(() => String, {nullable:true})
    parentId!: string | null;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
    @Field(() => Date, {nullable:false})
    updatedAt!: Date;
    @Field(() => String, {nullable:true})
    productListingId!: string | null;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => Boolean, {defaultValue:false,nullable:false})
    flagged!: boolean;
    @Field(() => Boolean, {defaultValue:false,nullable:false})
    archived!: boolean;
    @Field(() => ProductComment, {nullable:true})
    parent?: InstanceType<typeof ProductComment> | null;
    @Field(() => [ProductComment], {nullable:true})
    children?: Array<ProductComment>;
}

@ArgsType()
export class UpdateManyProductCommentArgs {
    @Field(() => ProductCommentUpdateManyMutationInput, {nullable:false})
    @Type(() => ProductCommentUpdateManyMutationInput)
    data!: InstanceType<typeof ProductCommentUpdateManyMutationInput>;
    @Field(() => ProductCommentWhereInput, {nullable:true})
    @Type(() => ProductCommentWhereInput)
    where?: InstanceType<typeof ProductCommentWhereInput>;
}

@ArgsType()
export class UpdateOneProductCommentArgs {
    @Field(() => ProductCommentUpdateInput, {nullable:false})
    @Type(() => ProductCommentUpdateInput)
    data!: InstanceType<typeof ProductCommentUpdateInput>;
    @Field(() => ProductCommentWhereUniqueInput, {nullable:false})
    @Type(() => ProductCommentWhereUniqueInput)
    where!: Prisma.AtLeast<ProductCommentWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpsertOneProductCommentArgs {
    @Field(() => ProductCommentWhereUniqueInput, {nullable:false})
    @Type(() => ProductCommentWhereUniqueInput)
    where!: Prisma.AtLeast<ProductCommentWhereUniqueInput, 'id'>;
    @Field(() => ProductCommentCreateInput, {nullable:false})
    @Type(() => ProductCommentCreateInput)
    create!: InstanceType<typeof ProductCommentCreateInput>;
    @Field(() => ProductCommentUpdateInput, {nullable:false})
    @Type(() => ProductCommentUpdateInput)
    update!: InstanceType<typeof ProductCommentUpdateInput>;
}

@ArgsType()
export class CreateManyProductListingArgs {
    @Field(() => [ProductListingCreateManyInput], {nullable:false})
    @Type(() => ProductListingCreateManyInput)
    data!: Array<ProductListingCreateManyInput>;
}

@ArgsType()
export class CreateOneProductListingArgs {
    @Field(() => ProductListingCreateInput, {nullable:false})
    @Type(() => ProductListingCreateInput)
    data!: InstanceType<typeof ProductListingCreateInput>;
}

@ArgsType()
export class DeleteManyProductListingArgs {
    @Field(() => ProductListingWhereInput, {nullable:true})
    @Type(() => ProductListingWhereInput)
    where?: InstanceType<typeof ProductListingWhereInput>;
}

@ArgsType()
export class DeleteOneProductListingArgs {
    @Field(() => ProductListingWhereUniqueInput, {nullable:false})
    @Type(() => ProductListingWhereUniqueInput)
    where!: Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindFirstProductListingOrThrowArgs {
    @Field(() => ProductListingWhereInput, {nullable:true})
    @Type(() => ProductListingWhereInput)
    where?: InstanceType<typeof ProductListingWhereInput>;
    @Field(() => [ProductListingOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<ProductListingOrderByWithRelationInput>;
    @Field(() => ProductListingWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [ProductListingScalarFieldEnum], {nullable:true})
    distinct?: Array<`${ProductListingScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstProductListingArgs {
    @Field(() => ProductListingWhereInput, {nullable:true})
    @Type(() => ProductListingWhereInput)
    where?: InstanceType<typeof ProductListingWhereInput>;
    @Field(() => [ProductListingOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<ProductListingOrderByWithRelationInput>;
    @Field(() => ProductListingWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [ProductListingScalarFieldEnum], {nullable:true})
    distinct?: Array<`${ProductListingScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyProductListingArgs {
    @Field(() => ProductListingWhereInput, {nullable:true})
    @Type(() => ProductListingWhereInput)
    where?: InstanceType<typeof ProductListingWhereInput>;
    @Field(() => [ProductListingOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<ProductListingOrderByWithRelationInput>;
    @Field(() => ProductListingWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [ProductListingScalarFieldEnum], {nullable:true})
    distinct?: Array<`${ProductListingScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniqueProductListingOrThrowArgs {
    @Field(() => ProductListingWhereUniqueInput, {nullable:false})
    @Type(() => ProductListingWhereUniqueInput)
    where!: Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindUniqueProductListingArgs {
    @Field(() => ProductListingWhereUniqueInput, {nullable:false})
    @Type(() => ProductListingWhereUniqueInput)
    where!: Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>;
}

@ArgsType()
export class ProductListingAggregateArgs {
    @Field(() => ProductListingWhereInput, {nullable:true})
    @Type(() => ProductListingWhereInput)
    where?: InstanceType<typeof ProductListingWhereInput>;
    @Field(() => [ProductListingOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<ProductListingOrderByWithRelationInput>;
    @Field(() => ProductListingWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class ProductListingAvgOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    price?: `${SortOrder}`;
}

@InputType()
export class ProductListingCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    title?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    categoryId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    selectedCategoryFilters?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    extendedData?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    brandId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    colorId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    productCondition?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    productDeliveryMode?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    shippingChargePayer?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    weightCategoryId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    uploaderId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    price?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    priceString?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    description?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    reasonForSelling?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    shippingEnabled?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    shippingFrom?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    soldOut?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    blackListed?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    wishlistedUserIds?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    legacyHash?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    archived?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    categoryPreferredGender?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    uploaderEduInstituteId?: `${SortOrder}`;
}

@InputType()
export class ProductListingCreateManyBrandInputEnvelope {
    @Field(() => [ProductListingCreateManyBrandInput], {nullable:false})
    @Type(() => ProductListingCreateManyBrandInput)
    data!: Array<ProductListingCreateManyBrandInput>;
}

@InputType()
export class ProductListingCreateManyBrandInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => ProductListingType, {nullable:false})
    type!: `${ProductListingType}`;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => String, {nullable:false})
    categoryId!: string;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => String, {nullable:true})
    colorId?: string;
    @Field(() => ProductCondition, {nullable:false})
    productCondition!: `${ProductCondition}`;
    @Field(() => ProductDeliveryMode, {nullable:true})
    productDeliveryMode?: `${ProductDeliveryMode}`;
    @Field(() => ShippingChargePayer, {nullable:true})
    shippingChargePayer?: `${ShippingChargePayer}`;
    @Field(() => RentingPreferenceNullableCreateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableCreateEnvelopeInput>;
    @Field(() => String, {nullable:true})
    weightCategoryId?: string;
    @Field(() => String, {nullable:true})
    uploaderId?: string;
    @Field(() => Float, {nullable:false})
    price!: number;
    @Field(() => String, {nullable:true})
    priceString?: string;
    @Field(() => String, {nullable:false})
    description!: string;
    @Field(() => String, {nullable:true})
    reasonForSelling?: string;
    @Field(() => Boolean, {nullable:true})
    shippingEnabled?: boolean;
    @Field(() => String, {nullable:true})
    shippingFrom?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Boolean, {nullable:true})
    soldOut?: boolean;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => ProductListingCreatewishlistedUserIdsInput, {nullable:true})
    wishlistedUserIds?: InstanceType<typeof ProductListingCreatewishlistedUserIdsInput>;
    @Field(() => String, {nullable:true})
    legacyHash?: string;
    @Field(() => Boolean, {nullable:true})
    archived?: boolean;
    @Field(() => PreferredGender, {nullable:true})
    categoryPreferredGender?: `${PreferredGender}`;
    @Field(() => String, {nullable:true})
    uploaderEduInstituteId?: string;
}

@InputType()
export class ProductListingCreateManyCategoryInputEnvelope {
    @Field(() => [ProductListingCreateManyCategoryInput], {nullable:false})
    @Type(() => ProductListingCreateManyCategoryInput)
    data!: Array<ProductListingCreateManyCategoryInput>;
}

@InputType()
export class ProductListingCreateManyCategoryInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => ProductListingType, {nullable:false})
    type!: `${ProductListingType}`;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => String, {nullable:true})
    brandId?: string;
    @Field(() => String, {nullable:true})
    colorId?: string;
    @Field(() => ProductCondition, {nullable:false})
    productCondition!: `${ProductCondition}`;
    @Field(() => ProductDeliveryMode, {nullable:true})
    productDeliveryMode?: `${ProductDeliveryMode}`;
    @Field(() => ShippingChargePayer, {nullable:true})
    shippingChargePayer?: `${ShippingChargePayer}`;
    @Field(() => RentingPreferenceNullableCreateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableCreateEnvelopeInput>;
    @Field(() => String, {nullable:true})
    weightCategoryId?: string;
    @Field(() => String, {nullable:true})
    uploaderId?: string;
    @Field(() => Float, {nullable:false})
    price!: number;
    @Field(() => String, {nullable:true})
    priceString?: string;
    @Field(() => String, {nullable:false})
    description!: string;
    @Field(() => String, {nullable:true})
    reasonForSelling?: string;
    @Field(() => Boolean, {nullable:true})
    shippingEnabled?: boolean;
    @Field(() => String, {nullable:true})
    shippingFrom?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Boolean, {nullable:true})
    soldOut?: boolean;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => ProductListingCreatewishlistedUserIdsInput, {nullable:true})
    wishlistedUserIds?: InstanceType<typeof ProductListingCreatewishlistedUserIdsInput>;
    @Field(() => String, {nullable:true})
    legacyHash?: string;
    @Field(() => Boolean, {nullable:true})
    archived?: boolean;
    @Field(() => PreferredGender, {nullable:true})
    categoryPreferredGender?: `${PreferredGender}`;
    @Field(() => String, {nullable:true})
    uploaderEduInstituteId?: string;
}

@InputType()
export class ProductListingCreateManyColorInputEnvelope {
    @Field(() => [ProductListingCreateManyColorInput], {nullable:false})
    @Type(() => ProductListingCreateManyColorInput)
    data!: Array<ProductListingCreateManyColorInput>;
}

@InputType()
export class ProductListingCreateManyColorInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => ProductListingType, {nullable:false})
    type!: `${ProductListingType}`;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => String, {nullable:false})
    categoryId!: string;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => String, {nullable:true})
    brandId?: string;
    @Field(() => ProductCondition, {nullable:false})
    productCondition!: `${ProductCondition}`;
    @Field(() => ProductDeliveryMode, {nullable:true})
    productDeliveryMode?: `${ProductDeliveryMode}`;
    @Field(() => ShippingChargePayer, {nullable:true})
    shippingChargePayer?: `${ShippingChargePayer}`;
    @Field(() => RentingPreferenceNullableCreateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableCreateEnvelopeInput>;
    @Field(() => String, {nullable:true})
    weightCategoryId?: string;
    @Field(() => String, {nullable:true})
    uploaderId?: string;
    @Field(() => Float, {nullable:false})
    price!: number;
    @Field(() => String, {nullable:true})
    priceString?: string;
    @Field(() => String, {nullable:false})
    description!: string;
    @Field(() => String, {nullable:true})
    reasonForSelling?: string;
    @Field(() => Boolean, {nullable:true})
    shippingEnabled?: boolean;
    @Field(() => String, {nullable:true})
    shippingFrom?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Boolean, {nullable:true})
    soldOut?: boolean;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => ProductListingCreatewishlistedUserIdsInput, {nullable:true})
    wishlistedUserIds?: InstanceType<typeof ProductListingCreatewishlistedUserIdsInput>;
    @Field(() => String, {nullable:true})
    legacyHash?: string;
    @Field(() => Boolean, {nullable:true})
    archived?: boolean;
    @Field(() => PreferredGender, {nullable:true})
    categoryPreferredGender?: `${PreferredGender}`;
    @Field(() => String, {nullable:true})
    uploaderEduInstituteId?: string;
}

@InputType()
export class ProductListingCreateManyUploaderEduInstituteInputEnvelope {
    @Field(() => [ProductListingCreateManyUploaderEduInstituteInput], {nullable:false})
    @Type(() => ProductListingCreateManyUploaderEduInstituteInput)
    data!: Array<ProductListingCreateManyUploaderEduInstituteInput>;
}

@InputType()
export class ProductListingCreateManyUploaderEduInstituteInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => ProductListingType, {nullable:false})
    type!: `${ProductListingType}`;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => String, {nullable:false})
    categoryId!: string;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => String, {nullable:true})
    brandId?: string;
    @Field(() => String, {nullable:true})
    colorId?: string;
    @Field(() => ProductCondition, {nullable:false})
    productCondition!: `${ProductCondition}`;
    @Field(() => ProductDeliveryMode, {nullable:true})
    productDeliveryMode?: `${ProductDeliveryMode}`;
    @Field(() => ShippingChargePayer, {nullable:true})
    shippingChargePayer?: `${ShippingChargePayer}`;
    @Field(() => RentingPreferenceNullableCreateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableCreateEnvelopeInput>;
    @Field(() => String, {nullable:true})
    weightCategoryId?: string;
    @Field(() => String, {nullable:true})
    uploaderId?: string;
    @Field(() => Float, {nullable:false})
    price!: number;
    @Field(() => String, {nullable:true})
    priceString?: string;
    @Field(() => String, {nullable:false})
    description!: string;
    @Field(() => String, {nullable:true})
    reasonForSelling?: string;
    @Field(() => Boolean, {nullable:true})
    shippingEnabled?: boolean;
    @Field(() => String, {nullable:true})
    shippingFrom?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Boolean, {nullable:true})
    soldOut?: boolean;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => ProductListingCreatewishlistedUserIdsInput, {nullable:true})
    wishlistedUserIds?: InstanceType<typeof ProductListingCreatewishlistedUserIdsInput>;
    @Field(() => String, {nullable:true})
    legacyHash?: string;
    @Field(() => Boolean, {nullable:true})
    archived?: boolean;
    @Field(() => PreferredGender, {nullable:true})
    categoryPreferredGender?: `${PreferredGender}`;
}

@InputType()
export class ProductListingCreateManyUploaderInputEnvelope {
    @Field(() => [ProductListingCreateManyUploaderInput], {nullable:false})
    @Type(() => ProductListingCreateManyUploaderInput)
    data!: Array<ProductListingCreateManyUploaderInput>;
}

@InputType()
export class ProductListingCreateManyUploaderInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => ProductListingType, {nullable:false})
    type!: `${ProductListingType}`;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => String, {nullable:false})
    categoryId!: string;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => String, {nullable:true})
    brandId?: string;
    @Field(() => String, {nullable:true})
    colorId?: string;
    @Field(() => ProductCondition, {nullable:false})
    productCondition!: `${ProductCondition}`;
    @Field(() => ProductDeliveryMode, {nullable:true})
    productDeliveryMode?: `${ProductDeliveryMode}`;
    @Field(() => ShippingChargePayer, {nullable:true})
    shippingChargePayer?: `${ShippingChargePayer}`;
    @Field(() => RentingPreferenceNullableCreateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableCreateEnvelopeInput>;
    @Field(() => String, {nullable:true})
    weightCategoryId?: string;
    @Field(() => Float, {nullable:false})
    price!: number;
    @Field(() => String, {nullable:true})
    priceString?: string;
    @Field(() => String, {nullable:false})
    description!: string;
    @Field(() => String, {nullable:true})
    reasonForSelling?: string;
    @Field(() => Boolean, {nullable:true})
    shippingEnabled?: boolean;
    @Field(() => String, {nullable:true})
    shippingFrom?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Boolean, {nullable:true})
    soldOut?: boolean;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => ProductListingCreatewishlistedUserIdsInput, {nullable:true})
    wishlistedUserIds?: InstanceType<typeof ProductListingCreatewishlistedUserIdsInput>;
    @Field(() => String, {nullable:true})
    legacyHash?: string;
    @Field(() => Boolean, {nullable:true})
    archived?: boolean;
    @Field(() => PreferredGender, {nullable:true})
    categoryPreferredGender?: `${PreferredGender}`;
    @Field(() => String, {nullable:true})
    uploaderEduInstituteId?: string;
}

@InputType()
export class ProductListingCreateManyWeightCategoryInputEnvelope {
    @Field(() => [ProductListingCreateManyWeightCategoryInput], {nullable:false})
    @Type(() => ProductListingCreateManyWeightCategoryInput)
    data!: Array<ProductListingCreateManyWeightCategoryInput>;
}

@InputType()
export class ProductListingCreateManyWeightCategoryInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => ProductListingType, {nullable:false})
    type!: `${ProductListingType}`;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => String, {nullable:false})
    categoryId!: string;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => String, {nullable:true})
    brandId?: string;
    @Field(() => String, {nullable:true})
    colorId?: string;
    @Field(() => ProductCondition, {nullable:false})
    productCondition!: `${ProductCondition}`;
    @Field(() => ProductDeliveryMode, {nullable:true})
    productDeliveryMode?: `${ProductDeliveryMode}`;
    @Field(() => ShippingChargePayer, {nullable:true})
    shippingChargePayer?: `${ShippingChargePayer}`;
    @Field(() => RentingPreferenceNullableCreateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableCreateEnvelopeInput>;
    @Field(() => String, {nullable:true})
    uploaderId?: string;
    @Field(() => Float, {nullable:false})
    price!: number;
    @Field(() => String, {nullable:true})
    priceString?: string;
    @Field(() => String, {nullable:false})
    description!: string;
    @Field(() => String, {nullable:true})
    reasonForSelling?: string;
    @Field(() => Boolean, {nullable:true})
    shippingEnabled?: boolean;
    @Field(() => String, {nullable:true})
    shippingFrom?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Boolean, {nullable:true})
    soldOut?: boolean;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => ProductListingCreatewishlistedUserIdsInput, {nullable:true})
    wishlistedUserIds?: InstanceType<typeof ProductListingCreatewishlistedUserIdsInput>;
    @Field(() => String, {nullable:true})
    legacyHash?: string;
    @Field(() => Boolean, {nullable:true})
    archived?: boolean;
    @Field(() => PreferredGender, {nullable:true})
    categoryPreferredGender?: `${PreferredGender}`;
    @Field(() => String, {nullable:true})
    uploaderEduInstituteId?: string;
}

@InputType()
export class ProductListingCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => ProductListingType, {nullable:false})
    type!: `${ProductListingType}`;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => String, {nullable:false})
    categoryId!: string;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => String, {nullable:true})
    brandId?: string;
    @Field(() => String, {nullable:true})
    colorId?: string;
    @Field(() => ProductCondition, {nullable:false})
    productCondition!: `${ProductCondition}`;
    @Field(() => ProductDeliveryMode, {nullable:true})
    productDeliveryMode?: `${ProductDeliveryMode}`;
    @Field(() => ShippingChargePayer, {nullable:true})
    shippingChargePayer?: `${ShippingChargePayer}`;
    @Field(() => RentingPreferenceNullableCreateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableCreateEnvelopeInput>;
    @Field(() => String, {nullable:true})
    weightCategoryId?: string;
    @Field(() => String, {nullable:true})
    uploaderId?: string;
    @Field(() => Float, {nullable:false})
    price!: number;
    @Field(() => String, {nullable:true})
    priceString?: string;
    @Field(() => String, {nullable:false})
    description!: string;
    @Field(() => String, {nullable:true})
    reasonForSelling?: string;
    @Field(() => Boolean, {nullable:true})
    shippingEnabled?: boolean;
    @Field(() => String, {nullable:true})
    shippingFrom?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Boolean, {nullable:true})
    soldOut?: boolean;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => ProductListingCreatewishlistedUserIdsInput, {nullable:true})
    wishlistedUserIds?: InstanceType<typeof ProductListingCreatewishlistedUserIdsInput>;
    @Field(() => String, {nullable:true})
    legacyHash?: string;
    @Field(() => Boolean, {nullable:true})
    archived?: boolean;
    @Field(() => PreferredGender, {nullable:true})
    categoryPreferredGender?: `${PreferredGender}`;
    @Field(() => String, {nullable:true})
    uploaderEduInstituteId?: string;
}

@InputType()
export class ProductListingCreateNestedManyWithoutBrandInput {
    @Field(() => [ProductListingCreateWithoutBrandInput], {nullable:true})
    @Type(() => ProductListingCreateWithoutBrandInput)
    create?: Array<ProductListingCreateWithoutBrandInput>;
    @Field(() => [ProductListingCreateOrConnectWithoutBrandInput], {nullable:true})
    @Type(() => ProductListingCreateOrConnectWithoutBrandInput)
    connectOrCreate?: Array<ProductListingCreateOrConnectWithoutBrandInput>;
    @Field(() => ProductListingCreateManyBrandInputEnvelope, {nullable:true})
    @Type(() => ProductListingCreateManyBrandInputEnvelope)
    createMany?: InstanceType<typeof ProductListingCreateManyBrandInputEnvelope>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
}

@InputType()
export class ProductListingCreateNestedManyWithoutCategoryInput {
    @Field(() => [ProductListingCreateWithoutCategoryInput], {nullable:true})
    @Type(() => ProductListingCreateWithoutCategoryInput)
    create?: Array<ProductListingCreateWithoutCategoryInput>;
    @Field(() => [ProductListingCreateOrConnectWithoutCategoryInput], {nullable:true})
    @Type(() => ProductListingCreateOrConnectWithoutCategoryInput)
    connectOrCreate?: Array<ProductListingCreateOrConnectWithoutCategoryInput>;
    @Field(() => ProductListingCreateManyCategoryInputEnvelope, {nullable:true})
    @Type(() => ProductListingCreateManyCategoryInputEnvelope)
    createMany?: InstanceType<typeof ProductListingCreateManyCategoryInputEnvelope>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
}

@InputType()
export class ProductListingCreateNestedManyWithoutColorInput {
    @Field(() => [ProductListingCreateWithoutColorInput], {nullable:true})
    @Type(() => ProductListingCreateWithoutColorInput)
    create?: Array<ProductListingCreateWithoutColorInput>;
    @Field(() => [ProductListingCreateOrConnectWithoutColorInput], {nullable:true})
    @Type(() => ProductListingCreateOrConnectWithoutColorInput)
    connectOrCreate?: Array<ProductListingCreateOrConnectWithoutColorInput>;
    @Field(() => ProductListingCreateManyColorInputEnvelope, {nullable:true})
    @Type(() => ProductListingCreateManyColorInputEnvelope)
    createMany?: InstanceType<typeof ProductListingCreateManyColorInputEnvelope>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
}

@InputType()
export class ProductListingCreateNestedManyWithoutUploaderEduInstituteInput {
    @Field(() => [ProductListingCreateWithoutUploaderEduInstituteInput], {nullable:true})
    @Type(() => ProductListingCreateWithoutUploaderEduInstituteInput)
    create?: Array<ProductListingCreateWithoutUploaderEduInstituteInput>;
    @Field(() => [ProductListingCreateOrConnectWithoutUploaderEduInstituteInput], {nullable:true})
    @Type(() => ProductListingCreateOrConnectWithoutUploaderEduInstituteInput)
    connectOrCreate?: Array<ProductListingCreateOrConnectWithoutUploaderEduInstituteInput>;
    @Field(() => ProductListingCreateManyUploaderEduInstituteInputEnvelope, {nullable:true})
    @Type(() => ProductListingCreateManyUploaderEduInstituteInputEnvelope)
    createMany?: InstanceType<typeof ProductListingCreateManyUploaderEduInstituteInputEnvelope>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
}

@InputType()
export class ProductListingCreateNestedManyWithoutUploaderInput {
    @Field(() => [ProductListingCreateWithoutUploaderInput], {nullable:true})
    @Type(() => ProductListingCreateWithoutUploaderInput)
    create?: Array<ProductListingCreateWithoutUploaderInput>;
    @Field(() => [ProductListingCreateOrConnectWithoutUploaderInput], {nullable:true})
    @Type(() => ProductListingCreateOrConnectWithoutUploaderInput)
    connectOrCreate?: Array<ProductListingCreateOrConnectWithoutUploaderInput>;
    @Field(() => ProductListingCreateManyUploaderInputEnvelope, {nullable:true})
    @Type(() => ProductListingCreateManyUploaderInputEnvelope)
    createMany?: InstanceType<typeof ProductListingCreateManyUploaderInputEnvelope>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
}

@InputType()
export class ProductListingCreateNestedManyWithoutWeightCategoryInput {
    @Field(() => [ProductListingCreateWithoutWeightCategoryInput], {nullable:true})
    @Type(() => ProductListingCreateWithoutWeightCategoryInput)
    create?: Array<ProductListingCreateWithoutWeightCategoryInput>;
    @Field(() => [ProductListingCreateOrConnectWithoutWeightCategoryInput], {nullable:true})
    @Type(() => ProductListingCreateOrConnectWithoutWeightCategoryInput)
    connectOrCreate?: Array<ProductListingCreateOrConnectWithoutWeightCategoryInput>;
    @Field(() => ProductListingCreateManyWeightCategoryInputEnvelope, {nullable:true})
    @Type(() => ProductListingCreateManyWeightCategoryInputEnvelope)
    createMany?: InstanceType<typeof ProductListingCreateManyWeightCategoryInputEnvelope>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
}

@InputType()
export class ProductListingCreateNestedManyWithoutWishlistedByInput {
    @Field(() => [ProductListingCreateWithoutWishlistedByInput], {nullable:true})
    @Type(() => ProductListingCreateWithoutWishlistedByInput)
    create?: Array<ProductListingCreateWithoutWishlistedByInput>;
    @Field(() => [ProductListingCreateOrConnectWithoutWishlistedByInput], {nullable:true})
    @Type(() => ProductListingCreateOrConnectWithoutWishlistedByInput)
    connectOrCreate?: Array<ProductListingCreateOrConnectWithoutWishlistedByInput>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
}

@InputType()
export class ProductListingCreateNestedOneWithoutConversationsInput {
    @Field(() => ProductListingCreateWithoutConversationsInput, {nullable:true})
    @Type(() => ProductListingCreateWithoutConversationsInput)
    create?: InstanceType<typeof ProductListingCreateWithoutConversationsInput>;
    @Field(() => ProductListingCreateOrConnectWithoutConversationsInput, {nullable:true})
    @Type(() => ProductListingCreateOrConnectWithoutConversationsInput)
    connectOrCreate?: InstanceType<typeof ProductListingCreateOrConnectWithoutConversationsInput>;
    @Field(() => ProductListingWhereUniqueInput, {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    connect?: Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>;
}

@InputType()
export class ProductListingCreateNestedOneWithoutReportsInput {
    @Field(() => ProductListingCreateWithoutReportsInput, {nullable:true})
    @Type(() => ProductListingCreateWithoutReportsInput)
    create?: InstanceType<typeof ProductListingCreateWithoutReportsInput>;
    @Field(() => ProductListingCreateOrConnectWithoutReportsInput, {nullable:true})
    @Type(() => ProductListingCreateOrConnectWithoutReportsInput)
    connectOrCreate?: InstanceType<typeof ProductListingCreateOrConnectWithoutReportsInput>;
    @Field(() => ProductListingWhereUniqueInput, {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    connect?: Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>;
}

@InputType()
export class ProductListingCreateOrConnectWithoutBrandInput {
    @Field(() => ProductListingWhereUniqueInput, {nullable:false})
    @Type(() => ProductListingWhereUniqueInput)
    where!: Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>;
    @Field(() => ProductListingCreateWithoutBrandInput, {nullable:false})
    @Type(() => ProductListingCreateWithoutBrandInput)
    create!: InstanceType<typeof ProductListingCreateWithoutBrandInput>;
}

@InputType()
export class ProductListingCreateOrConnectWithoutCategoryInput {
    @Field(() => ProductListingWhereUniqueInput, {nullable:false})
    @Type(() => ProductListingWhereUniqueInput)
    where!: Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>;
    @Field(() => ProductListingCreateWithoutCategoryInput, {nullable:false})
    @Type(() => ProductListingCreateWithoutCategoryInput)
    create!: InstanceType<typeof ProductListingCreateWithoutCategoryInput>;
}

@InputType()
export class ProductListingCreateOrConnectWithoutColorInput {
    @Field(() => ProductListingWhereUniqueInput, {nullable:false})
    @Type(() => ProductListingWhereUniqueInput)
    where!: Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>;
    @Field(() => ProductListingCreateWithoutColorInput, {nullable:false})
    @Type(() => ProductListingCreateWithoutColorInput)
    create!: InstanceType<typeof ProductListingCreateWithoutColorInput>;
}

@InputType()
export class ProductListingCreateOrConnectWithoutConversationsInput {
    @Field(() => ProductListingWhereUniqueInput, {nullable:false})
    @Type(() => ProductListingWhereUniqueInput)
    where!: Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>;
    @Field(() => ProductListingCreateWithoutConversationsInput, {nullable:false})
    @Type(() => ProductListingCreateWithoutConversationsInput)
    create!: InstanceType<typeof ProductListingCreateWithoutConversationsInput>;
}

@InputType()
export class ProductListingCreateOrConnectWithoutReportsInput {
    @Field(() => ProductListingWhereUniqueInput, {nullable:false})
    @Type(() => ProductListingWhereUniqueInput)
    where!: Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>;
    @Field(() => ProductListingCreateWithoutReportsInput, {nullable:false})
    @Type(() => ProductListingCreateWithoutReportsInput)
    create!: InstanceType<typeof ProductListingCreateWithoutReportsInput>;
}

@InputType()
export class ProductListingCreateOrConnectWithoutUploaderEduInstituteInput {
    @Field(() => ProductListingWhereUniqueInput, {nullable:false})
    @Type(() => ProductListingWhereUniqueInput)
    where!: Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>;
    @Field(() => ProductListingCreateWithoutUploaderEduInstituteInput, {nullable:false})
    @Type(() => ProductListingCreateWithoutUploaderEduInstituteInput)
    create!: InstanceType<typeof ProductListingCreateWithoutUploaderEduInstituteInput>;
}

@InputType()
export class ProductListingCreateOrConnectWithoutUploaderInput {
    @Field(() => ProductListingWhereUniqueInput, {nullable:false})
    @Type(() => ProductListingWhereUniqueInput)
    where!: Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>;
    @Field(() => ProductListingCreateWithoutUploaderInput, {nullable:false})
    @Type(() => ProductListingCreateWithoutUploaderInput)
    create!: InstanceType<typeof ProductListingCreateWithoutUploaderInput>;
}

@InputType()
export class ProductListingCreateOrConnectWithoutWeightCategoryInput {
    @Field(() => ProductListingWhereUniqueInput, {nullable:false})
    @Type(() => ProductListingWhereUniqueInput)
    where!: Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>;
    @Field(() => ProductListingCreateWithoutWeightCategoryInput, {nullable:false})
    @Type(() => ProductListingCreateWithoutWeightCategoryInput)
    create!: InstanceType<typeof ProductListingCreateWithoutWeightCategoryInput>;
}

@InputType()
export class ProductListingCreateOrConnectWithoutWishlistedByInput {
    @Field(() => ProductListingWhereUniqueInput, {nullable:false})
    @Type(() => ProductListingWhereUniqueInput)
    where!: Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>;
    @Field(() => ProductListingCreateWithoutWishlistedByInput, {nullable:false})
    @Type(() => ProductListingCreateWithoutWishlistedByInput)
    create!: InstanceType<typeof ProductListingCreateWithoutWishlistedByInput>;
}

@InputType()
export class ProductListingCreateWithoutBrandInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => ProductListingType, {nullable:false})
    type!: `${ProductListingType}`;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => ProductCondition, {nullable:false})
    productCondition!: `${ProductCondition}`;
    @Field(() => ProductDeliveryMode, {nullable:true})
    productDeliveryMode?: `${ProductDeliveryMode}`;
    @Field(() => ShippingChargePayer, {nullable:true})
    shippingChargePayer?: `${ShippingChargePayer}`;
    @Field(() => RentingPreferenceNullableCreateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableCreateEnvelopeInput>;
    @Field(() => Float, {nullable:false})
    price!: number;
    @Field(() => String, {nullable:true})
    priceString?: string;
    @Field(() => String, {nullable:false})
    description!: string;
    @Field(() => String, {nullable:true})
    reasonForSelling?: string;
    @Field(() => Boolean, {nullable:true})
    shippingEnabled?: boolean;
    @Field(() => String, {nullable:true})
    shippingFrom?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Boolean, {nullable:true})
    soldOut?: boolean;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => String, {nullable:true})
    legacyHash?: string;
    @Field(() => Boolean, {nullable:true})
    archived?: boolean;
    @Field(() => PreferredGender, {nullable:true})
    categoryPreferredGender?: `${PreferredGender}`;
    @Field(() => ProductCategoryCreateNestedOneWithoutProductListingsInput, {nullable:true})
    category?: InstanceType<typeof ProductCategoryCreateNestedOneWithoutProductListingsInput>;
    @Field(() => ColorCreateNestedOneWithoutProductListingInput, {nullable:true})
    color?: InstanceType<typeof ColorCreateNestedOneWithoutProductListingInput>;
    @Field(() => WeightCategoryCreateNestedOneWithoutProductListingInput, {nullable:true})
    weightCategory?: InstanceType<typeof WeightCategoryCreateNestedOneWithoutProductListingInput>;
    @Field(() => UserCreateNestedOneWithoutProductListingsInput, {nullable:true})
    uploader?: InstanceType<typeof UserCreateNestedOneWithoutProductListingsInput>;
    @Field(() => UserCreateNestedManyWithoutWishlistInput, {nullable:true})
    wishlistedBy?: InstanceType<typeof UserCreateNestedManyWithoutWishlistInput>;
    @Field(() => ConversationCreateNestedManyWithoutProductInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationCreateNestedManyWithoutProductInput>;
    @Field(() => ProductReportCreateNestedManyWithoutProductInput, {nullable:true})
    reports?: InstanceType<typeof ProductReportCreateNestedManyWithoutProductInput>;
    @Field(() => EduInstituteCreateNestedOneWithoutProductListingsInput, {nullable:true})
    uploaderEduInstitute?: InstanceType<typeof EduInstituteCreateNestedOneWithoutProductListingsInput>;
}

@InputType()
export class ProductListingCreateWithoutCategoryInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => ProductListingType, {nullable:false})
    type!: `${ProductListingType}`;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => ProductCondition, {nullable:false})
    productCondition!: `${ProductCondition}`;
    @Field(() => ProductDeliveryMode, {nullable:true})
    productDeliveryMode?: `${ProductDeliveryMode}`;
    @Field(() => ShippingChargePayer, {nullable:true})
    shippingChargePayer?: `${ShippingChargePayer}`;
    @Field(() => RentingPreferenceNullableCreateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableCreateEnvelopeInput>;
    @Field(() => Float, {nullable:false})
    price!: number;
    @Field(() => String, {nullable:true})
    priceString?: string;
    @Field(() => String, {nullable:false})
    description!: string;
    @Field(() => String, {nullable:true})
    reasonForSelling?: string;
    @Field(() => Boolean, {nullable:true})
    shippingEnabled?: boolean;
    @Field(() => String, {nullable:true})
    shippingFrom?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Boolean, {nullable:true})
    soldOut?: boolean;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => String, {nullable:true})
    legacyHash?: string;
    @Field(() => Boolean, {nullable:true})
    archived?: boolean;
    @Field(() => PreferredGender, {nullable:true})
    categoryPreferredGender?: `${PreferredGender}`;
    @Field(() => BrandCreateNestedOneWithoutProductListingInput, {nullable:true})
    brand?: InstanceType<typeof BrandCreateNestedOneWithoutProductListingInput>;
    @Field(() => ColorCreateNestedOneWithoutProductListingInput, {nullable:true})
    color?: InstanceType<typeof ColorCreateNestedOneWithoutProductListingInput>;
    @Field(() => WeightCategoryCreateNestedOneWithoutProductListingInput, {nullable:true})
    weightCategory?: InstanceType<typeof WeightCategoryCreateNestedOneWithoutProductListingInput>;
    @Field(() => UserCreateNestedOneWithoutProductListingsInput, {nullable:true})
    uploader?: InstanceType<typeof UserCreateNestedOneWithoutProductListingsInput>;
    @Field(() => UserCreateNestedManyWithoutWishlistInput, {nullable:true})
    wishlistedBy?: InstanceType<typeof UserCreateNestedManyWithoutWishlistInput>;
    @Field(() => ConversationCreateNestedManyWithoutProductInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationCreateNestedManyWithoutProductInput>;
    @Field(() => ProductReportCreateNestedManyWithoutProductInput, {nullable:true})
    reports?: InstanceType<typeof ProductReportCreateNestedManyWithoutProductInput>;
    @Field(() => EduInstituteCreateNestedOneWithoutProductListingsInput, {nullable:true})
    uploaderEduInstitute?: InstanceType<typeof EduInstituteCreateNestedOneWithoutProductListingsInput>;
}

@InputType()
export class ProductListingCreateWithoutColorInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => ProductListingType, {nullable:false})
    type!: `${ProductListingType}`;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => ProductCondition, {nullable:false})
    productCondition!: `${ProductCondition}`;
    @Field(() => ProductDeliveryMode, {nullable:true})
    productDeliveryMode?: `${ProductDeliveryMode}`;
    @Field(() => ShippingChargePayer, {nullable:true})
    shippingChargePayer?: `${ShippingChargePayer}`;
    @Field(() => RentingPreferenceNullableCreateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableCreateEnvelopeInput>;
    @Field(() => Float, {nullable:false})
    price!: number;
    @Field(() => String, {nullable:true})
    priceString?: string;
    @Field(() => String, {nullable:false})
    description!: string;
    @Field(() => String, {nullable:true})
    reasonForSelling?: string;
    @Field(() => Boolean, {nullable:true})
    shippingEnabled?: boolean;
    @Field(() => String, {nullable:true})
    shippingFrom?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Boolean, {nullable:true})
    soldOut?: boolean;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => String, {nullable:true})
    legacyHash?: string;
    @Field(() => Boolean, {nullable:true})
    archived?: boolean;
    @Field(() => PreferredGender, {nullable:true})
    categoryPreferredGender?: `${PreferredGender}`;
    @Field(() => ProductCategoryCreateNestedOneWithoutProductListingsInput, {nullable:true})
    category?: InstanceType<typeof ProductCategoryCreateNestedOneWithoutProductListingsInput>;
    @Field(() => BrandCreateNestedOneWithoutProductListingInput, {nullable:true})
    brand?: InstanceType<typeof BrandCreateNestedOneWithoutProductListingInput>;
    @Field(() => WeightCategoryCreateNestedOneWithoutProductListingInput, {nullable:true})
    weightCategory?: InstanceType<typeof WeightCategoryCreateNestedOneWithoutProductListingInput>;
    @Field(() => UserCreateNestedOneWithoutProductListingsInput, {nullable:true})
    uploader?: InstanceType<typeof UserCreateNestedOneWithoutProductListingsInput>;
    @Field(() => UserCreateNestedManyWithoutWishlistInput, {nullable:true})
    wishlistedBy?: InstanceType<typeof UserCreateNestedManyWithoutWishlistInput>;
    @Field(() => ConversationCreateNestedManyWithoutProductInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationCreateNestedManyWithoutProductInput>;
    @Field(() => ProductReportCreateNestedManyWithoutProductInput, {nullable:true})
    reports?: InstanceType<typeof ProductReportCreateNestedManyWithoutProductInput>;
    @Field(() => EduInstituteCreateNestedOneWithoutProductListingsInput, {nullable:true})
    uploaderEduInstitute?: InstanceType<typeof EduInstituteCreateNestedOneWithoutProductListingsInput>;
}

@InputType()
export class ProductListingCreateWithoutConversationsInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => ProductListingType, {nullable:false})
    type!: `${ProductListingType}`;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => ProductCondition, {nullable:false})
    productCondition!: `${ProductCondition}`;
    @Field(() => ProductDeliveryMode, {nullable:true})
    productDeliveryMode?: `${ProductDeliveryMode}`;
    @Field(() => ShippingChargePayer, {nullable:true})
    shippingChargePayer?: `${ShippingChargePayer}`;
    @Field(() => RentingPreferenceNullableCreateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableCreateEnvelopeInput>;
    @Field(() => Float, {nullable:false})
    price!: number;
    @Field(() => String, {nullable:true})
    priceString?: string;
    @Field(() => String, {nullable:false})
    description!: string;
    @Field(() => String, {nullable:true})
    reasonForSelling?: string;
    @Field(() => Boolean, {nullable:true})
    shippingEnabled?: boolean;
    @Field(() => String, {nullable:true})
    shippingFrom?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Boolean, {nullable:true})
    soldOut?: boolean;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => String, {nullable:true})
    legacyHash?: string;
    @Field(() => Boolean, {nullable:true})
    archived?: boolean;
    @Field(() => PreferredGender, {nullable:true})
    categoryPreferredGender?: `${PreferredGender}`;
    @Field(() => ProductCategoryCreateNestedOneWithoutProductListingsInput, {nullable:true})
    category?: InstanceType<typeof ProductCategoryCreateNestedOneWithoutProductListingsInput>;
    @Field(() => BrandCreateNestedOneWithoutProductListingInput, {nullable:true})
    brand?: InstanceType<typeof BrandCreateNestedOneWithoutProductListingInput>;
    @Field(() => ColorCreateNestedOneWithoutProductListingInput, {nullable:true})
    color?: InstanceType<typeof ColorCreateNestedOneWithoutProductListingInput>;
    @Field(() => WeightCategoryCreateNestedOneWithoutProductListingInput, {nullable:true})
    weightCategory?: InstanceType<typeof WeightCategoryCreateNestedOneWithoutProductListingInput>;
    @Field(() => UserCreateNestedOneWithoutProductListingsInput, {nullable:true})
    uploader?: InstanceType<typeof UserCreateNestedOneWithoutProductListingsInput>;
    @Field(() => UserCreateNestedManyWithoutWishlistInput, {nullable:true})
    wishlistedBy?: InstanceType<typeof UserCreateNestedManyWithoutWishlistInput>;
    @Field(() => ProductReportCreateNestedManyWithoutProductInput, {nullable:true})
    reports?: InstanceType<typeof ProductReportCreateNestedManyWithoutProductInput>;
    @Field(() => EduInstituteCreateNestedOneWithoutProductListingsInput, {nullable:true})
    uploaderEduInstitute?: InstanceType<typeof EduInstituteCreateNestedOneWithoutProductListingsInput>;
}

@InputType()
export class ProductListingCreateWithoutReportsInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => ProductListingType, {nullable:false})
    type!: `${ProductListingType}`;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => ProductCondition, {nullable:false})
    productCondition!: `${ProductCondition}`;
    @Field(() => ProductDeliveryMode, {nullable:true})
    productDeliveryMode?: `${ProductDeliveryMode}`;
    @Field(() => ShippingChargePayer, {nullable:true})
    shippingChargePayer?: `${ShippingChargePayer}`;
    @Field(() => RentingPreferenceNullableCreateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableCreateEnvelopeInput>;
    @Field(() => Float, {nullable:false})
    price!: number;
    @Field(() => String, {nullable:true})
    priceString?: string;
    @Field(() => String, {nullable:false})
    description!: string;
    @Field(() => String, {nullable:true})
    reasonForSelling?: string;
    @Field(() => Boolean, {nullable:true})
    shippingEnabled?: boolean;
    @Field(() => String, {nullable:true})
    shippingFrom?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Boolean, {nullable:true})
    soldOut?: boolean;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => String, {nullable:true})
    legacyHash?: string;
    @Field(() => Boolean, {nullable:true})
    archived?: boolean;
    @Field(() => PreferredGender, {nullable:true})
    categoryPreferredGender?: `${PreferredGender}`;
    @Field(() => ProductCategoryCreateNestedOneWithoutProductListingsInput, {nullable:true})
    category?: InstanceType<typeof ProductCategoryCreateNestedOneWithoutProductListingsInput>;
    @Field(() => BrandCreateNestedOneWithoutProductListingInput, {nullable:true})
    brand?: InstanceType<typeof BrandCreateNestedOneWithoutProductListingInput>;
    @Field(() => ColorCreateNestedOneWithoutProductListingInput, {nullable:true})
    color?: InstanceType<typeof ColorCreateNestedOneWithoutProductListingInput>;
    @Field(() => WeightCategoryCreateNestedOneWithoutProductListingInput, {nullable:true})
    weightCategory?: InstanceType<typeof WeightCategoryCreateNestedOneWithoutProductListingInput>;
    @Field(() => UserCreateNestedOneWithoutProductListingsInput, {nullable:true})
    uploader?: InstanceType<typeof UserCreateNestedOneWithoutProductListingsInput>;
    @Field(() => UserCreateNestedManyWithoutWishlistInput, {nullable:true})
    wishlistedBy?: InstanceType<typeof UserCreateNestedManyWithoutWishlistInput>;
    @Field(() => ConversationCreateNestedManyWithoutProductInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationCreateNestedManyWithoutProductInput>;
    @Field(() => EduInstituteCreateNestedOneWithoutProductListingsInput, {nullable:true})
    uploaderEduInstitute?: InstanceType<typeof EduInstituteCreateNestedOneWithoutProductListingsInput>;
}

@InputType()
export class ProductListingCreateWithoutUploaderEduInstituteInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => ProductListingType, {nullable:false})
    type!: `${ProductListingType}`;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => ProductCondition, {nullable:false})
    productCondition!: `${ProductCondition}`;
    @Field(() => ProductDeliveryMode, {nullable:true})
    productDeliveryMode?: `${ProductDeliveryMode}`;
    @Field(() => ShippingChargePayer, {nullable:true})
    shippingChargePayer?: `${ShippingChargePayer}`;
    @Field(() => RentingPreferenceNullableCreateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableCreateEnvelopeInput>;
    @Field(() => Float, {nullable:false})
    price!: number;
    @Field(() => String, {nullable:true})
    priceString?: string;
    @Field(() => String, {nullable:false})
    description!: string;
    @Field(() => String, {nullable:true})
    reasonForSelling?: string;
    @Field(() => Boolean, {nullable:true})
    shippingEnabled?: boolean;
    @Field(() => String, {nullable:true})
    shippingFrom?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Boolean, {nullable:true})
    soldOut?: boolean;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => String, {nullable:true})
    legacyHash?: string;
    @Field(() => Boolean, {nullable:true})
    archived?: boolean;
    @Field(() => PreferredGender, {nullable:true})
    categoryPreferredGender?: `${PreferredGender}`;
    @Field(() => ProductCategoryCreateNestedOneWithoutProductListingsInput, {nullable:true})
    category?: InstanceType<typeof ProductCategoryCreateNestedOneWithoutProductListingsInput>;
    @Field(() => BrandCreateNestedOneWithoutProductListingInput, {nullable:true})
    brand?: InstanceType<typeof BrandCreateNestedOneWithoutProductListingInput>;
    @Field(() => ColorCreateNestedOneWithoutProductListingInput, {nullable:true})
    color?: InstanceType<typeof ColorCreateNestedOneWithoutProductListingInput>;
    @Field(() => WeightCategoryCreateNestedOneWithoutProductListingInput, {nullable:true})
    weightCategory?: InstanceType<typeof WeightCategoryCreateNestedOneWithoutProductListingInput>;
    @Field(() => UserCreateNestedOneWithoutProductListingsInput, {nullable:true})
    uploader?: InstanceType<typeof UserCreateNestedOneWithoutProductListingsInput>;
    @Field(() => UserCreateNestedManyWithoutWishlistInput, {nullable:true})
    wishlistedBy?: InstanceType<typeof UserCreateNestedManyWithoutWishlistInput>;
    @Field(() => ConversationCreateNestedManyWithoutProductInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationCreateNestedManyWithoutProductInput>;
    @Field(() => ProductReportCreateNestedManyWithoutProductInput, {nullable:true})
    reports?: InstanceType<typeof ProductReportCreateNestedManyWithoutProductInput>;
}

@InputType()
export class ProductListingCreateWithoutUploaderInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => ProductListingType, {nullable:false})
    type!: `${ProductListingType}`;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => ProductCondition, {nullable:false})
    productCondition!: `${ProductCondition}`;
    @Field(() => ProductDeliveryMode, {nullable:true})
    productDeliveryMode?: `${ProductDeliveryMode}`;
    @Field(() => ShippingChargePayer, {nullable:true})
    shippingChargePayer?: `${ShippingChargePayer}`;
    @Field(() => RentingPreferenceNullableCreateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableCreateEnvelopeInput>;
    @Field(() => Float, {nullable:false})
    price!: number;
    @Field(() => String, {nullable:true})
    priceString?: string;
    @Field(() => String, {nullable:false})
    description!: string;
    @Field(() => String, {nullable:true})
    reasonForSelling?: string;
    @Field(() => Boolean, {nullable:true})
    shippingEnabled?: boolean;
    @Field(() => String, {nullable:true})
    shippingFrom?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Boolean, {nullable:true})
    soldOut?: boolean;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => String, {nullable:true})
    legacyHash?: string;
    @Field(() => Boolean, {nullable:true})
    archived?: boolean;
    @Field(() => PreferredGender, {nullable:true})
    categoryPreferredGender?: `${PreferredGender}`;
    @Field(() => ProductCategoryCreateNestedOneWithoutProductListingsInput, {nullable:true})
    category?: InstanceType<typeof ProductCategoryCreateNestedOneWithoutProductListingsInput>;
    @Field(() => BrandCreateNestedOneWithoutProductListingInput, {nullable:true})
    brand?: InstanceType<typeof BrandCreateNestedOneWithoutProductListingInput>;
    @Field(() => ColorCreateNestedOneWithoutProductListingInput, {nullable:true})
    color?: InstanceType<typeof ColorCreateNestedOneWithoutProductListingInput>;
    @Field(() => WeightCategoryCreateNestedOneWithoutProductListingInput, {nullable:true})
    weightCategory?: InstanceType<typeof WeightCategoryCreateNestedOneWithoutProductListingInput>;
    @Field(() => UserCreateNestedManyWithoutWishlistInput, {nullable:true})
    wishlistedBy?: InstanceType<typeof UserCreateNestedManyWithoutWishlistInput>;
    @Field(() => ConversationCreateNestedManyWithoutProductInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationCreateNestedManyWithoutProductInput>;
    @Field(() => ProductReportCreateNestedManyWithoutProductInput, {nullable:true})
    reports?: InstanceType<typeof ProductReportCreateNestedManyWithoutProductInput>;
    @Field(() => EduInstituteCreateNestedOneWithoutProductListingsInput, {nullable:true})
    uploaderEduInstitute?: InstanceType<typeof EduInstituteCreateNestedOneWithoutProductListingsInput>;
}

@InputType()
export class ProductListingCreateWithoutWeightCategoryInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => ProductListingType, {nullable:false})
    type!: `${ProductListingType}`;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => ProductCondition, {nullable:false})
    productCondition!: `${ProductCondition}`;
    @Field(() => ProductDeliveryMode, {nullable:true})
    productDeliveryMode?: `${ProductDeliveryMode}`;
    @Field(() => ShippingChargePayer, {nullable:true})
    shippingChargePayer?: `${ShippingChargePayer}`;
    @Field(() => RentingPreferenceNullableCreateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableCreateEnvelopeInput>;
    @Field(() => Float, {nullable:false})
    price!: number;
    @Field(() => String, {nullable:true})
    priceString?: string;
    @Field(() => String, {nullable:false})
    description!: string;
    @Field(() => String, {nullable:true})
    reasonForSelling?: string;
    @Field(() => Boolean, {nullable:true})
    shippingEnabled?: boolean;
    @Field(() => String, {nullable:true})
    shippingFrom?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Boolean, {nullable:true})
    soldOut?: boolean;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => String, {nullable:true})
    legacyHash?: string;
    @Field(() => Boolean, {nullable:true})
    archived?: boolean;
    @Field(() => PreferredGender, {nullable:true})
    categoryPreferredGender?: `${PreferredGender}`;
    @Field(() => ProductCategoryCreateNestedOneWithoutProductListingsInput, {nullable:true})
    category?: InstanceType<typeof ProductCategoryCreateNestedOneWithoutProductListingsInput>;
    @Field(() => BrandCreateNestedOneWithoutProductListingInput, {nullable:true})
    brand?: InstanceType<typeof BrandCreateNestedOneWithoutProductListingInput>;
    @Field(() => ColorCreateNestedOneWithoutProductListingInput, {nullable:true})
    color?: InstanceType<typeof ColorCreateNestedOneWithoutProductListingInput>;
    @Field(() => UserCreateNestedOneWithoutProductListingsInput, {nullable:true})
    uploader?: InstanceType<typeof UserCreateNestedOneWithoutProductListingsInput>;
    @Field(() => UserCreateNestedManyWithoutWishlistInput, {nullable:true})
    wishlistedBy?: InstanceType<typeof UserCreateNestedManyWithoutWishlistInput>;
    @Field(() => ConversationCreateNestedManyWithoutProductInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationCreateNestedManyWithoutProductInput>;
    @Field(() => ProductReportCreateNestedManyWithoutProductInput, {nullable:true})
    reports?: InstanceType<typeof ProductReportCreateNestedManyWithoutProductInput>;
    @Field(() => EduInstituteCreateNestedOneWithoutProductListingsInput, {nullable:true})
    uploaderEduInstitute?: InstanceType<typeof EduInstituteCreateNestedOneWithoutProductListingsInput>;
}

@InputType()
export class ProductListingCreateWithoutWishlistedByInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => ProductListingType, {nullable:false})
    type!: `${ProductListingType}`;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => ProductCondition, {nullable:false})
    productCondition!: `${ProductCondition}`;
    @Field(() => ProductDeliveryMode, {nullable:true})
    productDeliveryMode?: `${ProductDeliveryMode}`;
    @Field(() => ShippingChargePayer, {nullable:true})
    shippingChargePayer?: `${ShippingChargePayer}`;
    @Field(() => RentingPreferenceNullableCreateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableCreateEnvelopeInput>;
    @Field(() => Float, {nullable:false})
    price!: number;
    @Field(() => String, {nullable:true})
    priceString?: string;
    @Field(() => String, {nullable:false})
    description!: string;
    @Field(() => String, {nullable:true})
    reasonForSelling?: string;
    @Field(() => Boolean, {nullable:true})
    shippingEnabled?: boolean;
    @Field(() => String, {nullable:true})
    shippingFrom?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Boolean, {nullable:true})
    soldOut?: boolean;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => String, {nullable:true})
    legacyHash?: string;
    @Field(() => Boolean, {nullable:true})
    archived?: boolean;
    @Field(() => PreferredGender, {nullable:true})
    categoryPreferredGender?: `${PreferredGender}`;
    @Field(() => ProductCategoryCreateNestedOneWithoutProductListingsInput, {nullable:true})
    category?: InstanceType<typeof ProductCategoryCreateNestedOneWithoutProductListingsInput>;
    @Field(() => BrandCreateNestedOneWithoutProductListingInput, {nullable:true})
    brand?: InstanceType<typeof BrandCreateNestedOneWithoutProductListingInput>;
    @Field(() => ColorCreateNestedOneWithoutProductListingInput, {nullable:true})
    color?: InstanceType<typeof ColorCreateNestedOneWithoutProductListingInput>;
    @Field(() => WeightCategoryCreateNestedOneWithoutProductListingInput, {nullable:true})
    weightCategory?: InstanceType<typeof WeightCategoryCreateNestedOneWithoutProductListingInput>;
    @Field(() => UserCreateNestedOneWithoutProductListingsInput, {nullable:true})
    uploader?: InstanceType<typeof UserCreateNestedOneWithoutProductListingsInput>;
    @Field(() => ConversationCreateNestedManyWithoutProductInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationCreateNestedManyWithoutProductInput>;
    @Field(() => ProductReportCreateNestedManyWithoutProductInput, {nullable:true})
    reports?: InstanceType<typeof ProductReportCreateNestedManyWithoutProductInput>;
    @Field(() => EduInstituteCreateNestedOneWithoutProductListingsInput, {nullable:true})
    uploaderEduInstitute?: InstanceType<typeof EduInstituteCreateNestedOneWithoutProductListingsInput>;
}

@InputType()
export class ProductListingCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => ProductListingType, {nullable:false})
    type!: `${ProductListingType}`;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => ProductCondition, {nullable:false})
    productCondition!: `${ProductCondition}`;
    @Field(() => ProductDeliveryMode, {nullable:true})
    productDeliveryMode?: `${ProductDeliveryMode}`;
    @Field(() => ShippingChargePayer, {nullable:true})
    shippingChargePayer?: `${ShippingChargePayer}`;
    @Field(() => RentingPreferenceNullableCreateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableCreateEnvelopeInput>;
    @Field(() => Float, {nullable:false})
    price!: number;
    @Field(() => String, {nullable:true})
    priceString?: string;
    @Field(() => String, {nullable:false})
    description!: string;
    @Field(() => String, {nullable:true})
    reasonForSelling?: string;
    @Field(() => Boolean, {nullable:true})
    shippingEnabled?: boolean;
    @Field(() => String, {nullable:true})
    shippingFrom?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Boolean, {nullable:true})
    soldOut?: boolean;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => String, {nullable:true})
    legacyHash?: string;
    @Field(() => Boolean, {nullable:true})
    archived?: boolean;
    @Field(() => PreferredGender, {nullable:true})
    categoryPreferredGender?: `${PreferredGender}`;
    @Field(() => ProductCategoryCreateNestedOneWithoutProductListingsInput, {nullable:true})
    category?: InstanceType<typeof ProductCategoryCreateNestedOneWithoutProductListingsInput>;
    @Field(() => BrandCreateNestedOneWithoutProductListingInput, {nullable:true})
    brand?: InstanceType<typeof BrandCreateNestedOneWithoutProductListingInput>;
    @Field(() => ColorCreateNestedOneWithoutProductListingInput, {nullable:true})
    color?: InstanceType<typeof ColorCreateNestedOneWithoutProductListingInput>;
    @Field(() => WeightCategoryCreateNestedOneWithoutProductListingInput, {nullable:true})
    weightCategory?: InstanceType<typeof WeightCategoryCreateNestedOneWithoutProductListingInput>;
    @Field(() => UserCreateNestedOneWithoutProductListingsInput, {nullable:true})
    uploader?: InstanceType<typeof UserCreateNestedOneWithoutProductListingsInput>;
    @Field(() => UserCreateNestedManyWithoutWishlistInput, {nullable:true})
    wishlistedBy?: InstanceType<typeof UserCreateNestedManyWithoutWishlistInput>;
    @Field(() => ConversationCreateNestedManyWithoutProductInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationCreateNestedManyWithoutProductInput>;
    @Field(() => ProductReportCreateNestedManyWithoutProductInput, {nullable:true})
    reports?: InstanceType<typeof ProductReportCreateNestedManyWithoutProductInput>;
    @Field(() => EduInstituteCreateNestedOneWithoutProductListingsInput, {nullable:true})
    uploaderEduInstitute?: InstanceType<typeof EduInstituteCreateNestedOneWithoutProductListingsInput>;
}

@InputType()
export class ProductListingCreatewishlistedUserIdsInput {
    @Field(() => [String], {nullable:false})
    set!: Array<string>;
}

@ArgsType()
export class ProductListingGroupByArgs {
    @Field(() => ProductListingWhereInput, {nullable:true})
    @Type(() => ProductListingWhereInput)
    where?: InstanceType<typeof ProductListingWhereInput>;
    @Field(() => [ProductListingOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<ProductListingOrderByWithAggregationInput>;
    @Field(() => [ProductListingScalarFieldEnum], {nullable:false})
    by!: Array<`${ProductListingScalarFieldEnum}`>;
    @Field(() => ProductListingScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof ProductListingScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class ProductListingListRelationFilter {
    @Field(() => ProductListingWhereInput, {nullable:true})
    every?: InstanceType<typeof ProductListingWhereInput>;
    @Field(() => ProductListingWhereInput, {nullable:true})
    some?: InstanceType<typeof ProductListingWhereInput>;
    @Field(() => ProductListingWhereInput, {nullable:true})
    none?: InstanceType<typeof ProductListingWhereInput>;
}

@InputType()
export class ProductListingMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    title?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    categoryId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    brandId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    colorId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    productCondition?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    productDeliveryMode?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    shippingChargePayer?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    weightCategoryId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    uploaderId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    price?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    priceString?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    description?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    reasonForSelling?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    shippingEnabled?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    shippingFrom?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    soldOut?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    blackListed?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    legacyHash?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    archived?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    categoryPreferredGender?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    uploaderEduInstituteId?: `${SortOrder}`;
}

@InputType()
export class ProductListingMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    title?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    categoryId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    brandId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    colorId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    productCondition?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    productDeliveryMode?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    shippingChargePayer?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    weightCategoryId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    uploaderId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    price?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    priceString?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    description?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    reasonForSelling?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    shippingEnabled?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    shippingFrom?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    soldOut?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    blackListed?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    legacyHash?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    archived?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    categoryPreferredGender?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    uploaderEduInstituteId?: `${SortOrder}`;
}

@InputType()
export class ProductListingOrderByRelationAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    _count?: `${SortOrder}`;
}

@InputType()
export class ProductListingOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    title?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    categoryId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    selectedCategoryFilters?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    extendedData?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    brandId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    colorId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    productCondition?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    productDeliveryMode?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    shippingChargePayer?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    weightCategoryId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    uploaderId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    price?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    priceString?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    description?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    reasonForSelling?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    shippingEnabled?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    shippingFrom?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    soldOut?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    blackListed?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    wishlistedUserIds?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    legacyHash?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    archived?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    categoryPreferredGender?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    uploaderEduInstituteId?: `${SortOrder}`;
    @Field(() => ProductListingCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof ProductListingCountOrderByAggregateInput>;
    @Field(() => ProductListingAvgOrderByAggregateInput, {nullable:true})
    _avg?: InstanceType<typeof ProductListingAvgOrderByAggregateInput>;
    @Field(() => ProductListingMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof ProductListingMaxOrderByAggregateInput>;
    @Field(() => ProductListingMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof ProductListingMinOrderByAggregateInput>;
    @Field(() => ProductListingSumOrderByAggregateInput, {nullable:true})
    _sum?: InstanceType<typeof ProductListingSumOrderByAggregateInput>;
}

@InputType()
export class ProductListingOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => MediaItemOrderByCompositeAggregateInput, {nullable:true})
    media?: InstanceType<typeof MediaItemOrderByCompositeAggregateInput>;
    @Field(() => SortOrder, {nullable:true})
    title?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    categoryId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    selectedCategoryFilters?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    extendedData?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    brandId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    colorId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    productCondition?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    productDeliveryMode?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    shippingChargePayer?: `${SortOrder}`;
    @Field(() => RentingPreferenceOrderByInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceOrderByInput>;
    @Field(() => SortOrder, {nullable:true})
    weightCategoryId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    uploaderId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    price?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    priceString?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    description?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    reasonForSelling?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    shippingEnabled?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    shippingFrom?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    soldOut?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    blackListed?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    wishlistedUserIds?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    legacyHash?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    archived?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    categoryPreferredGender?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    uploaderEduInstituteId?: `${SortOrder}`;
    @Field(() => ProductCategoryOrderByWithRelationInput, {nullable:true})
    category?: InstanceType<typeof ProductCategoryOrderByWithRelationInput>;
    @Field(() => BrandOrderByWithRelationInput, {nullable:true})
    brand?: InstanceType<typeof BrandOrderByWithRelationInput>;
    @Field(() => ColorOrderByWithRelationInput, {nullable:true})
    color?: InstanceType<typeof ColorOrderByWithRelationInput>;
    @Field(() => WeightCategoryOrderByWithRelationInput, {nullable:true})
    weightCategory?: InstanceType<typeof WeightCategoryOrderByWithRelationInput>;
    @Field(() => UserOrderByWithRelationInput, {nullable:true})
    uploader?: InstanceType<typeof UserOrderByWithRelationInput>;
    @Field(() => UserOrderByRelationAggregateInput, {nullable:true})
    wishlistedBy?: InstanceType<typeof UserOrderByRelationAggregateInput>;
    @Field(() => ConversationOrderByRelationAggregateInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationOrderByRelationAggregateInput>;
    @Field(() => ProductReportOrderByRelationAggregateInput, {nullable:true})
    reports?: InstanceType<typeof ProductReportOrderByRelationAggregateInput>;
    @Field(() => EduInstituteOrderByWithRelationInput, {nullable:true})
    uploaderEduInstitute?: InstanceType<typeof EduInstituteOrderByWithRelationInput>;
}

@InputType()
export class ProductListingRelationFilter {
    @Field(() => ProductListingWhereInput, {nullable:true})
    is?: InstanceType<typeof ProductListingWhereInput>;
    @Field(() => ProductListingWhereInput, {nullable:true})
    isNot?: InstanceType<typeof ProductListingWhereInput>;
}

@InputType()
export class ProductListingScalarWhereWithAggregatesInput {
    @Field(() => [ProductListingScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<ProductListingScalarWhereWithAggregatesInput>;
    @Field(() => [ProductListingScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<ProductListingScalarWhereWithAggregatesInput>;
    @Field(() => [ProductListingScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<ProductListingScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => EnumProductListingTypeWithAggregatesFilter, {nullable:true})
    type?: InstanceType<typeof EnumProductListingTypeWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    title?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    categoryId?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => JsonNullableWithAggregatesFilter, {nullable:true})
    selectedCategoryFilters?: InstanceType<typeof JsonNullableWithAggregatesFilter>;
    @Field(() => JsonNullableWithAggregatesFilter, {nullable:true})
    extendedData?: InstanceType<typeof JsonNullableWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    brandId?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    colorId?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => EnumProductConditionWithAggregatesFilter, {nullable:true})
    productCondition?: InstanceType<typeof EnumProductConditionWithAggregatesFilter>;
    @Field(() => EnumProductDeliveryModeNullableWithAggregatesFilter, {nullable:true})
    productDeliveryMode?: InstanceType<typeof EnumProductDeliveryModeNullableWithAggregatesFilter>;
    @Field(() => EnumShippingChargePayerNullableWithAggregatesFilter, {nullable:true})
    shippingChargePayer?: InstanceType<typeof EnumShippingChargePayerNullableWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    weightCategoryId?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    uploaderId?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => FloatWithAggregatesFilter, {nullable:true})
    price?: InstanceType<typeof FloatWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    priceString?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    description?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    reasonForSelling?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => BoolWithAggregatesFilter, {nullable:true})
    shippingEnabled?: InstanceType<typeof BoolWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    shippingFrom?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => BoolWithAggregatesFilter, {nullable:true})
    active?: InstanceType<typeof BoolWithAggregatesFilter>;
    @Field(() => BoolWithAggregatesFilter, {nullable:true})
    soldOut?: InstanceType<typeof BoolWithAggregatesFilter>;
    @Field(() => BoolWithAggregatesFilter, {nullable:true})
    blackListed?: InstanceType<typeof BoolWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    wishlistedUserIds?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    legacyHash?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => BoolWithAggregatesFilter, {nullable:true})
    archived?: InstanceType<typeof BoolWithAggregatesFilter>;
    @Field(() => EnumPreferredGenderNullableWithAggregatesFilter, {nullable:true})
    categoryPreferredGender?: InstanceType<typeof EnumPreferredGenderNullableWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    uploaderEduInstituteId?: InstanceType<typeof StringNullableWithAggregatesFilter>;
}

@InputType()
export class ProductListingScalarWhereInput {
    @Field(() => [ProductListingScalarWhereInput], {nullable:true})
    AND?: Array<ProductListingScalarWhereInput>;
    @Field(() => [ProductListingScalarWhereInput], {nullable:true})
    OR?: Array<ProductListingScalarWhereInput>;
    @Field(() => [ProductListingScalarWhereInput], {nullable:true})
    NOT?: Array<ProductListingScalarWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => EnumProductListingTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumProductListingTypeFilter>;
    @Field(() => StringFilter, {nullable:true})
    title?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    categoryId?: InstanceType<typeof StringFilter>;
    @Field(() => JsonNullableFilter, {nullable:true})
    selectedCategoryFilters?: InstanceType<typeof JsonNullableFilter>;
    @Field(() => JsonNullableFilter, {nullable:true})
    extendedData?: InstanceType<typeof JsonNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    brandId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    colorId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => EnumProductConditionFilter, {nullable:true})
    productCondition?: InstanceType<typeof EnumProductConditionFilter>;
    @Field(() => EnumProductDeliveryModeNullableFilter, {nullable:true})
    productDeliveryMode?: InstanceType<typeof EnumProductDeliveryModeNullableFilter>;
    @Field(() => EnumShippingChargePayerNullableFilter, {nullable:true})
    shippingChargePayer?: InstanceType<typeof EnumShippingChargePayerNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    weightCategoryId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    uploaderId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => FloatFilter, {nullable:true})
    price?: InstanceType<typeof FloatFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    priceString?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringFilter, {nullable:true})
    description?: InstanceType<typeof StringFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    reasonForSelling?: InstanceType<typeof StringNullableFilter>;
    @Field(() => BoolFilter, {nullable:true})
    shippingEnabled?: InstanceType<typeof BoolFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    shippingFrom?: InstanceType<typeof StringNullableFilter>;
    @Field(() => BoolFilter, {nullable:true})
    active?: InstanceType<typeof BoolFilter>;
    @Field(() => BoolFilter, {nullable:true})
    soldOut?: InstanceType<typeof BoolFilter>;
    @Field(() => BoolFilter, {nullable:true})
    blackListed?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    wishlistedUserIds?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    legacyHash?: InstanceType<typeof StringNullableFilter>;
    @Field(() => BoolFilter, {nullable:true})
    archived?: InstanceType<typeof BoolFilter>;
    @Field(() => EnumPreferredGenderNullableFilter, {nullable:true})
    categoryPreferredGender?: InstanceType<typeof EnumPreferredGenderNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    uploaderEduInstituteId?: InstanceType<typeof StringNullableFilter>;
}

@InputType()
export class ProductListingSumOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    price?: `${SortOrder}`;
}

@InputType()
export class ProductListingUncheckedCreateNestedManyWithoutBrandInput {
    @Field(() => [ProductListingCreateWithoutBrandInput], {nullable:true})
    @Type(() => ProductListingCreateWithoutBrandInput)
    create?: Array<ProductListingCreateWithoutBrandInput>;
    @Field(() => [ProductListingCreateOrConnectWithoutBrandInput], {nullable:true})
    @Type(() => ProductListingCreateOrConnectWithoutBrandInput)
    connectOrCreate?: Array<ProductListingCreateOrConnectWithoutBrandInput>;
    @Field(() => ProductListingCreateManyBrandInputEnvelope, {nullable:true})
    @Type(() => ProductListingCreateManyBrandInputEnvelope)
    createMany?: InstanceType<typeof ProductListingCreateManyBrandInputEnvelope>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
}

@InputType()
export class ProductListingUncheckedCreateNestedManyWithoutCategoryInput {
    @Field(() => [ProductListingCreateWithoutCategoryInput], {nullable:true})
    @Type(() => ProductListingCreateWithoutCategoryInput)
    create?: Array<ProductListingCreateWithoutCategoryInput>;
    @Field(() => [ProductListingCreateOrConnectWithoutCategoryInput], {nullable:true})
    @Type(() => ProductListingCreateOrConnectWithoutCategoryInput)
    connectOrCreate?: Array<ProductListingCreateOrConnectWithoutCategoryInput>;
    @Field(() => ProductListingCreateManyCategoryInputEnvelope, {nullable:true})
    @Type(() => ProductListingCreateManyCategoryInputEnvelope)
    createMany?: InstanceType<typeof ProductListingCreateManyCategoryInputEnvelope>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
}

@InputType()
export class ProductListingUncheckedCreateNestedManyWithoutColorInput {
    @Field(() => [ProductListingCreateWithoutColorInput], {nullable:true})
    @Type(() => ProductListingCreateWithoutColorInput)
    create?: Array<ProductListingCreateWithoutColorInput>;
    @Field(() => [ProductListingCreateOrConnectWithoutColorInput], {nullable:true})
    @Type(() => ProductListingCreateOrConnectWithoutColorInput)
    connectOrCreate?: Array<ProductListingCreateOrConnectWithoutColorInput>;
    @Field(() => ProductListingCreateManyColorInputEnvelope, {nullable:true})
    @Type(() => ProductListingCreateManyColorInputEnvelope)
    createMany?: InstanceType<typeof ProductListingCreateManyColorInputEnvelope>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
}

@InputType()
export class ProductListingUncheckedCreateNestedManyWithoutUploaderEduInstituteInput {
    @Field(() => [ProductListingCreateWithoutUploaderEduInstituteInput], {nullable:true})
    @Type(() => ProductListingCreateWithoutUploaderEduInstituteInput)
    create?: Array<ProductListingCreateWithoutUploaderEduInstituteInput>;
    @Field(() => [ProductListingCreateOrConnectWithoutUploaderEduInstituteInput], {nullable:true})
    @Type(() => ProductListingCreateOrConnectWithoutUploaderEduInstituteInput)
    connectOrCreate?: Array<ProductListingCreateOrConnectWithoutUploaderEduInstituteInput>;
    @Field(() => ProductListingCreateManyUploaderEduInstituteInputEnvelope, {nullable:true})
    @Type(() => ProductListingCreateManyUploaderEduInstituteInputEnvelope)
    createMany?: InstanceType<typeof ProductListingCreateManyUploaderEduInstituteInputEnvelope>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
}

@InputType()
export class ProductListingUncheckedCreateNestedManyWithoutUploaderInput {
    @Field(() => [ProductListingCreateWithoutUploaderInput], {nullable:true})
    @Type(() => ProductListingCreateWithoutUploaderInput)
    create?: Array<ProductListingCreateWithoutUploaderInput>;
    @Field(() => [ProductListingCreateOrConnectWithoutUploaderInput], {nullable:true})
    @Type(() => ProductListingCreateOrConnectWithoutUploaderInput)
    connectOrCreate?: Array<ProductListingCreateOrConnectWithoutUploaderInput>;
    @Field(() => ProductListingCreateManyUploaderInputEnvelope, {nullable:true})
    @Type(() => ProductListingCreateManyUploaderInputEnvelope)
    createMany?: InstanceType<typeof ProductListingCreateManyUploaderInputEnvelope>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
}

@InputType()
export class ProductListingUncheckedCreateNestedManyWithoutWeightCategoryInput {
    @Field(() => [ProductListingCreateWithoutWeightCategoryInput], {nullable:true})
    @Type(() => ProductListingCreateWithoutWeightCategoryInput)
    create?: Array<ProductListingCreateWithoutWeightCategoryInput>;
    @Field(() => [ProductListingCreateOrConnectWithoutWeightCategoryInput], {nullable:true})
    @Type(() => ProductListingCreateOrConnectWithoutWeightCategoryInput)
    connectOrCreate?: Array<ProductListingCreateOrConnectWithoutWeightCategoryInput>;
    @Field(() => ProductListingCreateManyWeightCategoryInputEnvelope, {nullable:true})
    @Type(() => ProductListingCreateManyWeightCategoryInputEnvelope)
    createMany?: InstanceType<typeof ProductListingCreateManyWeightCategoryInputEnvelope>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
}

@InputType()
export class ProductListingUncheckedCreateNestedManyWithoutWishlistedByInput {
    @Field(() => [ProductListingCreateWithoutWishlistedByInput], {nullable:true})
    @Type(() => ProductListingCreateWithoutWishlistedByInput)
    create?: Array<ProductListingCreateWithoutWishlistedByInput>;
    @Field(() => [ProductListingCreateOrConnectWithoutWishlistedByInput], {nullable:true})
    @Type(() => ProductListingCreateOrConnectWithoutWishlistedByInput)
    connectOrCreate?: Array<ProductListingCreateOrConnectWithoutWishlistedByInput>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
}

@InputType()
export class ProductListingUncheckedCreateWithoutBrandInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => ProductListingType, {nullable:false})
    type!: `${ProductListingType}`;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => String, {nullable:false})
    categoryId!: string;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => String, {nullable:true})
    colorId?: string;
    @Field(() => ProductCondition, {nullable:false})
    productCondition!: `${ProductCondition}`;
    @Field(() => ProductDeliveryMode, {nullable:true})
    productDeliveryMode?: `${ProductDeliveryMode}`;
    @Field(() => ShippingChargePayer, {nullable:true})
    shippingChargePayer?: `${ShippingChargePayer}`;
    @Field(() => RentingPreferenceNullableCreateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableCreateEnvelopeInput>;
    @Field(() => String, {nullable:true})
    weightCategoryId?: string;
    @Field(() => String, {nullable:true})
    uploaderId?: string;
    @Field(() => Float, {nullable:false})
    price!: number;
    @Field(() => String, {nullable:true})
    priceString?: string;
    @Field(() => String, {nullable:false})
    description!: string;
    @Field(() => String, {nullable:true})
    reasonForSelling?: string;
    @Field(() => Boolean, {nullable:true})
    shippingEnabled?: boolean;
    @Field(() => String, {nullable:true})
    shippingFrom?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Boolean, {nullable:true})
    soldOut?: boolean;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => ProductListingCreatewishlistedUserIdsInput, {nullable:true})
    wishlistedUserIds?: InstanceType<typeof ProductListingCreatewishlistedUserIdsInput>;
    @Field(() => String, {nullable:true})
    legacyHash?: string;
    @Field(() => Boolean, {nullable:true})
    archived?: boolean;
    @Field(() => PreferredGender, {nullable:true})
    categoryPreferredGender?: `${PreferredGender}`;
    @Field(() => String, {nullable:true})
    uploaderEduInstituteId?: string;
    @Field(() => UserUncheckedCreateNestedManyWithoutWishlistInput, {nullable:true})
    wishlistedBy?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutWishlistInput>;
    @Field(() => ConversationUncheckedCreateNestedManyWithoutProductInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUncheckedCreateNestedManyWithoutProductInput>;
    @Field(() => ProductReportUncheckedCreateNestedManyWithoutProductInput, {nullable:true})
    reports?: InstanceType<typeof ProductReportUncheckedCreateNestedManyWithoutProductInput>;
}

@InputType()
export class ProductListingUncheckedCreateWithoutCategoryInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => ProductListingType, {nullable:false})
    type!: `${ProductListingType}`;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => String, {nullable:true})
    brandId?: string;
    @Field(() => String, {nullable:true})
    colorId?: string;
    @Field(() => ProductCondition, {nullable:false})
    productCondition!: `${ProductCondition}`;
    @Field(() => ProductDeliveryMode, {nullable:true})
    productDeliveryMode?: `${ProductDeliveryMode}`;
    @Field(() => ShippingChargePayer, {nullable:true})
    shippingChargePayer?: `${ShippingChargePayer}`;
    @Field(() => RentingPreferenceNullableCreateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableCreateEnvelopeInput>;
    @Field(() => String, {nullable:true})
    weightCategoryId?: string;
    @Field(() => String, {nullable:true})
    uploaderId?: string;
    @Field(() => Float, {nullable:false})
    price!: number;
    @Field(() => String, {nullable:true})
    priceString?: string;
    @Field(() => String, {nullable:false})
    description!: string;
    @Field(() => String, {nullable:true})
    reasonForSelling?: string;
    @Field(() => Boolean, {nullable:true})
    shippingEnabled?: boolean;
    @Field(() => String, {nullable:true})
    shippingFrom?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Boolean, {nullable:true})
    soldOut?: boolean;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => ProductListingCreatewishlistedUserIdsInput, {nullable:true})
    wishlistedUserIds?: InstanceType<typeof ProductListingCreatewishlistedUserIdsInput>;
    @Field(() => String, {nullable:true})
    legacyHash?: string;
    @Field(() => Boolean, {nullable:true})
    archived?: boolean;
    @Field(() => PreferredGender, {nullable:true})
    categoryPreferredGender?: `${PreferredGender}`;
    @Field(() => String, {nullable:true})
    uploaderEduInstituteId?: string;
    @Field(() => UserUncheckedCreateNestedManyWithoutWishlistInput, {nullable:true})
    wishlistedBy?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutWishlistInput>;
    @Field(() => ConversationUncheckedCreateNestedManyWithoutProductInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUncheckedCreateNestedManyWithoutProductInput>;
    @Field(() => ProductReportUncheckedCreateNestedManyWithoutProductInput, {nullable:true})
    reports?: InstanceType<typeof ProductReportUncheckedCreateNestedManyWithoutProductInput>;
}

@InputType()
export class ProductListingUncheckedCreateWithoutColorInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => ProductListingType, {nullable:false})
    type!: `${ProductListingType}`;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => String, {nullable:false})
    categoryId!: string;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => String, {nullable:true})
    brandId?: string;
    @Field(() => ProductCondition, {nullable:false})
    productCondition!: `${ProductCondition}`;
    @Field(() => ProductDeliveryMode, {nullable:true})
    productDeliveryMode?: `${ProductDeliveryMode}`;
    @Field(() => ShippingChargePayer, {nullable:true})
    shippingChargePayer?: `${ShippingChargePayer}`;
    @Field(() => RentingPreferenceNullableCreateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableCreateEnvelopeInput>;
    @Field(() => String, {nullable:true})
    weightCategoryId?: string;
    @Field(() => String, {nullable:true})
    uploaderId?: string;
    @Field(() => Float, {nullable:false})
    price!: number;
    @Field(() => String, {nullable:true})
    priceString?: string;
    @Field(() => String, {nullable:false})
    description!: string;
    @Field(() => String, {nullable:true})
    reasonForSelling?: string;
    @Field(() => Boolean, {nullable:true})
    shippingEnabled?: boolean;
    @Field(() => String, {nullable:true})
    shippingFrom?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Boolean, {nullable:true})
    soldOut?: boolean;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => ProductListingCreatewishlistedUserIdsInput, {nullable:true})
    wishlistedUserIds?: InstanceType<typeof ProductListingCreatewishlistedUserIdsInput>;
    @Field(() => String, {nullable:true})
    legacyHash?: string;
    @Field(() => Boolean, {nullable:true})
    archived?: boolean;
    @Field(() => PreferredGender, {nullable:true})
    categoryPreferredGender?: `${PreferredGender}`;
    @Field(() => String, {nullable:true})
    uploaderEduInstituteId?: string;
    @Field(() => UserUncheckedCreateNestedManyWithoutWishlistInput, {nullable:true})
    wishlistedBy?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutWishlistInput>;
    @Field(() => ConversationUncheckedCreateNestedManyWithoutProductInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUncheckedCreateNestedManyWithoutProductInput>;
    @Field(() => ProductReportUncheckedCreateNestedManyWithoutProductInput, {nullable:true})
    reports?: InstanceType<typeof ProductReportUncheckedCreateNestedManyWithoutProductInput>;
}

@InputType()
export class ProductListingUncheckedCreateWithoutConversationsInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => ProductListingType, {nullable:false})
    type!: `${ProductListingType}`;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => String, {nullable:false})
    categoryId!: string;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => String, {nullable:true})
    brandId?: string;
    @Field(() => String, {nullable:true})
    colorId?: string;
    @Field(() => ProductCondition, {nullable:false})
    productCondition!: `${ProductCondition}`;
    @Field(() => ProductDeliveryMode, {nullable:true})
    productDeliveryMode?: `${ProductDeliveryMode}`;
    @Field(() => ShippingChargePayer, {nullable:true})
    shippingChargePayer?: `${ShippingChargePayer}`;
    @Field(() => RentingPreferenceNullableCreateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableCreateEnvelopeInput>;
    @Field(() => String, {nullable:true})
    weightCategoryId?: string;
    @Field(() => String, {nullable:true})
    uploaderId?: string;
    @Field(() => Float, {nullable:false})
    price!: number;
    @Field(() => String, {nullable:true})
    priceString?: string;
    @Field(() => String, {nullable:false})
    description!: string;
    @Field(() => String, {nullable:true})
    reasonForSelling?: string;
    @Field(() => Boolean, {nullable:true})
    shippingEnabled?: boolean;
    @Field(() => String, {nullable:true})
    shippingFrom?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Boolean, {nullable:true})
    soldOut?: boolean;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => ProductListingCreatewishlistedUserIdsInput, {nullable:true})
    wishlistedUserIds?: InstanceType<typeof ProductListingCreatewishlistedUserIdsInput>;
    @Field(() => String, {nullable:true})
    legacyHash?: string;
    @Field(() => Boolean, {nullable:true})
    archived?: boolean;
    @Field(() => PreferredGender, {nullable:true})
    categoryPreferredGender?: `${PreferredGender}`;
    @Field(() => String, {nullable:true})
    uploaderEduInstituteId?: string;
    @Field(() => UserUncheckedCreateNestedManyWithoutWishlistInput, {nullable:true})
    wishlistedBy?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutWishlistInput>;
    @Field(() => ProductReportUncheckedCreateNestedManyWithoutProductInput, {nullable:true})
    reports?: InstanceType<typeof ProductReportUncheckedCreateNestedManyWithoutProductInput>;
}

@InputType()
export class ProductListingUncheckedCreateWithoutReportsInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => ProductListingType, {nullable:false})
    type!: `${ProductListingType}`;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => String, {nullable:false})
    categoryId!: string;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => String, {nullable:true})
    brandId?: string;
    @Field(() => String, {nullable:true})
    colorId?: string;
    @Field(() => ProductCondition, {nullable:false})
    productCondition!: `${ProductCondition}`;
    @Field(() => ProductDeliveryMode, {nullable:true})
    productDeliveryMode?: `${ProductDeliveryMode}`;
    @Field(() => ShippingChargePayer, {nullable:true})
    shippingChargePayer?: `${ShippingChargePayer}`;
    @Field(() => RentingPreferenceNullableCreateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableCreateEnvelopeInput>;
    @Field(() => String, {nullable:true})
    weightCategoryId?: string;
    @Field(() => String, {nullable:true})
    uploaderId?: string;
    @Field(() => Float, {nullable:false})
    price!: number;
    @Field(() => String, {nullable:true})
    priceString?: string;
    @Field(() => String, {nullable:false})
    description!: string;
    @Field(() => String, {nullable:true})
    reasonForSelling?: string;
    @Field(() => Boolean, {nullable:true})
    shippingEnabled?: boolean;
    @Field(() => String, {nullable:true})
    shippingFrom?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Boolean, {nullable:true})
    soldOut?: boolean;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => ProductListingCreatewishlistedUserIdsInput, {nullable:true})
    wishlistedUserIds?: InstanceType<typeof ProductListingCreatewishlistedUserIdsInput>;
    @Field(() => String, {nullable:true})
    legacyHash?: string;
    @Field(() => Boolean, {nullable:true})
    archived?: boolean;
    @Field(() => PreferredGender, {nullable:true})
    categoryPreferredGender?: `${PreferredGender}`;
    @Field(() => String, {nullable:true})
    uploaderEduInstituteId?: string;
    @Field(() => UserUncheckedCreateNestedManyWithoutWishlistInput, {nullable:true})
    wishlistedBy?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutWishlistInput>;
    @Field(() => ConversationUncheckedCreateNestedManyWithoutProductInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUncheckedCreateNestedManyWithoutProductInput>;
}

@InputType()
export class ProductListingUncheckedCreateWithoutUploaderEduInstituteInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => ProductListingType, {nullable:false})
    type!: `${ProductListingType}`;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => String, {nullable:false})
    categoryId!: string;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => String, {nullable:true})
    brandId?: string;
    @Field(() => String, {nullable:true})
    colorId?: string;
    @Field(() => ProductCondition, {nullable:false})
    productCondition!: `${ProductCondition}`;
    @Field(() => ProductDeliveryMode, {nullable:true})
    productDeliveryMode?: `${ProductDeliveryMode}`;
    @Field(() => ShippingChargePayer, {nullable:true})
    shippingChargePayer?: `${ShippingChargePayer}`;
    @Field(() => RentingPreferenceNullableCreateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableCreateEnvelopeInput>;
    @Field(() => String, {nullable:true})
    weightCategoryId?: string;
    @Field(() => String, {nullable:true})
    uploaderId?: string;
    @Field(() => Float, {nullable:false})
    price!: number;
    @Field(() => String, {nullable:true})
    priceString?: string;
    @Field(() => String, {nullable:false})
    description!: string;
    @Field(() => String, {nullable:true})
    reasonForSelling?: string;
    @Field(() => Boolean, {nullable:true})
    shippingEnabled?: boolean;
    @Field(() => String, {nullable:true})
    shippingFrom?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Boolean, {nullable:true})
    soldOut?: boolean;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => ProductListingCreatewishlistedUserIdsInput, {nullable:true})
    wishlistedUserIds?: InstanceType<typeof ProductListingCreatewishlistedUserIdsInput>;
    @Field(() => String, {nullable:true})
    legacyHash?: string;
    @Field(() => Boolean, {nullable:true})
    archived?: boolean;
    @Field(() => PreferredGender, {nullable:true})
    categoryPreferredGender?: `${PreferredGender}`;
    @Field(() => UserUncheckedCreateNestedManyWithoutWishlistInput, {nullable:true})
    wishlistedBy?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutWishlistInput>;
    @Field(() => ConversationUncheckedCreateNestedManyWithoutProductInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUncheckedCreateNestedManyWithoutProductInput>;
    @Field(() => ProductReportUncheckedCreateNestedManyWithoutProductInput, {nullable:true})
    reports?: InstanceType<typeof ProductReportUncheckedCreateNestedManyWithoutProductInput>;
}

@InputType()
export class ProductListingUncheckedCreateWithoutUploaderInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => ProductListingType, {nullable:false})
    type!: `${ProductListingType}`;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => String, {nullable:false})
    categoryId!: string;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => String, {nullable:true})
    brandId?: string;
    @Field(() => String, {nullable:true})
    colorId?: string;
    @Field(() => ProductCondition, {nullable:false})
    productCondition!: `${ProductCondition}`;
    @Field(() => ProductDeliveryMode, {nullable:true})
    productDeliveryMode?: `${ProductDeliveryMode}`;
    @Field(() => ShippingChargePayer, {nullable:true})
    shippingChargePayer?: `${ShippingChargePayer}`;
    @Field(() => RentingPreferenceNullableCreateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableCreateEnvelopeInput>;
    @Field(() => String, {nullable:true})
    weightCategoryId?: string;
    @Field(() => Float, {nullable:false})
    price!: number;
    @Field(() => String, {nullable:true})
    priceString?: string;
    @Field(() => String, {nullable:false})
    description!: string;
    @Field(() => String, {nullable:true})
    reasonForSelling?: string;
    @Field(() => Boolean, {nullable:true})
    shippingEnabled?: boolean;
    @Field(() => String, {nullable:true})
    shippingFrom?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Boolean, {nullable:true})
    soldOut?: boolean;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => ProductListingCreatewishlistedUserIdsInput, {nullable:true})
    wishlistedUserIds?: InstanceType<typeof ProductListingCreatewishlistedUserIdsInput>;
    @Field(() => String, {nullable:true})
    legacyHash?: string;
    @Field(() => Boolean, {nullable:true})
    archived?: boolean;
    @Field(() => PreferredGender, {nullable:true})
    categoryPreferredGender?: `${PreferredGender}`;
    @Field(() => String, {nullable:true})
    uploaderEduInstituteId?: string;
    @Field(() => UserUncheckedCreateNestedManyWithoutWishlistInput, {nullable:true})
    wishlistedBy?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutWishlistInput>;
    @Field(() => ConversationUncheckedCreateNestedManyWithoutProductInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUncheckedCreateNestedManyWithoutProductInput>;
    @Field(() => ProductReportUncheckedCreateNestedManyWithoutProductInput, {nullable:true})
    reports?: InstanceType<typeof ProductReportUncheckedCreateNestedManyWithoutProductInput>;
}

@InputType()
export class ProductListingUncheckedCreateWithoutWeightCategoryInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => ProductListingType, {nullable:false})
    type!: `${ProductListingType}`;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => String, {nullable:false})
    categoryId!: string;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => String, {nullable:true})
    brandId?: string;
    @Field(() => String, {nullable:true})
    colorId?: string;
    @Field(() => ProductCondition, {nullable:false})
    productCondition!: `${ProductCondition}`;
    @Field(() => ProductDeliveryMode, {nullable:true})
    productDeliveryMode?: `${ProductDeliveryMode}`;
    @Field(() => ShippingChargePayer, {nullable:true})
    shippingChargePayer?: `${ShippingChargePayer}`;
    @Field(() => RentingPreferenceNullableCreateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableCreateEnvelopeInput>;
    @Field(() => String, {nullable:true})
    uploaderId?: string;
    @Field(() => Float, {nullable:false})
    price!: number;
    @Field(() => String, {nullable:true})
    priceString?: string;
    @Field(() => String, {nullable:false})
    description!: string;
    @Field(() => String, {nullable:true})
    reasonForSelling?: string;
    @Field(() => Boolean, {nullable:true})
    shippingEnabled?: boolean;
    @Field(() => String, {nullable:true})
    shippingFrom?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Boolean, {nullable:true})
    soldOut?: boolean;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => ProductListingCreatewishlistedUserIdsInput, {nullable:true})
    wishlistedUserIds?: InstanceType<typeof ProductListingCreatewishlistedUserIdsInput>;
    @Field(() => String, {nullable:true})
    legacyHash?: string;
    @Field(() => Boolean, {nullable:true})
    archived?: boolean;
    @Field(() => PreferredGender, {nullable:true})
    categoryPreferredGender?: `${PreferredGender}`;
    @Field(() => String, {nullable:true})
    uploaderEduInstituteId?: string;
    @Field(() => UserUncheckedCreateNestedManyWithoutWishlistInput, {nullable:true})
    wishlistedBy?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutWishlistInput>;
    @Field(() => ConversationUncheckedCreateNestedManyWithoutProductInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUncheckedCreateNestedManyWithoutProductInput>;
    @Field(() => ProductReportUncheckedCreateNestedManyWithoutProductInput, {nullable:true})
    reports?: InstanceType<typeof ProductReportUncheckedCreateNestedManyWithoutProductInput>;
}

@InputType()
export class ProductListingUncheckedCreateWithoutWishlistedByInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => ProductListingType, {nullable:false})
    type!: `${ProductListingType}`;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => String, {nullable:false})
    categoryId!: string;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => String, {nullable:true})
    brandId?: string;
    @Field(() => String, {nullable:true})
    colorId?: string;
    @Field(() => ProductCondition, {nullable:false})
    productCondition!: `${ProductCondition}`;
    @Field(() => ProductDeliveryMode, {nullable:true})
    productDeliveryMode?: `${ProductDeliveryMode}`;
    @Field(() => ShippingChargePayer, {nullable:true})
    shippingChargePayer?: `${ShippingChargePayer}`;
    @Field(() => RentingPreferenceNullableCreateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableCreateEnvelopeInput>;
    @Field(() => String, {nullable:true})
    weightCategoryId?: string;
    @Field(() => String, {nullable:true})
    uploaderId?: string;
    @Field(() => Float, {nullable:false})
    price!: number;
    @Field(() => String, {nullable:true})
    priceString?: string;
    @Field(() => String, {nullable:false})
    description!: string;
    @Field(() => String, {nullable:true})
    reasonForSelling?: string;
    @Field(() => Boolean, {nullable:true})
    shippingEnabled?: boolean;
    @Field(() => String, {nullable:true})
    shippingFrom?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Boolean, {nullable:true})
    soldOut?: boolean;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => ProductListingCreatewishlistedUserIdsInput, {nullable:true})
    wishlistedUserIds?: InstanceType<typeof ProductListingCreatewishlistedUserIdsInput>;
    @Field(() => String, {nullable:true})
    legacyHash?: string;
    @Field(() => Boolean, {nullable:true})
    archived?: boolean;
    @Field(() => PreferredGender, {nullable:true})
    categoryPreferredGender?: `${PreferredGender}`;
    @Field(() => String, {nullable:true})
    uploaderEduInstituteId?: string;
    @Field(() => ConversationUncheckedCreateNestedManyWithoutProductInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUncheckedCreateNestedManyWithoutProductInput>;
    @Field(() => ProductReportUncheckedCreateNestedManyWithoutProductInput, {nullable:true})
    reports?: InstanceType<typeof ProductReportUncheckedCreateNestedManyWithoutProductInput>;
}

@InputType()
export class ProductListingUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => ProductListingType, {nullable:false})
    type!: `${ProductListingType}`;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => String, {nullable:false})
    categoryId!: string;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => String, {nullable:true})
    brandId?: string;
    @Field(() => String, {nullable:true})
    colorId?: string;
    @Field(() => ProductCondition, {nullable:false})
    productCondition!: `${ProductCondition}`;
    @Field(() => ProductDeliveryMode, {nullable:true})
    productDeliveryMode?: `${ProductDeliveryMode}`;
    @Field(() => ShippingChargePayer, {nullable:true})
    shippingChargePayer?: `${ShippingChargePayer}`;
    @Field(() => RentingPreferenceNullableCreateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableCreateEnvelopeInput>;
    @Field(() => String, {nullable:true})
    weightCategoryId?: string;
    @Field(() => String, {nullable:true})
    uploaderId?: string;
    @Field(() => Float, {nullable:false})
    price!: number;
    @Field(() => String, {nullable:true})
    priceString?: string;
    @Field(() => String, {nullable:false})
    description!: string;
    @Field(() => String, {nullable:true})
    reasonForSelling?: string;
    @Field(() => Boolean, {nullable:true})
    shippingEnabled?: boolean;
    @Field(() => String, {nullable:true})
    shippingFrom?: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Boolean, {nullable:true})
    soldOut?: boolean;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => ProductListingCreatewishlistedUserIdsInput, {nullable:true})
    wishlistedUserIds?: InstanceType<typeof ProductListingCreatewishlistedUserIdsInput>;
    @Field(() => String, {nullable:true})
    legacyHash?: string;
    @Field(() => Boolean, {nullable:true})
    archived?: boolean;
    @Field(() => PreferredGender, {nullable:true})
    categoryPreferredGender?: `${PreferredGender}`;
    @Field(() => String, {nullable:true})
    uploaderEduInstituteId?: string;
    @Field(() => UserUncheckedCreateNestedManyWithoutWishlistInput, {nullable:true})
    wishlistedBy?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutWishlistInput>;
    @Field(() => ConversationUncheckedCreateNestedManyWithoutProductInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUncheckedCreateNestedManyWithoutProductInput>;
    @Field(() => ProductReportUncheckedCreateNestedManyWithoutProductInput, {nullable:true})
    reports?: InstanceType<typeof ProductReportUncheckedCreateNestedManyWithoutProductInput>;
}

@InputType()
export class ProductListingUncheckedUpdateManyWithoutBrandNestedInput {
    @Field(() => [ProductListingCreateWithoutBrandInput], {nullable:true})
    @Type(() => ProductListingCreateWithoutBrandInput)
    create?: Array<ProductListingCreateWithoutBrandInput>;
    @Field(() => [ProductListingCreateOrConnectWithoutBrandInput], {nullable:true})
    @Type(() => ProductListingCreateOrConnectWithoutBrandInput)
    connectOrCreate?: Array<ProductListingCreateOrConnectWithoutBrandInput>;
    @Field(() => [ProductListingUpsertWithWhereUniqueWithoutBrandInput], {nullable:true})
    @Type(() => ProductListingUpsertWithWhereUniqueWithoutBrandInput)
    upsert?: Array<ProductListingUpsertWithWhereUniqueWithoutBrandInput>;
    @Field(() => ProductListingCreateManyBrandInputEnvelope, {nullable:true})
    @Type(() => ProductListingCreateManyBrandInputEnvelope)
    createMany?: InstanceType<typeof ProductListingCreateManyBrandInputEnvelope>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    set?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingUpdateWithWhereUniqueWithoutBrandInput], {nullable:true})
    @Type(() => ProductListingUpdateWithWhereUniqueWithoutBrandInput)
    update?: Array<ProductListingUpdateWithWhereUniqueWithoutBrandInput>;
    @Field(() => [ProductListingUpdateManyWithWhereWithoutBrandInput], {nullable:true})
    @Type(() => ProductListingUpdateManyWithWhereWithoutBrandInput)
    updateMany?: Array<ProductListingUpdateManyWithWhereWithoutBrandInput>;
    @Field(() => [ProductListingScalarWhereInput], {nullable:true})
    @Type(() => ProductListingScalarWhereInput)
    deleteMany?: Array<ProductListingScalarWhereInput>;
}

@InputType()
export class ProductListingUncheckedUpdateManyWithoutBrandInput {
    @Field(() => EnumProductListingTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumProductListingTypeFieldUpdateOperationsInput>;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    categoryId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    colorId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => EnumProductConditionFieldUpdateOperationsInput, {nullable:true})
    productCondition?: InstanceType<typeof EnumProductConditionFieldUpdateOperationsInput>;
    @Field(() => NullableEnumProductDeliveryModeFieldUpdateOperationsInput, {nullable:true})
    productDeliveryMode?: InstanceType<typeof NullableEnumProductDeliveryModeFieldUpdateOperationsInput>;
    @Field(() => NullableEnumShippingChargePayerFieldUpdateOperationsInput, {nullable:true})
    shippingChargePayer?: InstanceType<typeof NullableEnumShippingChargePayerFieldUpdateOperationsInput>;
    @Field(() => RentingPreferenceNullableUpdateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    weightCategoryId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    uploaderId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    priceString?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    reasonForSelling?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    shippingEnabled?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    shippingFrom?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    soldOut?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => ProductListingUpdatewishlistedUserIdsInput, {nullable:true})
    wishlistedUserIds?: InstanceType<typeof ProductListingUpdatewishlistedUserIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyHash?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    archived?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableEnumPreferredGenderFieldUpdateOperationsInput, {nullable:true})
    categoryPreferredGender?: InstanceType<typeof NullableEnumPreferredGenderFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    uploaderEduInstituteId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
}

@InputType()
export class ProductListingUncheckedUpdateManyWithoutCategoryNestedInput {
    @Field(() => [ProductListingCreateWithoutCategoryInput], {nullable:true})
    @Type(() => ProductListingCreateWithoutCategoryInput)
    create?: Array<ProductListingCreateWithoutCategoryInput>;
    @Field(() => [ProductListingCreateOrConnectWithoutCategoryInput], {nullable:true})
    @Type(() => ProductListingCreateOrConnectWithoutCategoryInput)
    connectOrCreate?: Array<ProductListingCreateOrConnectWithoutCategoryInput>;
    @Field(() => [ProductListingUpsertWithWhereUniqueWithoutCategoryInput], {nullable:true})
    @Type(() => ProductListingUpsertWithWhereUniqueWithoutCategoryInput)
    upsert?: Array<ProductListingUpsertWithWhereUniqueWithoutCategoryInput>;
    @Field(() => ProductListingCreateManyCategoryInputEnvelope, {nullable:true})
    @Type(() => ProductListingCreateManyCategoryInputEnvelope)
    createMany?: InstanceType<typeof ProductListingCreateManyCategoryInputEnvelope>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    set?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingUpdateWithWhereUniqueWithoutCategoryInput], {nullable:true})
    @Type(() => ProductListingUpdateWithWhereUniqueWithoutCategoryInput)
    update?: Array<ProductListingUpdateWithWhereUniqueWithoutCategoryInput>;
    @Field(() => [ProductListingUpdateManyWithWhereWithoutCategoryInput], {nullable:true})
    @Type(() => ProductListingUpdateManyWithWhereWithoutCategoryInput)
    updateMany?: Array<ProductListingUpdateManyWithWhereWithoutCategoryInput>;
    @Field(() => [ProductListingScalarWhereInput], {nullable:true})
    @Type(() => ProductListingScalarWhereInput)
    deleteMany?: Array<ProductListingScalarWhereInput>;
}

@InputType()
export class ProductListingUncheckedUpdateManyWithoutCategoryInput {
    @Field(() => EnumProductListingTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumProductListingTypeFieldUpdateOperationsInput>;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    brandId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    colorId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => EnumProductConditionFieldUpdateOperationsInput, {nullable:true})
    productCondition?: InstanceType<typeof EnumProductConditionFieldUpdateOperationsInput>;
    @Field(() => NullableEnumProductDeliveryModeFieldUpdateOperationsInput, {nullable:true})
    productDeliveryMode?: InstanceType<typeof NullableEnumProductDeliveryModeFieldUpdateOperationsInput>;
    @Field(() => NullableEnumShippingChargePayerFieldUpdateOperationsInput, {nullable:true})
    shippingChargePayer?: InstanceType<typeof NullableEnumShippingChargePayerFieldUpdateOperationsInput>;
    @Field(() => RentingPreferenceNullableUpdateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    weightCategoryId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    uploaderId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    priceString?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    reasonForSelling?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    shippingEnabled?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    shippingFrom?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    soldOut?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => ProductListingUpdatewishlistedUserIdsInput, {nullable:true})
    wishlistedUserIds?: InstanceType<typeof ProductListingUpdatewishlistedUserIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyHash?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    archived?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableEnumPreferredGenderFieldUpdateOperationsInput, {nullable:true})
    categoryPreferredGender?: InstanceType<typeof NullableEnumPreferredGenderFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    uploaderEduInstituteId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
}

@InputType()
export class ProductListingUncheckedUpdateManyWithoutColorNestedInput {
    @Field(() => [ProductListingCreateWithoutColorInput], {nullable:true})
    @Type(() => ProductListingCreateWithoutColorInput)
    create?: Array<ProductListingCreateWithoutColorInput>;
    @Field(() => [ProductListingCreateOrConnectWithoutColorInput], {nullable:true})
    @Type(() => ProductListingCreateOrConnectWithoutColorInput)
    connectOrCreate?: Array<ProductListingCreateOrConnectWithoutColorInput>;
    @Field(() => [ProductListingUpsertWithWhereUniqueWithoutColorInput], {nullable:true})
    @Type(() => ProductListingUpsertWithWhereUniqueWithoutColorInput)
    upsert?: Array<ProductListingUpsertWithWhereUniqueWithoutColorInput>;
    @Field(() => ProductListingCreateManyColorInputEnvelope, {nullable:true})
    @Type(() => ProductListingCreateManyColorInputEnvelope)
    createMany?: InstanceType<typeof ProductListingCreateManyColorInputEnvelope>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    set?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingUpdateWithWhereUniqueWithoutColorInput], {nullable:true})
    @Type(() => ProductListingUpdateWithWhereUniqueWithoutColorInput)
    update?: Array<ProductListingUpdateWithWhereUniqueWithoutColorInput>;
    @Field(() => [ProductListingUpdateManyWithWhereWithoutColorInput], {nullable:true})
    @Type(() => ProductListingUpdateManyWithWhereWithoutColorInput)
    updateMany?: Array<ProductListingUpdateManyWithWhereWithoutColorInput>;
    @Field(() => [ProductListingScalarWhereInput], {nullable:true})
    @Type(() => ProductListingScalarWhereInput)
    deleteMany?: Array<ProductListingScalarWhereInput>;
}

@InputType()
export class ProductListingUncheckedUpdateManyWithoutColorInput {
    @Field(() => EnumProductListingTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumProductListingTypeFieldUpdateOperationsInput>;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    categoryId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    brandId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => EnumProductConditionFieldUpdateOperationsInput, {nullable:true})
    productCondition?: InstanceType<typeof EnumProductConditionFieldUpdateOperationsInput>;
    @Field(() => NullableEnumProductDeliveryModeFieldUpdateOperationsInput, {nullable:true})
    productDeliveryMode?: InstanceType<typeof NullableEnumProductDeliveryModeFieldUpdateOperationsInput>;
    @Field(() => NullableEnumShippingChargePayerFieldUpdateOperationsInput, {nullable:true})
    shippingChargePayer?: InstanceType<typeof NullableEnumShippingChargePayerFieldUpdateOperationsInput>;
    @Field(() => RentingPreferenceNullableUpdateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    weightCategoryId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    uploaderId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    priceString?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    reasonForSelling?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    shippingEnabled?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    shippingFrom?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    soldOut?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => ProductListingUpdatewishlistedUserIdsInput, {nullable:true})
    wishlistedUserIds?: InstanceType<typeof ProductListingUpdatewishlistedUserIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyHash?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    archived?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableEnumPreferredGenderFieldUpdateOperationsInput, {nullable:true})
    categoryPreferredGender?: InstanceType<typeof NullableEnumPreferredGenderFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    uploaderEduInstituteId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
}

@InputType()
export class ProductListingUncheckedUpdateManyWithoutUploaderEduInstituteNestedInput {
    @Field(() => [ProductListingCreateWithoutUploaderEduInstituteInput], {nullable:true})
    @Type(() => ProductListingCreateWithoutUploaderEduInstituteInput)
    create?: Array<ProductListingCreateWithoutUploaderEduInstituteInput>;
    @Field(() => [ProductListingCreateOrConnectWithoutUploaderEduInstituteInput], {nullable:true})
    @Type(() => ProductListingCreateOrConnectWithoutUploaderEduInstituteInput)
    connectOrCreate?: Array<ProductListingCreateOrConnectWithoutUploaderEduInstituteInput>;
    @Field(() => [ProductListingUpsertWithWhereUniqueWithoutUploaderEduInstituteInput], {nullable:true})
    @Type(() => ProductListingUpsertWithWhereUniqueWithoutUploaderEduInstituteInput)
    upsert?: Array<ProductListingUpsertWithWhereUniqueWithoutUploaderEduInstituteInput>;
    @Field(() => ProductListingCreateManyUploaderEduInstituteInputEnvelope, {nullable:true})
    @Type(() => ProductListingCreateManyUploaderEduInstituteInputEnvelope)
    createMany?: InstanceType<typeof ProductListingCreateManyUploaderEduInstituteInputEnvelope>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    set?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingUpdateWithWhereUniqueWithoutUploaderEduInstituteInput], {nullable:true})
    @Type(() => ProductListingUpdateWithWhereUniqueWithoutUploaderEduInstituteInput)
    update?: Array<ProductListingUpdateWithWhereUniqueWithoutUploaderEduInstituteInput>;
    @Field(() => [ProductListingUpdateManyWithWhereWithoutUploaderEduInstituteInput], {nullable:true})
    @Type(() => ProductListingUpdateManyWithWhereWithoutUploaderEduInstituteInput)
    updateMany?: Array<ProductListingUpdateManyWithWhereWithoutUploaderEduInstituteInput>;
    @Field(() => [ProductListingScalarWhereInput], {nullable:true})
    @Type(() => ProductListingScalarWhereInput)
    deleteMany?: Array<ProductListingScalarWhereInput>;
}

@InputType()
export class ProductListingUncheckedUpdateManyWithoutUploaderEduInstituteInput {
    @Field(() => EnumProductListingTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumProductListingTypeFieldUpdateOperationsInput>;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    categoryId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    brandId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    colorId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => EnumProductConditionFieldUpdateOperationsInput, {nullable:true})
    productCondition?: InstanceType<typeof EnumProductConditionFieldUpdateOperationsInput>;
    @Field(() => NullableEnumProductDeliveryModeFieldUpdateOperationsInput, {nullable:true})
    productDeliveryMode?: InstanceType<typeof NullableEnumProductDeliveryModeFieldUpdateOperationsInput>;
    @Field(() => NullableEnumShippingChargePayerFieldUpdateOperationsInput, {nullable:true})
    shippingChargePayer?: InstanceType<typeof NullableEnumShippingChargePayerFieldUpdateOperationsInput>;
    @Field(() => RentingPreferenceNullableUpdateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    weightCategoryId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    uploaderId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    priceString?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    reasonForSelling?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    shippingEnabled?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    shippingFrom?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    soldOut?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => ProductListingUpdatewishlistedUserIdsInput, {nullable:true})
    wishlistedUserIds?: InstanceType<typeof ProductListingUpdatewishlistedUserIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyHash?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    archived?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableEnumPreferredGenderFieldUpdateOperationsInput, {nullable:true})
    categoryPreferredGender?: InstanceType<typeof NullableEnumPreferredGenderFieldUpdateOperationsInput>;
}

@InputType()
export class ProductListingUncheckedUpdateManyWithoutUploaderNestedInput {
    @Field(() => [ProductListingCreateWithoutUploaderInput], {nullable:true})
    @Type(() => ProductListingCreateWithoutUploaderInput)
    create?: Array<ProductListingCreateWithoutUploaderInput>;
    @Field(() => [ProductListingCreateOrConnectWithoutUploaderInput], {nullable:true})
    @Type(() => ProductListingCreateOrConnectWithoutUploaderInput)
    connectOrCreate?: Array<ProductListingCreateOrConnectWithoutUploaderInput>;
    @Field(() => [ProductListingUpsertWithWhereUniqueWithoutUploaderInput], {nullable:true})
    @Type(() => ProductListingUpsertWithWhereUniqueWithoutUploaderInput)
    upsert?: Array<ProductListingUpsertWithWhereUniqueWithoutUploaderInput>;
    @Field(() => ProductListingCreateManyUploaderInputEnvelope, {nullable:true})
    @Type(() => ProductListingCreateManyUploaderInputEnvelope)
    createMany?: InstanceType<typeof ProductListingCreateManyUploaderInputEnvelope>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    set?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingUpdateWithWhereUniqueWithoutUploaderInput], {nullable:true})
    @Type(() => ProductListingUpdateWithWhereUniqueWithoutUploaderInput)
    update?: Array<ProductListingUpdateWithWhereUniqueWithoutUploaderInput>;
    @Field(() => [ProductListingUpdateManyWithWhereWithoutUploaderInput], {nullable:true})
    @Type(() => ProductListingUpdateManyWithWhereWithoutUploaderInput)
    updateMany?: Array<ProductListingUpdateManyWithWhereWithoutUploaderInput>;
    @Field(() => [ProductListingScalarWhereInput], {nullable:true})
    @Type(() => ProductListingScalarWhereInput)
    deleteMany?: Array<ProductListingScalarWhereInput>;
}

@InputType()
export class ProductListingUncheckedUpdateManyWithoutUploaderInput {
    @Field(() => EnumProductListingTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumProductListingTypeFieldUpdateOperationsInput>;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    categoryId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    brandId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    colorId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => EnumProductConditionFieldUpdateOperationsInput, {nullable:true})
    productCondition?: InstanceType<typeof EnumProductConditionFieldUpdateOperationsInput>;
    @Field(() => NullableEnumProductDeliveryModeFieldUpdateOperationsInput, {nullable:true})
    productDeliveryMode?: InstanceType<typeof NullableEnumProductDeliveryModeFieldUpdateOperationsInput>;
    @Field(() => NullableEnumShippingChargePayerFieldUpdateOperationsInput, {nullable:true})
    shippingChargePayer?: InstanceType<typeof NullableEnumShippingChargePayerFieldUpdateOperationsInput>;
    @Field(() => RentingPreferenceNullableUpdateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    weightCategoryId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    priceString?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    reasonForSelling?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    shippingEnabled?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    shippingFrom?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    soldOut?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => ProductListingUpdatewishlistedUserIdsInput, {nullable:true})
    wishlistedUserIds?: InstanceType<typeof ProductListingUpdatewishlistedUserIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyHash?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    archived?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableEnumPreferredGenderFieldUpdateOperationsInput, {nullable:true})
    categoryPreferredGender?: InstanceType<typeof NullableEnumPreferredGenderFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    uploaderEduInstituteId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
}

@InputType()
export class ProductListingUncheckedUpdateManyWithoutWeightCategoryNestedInput {
    @Field(() => [ProductListingCreateWithoutWeightCategoryInput], {nullable:true})
    @Type(() => ProductListingCreateWithoutWeightCategoryInput)
    create?: Array<ProductListingCreateWithoutWeightCategoryInput>;
    @Field(() => [ProductListingCreateOrConnectWithoutWeightCategoryInput], {nullable:true})
    @Type(() => ProductListingCreateOrConnectWithoutWeightCategoryInput)
    connectOrCreate?: Array<ProductListingCreateOrConnectWithoutWeightCategoryInput>;
    @Field(() => [ProductListingUpsertWithWhereUniqueWithoutWeightCategoryInput], {nullable:true})
    @Type(() => ProductListingUpsertWithWhereUniqueWithoutWeightCategoryInput)
    upsert?: Array<ProductListingUpsertWithWhereUniqueWithoutWeightCategoryInput>;
    @Field(() => ProductListingCreateManyWeightCategoryInputEnvelope, {nullable:true})
    @Type(() => ProductListingCreateManyWeightCategoryInputEnvelope)
    createMany?: InstanceType<typeof ProductListingCreateManyWeightCategoryInputEnvelope>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    set?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingUpdateWithWhereUniqueWithoutWeightCategoryInput], {nullable:true})
    @Type(() => ProductListingUpdateWithWhereUniqueWithoutWeightCategoryInput)
    update?: Array<ProductListingUpdateWithWhereUniqueWithoutWeightCategoryInput>;
    @Field(() => [ProductListingUpdateManyWithWhereWithoutWeightCategoryInput], {nullable:true})
    @Type(() => ProductListingUpdateManyWithWhereWithoutWeightCategoryInput)
    updateMany?: Array<ProductListingUpdateManyWithWhereWithoutWeightCategoryInput>;
    @Field(() => [ProductListingScalarWhereInput], {nullable:true})
    @Type(() => ProductListingScalarWhereInput)
    deleteMany?: Array<ProductListingScalarWhereInput>;
}

@InputType()
export class ProductListingUncheckedUpdateManyWithoutWeightCategoryInput {
    @Field(() => EnumProductListingTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumProductListingTypeFieldUpdateOperationsInput>;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    categoryId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    brandId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    colorId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => EnumProductConditionFieldUpdateOperationsInput, {nullable:true})
    productCondition?: InstanceType<typeof EnumProductConditionFieldUpdateOperationsInput>;
    @Field(() => NullableEnumProductDeliveryModeFieldUpdateOperationsInput, {nullable:true})
    productDeliveryMode?: InstanceType<typeof NullableEnumProductDeliveryModeFieldUpdateOperationsInput>;
    @Field(() => NullableEnumShippingChargePayerFieldUpdateOperationsInput, {nullable:true})
    shippingChargePayer?: InstanceType<typeof NullableEnumShippingChargePayerFieldUpdateOperationsInput>;
    @Field(() => RentingPreferenceNullableUpdateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    uploaderId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    priceString?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    reasonForSelling?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    shippingEnabled?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    shippingFrom?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    soldOut?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => ProductListingUpdatewishlistedUserIdsInput, {nullable:true})
    wishlistedUserIds?: InstanceType<typeof ProductListingUpdatewishlistedUserIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyHash?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    archived?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableEnumPreferredGenderFieldUpdateOperationsInput, {nullable:true})
    categoryPreferredGender?: InstanceType<typeof NullableEnumPreferredGenderFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    uploaderEduInstituteId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
}

@InputType()
export class ProductListingUncheckedUpdateManyWithoutWishlistedByNestedInput {
    @Field(() => [ProductListingCreateWithoutWishlistedByInput], {nullable:true})
    @Type(() => ProductListingCreateWithoutWishlistedByInput)
    create?: Array<ProductListingCreateWithoutWishlistedByInput>;
    @Field(() => [ProductListingCreateOrConnectWithoutWishlistedByInput], {nullable:true})
    @Type(() => ProductListingCreateOrConnectWithoutWishlistedByInput)
    connectOrCreate?: Array<ProductListingCreateOrConnectWithoutWishlistedByInput>;
    @Field(() => [ProductListingUpsertWithWhereUniqueWithoutWishlistedByInput], {nullable:true})
    @Type(() => ProductListingUpsertWithWhereUniqueWithoutWishlistedByInput)
    upsert?: Array<ProductListingUpsertWithWhereUniqueWithoutWishlistedByInput>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    set?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingUpdateWithWhereUniqueWithoutWishlistedByInput], {nullable:true})
    @Type(() => ProductListingUpdateWithWhereUniqueWithoutWishlistedByInput)
    update?: Array<ProductListingUpdateWithWhereUniqueWithoutWishlistedByInput>;
    @Field(() => [ProductListingUpdateManyWithWhereWithoutWishlistedByInput], {nullable:true})
    @Type(() => ProductListingUpdateManyWithWhereWithoutWishlistedByInput)
    updateMany?: Array<ProductListingUpdateManyWithWhereWithoutWishlistedByInput>;
    @Field(() => [ProductListingScalarWhereInput], {nullable:true})
    @Type(() => ProductListingScalarWhereInput)
    deleteMany?: Array<ProductListingScalarWhereInput>;
}

@InputType()
export class ProductListingUncheckedUpdateManyWithoutWishlistedByInput {
    @Field(() => EnumProductListingTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumProductListingTypeFieldUpdateOperationsInput>;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    categoryId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    brandId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    colorId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => EnumProductConditionFieldUpdateOperationsInput, {nullable:true})
    productCondition?: InstanceType<typeof EnumProductConditionFieldUpdateOperationsInput>;
    @Field(() => NullableEnumProductDeliveryModeFieldUpdateOperationsInput, {nullable:true})
    productDeliveryMode?: InstanceType<typeof NullableEnumProductDeliveryModeFieldUpdateOperationsInput>;
    @Field(() => NullableEnumShippingChargePayerFieldUpdateOperationsInput, {nullable:true})
    shippingChargePayer?: InstanceType<typeof NullableEnumShippingChargePayerFieldUpdateOperationsInput>;
    @Field(() => RentingPreferenceNullableUpdateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    weightCategoryId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    uploaderId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    priceString?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    reasonForSelling?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    shippingEnabled?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    shippingFrom?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    soldOut?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => ProductListingUpdatewishlistedUserIdsInput, {nullable:true})
    wishlistedUserIds?: InstanceType<typeof ProductListingUpdatewishlistedUserIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyHash?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    archived?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableEnumPreferredGenderFieldUpdateOperationsInput, {nullable:true})
    categoryPreferredGender?: InstanceType<typeof NullableEnumPreferredGenderFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    uploaderEduInstituteId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
}

@InputType()
export class ProductListingUncheckedUpdateManyInput {
    @Field(() => EnumProductListingTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumProductListingTypeFieldUpdateOperationsInput>;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    categoryId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    brandId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    colorId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => EnumProductConditionFieldUpdateOperationsInput, {nullable:true})
    productCondition?: InstanceType<typeof EnumProductConditionFieldUpdateOperationsInput>;
    @Field(() => NullableEnumProductDeliveryModeFieldUpdateOperationsInput, {nullable:true})
    productDeliveryMode?: InstanceType<typeof NullableEnumProductDeliveryModeFieldUpdateOperationsInput>;
    @Field(() => NullableEnumShippingChargePayerFieldUpdateOperationsInput, {nullable:true})
    shippingChargePayer?: InstanceType<typeof NullableEnumShippingChargePayerFieldUpdateOperationsInput>;
    @Field(() => RentingPreferenceNullableUpdateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    weightCategoryId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    uploaderId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    priceString?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    reasonForSelling?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    shippingEnabled?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    shippingFrom?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    soldOut?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => ProductListingUpdatewishlistedUserIdsInput, {nullable:true})
    wishlistedUserIds?: InstanceType<typeof ProductListingUpdatewishlistedUserIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyHash?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    archived?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableEnumPreferredGenderFieldUpdateOperationsInput, {nullable:true})
    categoryPreferredGender?: InstanceType<typeof NullableEnumPreferredGenderFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    uploaderEduInstituteId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
}

@InputType()
export class ProductListingUncheckedUpdateWithoutBrandInput {
    @Field(() => EnumProductListingTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumProductListingTypeFieldUpdateOperationsInput>;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    categoryId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    colorId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => EnumProductConditionFieldUpdateOperationsInput, {nullable:true})
    productCondition?: InstanceType<typeof EnumProductConditionFieldUpdateOperationsInput>;
    @Field(() => NullableEnumProductDeliveryModeFieldUpdateOperationsInput, {nullable:true})
    productDeliveryMode?: InstanceType<typeof NullableEnumProductDeliveryModeFieldUpdateOperationsInput>;
    @Field(() => NullableEnumShippingChargePayerFieldUpdateOperationsInput, {nullable:true})
    shippingChargePayer?: InstanceType<typeof NullableEnumShippingChargePayerFieldUpdateOperationsInput>;
    @Field(() => RentingPreferenceNullableUpdateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    weightCategoryId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    uploaderId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    priceString?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    reasonForSelling?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    shippingEnabled?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    shippingFrom?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    soldOut?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => ProductListingUpdatewishlistedUserIdsInput, {nullable:true})
    wishlistedUserIds?: InstanceType<typeof ProductListingUpdatewishlistedUserIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyHash?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    archived?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableEnumPreferredGenderFieldUpdateOperationsInput, {nullable:true})
    categoryPreferredGender?: InstanceType<typeof NullableEnumPreferredGenderFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    uploaderEduInstituteId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => UserUncheckedUpdateManyWithoutWishlistNestedInput, {nullable:true})
    wishlistedBy?: InstanceType<typeof UserUncheckedUpdateManyWithoutWishlistNestedInput>;
    @Field(() => ConversationUncheckedUpdateManyWithoutProductNestedInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUncheckedUpdateManyWithoutProductNestedInput>;
    @Field(() => ProductReportUncheckedUpdateManyWithoutProductNestedInput, {nullable:true})
    reports?: InstanceType<typeof ProductReportUncheckedUpdateManyWithoutProductNestedInput>;
}

@InputType()
export class ProductListingUncheckedUpdateWithoutCategoryInput {
    @Field(() => EnumProductListingTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumProductListingTypeFieldUpdateOperationsInput>;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    brandId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    colorId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => EnumProductConditionFieldUpdateOperationsInput, {nullable:true})
    productCondition?: InstanceType<typeof EnumProductConditionFieldUpdateOperationsInput>;
    @Field(() => NullableEnumProductDeliveryModeFieldUpdateOperationsInput, {nullable:true})
    productDeliveryMode?: InstanceType<typeof NullableEnumProductDeliveryModeFieldUpdateOperationsInput>;
    @Field(() => NullableEnumShippingChargePayerFieldUpdateOperationsInput, {nullable:true})
    shippingChargePayer?: InstanceType<typeof NullableEnumShippingChargePayerFieldUpdateOperationsInput>;
    @Field(() => RentingPreferenceNullableUpdateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    weightCategoryId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    uploaderId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    priceString?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    reasonForSelling?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    shippingEnabled?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    shippingFrom?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    soldOut?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => ProductListingUpdatewishlistedUserIdsInput, {nullable:true})
    wishlistedUserIds?: InstanceType<typeof ProductListingUpdatewishlistedUserIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyHash?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    archived?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableEnumPreferredGenderFieldUpdateOperationsInput, {nullable:true})
    categoryPreferredGender?: InstanceType<typeof NullableEnumPreferredGenderFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    uploaderEduInstituteId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => UserUncheckedUpdateManyWithoutWishlistNestedInput, {nullable:true})
    wishlistedBy?: InstanceType<typeof UserUncheckedUpdateManyWithoutWishlistNestedInput>;
    @Field(() => ConversationUncheckedUpdateManyWithoutProductNestedInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUncheckedUpdateManyWithoutProductNestedInput>;
    @Field(() => ProductReportUncheckedUpdateManyWithoutProductNestedInput, {nullable:true})
    reports?: InstanceType<typeof ProductReportUncheckedUpdateManyWithoutProductNestedInput>;
}

@InputType()
export class ProductListingUncheckedUpdateWithoutColorInput {
    @Field(() => EnumProductListingTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumProductListingTypeFieldUpdateOperationsInput>;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    categoryId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    brandId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => EnumProductConditionFieldUpdateOperationsInput, {nullable:true})
    productCondition?: InstanceType<typeof EnumProductConditionFieldUpdateOperationsInput>;
    @Field(() => NullableEnumProductDeliveryModeFieldUpdateOperationsInput, {nullable:true})
    productDeliveryMode?: InstanceType<typeof NullableEnumProductDeliveryModeFieldUpdateOperationsInput>;
    @Field(() => NullableEnumShippingChargePayerFieldUpdateOperationsInput, {nullable:true})
    shippingChargePayer?: InstanceType<typeof NullableEnumShippingChargePayerFieldUpdateOperationsInput>;
    @Field(() => RentingPreferenceNullableUpdateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    weightCategoryId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    uploaderId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    priceString?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    reasonForSelling?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    shippingEnabled?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    shippingFrom?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    soldOut?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => ProductListingUpdatewishlistedUserIdsInput, {nullable:true})
    wishlistedUserIds?: InstanceType<typeof ProductListingUpdatewishlistedUserIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyHash?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    archived?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableEnumPreferredGenderFieldUpdateOperationsInput, {nullable:true})
    categoryPreferredGender?: InstanceType<typeof NullableEnumPreferredGenderFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    uploaderEduInstituteId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => UserUncheckedUpdateManyWithoutWishlistNestedInput, {nullable:true})
    wishlistedBy?: InstanceType<typeof UserUncheckedUpdateManyWithoutWishlistNestedInput>;
    @Field(() => ConversationUncheckedUpdateManyWithoutProductNestedInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUncheckedUpdateManyWithoutProductNestedInput>;
    @Field(() => ProductReportUncheckedUpdateManyWithoutProductNestedInput, {nullable:true})
    reports?: InstanceType<typeof ProductReportUncheckedUpdateManyWithoutProductNestedInput>;
}

@InputType()
export class ProductListingUncheckedUpdateWithoutConversationsInput {
    @Field(() => EnumProductListingTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumProductListingTypeFieldUpdateOperationsInput>;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    categoryId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    brandId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    colorId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => EnumProductConditionFieldUpdateOperationsInput, {nullable:true})
    productCondition?: InstanceType<typeof EnumProductConditionFieldUpdateOperationsInput>;
    @Field(() => NullableEnumProductDeliveryModeFieldUpdateOperationsInput, {nullable:true})
    productDeliveryMode?: InstanceType<typeof NullableEnumProductDeliveryModeFieldUpdateOperationsInput>;
    @Field(() => NullableEnumShippingChargePayerFieldUpdateOperationsInput, {nullable:true})
    shippingChargePayer?: InstanceType<typeof NullableEnumShippingChargePayerFieldUpdateOperationsInput>;
    @Field(() => RentingPreferenceNullableUpdateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    weightCategoryId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    uploaderId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    priceString?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    reasonForSelling?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    shippingEnabled?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    shippingFrom?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    soldOut?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => ProductListingUpdatewishlistedUserIdsInput, {nullable:true})
    wishlistedUserIds?: InstanceType<typeof ProductListingUpdatewishlistedUserIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyHash?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    archived?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableEnumPreferredGenderFieldUpdateOperationsInput, {nullable:true})
    categoryPreferredGender?: InstanceType<typeof NullableEnumPreferredGenderFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    uploaderEduInstituteId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => UserUncheckedUpdateManyWithoutWishlistNestedInput, {nullable:true})
    wishlistedBy?: InstanceType<typeof UserUncheckedUpdateManyWithoutWishlistNestedInput>;
    @Field(() => ProductReportUncheckedUpdateManyWithoutProductNestedInput, {nullable:true})
    reports?: InstanceType<typeof ProductReportUncheckedUpdateManyWithoutProductNestedInput>;
}

@InputType()
export class ProductListingUncheckedUpdateWithoutReportsInput {
    @Field(() => EnumProductListingTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumProductListingTypeFieldUpdateOperationsInput>;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    categoryId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    brandId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    colorId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => EnumProductConditionFieldUpdateOperationsInput, {nullable:true})
    productCondition?: InstanceType<typeof EnumProductConditionFieldUpdateOperationsInput>;
    @Field(() => NullableEnumProductDeliveryModeFieldUpdateOperationsInput, {nullable:true})
    productDeliveryMode?: InstanceType<typeof NullableEnumProductDeliveryModeFieldUpdateOperationsInput>;
    @Field(() => NullableEnumShippingChargePayerFieldUpdateOperationsInput, {nullable:true})
    shippingChargePayer?: InstanceType<typeof NullableEnumShippingChargePayerFieldUpdateOperationsInput>;
    @Field(() => RentingPreferenceNullableUpdateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    weightCategoryId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    uploaderId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    priceString?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    reasonForSelling?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    shippingEnabled?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    shippingFrom?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    soldOut?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => ProductListingUpdatewishlistedUserIdsInput, {nullable:true})
    wishlistedUserIds?: InstanceType<typeof ProductListingUpdatewishlistedUserIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyHash?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    archived?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableEnumPreferredGenderFieldUpdateOperationsInput, {nullable:true})
    categoryPreferredGender?: InstanceType<typeof NullableEnumPreferredGenderFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    uploaderEduInstituteId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => UserUncheckedUpdateManyWithoutWishlistNestedInput, {nullable:true})
    wishlistedBy?: InstanceType<typeof UserUncheckedUpdateManyWithoutWishlistNestedInput>;
    @Field(() => ConversationUncheckedUpdateManyWithoutProductNestedInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUncheckedUpdateManyWithoutProductNestedInput>;
}

@InputType()
export class ProductListingUncheckedUpdateWithoutUploaderEduInstituteInput {
    @Field(() => EnumProductListingTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumProductListingTypeFieldUpdateOperationsInput>;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    categoryId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    brandId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    colorId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => EnumProductConditionFieldUpdateOperationsInput, {nullable:true})
    productCondition?: InstanceType<typeof EnumProductConditionFieldUpdateOperationsInput>;
    @Field(() => NullableEnumProductDeliveryModeFieldUpdateOperationsInput, {nullable:true})
    productDeliveryMode?: InstanceType<typeof NullableEnumProductDeliveryModeFieldUpdateOperationsInput>;
    @Field(() => NullableEnumShippingChargePayerFieldUpdateOperationsInput, {nullable:true})
    shippingChargePayer?: InstanceType<typeof NullableEnumShippingChargePayerFieldUpdateOperationsInput>;
    @Field(() => RentingPreferenceNullableUpdateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    weightCategoryId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    uploaderId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    priceString?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    reasonForSelling?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    shippingEnabled?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    shippingFrom?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    soldOut?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => ProductListingUpdatewishlistedUserIdsInput, {nullable:true})
    wishlistedUserIds?: InstanceType<typeof ProductListingUpdatewishlistedUserIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyHash?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    archived?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableEnumPreferredGenderFieldUpdateOperationsInput, {nullable:true})
    categoryPreferredGender?: InstanceType<typeof NullableEnumPreferredGenderFieldUpdateOperationsInput>;
    @Field(() => UserUncheckedUpdateManyWithoutWishlistNestedInput, {nullable:true})
    wishlistedBy?: InstanceType<typeof UserUncheckedUpdateManyWithoutWishlistNestedInput>;
    @Field(() => ConversationUncheckedUpdateManyWithoutProductNestedInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUncheckedUpdateManyWithoutProductNestedInput>;
    @Field(() => ProductReportUncheckedUpdateManyWithoutProductNestedInput, {nullable:true})
    reports?: InstanceType<typeof ProductReportUncheckedUpdateManyWithoutProductNestedInput>;
}

@InputType()
export class ProductListingUncheckedUpdateWithoutUploaderInput {
    @Field(() => EnumProductListingTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumProductListingTypeFieldUpdateOperationsInput>;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    categoryId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    brandId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    colorId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => EnumProductConditionFieldUpdateOperationsInput, {nullable:true})
    productCondition?: InstanceType<typeof EnumProductConditionFieldUpdateOperationsInput>;
    @Field(() => NullableEnumProductDeliveryModeFieldUpdateOperationsInput, {nullable:true})
    productDeliveryMode?: InstanceType<typeof NullableEnumProductDeliveryModeFieldUpdateOperationsInput>;
    @Field(() => NullableEnumShippingChargePayerFieldUpdateOperationsInput, {nullable:true})
    shippingChargePayer?: InstanceType<typeof NullableEnumShippingChargePayerFieldUpdateOperationsInput>;
    @Field(() => RentingPreferenceNullableUpdateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    weightCategoryId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    priceString?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    reasonForSelling?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    shippingEnabled?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    shippingFrom?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    soldOut?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => ProductListingUpdatewishlistedUserIdsInput, {nullable:true})
    wishlistedUserIds?: InstanceType<typeof ProductListingUpdatewishlistedUserIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyHash?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    archived?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableEnumPreferredGenderFieldUpdateOperationsInput, {nullable:true})
    categoryPreferredGender?: InstanceType<typeof NullableEnumPreferredGenderFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    uploaderEduInstituteId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => UserUncheckedUpdateManyWithoutWishlistNestedInput, {nullable:true})
    wishlistedBy?: InstanceType<typeof UserUncheckedUpdateManyWithoutWishlistNestedInput>;
    @Field(() => ConversationUncheckedUpdateManyWithoutProductNestedInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUncheckedUpdateManyWithoutProductNestedInput>;
    @Field(() => ProductReportUncheckedUpdateManyWithoutProductNestedInput, {nullable:true})
    reports?: InstanceType<typeof ProductReportUncheckedUpdateManyWithoutProductNestedInput>;
}

@InputType()
export class ProductListingUncheckedUpdateWithoutWeightCategoryInput {
    @Field(() => EnumProductListingTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumProductListingTypeFieldUpdateOperationsInput>;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    categoryId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    brandId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    colorId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => EnumProductConditionFieldUpdateOperationsInput, {nullable:true})
    productCondition?: InstanceType<typeof EnumProductConditionFieldUpdateOperationsInput>;
    @Field(() => NullableEnumProductDeliveryModeFieldUpdateOperationsInput, {nullable:true})
    productDeliveryMode?: InstanceType<typeof NullableEnumProductDeliveryModeFieldUpdateOperationsInput>;
    @Field(() => NullableEnumShippingChargePayerFieldUpdateOperationsInput, {nullable:true})
    shippingChargePayer?: InstanceType<typeof NullableEnumShippingChargePayerFieldUpdateOperationsInput>;
    @Field(() => RentingPreferenceNullableUpdateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    uploaderId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    priceString?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    reasonForSelling?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    shippingEnabled?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    shippingFrom?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    soldOut?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => ProductListingUpdatewishlistedUserIdsInput, {nullable:true})
    wishlistedUserIds?: InstanceType<typeof ProductListingUpdatewishlistedUserIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyHash?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    archived?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableEnumPreferredGenderFieldUpdateOperationsInput, {nullable:true})
    categoryPreferredGender?: InstanceType<typeof NullableEnumPreferredGenderFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    uploaderEduInstituteId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => UserUncheckedUpdateManyWithoutWishlistNestedInput, {nullable:true})
    wishlistedBy?: InstanceType<typeof UserUncheckedUpdateManyWithoutWishlistNestedInput>;
    @Field(() => ConversationUncheckedUpdateManyWithoutProductNestedInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUncheckedUpdateManyWithoutProductNestedInput>;
    @Field(() => ProductReportUncheckedUpdateManyWithoutProductNestedInput, {nullable:true})
    reports?: InstanceType<typeof ProductReportUncheckedUpdateManyWithoutProductNestedInput>;
}

@InputType()
export class ProductListingUncheckedUpdateWithoutWishlistedByInput {
    @Field(() => EnumProductListingTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumProductListingTypeFieldUpdateOperationsInput>;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    categoryId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    brandId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    colorId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => EnumProductConditionFieldUpdateOperationsInput, {nullable:true})
    productCondition?: InstanceType<typeof EnumProductConditionFieldUpdateOperationsInput>;
    @Field(() => NullableEnumProductDeliveryModeFieldUpdateOperationsInput, {nullable:true})
    productDeliveryMode?: InstanceType<typeof NullableEnumProductDeliveryModeFieldUpdateOperationsInput>;
    @Field(() => NullableEnumShippingChargePayerFieldUpdateOperationsInput, {nullable:true})
    shippingChargePayer?: InstanceType<typeof NullableEnumShippingChargePayerFieldUpdateOperationsInput>;
    @Field(() => RentingPreferenceNullableUpdateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    weightCategoryId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    uploaderId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    priceString?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    reasonForSelling?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    shippingEnabled?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    shippingFrom?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    soldOut?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => ProductListingUpdatewishlistedUserIdsInput, {nullable:true})
    wishlistedUserIds?: InstanceType<typeof ProductListingUpdatewishlistedUserIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyHash?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    archived?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableEnumPreferredGenderFieldUpdateOperationsInput, {nullable:true})
    categoryPreferredGender?: InstanceType<typeof NullableEnumPreferredGenderFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    uploaderEduInstituteId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => ConversationUncheckedUpdateManyWithoutProductNestedInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUncheckedUpdateManyWithoutProductNestedInput>;
    @Field(() => ProductReportUncheckedUpdateManyWithoutProductNestedInput, {nullable:true})
    reports?: InstanceType<typeof ProductReportUncheckedUpdateManyWithoutProductNestedInput>;
}

@InputType()
export class ProductListingUncheckedUpdateInput {
    @Field(() => EnumProductListingTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumProductListingTypeFieldUpdateOperationsInput>;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    categoryId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    brandId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    colorId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => EnumProductConditionFieldUpdateOperationsInput, {nullable:true})
    productCondition?: InstanceType<typeof EnumProductConditionFieldUpdateOperationsInput>;
    @Field(() => NullableEnumProductDeliveryModeFieldUpdateOperationsInput, {nullable:true})
    productDeliveryMode?: InstanceType<typeof NullableEnumProductDeliveryModeFieldUpdateOperationsInput>;
    @Field(() => NullableEnumShippingChargePayerFieldUpdateOperationsInput, {nullable:true})
    shippingChargePayer?: InstanceType<typeof NullableEnumShippingChargePayerFieldUpdateOperationsInput>;
    @Field(() => RentingPreferenceNullableUpdateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    weightCategoryId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    uploaderId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    priceString?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    reasonForSelling?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    shippingEnabled?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    shippingFrom?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    soldOut?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => ProductListingUpdatewishlistedUserIdsInput, {nullable:true})
    wishlistedUserIds?: InstanceType<typeof ProductListingUpdatewishlistedUserIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyHash?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    archived?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableEnumPreferredGenderFieldUpdateOperationsInput, {nullable:true})
    categoryPreferredGender?: InstanceType<typeof NullableEnumPreferredGenderFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    uploaderEduInstituteId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => UserUncheckedUpdateManyWithoutWishlistNestedInput, {nullable:true})
    wishlistedBy?: InstanceType<typeof UserUncheckedUpdateManyWithoutWishlistNestedInput>;
    @Field(() => ConversationUncheckedUpdateManyWithoutProductNestedInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUncheckedUpdateManyWithoutProductNestedInput>;
    @Field(() => ProductReportUncheckedUpdateManyWithoutProductNestedInput, {nullable:true})
    reports?: InstanceType<typeof ProductReportUncheckedUpdateManyWithoutProductNestedInput>;
}

@InputType()
export class ProductListingUpdateManyMutationInput {
    @Field(() => EnumProductListingTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumProductListingTypeFieldUpdateOperationsInput>;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => EnumProductConditionFieldUpdateOperationsInput, {nullable:true})
    productCondition?: InstanceType<typeof EnumProductConditionFieldUpdateOperationsInput>;
    @Field(() => NullableEnumProductDeliveryModeFieldUpdateOperationsInput, {nullable:true})
    productDeliveryMode?: InstanceType<typeof NullableEnumProductDeliveryModeFieldUpdateOperationsInput>;
    @Field(() => NullableEnumShippingChargePayerFieldUpdateOperationsInput, {nullable:true})
    shippingChargePayer?: InstanceType<typeof NullableEnumShippingChargePayerFieldUpdateOperationsInput>;
    @Field(() => RentingPreferenceNullableUpdateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableUpdateEnvelopeInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    priceString?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    reasonForSelling?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    shippingEnabled?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    shippingFrom?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    soldOut?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyHash?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    archived?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableEnumPreferredGenderFieldUpdateOperationsInput, {nullable:true})
    categoryPreferredGender?: InstanceType<typeof NullableEnumPreferredGenderFieldUpdateOperationsInput>;
}

@InputType()
export class ProductListingUpdateManyWithWhereWithoutBrandInput {
    @Field(() => ProductListingScalarWhereInput, {nullable:false})
    @Type(() => ProductListingScalarWhereInput)
    where!: InstanceType<typeof ProductListingScalarWhereInput>;
    @Field(() => ProductListingUpdateManyMutationInput, {nullable:false})
    @Type(() => ProductListingUpdateManyMutationInput)
    data!: InstanceType<typeof ProductListingUpdateManyMutationInput>;
}

@InputType()
export class ProductListingUpdateManyWithWhereWithoutCategoryInput {
    @Field(() => ProductListingScalarWhereInput, {nullable:false})
    @Type(() => ProductListingScalarWhereInput)
    where!: InstanceType<typeof ProductListingScalarWhereInput>;
    @Field(() => ProductListingUpdateManyMutationInput, {nullable:false})
    @Type(() => ProductListingUpdateManyMutationInput)
    data!: InstanceType<typeof ProductListingUpdateManyMutationInput>;
}

@InputType()
export class ProductListingUpdateManyWithWhereWithoutColorInput {
    @Field(() => ProductListingScalarWhereInput, {nullable:false})
    @Type(() => ProductListingScalarWhereInput)
    where!: InstanceType<typeof ProductListingScalarWhereInput>;
    @Field(() => ProductListingUpdateManyMutationInput, {nullable:false})
    @Type(() => ProductListingUpdateManyMutationInput)
    data!: InstanceType<typeof ProductListingUpdateManyMutationInput>;
}

@InputType()
export class ProductListingUpdateManyWithWhereWithoutUploaderEduInstituteInput {
    @Field(() => ProductListingScalarWhereInput, {nullable:false})
    @Type(() => ProductListingScalarWhereInput)
    where!: InstanceType<typeof ProductListingScalarWhereInput>;
    @Field(() => ProductListingUpdateManyMutationInput, {nullable:false})
    @Type(() => ProductListingUpdateManyMutationInput)
    data!: InstanceType<typeof ProductListingUpdateManyMutationInput>;
}

@InputType()
export class ProductListingUpdateManyWithWhereWithoutUploaderInput {
    @Field(() => ProductListingScalarWhereInput, {nullable:false})
    @Type(() => ProductListingScalarWhereInput)
    where!: InstanceType<typeof ProductListingScalarWhereInput>;
    @Field(() => ProductListingUpdateManyMutationInput, {nullable:false})
    @Type(() => ProductListingUpdateManyMutationInput)
    data!: InstanceType<typeof ProductListingUpdateManyMutationInput>;
}

@InputType()
export class ProductListingUpdateManyWithWhereWithoutWeightCategoryInput {
    @Field(() => ProductListingScalarWhereInput, {nullable:false})
    @Type(() => ProductListingScalarWhereInput)
    where!: InstanceType<typeof ProductListingScalarWhereInput>;
    @Field(() => ProductListingUpdateManyMutationInput, {nullable:false})
    @Type(() => ProductListingUpdateManyMutationInput)
    data!: InstanceType<typeof ProductListingUpdateManyMutationInput>;
}

@InputType()
export class ProductListingUpdateManyWithWhereWithoutWishlistedByInput {
    @Field(() => ProductListingScalarWhereInput, {nullable:false})
    @Type(() => ProductListingScalarWhereInput)
    where!: InstanceType<typeof ProductListingScalarWhereInput>;
    @Field(() => ProductListingUpdateManyMutationInput, {nullable:false})
    @Type(() => ProductListingUpdateManyMutationInput)
    data!: InstanceType<typeof ProductListingUpdateManyMutationInput>;
}

@InputType()
export class ProductListingUpdateManyWithoutBrandNestedInput {
    @Field(() => [ProductListingCreateWithoutBrandInput], {nullable:true})
    @Type(() => ProductListingCreateWithoutBrandInput)
    create?: Array<ProductListingCreateWithoutBrandInput>;
    @Field(() => [ProductListingCreateOrConnectWithoutBrandInput], {nullable:true})
    @Type(() => ProductListingCreateOrConnectWithoutBrandInput)
    connectOrCreate?: Array<ProductListingCreateOrConnectWithoutBrandInput>;
    @Field(() => [ProductListingUpsertWithWhereUniqueWithoutBrandInput], {nullable:true})
    @Type(() => ProductListingUpsertWithWhereUniqueWithoutBrandInput)
    upsert?: Array<ProductListingUpsertWithWhereUniqueWithoutBrandInput>;
    @Field(() => ProductListingCreateManyBrandInputEnvelope, {nullable:true})
    @Type(() => ProductListingCreateManyBrandInputEnvelope)
    createMany?: InstanceType<typeof ProductListingCreateManyBrandInputEnvelope>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    set?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingUpdateWithWhereUniqueWithoutBrandInput], {nullable:true})
    @Type(() => ProductListingUpdateWithWhereUniqueWithoutBrandInput)
    update?: Array<ProductListingUpdateWithWhereUniqueWithoutBrandInput>;
    @Field(() => [ProductListingUpdateManyWithWhereWithoutBrandInput], {nullable:true})
    @Type(() => ProductListingUpdateManyWithWhereWithoutBrandInput)
    updateMany?: Array<ProductListingUpdateManyWithWhereWithoutBrandInput>;
    @Field(() => [ProductListingScalarWhereInput], {nullable:true})
    @Type(() => ProductListingScalarWhereInput)
    deleteMany?: Array<ProductListingScalarWhereInput>;
}

@InputType()
export class ProductListingUpdateManyWithoutCategoryNestedInput {
    @Field(() => [ProductListingCreateWithoutCategoryInput], {nullable:true})
    @Type(() => ProductListingCreateWithoutCategoryInput)
    create?: Array<ProductListingCreateWithoutCategoryInput>;
    @Field(() => [ProductListingCreateOrConnectWithoutCategoryInput], {nullable:true})
    @Type(() => ProductListingCreateOrConnectWithoutCategoryInput)
    connectOrCreate?: Array<ProductListingCreateOrConnectWithoutCategoryInput>;
    @Field(() => [ProductListingUpsertWithWhereUniqueWithoutCategoryInput], {nullable:true})
    @Type(() => ProductListingUpsertWithWhereUniqueWithoutCategoryInput)
    upsert?: Array<ProductListingUpsertWithWhereUniqueWithoutCategoryInput>;
    @Field(() => ProductListingCreateManyCategoryInputEnvelope, {nullable:true})
    @Type(() => ProductListingCreateManyCategoryInputEnvelope)
    createMany?: InstanceType<typeof ProductListingCreateManyCategoryInputEnvelope>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    set?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingUpdateWithWhereUniqueWithoutCategoryInput], {nullable:true})
    @Type(() => ProductListingUpdateWithWhereUniqueWithoutCategoryInput)
    update?: Array<ProductListingUpdateWithWhereUniqueWithoutCategoryInput>;
    @Field(() => [ProductListingUpdateManyWithWhereWithoutCategoryInput], {nullable:true})
    @Type(() => ProductListingUpdateManyWithWhereWithoutCategoryInput)
    updateMany?: Array<ProductListingUpdateManyWithWhereWithoutCategoryInput>;
    @Field(() => [ProductListingScalarWhereInput], {nullable:true})
    @Type(() => ProductListingScalarWhereInput)
    deleteMany?: Array<ProductListingScalarWhereInput>;
}

@InputType()
export class ProductListingUpdateManyWithoutColorNestedInput {
    @Field(() => [ProductListingCreateWithoutColorInput], {nullable:true})
    @Type(() => ProductListingCreateWithoutColorInput)
    create?: Array<ProductListingCreateWithoutColorInput>;
    @Field(() => [ProductListingCreateOrConnectWithoutColorInput], {nullable:true})
    @Type(() => ProductListingCreateOrConnectWithoutColorInput)
    connectOrCreate?: Array<ProductListingCreateOrConnectWithoutColorInput>;
    @Field(() => [ProductListingUpsertWithWhereUniqueWithoutColorInput], {nullable:true})
    @Type(() => ProductListingUpsertWithWhereUniqueWithoutColorInput)
    upsert?: Array<ProductListingUpsertWithWhereUniqueWithoutColorInput>;
    @Field(() => ProductListingCreateManyColorInputEnvelope, {nullable:true})
    @Type(() => ProductListingCreateManyColorInputEnvelope)
    createMany?: InstanceType<typeof ProductListingCreateManyColorInputEnvelope>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    set?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingUpdateWithWhereUniqueWithoutColorInput], {nullable:true})
    @Type(() => ProductListingUpdateWithWhereUniqueWithoutColorInput)
    update?: Array<ProductListingUpdateWithWhereUniqueWithoutColorInput>;
    @Field(() => [ProductListingUpdateManyWithWhereWithoutColorInput], {nullable:true})
    @Type(() => ProductListingUpdateManyWithWhereWithoutColorInput)
    updateMany?: Array<ProductListingUpdateManyWithWhereWithoutColorInput>;
    @Field(() => [ProductListingScalarWhereInput], {nullable:true})
    @Type(() => ProductListingScalarWhereInput)
    deleteMany?: Array<ProductListingScalarWhereInput>;
}

@InputType()
export class ProductListingUpdateManyWithoutUploaderEduInstituteNestedInput {
    @Field(() => [ProductListingCreateWithoutUploaderEduInstituteInput], {nullable:true})
    @Type(() => ProductListingCreateWithoutUploaderEduInstituteInput)
    create?: Array<ProductListingCreateWithoutUploaderEduInstituteInput>;
    @Field(() => [ProductListingCreateOrConnectWithoutUploaderEduInstituteInput], {nullable:true})
    @Type(() => ProductListingCreateOrConnectWithoutUploaderEduInstituteInput)
    connectOrCreate?: Array<ProductListingCreateOrConnectWithoutUploaderEduInstituteInput>;
    @Field(() => [ProductListingUpsertWithWhereUniqueWithoutUploaderEduInstituteInput], {nullable:true})
    @Type(() => ProductListingUpsertWithWhereUniqueWithoutUploaderEduInstituteInput)
    upsert?: Array<ProductListingUpsertWithWhereUniqueWithoutUploaderEduInstituteInput>;
    @Field(() => ProductListingCreateManyUploaderEduInstituteInputEnvelope, {nullable:true})
    @Type(() => ProductListingCreateManyUploaderEduInstituteInputEnvelope)
    createMany?: InstanceType<typeof ProductListingCreateManyUploaderEduInstituteInputEnvelope>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    set?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingUpdateWithWhereUniqueWithoutUploaderEduInstituteInput], {nullable:true})
    @Type(() => ProductListingUpdateWithWhereUniqueWithoutUploaderEduInstituteInput)
    update?: Array<ProductListingUpdateWithWhereUniqueWithoutUploaderEduInstituteInput>;
    @Field(() => [ProductListingUpdateManyWithWhereWithoutUploaderEduInstituteInput], {nullable:true})
    @Type(() => ProductListingUpdateManyWithWhereWithoutUploaderEduInstituteInput)
    updateMany?: Array<ProductListingUpdateManyWithWhereWithoutUploaderEduInstituteInput>;
    @Field(() => [ProductListingScalarWhereInput], {nullable:true})
    @Type(() => ProductListingScalarWhereInput)
    deleteMany?: Array<ProductListingScalarWhereInput>;
}

@InputType()
export class ProductListingUpdateManyWithoutUploaderNestedInput {
    @Field(() => [ProductListingCreateWithoutUploaderInput], {nullable:true})
    @Type(() => ProductListingCreateWithoutUploaderInput)
    create?: Array<ProductListingCreateWithoutUploaderInput>;
    @Field(() => [ProductListingCreateOrConnectWithoutUploaderInput], {nullable:true})
    @Type(() => ProductListingCreateOrConnectWithoutUploaderInput)
    connectOrCreate?: Array<ProductListingCreateOrConnectWithoutUploaderInput>;
    @Field(() => [ProductListingUpsertWithWhereUniqueWithoutUploaderInput], {nullable:true})
    @Type(() => ProductListingUpsertWithWhereUniqueWithoutUploaderInput)
    upsert?: Array<ProductListingUpsertWithWhereUniqueWithoutUploaderInput>;
    @Field(() => ProductListingCreateManyUploaderInputEnvelope, {nullable:true})
    @Type(() => ProductListingCreateManyUploaderInputEnvelope)
    createMany?: InstanceType<typeof ProductListingCreateManyUploaderInputEnvelope>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    set?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingUpdateWithWhereUniqueWithoutUploaderInput], {nullable:true})
    @Type(() => ProductListingUpdateWithWhereUniqueWithoutUploaderInput)
    update?: Array<ProductListingUpdateWithWhereUniqueWithoutUploaderInput>;
    @Field(() => [ProductListingUpdateManyWithWhereWithoutUploaderInput], {nullable:true})
    @Type(() => ProductListingUpdateManyWithWhereWithoutUploaderInput)
    updateMany?: Array<ProductListingUpdateManyWithWhereWithoutUploaderInput>;
    @Field(() => [ProductListingScalarWhereInput], {nullable:true})
    @Type(() => ProductListingScalarWhereInput)
    deleteMany?: Array<ProductListingScalarWhereInput>;
}

@InputType()
export class ProductListingUpdateManyWithoutWeightCategoryNestedInput {
    @Field(() => [ProductListingCreateWithoutWeightCategoryInput], {nullable:true})
    @Type(() => ProductListingCreateWithoutWeightCategoryInput)
    create?: Array<ProductListingCreateWithoutWeightCategoryInput>;
    @Field(() => [ProductListingCreateOrConnectWithoutWeightCategoryInput], {nullable:true})
    @Type(() => ProductListingCreateOrConnectWithoutWeightCategoryInput)
    connectOrCreate?: Array<ProductListingCreateOrConnectWithoutWeightCategoryInput>;
    @Field(() => [ProductListingUpsertWithWhereUniqueWithoutWeightCategoryInput], {nullable:true})
    @Type(() => ProductListingUpsertWithWhereUniqueWithoutWeightCategoryInput)
    upsert?: Array<ProductListingUpsertWithWhereUniqueWithoutWeightCategoryInput>;
    @Field(() => ProductListingCreateManyWeightCategoryInputEnvelope, {nullable:true})
    @Type(() => ProductListingCreateManyWeightCategoryInputEnvelope)
    createMany?: InstanceType<typeof ProductListingCreateManyWeightCategoryInputEnvelope>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    set?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingUpdateWithWhereUniqueWithoutWeightCategoryInput], {nullable:true})
    @Type(() => ProductListingUpdateWithWhereUniqueWithoutWeightCategoryInput)
    update?: Array<ProductListingUpdateWithWhereUniqueWithoutWeightCategoryInput>;
    @Field(() => [ProductListingUpdateManyWithWhereWithoutWeightCategoryInput], {nullable:true})
    @Type(() => ProductListingUpdateManyWithWhereWithoutWeightCategoryInput)
    updateMany?: Array<ProductListingUpdateManyWithWhereWithoutWeightCategoryInput>;
    @Field(() => [ProductListingScalarWhereInput], {nullable:true})
    @Type(() => ProductListingScalarWhereInput)
    deleteMany?: Array<ProductListingScalarWhereInput>;
}

@InputType()
export class ProductListingUpdateManyWithoutWishlistedByNestedInput {
    @Field(() => [ProductListingCreateWithoutWishlistedByInput], {nullable:true})
    @Type(() => ProductListingCreateWithoutWishlistedByInput)
    create?: Array<ProductListingCreateWithoutWishlistedByInput>;
    @Field(() => [ProductListingCreateOrConnectWithoutWishlistedByInput], {nullable:true})
    @Type(() => ProductListingCreateOrConnectWithoutWishlistedByInput)
    connectOrCreate?: Array<ProductListingCreateOrConnectWithoutWishlistedByInput>;
    @Field(() => [ProductListingUpsertWithWhereUniqueWithoutWishlistedByInput], {nullable:true})
    @Type(() => ProductListingUpsertWithWhereUniqueWithoutWishlistedByInput)
    upsert?: Array<ProductListingUpsertWithWhereUniqueWithoutWishlistedByInput>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    set?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingWhereUniqueInput], {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>>;
    @Field(() => [ProductListingUpdateWithWhereUniqueWithoutWishlistedByInput], {nullable:true})
    @Type(() => ProductListingUpdateWithWhereUniqueWithoutWishlistedByInput)
    update?: Array<ProductListingUpdateWithWhereUniqueWithoutWishlistedByInput>;
    @Field(() => [ProductListingUpdateManyWithWhereWithoutWishlistedByInput], {nullable:true})
    @Type(() => ProductListingUpdateManyWithWhereWithoutWishlistedByInput)
    updateMany?: Array<ProductListingUpdateManyWithWhereWithoutWishlistedByInput>;
    @Field(() => [ProductListingScalarWhereInput], {nullable:true})
    @Type(() => ProductListingScalarWhereInput)
    deleteMany?: Array<ProductListingScalarWhereInput>;
}

@InputType()
export class ProductListingUpdateOneRequiredWithoutConversationsNestedInput {
    @Field(() => ProductListingCreateWithoutConversationsInput, {nullable:true})
    @Type(() => ProductListingCreateWithoutConversationsInput)
    create?: InstanceType<typeof ProductListingCreateWithoutConversationsInput>;
    @Field(() => ProductListingCreateOrConnectWithoutConversationsInput, {nullable:true})
    @Type(() => ProductListingCreateOrConnectWithoutConversationsInput)
    connectOrCreate?: InstanceType<typeof ProductListingCreateOrConnectWithoutConversationsInput>;
    @Field(() => ProductListingUpsertWithoutConversationsInput, {nullable:true})
    @Type(() => ProductListingUpsertWithoutConversationsInput)
    upsert?: InstanceType<typeof ProductListingUpsertWithoutConversationsInput>;
    @Field(() => ProductListingWhereUniqueInput, {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    connect?: Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>;
    @Field(() => ProductListingUpdateToOneWithWhereWithoutConversationsInput, {nullable:true})
    @Type(() => ProductListingUpdateToOneWithWhereWithoutConversationsInput)
    update?: InstanceType<typeof ProductListingUpdateToOneWithWhereWithoutConversationsInput>;
}

@InputType()
export class ProductListingUpdateOneRequiredWithoutReportsNestedInput {
    @Field(() => ProductListingCreateWithoutReportsInput, {nullable:true})
    @Type(() => ProductListingCreateWithoutReportsInput)
    create?: InstanceType<typeof ProductListingCreateWithoutReportsInput>;
    @Field(() => ProductListingCreateOrConnectWithoutReportsInput, {nullable:true})
    @Type(() => ProductListingCreateOrConnectWithoutReportsInput)
    connectOrCreate?: InstanceType<typeof ProductListingCreateOrConnectWithoutReportsInput>;
    @Field(() => ProductListingUpsertWithoutReportsInput, {nullable:true})
    @Type(() => ProductListingUpsertWithoutReportsInput)
    upsert?: InstanceType<typeof ProductListingUpsertWithoutReportsInput>;
    @Field(() => ProductListingWhereUniqueInput, {nullable:true})
    @Type(() => ProductListingWhereUniqueInput)
    connect?: Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>;
    @Field(() => ProductListingUpdateToOneWithWhereWithoutReportsInput, {nullable:true})
    @Type(() => ProductListingUpdateToOneWithWhereWithoutReportsInput)
    update?: InstanceType<typeof ProductListingUpdateToOneWithWhereWithoutReportsInput>;
}

@InputType()
export class ProductListingUpdateToOneWithWhereWithoutConversationsInput {
    @Field(() => ProductListingWhereInput, {nullable:true})
    @Type(() => ProductListingWhereInput)
    where?: InstanceType<typeof ProductListingWhereInput>;
    @Field(() => ProductListingUpdateWithoutConversationsInput, {nullable:false})
    @Type(() => ProductListingUpdateWithoutConversationsInput)
    data!: InstanceType<typeof ProductListingUpdateWithoutConversationsInput>;
}

@InputType()
export class ProductListingUpdateToOneWithWhereWithoutReportsInput {
    @Field(() => ProductListingWhereInput, {nullable:true})
    @Type(() => ProductListingWhereInput)
    where?: InstanceType<typeof ProductListingWhereInput>;
    @Field(() => ProductListingUpdateWithoutReportsInput, {nullable:false})
    @Type(() => ProductListingUpdateWithoutReportsInput)
    data!: InstanceType<typeof ProductListingUpdateWithoutReportsInput>;
}

@InputType()
export class ProductListingUpdateWithWhereUniqueWithoutBrandInput {
    @Field(() => ProductListingWhereUniqueInput, {nullable:false})
    @Type(() => ProductListingWhereUniqueInput)
    where!: Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>;
    @Field(() => ProductListingUpdateWithoutBrandInput, {nullable:false})
    @Type(() => ProductListingUpdateWithoutBrandInput)
    data!: InstanceType<typeof ProductListingUpdateWithoutBrandInput>;
}

@InputType()
export class ProductListingUpdateWithWhereUniqueWithoutCategoryInput {
    @Field(() => ProductListingWhereUniqueInput, {nullable:false})
    @Type(() => ProductListingWhereUniqueInput)
    where!: Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>;
    @Field(() => ProductListingUpdateWithoutCategoryInput, {nullable:false})
    @Type(() => ProductListingUpdateWithoutCategoryInput)
    data!: InstanceType<typeof ProductListingUpdateWithoutCategoryInput>;
}

@InputType()
export class ProductListingUpdateWithWhereUniqueWithoutColorInput {
    @Field(() => ProductListingWhereUniqueInput, {nullable:false})
    @Type(() => ProductListingWhereUniqueInput)
    where!: Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>;
    @Field(() => ProductListingUpdateWithoutColorInput, {nullable:false})
    @Type(() => ProductListingUpdateWithoutColorInput)
    data!: InstanceType<typeof ProductListingUpdateWithoutColorInput>;
}

@InputType()
export class ProductListingUpdateWithWhereUniqueWithoutUploaderEduInstituteInput {
    @Field(() => ProductListingWhereUniqueInput, {nullable:false})
    @Type(() => ProductListingWhereUniqueInput)
    where!: Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>;
    @Field(() => ProductListingUpdateWithoutUploaderEduInstituteInput, {nullable:false})
    @Type(() => ProductListingUpdateWithoutUploaderEduInstituteInput)
    data!: InstanceType<typeof ProductListingUpdateWithoutUploaderEduInstituteInput>;
}

@InputType()
export class ProductListingUpdateWithWhereUniqueWithoutUploaderInput {
    @Field(() => ProductListingWhereUniqueInput, {nullable:false})
    @Type(() => ProductListingWhereUniqueInput)
    where!: Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>;
    @Field(() => ProductListingUpdateWithoutUploaderInput, {nullable:false})
    @Type(() => ProductListingUpdateWithoutUploaderInput)
    data!: InstanceType<typeof ProductListingUpdateWithoutUploaderInput>;
}

@InputType()
export class ProductListingUpdateWithWhereUniqueWithoutWeightCategoryInput {
    @Field(() => ProductListingWhereUniqueInput, {nullable:false})
    @Type(() => ProductListingWhereUniqueInput)
    where!: Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>;
    @Field(() => ProductListingUpdateWithoutWeightCategoryInput, {nullable:false})
    @Type(() => ProductListingUpdateWithoutWeightCategoryInput)
    data!: InstanceType<typeof ProductListingUpdateWithoutWeightCategoryInput>;
}

@InputType()
export class ProductListingUpdateWithWhereUniqueWithoutWishlistedByInput {
    @Field(() => ProductListingWhereUniqueInput, {nullable:false})
    @Type(() => ProductListingWhereUniqueInput)
    where!: Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>;
    @Field(() => ProductListingUpdateWithoutWishlistedByInput, {nullable:false})
    @Type(() => ProductListingUpdateWithoutWishlistedByInput)
    data!: InstanceType<typeof ProductListingUpdateWithoutWishlistedByInput>;
}

@InputType()
export class ProductListingUpdateWithoutBrandInput {
    @Field(() => EnumProductListingTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumProductListingTypeFieldUpdateOperationsInput>;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => EnumProductConditionFieldUpdateOperationsInput, {nullable:true})
    productCondition?: InstanceType<typeof EnumProductConditionFieldUpdateOperationsInput>;
    @Field(() => NullableEnumProductDeliveryModeFieldUpdateOperationsInput, {nullable:true})
    productDeliveryMode?: InstanceType<typeof NullableEnumProductDeliveryModeFieldUpdateOperationsInput>;
    @Field(() => NullableEnumShippingChargePayerFieldUpdateOperationsInput, {nullable:true})
    shippingChargePayer?: InstanceType<typeof NullableEnumShippingChargePayerFieldUpdateOperationsInput>;
    @Field(() => RentingPreferenceNullableUpdateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableUpdateEnvelopeInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    priceString?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    reasonForSelling?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    shippingEnabled?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    shippingFrom?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    soldOut?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyHash?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    archived?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableEnumPreferredGenderFieldUpdateOperationsInput, {nullable:true})
    categoryPreferredGender?: InstanceType<typeof NullableEnumPreferredGenderFieldUpdateOperationsInput>;
    @Field(() => ProductCategoryUpdateOneWithoutProductListingsNestedInput, {nullable:true})
    category?: InstanceType<typeof ProductCategoryUpdateOneWithoutProductListingsNestedInput>;
    @Field(() => ColorUpdateOneWithoutProductListingNestedInput, {nullable:true})
    color?: InstanceType<typeof ColorUpdateOneWithoutProductListingNestedInput>;
    @Field(() => WeightCategoryUpdateOneWithoutProductListingNestedInput, {nullable:true})
    weightCategory?: InstanceType<typeof WeightCategoryUpdateOneWithoutProductListingNestedInput>;
    @Field(() => UserUpdateOneWithoutProductListingsNestedInput, {nullable:true})
    uploader?: InstanceType<typeof UserUpdateOneWithoutProductListingsNestedInput>;
    @Field(() => UserUpdateManyWithoutWishlistNestedInput, {nullable:true})
    wishlistedBy?: InstanceType<typeof UserUpdateManyWithoutWishlistNestedInput>;
    @Field(() => ConversationUpdateManyWithoutProductNestedInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUpdateManyWithoutProductNestedInput>;
    @Field(() => ProductReportUpdateManyWithoutProductNestedInput, {nullable:true})
    reports?: InstanceType<typeof ProductReportUpdateManyWithoutProductNestedInput>;
    @Field(() => EduInstituteUpdateOneWithoutProductListingsNestedInput, {nullable:true})
    uploaderEduInstitute?: InstanceType<typeof EduInstituteUpdateOneWithoutProductListingsNestedInput>;
}

@InputType()
export class ProductListingUpdateWithoutCategoryInput {
    @Field(() => EnumProductListingTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumProductListingTypeFieldUpdateOperationsInput>;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => EnumProductConditionFieldUpdateOperationsInput, {nullable:true})
    productCondition?: InstanceType<typeof EnumProductConditionFieldUpdateOperationsInput>;
    @Field(() => NullableEnumProductDeliveryModeFieldUpdateOperationsInput, {nullable:true})
    productDeliveryMode?: InstanceType<typeof NullableEnumProductDeliveryModeFieldUpdateOperationsInput>;
    @Field(() => NullableEnumShippingChargePayerFieldUpdateOperationsInput, {nullable:true})
    shippingChargePayer?: InstanceType<typeof NullableEnumShippingChargePayerFieldUpdateOperationsInput>;
    @Field(() => RentingPreferenceNullableUpdateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableUpdateEnvelopeInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    priceString?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    reasonForSelling?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    shippingEnabled?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    shippingFrom?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    soldOut?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyHash?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    archived?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableEnumPreferredGenderFieldUpdateOperationsInput, {nullable:true})
    categoryPreferredGender?: InstanceType<typeof NullableEnumPreferredGenderFieldUpdateOperationsInput>;
    @Field(() => BrandUpdateOneWithoutProductListingNestedInput, {nullable:true})
    brand?: InstanceType<typeof BrandUpdateOneWithoutProductListingNestedInput>;
    @Field(() => ColorUpdateOneWithoutProductListingNestedInput, {nullable:true})
    color?: InstanceType<typeof ColorUpdateOneWithoutProductListingNestedInput>;
    @Field(() => WeightCategoryUpdateOneWithoutProductListingNestedInput, {nullable:true})
    weightCategory?: InstanceType<typeof WeightCategoryUpdateOneWithoutProductListingNestedInput>;
    @Field(() => UserUpdateOneWithoutProductListingsNestedInput, {nullable:true})
    uploader?: InstanceType<typeof UserUpdateOneWithoutProductListingsNestedInput>;
    @Field(() => UserUpdateManyWithoutWishlistNestedInput, {nullable:true})
    wishlistedBy?: InstanceType<typeof UserUpdateManyWithoutWishlistNestedInput>;
    @Field(() => ConversationUpdateManyWithoutProductNestedInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUpdateManyWithoutProductNestedInput>;
    @Field(() => ProductReportUpdateManyWithoutProductNestedInput, {nullable:true})
    reports?: InstanceType<typeof ProductReportUpdateManyWithoutProductNestedInput>;
    @Field(() => EduInstituteUpdateOneWithoutProductListingsNestedInput, {nullable:true})
    uploaderEduInstitute?: InstanceType<typeof EduInstituteUpdateOneWithoutProductListingsNestedInput>;
}

@InputType()
export class ProductListingUpdateWithoutColorInput {
    @Field(() => EnumProductListingTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumProductListingTypeFieldUpdateOperationsInput>;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => EnumProductConditionFieldUpdateOperationsInput, {nullable:true})
    productCondition?: InstanceType<typeof EnumProductConditionFieldUpdateOperationsInput>;
    @Field(() => NullableEnumProductDeliveryModeFieldUpdateOperationsInput, {nullable:true})
    productDeliveryMode?: InstanceType<typeof NullableEnumProductDeliveryModeFieldUpdateOperationsInput>;
    @Field(() => NullableEnumShippingChargePayerFieldUpdateOperationsInput, {nullable:true})
    shippingChargePayer?: InstanceType<typeof NullableEnumShippingChargePayerFieldUpdateOperationsInput>;
    @Field(() => RentingPreferenceNullableUpdateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableUpdateEnvelopeInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    priceString?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    reasonForSelling?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    shippingEnabled?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    shippingFrom?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    soldOut?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyHash?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    archived?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableEnumPreferredGenderFieldUpdateOperationsInput, {nullable:true})
    categoryPreferredGender?: InstanceType<typeof NullableEnumPreferredGenderFieldUpdateOperationsInput>;
    @Field(() => ProductCategoryUpdateOneWithoutProductListingsNestedInput, {nullable:true})
    category?: InstanceType<typeof ProductCategoryUpdateOneWithoutProductListingsNestedInput>;
    @Field(() => BrandUpdateOneWithoutProductListingNestedInput, {nullable:true})
    brand?: InstanceType<typeof BrandUpdateOneWithoutProductListingNestedInput>;
    @Field(() => WeightCategoryUpdateOneWithoutProductListingNestedInput, {nullable:true})
    weightCategory?: InstanceType<typeof WeightCategoryUpdateOneWithoutProductListingNestedInput>;
    @Field(() => UserUpdateOneWithoutProductListingsNestedInput, {nullable:true})
    uploader?: InstanceType<typeof UserUpdateOneWithoutProductListingsNestedInput>;
    @Field(() => UserUpdateManyWithoutWishlistNestedInput, {nullable:true})
    wishlistedBy?: InstanceType<typeof UserUpdateManyWithoutWishlistNestedInput>;
    @Field(() => ConversationUpdateManyWithoutProductNestedInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUpdateManyWithoutProductNestedInput>;
    @Field(() => ProductReportUpdateManyWithoutProductNestedInput, {nullable:true})
    reports?: InstanceType<typeof ProductReportUpdateManyWithoutProductNestedInput>;
    @Field(() => EduInstituteUpdateOneWithoutProductListingsNestedInput, {nullable:true})
    uploaderEduInstitute?: InstanceType<typeof EduInstituteUpdateOneWithoutProductListingsNestedInput>;
}

@InputType()
export class ProductListingUpdateWithoutConversationsInput {
    @Field(() => EnumProductListingTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumProductListingTypeFieldUpdateOperationsInput>;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => EnumProductConditionFieldUpdateOperationsInput, {nullable:true})
    productCondition?: InstanceType<typeof EnumProductConditionFieldUpdateOperationsInput>;
    @Field(() => NullableEnumProductDeliveryModeFieldUpdateOperationsInput, {nullable:true})
    productDeliveryMode?: InstanceType<typeof NullableEnumProductDeliveryModeFieldUpdateOperationsInput>;
    @Field(() => NullableEnumShippingChargePayerFieldUpdateOperationsInput, {nullable:true})
    shippingChargePayer?: InstanceType<typeof NullableEnumShippingChargePayerFieldUpdateOperationsInput>;
    @Field(() => RentingPreferenceNullableUpdateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableUpdateEnvelopeInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    priceString?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    reasonForSelling?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    shippingEnabled?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    shippingFrom?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    soldOut?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyHash?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    archived?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableEnumPreferredGenderFieldUpdateOperationsInput, {nullable:true})
    categoryPreferredGender?: InstanceType<typeof NullableEnumPreferredGenderFieldUpdateOperationsInput>;
    @Field(() => ProductCategoryUpdateOneWithoutProductListingsNestedInput, {nullable:true})
    category?: InstanceType<typeof ProductCategoryUpdateOneWithoutProductListingsNestedInput>;
    @Field(() => BrandUpdateOneWithoutProductListingNestedInput, {nullable:true})
    brand?: InstanceType<typeof BrandUpdateOneWithoutProductListingNestedInput>;
    @Field(() => ColorUpdateOneWithoutProductListingNestedInput, {nullable:true})
    color?: InstanceType<typeof ColorUpdateOneWithoutProductListingNestedInput>;
    @Field(() => WeightCategoryUpdateOneWithoutProductListingNestedInput, {nullable:true})
    weightCategory?: InstanceType<typeof WeightCategoryUpdateOneWithoutProductListingNestedInput>;
    @Field(() => UserUpdateOneWithoutProductListingsNestedInput, {nullable:true})
    uploader?: InstanceType<typeof UserUpdateOneWithoutProductListingsNestedInput>;
    @Field(() => UserUpdateManyWithoutWishlistNestedInput, {nullable:true})
    wishlistedBy?: InstanceType<typeof UserUpdateManyWithoutWishlistNestedInput>;
    @Field(() => ProductReportUpdateManyWithoutProductNestedInput, {nullable:true})
    reports?: InstanceType<typeof ProductReportUpdateManyWithoutProductNestedInput>;
    @Field(() => EduInstituteUpdateOneWithoutProductListingsNestedInput, {nullable:true})
    uploaderEduInstitute?: InstanceType<typeof EduInstituteUpdateOneWithoutProductListingsNestedInput>;
}

@InputType()
export class ProductListingUpdateWithoutReportsInput {
    @Field(() => EnumProductListingTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumProductListingTypeFieldUpdateOperationsInput>;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => EnumProductConditionFieldUpdateOperationsInput, {nullable:true})
    productCondition?: InstanceType<typeof EnumProductConditionFieldUpdateOperationsInput>;
    @Field(() => NullableEnumProductDeliveryModeFieldUpdateOperationsInput, {nullable:true})
    productDeliveryMode?: InstanceType<typeof NullableEnumProductDeliveryModeFieldUpdateOperationsInput>;
    @Field(() => NullableEnumShippingChargePayerFieldUpdateOperationsInput, {nullable:true})
    shippingChargePayer?: InstanceType<typeof NullableEnumShippingChargePayerFieldUpdateOperationsInput>;
    @Field(() => RentingPreferenceNullableUpdateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableUpdateEnvelopeInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    priceString?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    reasonForSelling?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    shippingEnabled?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    shippingFrom?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    soldOut?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyHash?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    archived?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableEnumPreferredGenderFieldUpdateOperationsInput, {nullable:true})
    categoryPreferredGender?: InstanceType<typeof NullableEnumPreferredGenderFieldUpdateOperationsInput>;
    @Field(() => ProductCategoryUpdateOneWithoutProductListingsNestedInput, {nullable:true})
    category?: InstanceType<typeof ProductCategoryUpdateOneWithoutProductListingsNestedInput>;
    @Field(() => BrandUpdateOneWithoutProductListingNestedInput, {nullable:true})
    brand?: InstanceType<typeof BrandUpdateOneWithoutProductListingNestedInput>;
    @Field(() => ColorUpdateOneWithoutProductListingNestedInput, {nullable:true})
    color?: InstanceType<typeof ColorUpdateOneWithoutProductListingNestedInput>;
    @Field(() => WeightCategoryUpdateOneWithoutProductListingNestedInput, {nullable:true})
    weightCategory?: InstanceType<typeof WeightCategoryUpdateOneWithoutProductListingNestedInput>;
    @Field(() => UserUpdateOneWithoutProductListingsNestedInput, {nullable:true})
    uploader?: InstanceType<typeof UserUpdateOneWithoutProductListingsNestedInput>;
    @Field(() => UserUpdateManyWithoutWishlistNestedInput, {nullable:true})
    wishlistedBy?: InstanceType<typeof UserUpdateManyWithoutWishlistNestedInput>;
    @Field(() => ConversationUpdateManyWithoutProductNestedInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUpdateManyWithoutProductNestedInput>;
    @Field(() => EduInstituteUpdateOneWithoutProductListingsNestedInput, {nullable:true})
    uploaderEduInstitute?: InstanceType<typeof EduInstituteUpdateOneWithoutProductListingsNestedInput>;
}

@InputType()
export class ProductListingUpdateWithoutUploaderEduInstituteInput {
    @Field(() => EnumProductListingTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumProductListingTypeFieldUpdateOperationsInput>;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => EnumProductConditionFieldUpdateOperationsInput, {nullable:true})
    productCondition?: InstanceType<typeof EnumProductConditionFieldUpdateOperationsInput>;
    @Field(() => NullableEnumProductDeliveryModeFieldUpdateOperationsInput, {nullable:true})
    productDeliveryMode?: InstanceType<typeof NullableEnumProductDeliveryModeFieldUpdateOperationsInput>;
    @Field(() => NullableEnumShippingChargePayerFieldUpdateOperationsInput, {nullable:true})
    shippingChargePayer?: InstanceType<typeof NullableEnumShippingChargePayerFieldUpdateOperationsInput>;
    @Field(() => RentingPreferenceNullableUpdateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableUpdateEnvelopeInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    priceString?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    reasonForSelling?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    shippingEnabled?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    shippingFrom?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    soldOut?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyHash?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    archived?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableEnumPreferredGenderFieldUpdateOperationsInput, {nullable:true})
    categoryPreferredGender?: InstanceType<typeof NullableEnumPreferredGenderFieldUpdateOperationsInput>;
    @Field(() => ProductCategoryUpdateOneWithoutProductListingsNestedInput, {nullable:true})
    category?: InstanceType<typeof ProductCategoryUpdateOneWithoutProductListingsNestedInput>;
    @Field(() => BrandUpdateOneWithoutProductListingNestedInput, {nullable:true})
    brand?: InstanceType<typeof BrandUpdateOneWithoutProductListingNestedInput>;
    @Field(() => ColorUpdateOneWithoutProductListingNestedInput, {nullable:true})
    color?: InstanceType<typeof ColorUpdateOneWithoutProductListingNestedInput>;
    @Field(() => WeightCategoryUpdateOneWithoutProductListingNestedInput, {nullable:true})
    weightCategory?: InstanceType<typeof WeightCategoryUpdateOneWithoutProductListingNestedInput>;
    @Field(() => UserUpdateOneWithoutProductListingsNestedInput, {nullable:true})
    uploader?: InstanceType<typeof UserUpdateOneWithoutProductListingsNestedInput>;
    @Field(() => UserUpdateManyWithoutWishlistNestedInput, {nullable:true})
    wishlistedBy?: InstanceType<typeof UserUpdateManyWithoutWishlistNestedInput>;
    @Field(() => ConversationUpdateManyWithoutProductNestedInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUpdateManyWithoutProductNestedInput>;
    @Field(() => ProductReportUpdateManyWithoutProductNestedInput, {nullable:true})
    reports?: InstanceType<typeof ProductReportUpdateManyWithoutProductNestedInput>;
}

@InputType()
export class ProductListingUpdateWithoutUploaderInput {
    @Field(() => EnumProductListingTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumProductListingTypeFieldUpdateOperationsInput>;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => EnumProductConditionFieldUpdateOperationsInput, {nullable:true})
    productCondition?: InstanceType<typeof EnumProductConditionFieldUpdateOperationsInput>;
    @Field(() => NullableEnumProductDeliveryModeFieldUpdateOperationsInput, {nullable:true})
    productDeliveryMode?: InstanceType<typeof NullableEnumProductDeliveryModeFieldUpdateOperationsInput>;
    @Field(() => NullableEnumShippingChargePayerFieldUpdateOperationsInput, {nullable:true})
    shippingChargePayer?: InstanceType<typeof NullableEnumShippingChargePayerFieldUpdateOperationsInput>;
    @Field(() => RentingPreferenceNullableUpdateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableUpdateEnvelopeInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    priceString?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    reasonForSelling?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    shippingEnabled?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    shippingFrom?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    soldOut?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyHash?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    archived?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableEnumPreferredGenderFieldUpdateOperationsInput, {nullable:true})
    categoryPreferredGender?: InstanceType<typeof NullableEnumPreferredGenderFieldUpdateOperationsInput>;
    @Field(() => ProductCategoryUpdateOneWithoutProductListingsNestedInput, {nullable:true})
    category?: InstanceType<typeof ProductCategoryUpdateOneWithoutProductListingsNestedInput>;
    @Field(() => BrandUpdateOneWithoutProductListingNestedInput, {nullable:true})
    brand?: InstanceType<typeof BrandUpdateOneWithoutProductListingNestedInput>;
    @Field(() => ColorUpdateOneWithoutProductListingNestedInput, {nullable:true})
    color?: InstanceType<typeof ColorUpdateOneWithoutProductListingNestedInput>;
    @Field(() => WeightCategoryUpdateOneWithoutProductListingNestedInput, {nullable:true})
    weightCategory?: InstanceType<typeof WeightCategoryUpdateOneWithoutProductListingNestedInput>;
    @Field(() => UserUpdateManyWithoutWishlistNestedInput, {nullable:true})
    wishlistedBy?: InstanceType<typeof UserUpdateManyWithoutWishlistNestedInput>;
    @Field(() => ConversationUpdateManyWithoutProductNestedInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUpdateManyWithoutProductNestedInput>;
    @Field(() => ProductReportUpdateManyWithoutProductNestedInput, {nullable:true})
    reports?: InstanceType<typeof ProductReportUpdateManyWithoutProductNestedInput>;
    @Field(() => EduInstituteUpdateOneWithoutProductListingsNestedInput, {nullable:true})
    uploaderEduInstitute?: InstanceType<typeof EduInstituteUpdateOneWithoutProductListingsNestedInput>;
}

@InputType()
export class ProductListingUpdateWithoutWeightCategoryInput {
    @Field(() => EnumProductListingTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumProductListingTypeFieldUpdateOperationsInput>;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => EnumProductConditionFieldUpdateOperationsInput, {nullable:true})
    productCondition?: InstanceType<typeof EnumProductConditionFieldUpdateOperationsInput>;
    @Field(() => NullableEnumProductDeliveryModeFieldUpdateOperationsInput, {nullable:true})
    productDeliveryMode?: InstanceType<typeof NullableEnumProductDeliveryModeFieldUpdateOperationsInput>;
    @Field(() => NullableEnumShippingChargePayerFieldUpdateOperationsInput, {nullable:true})
    shippingChargePayer?: InstanceType<typeof NullableEnumShippingChargePayerFieldUpdateOperationsInput>;
    @Field(() => RentingPreferenceNullableUpdateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableUpdateEnvelopeInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    priceString?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    reasonForSelling?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    shippingEnabled?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    shippingFrom?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    soldOut?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyHash?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    archived?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableEnumPreferredGenderFieldUpdateOperationsInput, {nullable:true})
    categoryPreferredGender?: InstanceType<typeof NullableEnumPreferredGenderFieldUpdateOperationsInput>;
    @Field(() => ProductCategoryUpdateOneWithoutProductListingsNestedInput, {nullable:true})
    category?: InstanceType<typeof ProductCategoryUpdateOneWithoutProductListingsNestedInput>;
    @Field(() => BrandUpdateOneWithoutProductListingNestedInput, {nullable:true})
    brand?: InstanceType<typeof BrandUpdateOneWithoutProductListingNestedInput>;
    @Field(() => ColorUpdateOneWithoutProductListingNestedInput, {nullable:true})
    color?: InstanceType<typeof ColorUpdateOneWithoutProductListingNestedInput>;
    @Field(() => UserUpdateOneWithoutProductListingsNestedInput, {nullable:true})
    uploader?: InstanceType<typeof UserUpdateOneWithoutProductListingsNestedInput>;
    @Field(() => UserUpdateManyWithoutWishlistNestedInput, {nullable:true})
    wishlistedBy?: InstanceType<typeof UserUpdateManyWithoutWishlistNestedInput>;
    @Field(() => ConversationUpdateManyWithoutProductNestedInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUpdateManyWithoutProductNestedInput>;
    @Field(() => ProductReportUpdateManyWithoutProductNestedInput, {nullable:true})
    reports?: InstanceType<typeof ProductReportUpdateManyWithoutProductNestedInput>;
    @Field(() => EduInstituteUpdateOneWithoutProductListingsNestedInput, {nullable:true})
    uploaderEduInstitute?: InstanceType<typeof EduInstituteUpdateOneWithoutProductListingsNestedInput>;
}

@InputType()
export class ProductListingUpdateWithoutWishlistedByInput {
    @Field(() => EnumProductListingTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumProductListingTypeFieldUpdateOperationsInput>;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => EnumProductConditionFieldUpdateOperationsInput, {nullable:true})
    productCondition?: InstanceType<typeof EnumProductConditionFieldUpdateOperationsInput>;
    @Field(() => NullableEnumProductDeliveryModeFieldUpdateOperationsInput, {nullable:true})
    productDeliveryMode?: InstanceType<typeof NullableEnumProductDeliveryModeFieldUpdateOperationsInput>;
    @Field(() => NullableEnumShippingChargePayerFieldUpdateOperationsInput, {nullable:true})
    shippingChargePayer?: InstanceType<typeof NullableEnumShippingChargePayerFieldUpdateOperationsInput>;
    @Field(() => RentingPreferenceNullableUpdateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableUpdateEnvelopeInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    priceString?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    reasonForSelling?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    shippingEnabled?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    shippingFrom?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    soldOut?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyHash?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    archived?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableEnumPreferredGenderFieldUpdateOperationsInput, {nullable:true})
    categoryPreferredGender?: InstanceType<typeof NullableEnumPreferredGenderFieldUpdateOperationsInput>;
    @Field(() => ProductCategoryUpdateOneWithoutProductListingsNestedInput, {nullable:true})
    category?: InstanceType<typeof ProductCategoryUpdateOneWithoutProductListingsNestedInput>;
    @Field(() => BrandUpdateOneWithoutProductListingNestedInput, {nullable:true})
    brand?: InstanceType<typeof BrandUpdateOneWithoutProductListingNestedInput>;
    @Field(() => ColorUpdateOneWithoutProductListingNestedInput, {nullable:true})
    color?: InstanceType<typeof ColorUpdateOneWithoutProductListingNestedInput>;
    @Field(() => WeightCategoryUpdateOneWithoutProductListingNestedInput, {nullable:true})
    weightCategory?: InstanceType<typeof WeightCategoryUpdateOneWithoutProductListingNestedInput>;
    @Field(() => UserUpdateOneWithoutProductListingsNestedInput, {nullable:true})
    uploader?: InstanceType<typeof UserUpdateOneWithoutProductListingsNestedInput>;
    @Field(() => ConversationUpdateManyWithoutProductNestedInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUpdateManyWithoutProductNestedInput>;
    @Field(() => ProductReportUpdateManyWithoutProductNestedInput, {nullable:true})
    reports?: InstanceType<typeof ProductReportUpdateManyWithoutProductNestedInput>;
    @Field(() => EduInstituteUpdateOneWithoutProductListingsNestedInput, {nullable:true})
    uploaderEduInstitute?: InstanceType<typeof EduInstituteUpdateOneWithoutProductListingsNestedInput>;
}

@InputType()
export class ProductListingUpdateInput {
    @Field(() => EnumProductListingTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumProductListingTypeFieldUpdateOperationsInput>;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters?: any;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData?: any;
    @Field(() => EnumProductConditionFieldUpdateOperationsInput, {nullable:true})
    productCondition?: InstanceType<typeof EnumProductConditionFieldUpdateOperationsInput>;
    @Field(() => NullableEnumProductDeliveryModeFieldUpdateOperationsInput, {nullable:true})
    productDeliveryMode?: InstanceType<typeof NullableEnumProductDeliveryModeFieldUpdateOperationsInput>;
    @Field(() => NullableEnumShippingChargePayerFieldUpdateOperationsInput, {nullable:true})
    shippingChargePayer?: InstanceType<typeof NullableEnumShippingChargePayerFieldUpdateOperationsInput>;
    @Field(() => RentingPreferenceNullableUpdateEnvelopeInput, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableUpdateEnvelopeInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    priceString?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    reasonForSelling?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    shippingEnabled?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    shippingFrom?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    soldOut?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyHash?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    archived?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableEnumPreferredGenderFieldUpdateOperationsInput, {nullable:true})
    categoryPreferredGender?: InstanceType<typeof NullableEnumPreferredGenderFieldUpdateOperationsInput>;
    @Field(() => ProductCategoryUpdateOneWithoutProductListingsNestedInput, {nullable:true})
    category?: InstanceType<typeof ProductCategoryUpdateOneWithoutProductListingsNestedInput>;
    @Field(() => BrandUpdateOneWithoutProductListingNestedInput, {nullable:true})
    brand?: InstanceType<typeof BrandUpdateOneWithoutProductListingNestedInput>;
    @Field(() => ColorUpdateOneWithoutProductListingNestedInput, {nullable:true})
    color?: InstanceType<typeof ColorUpdateOneWithoutProductListingNestedInput>;
    @Field(() => WeightCategoryUpdateOneWithoutProductListingNestedInput, {nullable:true})
    weightCategory?: InstanceType<typeof WeightCategoryUpdateOneWithoutProductListingNestedInput>;
    @Field(() => UserUpdateOneWithoutProductListingsNestedInput, {nullable:true})
    uploader?: InstanceType<typeof UserUpdateOneWithoutProductListingsNestedInput>;
    @Field(() => UserUpdateManyWithoutWishlistNestedInput, {nullable:true})
    wishlistedBy?: InstanceType<typeof UserUpdateManyWithoutWishlistNestedInput>;
    @Field(() => ConversationUpdateManyWithoutProductNestedInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUpdateManyWithoutProductNestedInput>;
    @Field(() => ProductReportUpdateManyWithoutProductNestedInput, {nullable:true})
    reports?: InstanceType<typeof ProductReportUpdateManyWithoutProductNestedInput>;
    @Field(() => EduInstituteUpdateOneWithoutProductListingsNestedInput, {nullable:true})
    uploaderEduInstitute?: InstanceType<typeof EduInstituteUpdateOneWithoutProductListingsNestedInput>;
}

@InputType()
export class ProductListingUpdatewishlistedUserIdsInput {
    @Field(() => [String], {nullable:true})
    set?: Array<string>;
    @Field(() => [String], {nullable:true})
    push?: Array<string>;
}

@InputType()
export class ProductListingUpsertWithWhereUniqueWithoutBrandInput {
    @Field(() => ProductListingWhereUniqueInput, {nullable:false})
    @Type(() => ProductListingWhereUniqueInput)
    where!: Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>;
    @Field(() => ProductListingUpdateWithoutBrandInput, {nullable:false})
    @Type(() => ProductListingUpdateWithoutBrandInput)
    update!: InstanceType<typeof ProductListingUpdateWithoutBrandInput>;
    @Field(() => ProductListingCreateWithoutBrandInput, {nullable:false})
    @Type(() => ProductListingCreateWithoutBrandInput)
    create!: InstanceType<typeof ProductListingCreateWithoutBrandInput>;
}

@InputType()
export class ProductListingUpsertWithWhereUniqueWithoutCategoryInput {
    @Field(() => ProductListingWhereUniqueInput, {nullable:false})
    @Type(() => ProductListingWhereUniqueInput)
    where!: Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>;
    @Field(() => ProductListingUpdateWithoutCategoryInput, {nullable:false})
    @Type(() => ProductListingUpdateWithoutCategoryInput)
    update!: InstanceType<typeof ProductListingUpdateWithoutCategoryInput>;
    @Field(() => ProductListingCreateWithoutCategoryInput, {nullable:false})
    @Type(() => ProductListingCreateWithoutCategoryInput)
    create!: InstanceType<typeof ProductListingCreateWithoutCategoryInput>;
}

@InputType()
export class ProductListingUpsertWithWhereUniqueWithoutColorInput {
    @Field(() => ProductListingWhereUniqueInput, {nullable:false})
    @Type(() => ProductListingWhereUniqueInput)
    where!: Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>;
    @Field(() => ProductListingUpdateWithoutColorInput, {nullable:false})
    @Type(() => ProductListingUpdateWithoutColorInput)
    update!: InstanceType<typeof ProductListingUpdateWithoutColorInput>;
    @Field(() => ProductListingCreateWithoutColorInput, {nullable:false})
    @Type(() => ProductListingCreateWithoutColorInput)
    create!: InstanceType<typeof ProductListingCreateWithoutColorInput>;
}

@InputType()
export class ProductListingUpsertWithWhereUniqueWithoutUploaderEduInstituteInput {
    @Field(() => ProductListingWhereUniqueInput, {nullable:false})
    @Type(() => ProductListingWhereUniqueInput)
    where!: Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>;
    @Field(() => ProductListingUpdateWithoutUploaderEduInstituteInput, {nullable:false})
    @Type(() => ProductListingUpdateWithoutUploaderEduInstituteInput)
    update!: InstanceType<typeof ProductListingUpdateWithoutUploaderEduInstituteInput>;
    @Field(() => ProductListingCreateWithoutUploaderEduInstituteInput, {nullable:false})
    @Type(() => ProductListingCreateWithoutUploaderEduInstituteInput)
    create!: InstanceType<typeof ProductListingCreateWithoutUploaderEduInstituteInput>;
}

@InputType()
export class ProductListingUpsertWithWhereUniqueWithoutUploaderInput {
    @Field(() => ProductListingWhereUniqueInput, {nullable:false})
    @Type(() => ProductListingWhereUniqueInput)
    where!: Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>;
    @Field(() => ProductListingUpdateWithoutUploaderInput, {nullable:false})
    @Type(() => ProductListingUpdateWithoutUploaderInput)
    update!: InstanceType<typeof ProductListingUpdateWithoutUploaderInput>;
    @Field(() => ProductListingCreateWithoutUploaderInput, {nullable:false})
    @Type(() => ProductListingCreateWithoutUploaderInput)
    create!: InstanceType<typeof ProductListingCreateWithoutUploaderInput>;
}

@InputType()
export class ProductListingUpsertWithWhereUniqueWithoutWeightCategoryInput {
    @Field(() => ProductListingWhereUniqueInput, {nullable:false})
    @Type(() => ProductListingWhereUniqueInput)
    where!: Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>;
    @Field(() => ProductListingUpdateWithoutWeightCategoryInput, {nullable:false})
    @Type(() => ProductListingUpdateWithoutWeightCategoryInput)
    update!: InstanceType<typeof ProductListingUpdateWithoutWeightCategoryInput>;
    @Field(() => ProductListingCreateWithoutWeightCategoryInput, {nullable:false})
    @Type(() => ProductListingCreateWithoutWeightCategoryInput)
    create!: InstanceType<typeof ProductListingCreateWithoutWeightCategoryInput>;
}

@InputType()
export class ProductListingUpsertWithWhereUniqueWithoutWishlistedByInput {
    @Field(() => ProductListingWhereUniqueInput, {nullable:false})
    @Type(() => ProductListingWhereUniqueInput)
    where!: Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>;
    @Field(() => ProductListingUpdateWithoutWishlistedByInput, {nullable:false})
    @Type(() => ProductListingUpdateWithoutWishlistedByInput)
    update!: InstanceType<typeof ProductListingUpdateWithoutWishlistedByInput>;
    @Field(() => ProductListingCreateWithoutWishlistedByInput, {nullable:false})
    @Type(() => ProductListingCreateWithoutWishlistedByInput)
    create!: InstanceType<typeof ProductListingCreateWithoutWishlistedByInput>;
}

@InputType()
export class ProductListingUpsertWithoutConversationsInput {
    @Field(() => ProductListingUpdateWithoutConversationsInput, {nullable:false})
    @Type(() => ProductListingUpdateWithoutConversationsInput)
    update!: InstanceType<typeof ProductListingUpdateWithoutConversationsInput>;
    @Field(() => ProductListingCreateWithoutConversationsInput, {nullable:false})
    @Type(() => ProductListingCreateWithoutConversationsInput)
    create!: InstanceType<typeof ProductListingCreateWithoutConversationsInput>;
    @Field(() => ProductListingWhereInput, {nullable:true})
    @Type(() => ProductListingWhereInput)
    where?: InstanceType<typeof ProductListingWhereInput>;
}

@InputType()
export class ProductListingUpsertWithoutReportsInput {
    @Field(() => ProductListingUpdateWithoutReportsInput, {nullable:false})
    @Type(() => ProductListingUpdateWithoutReportsInput)
    update!: InstanceType<typeof ProductListingUpdateWithoutReportsInput>;
    @Field(() => ProductListingCreateWithoutReportsInput, {nullable:false})
    @Type(() => ProductListingCreateWithoutReportsInput)
    create!: InstanceType<typeof ProductListingCreateWithoutReportsInput>;
    @Field(() => ProductListingWhereInput, {nullable:true})
    @Type(() => ProductListingWhereInput)
    where?: InstanceType<typeof ProductListingWhereInput>;
}

@InputType()
export class ProductListingWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => [ProductListingWhereInput], {nullable:true})
    AND?: Array<ProductListingWhereInput>;
    @Field(() => [ProductListingWhereInput], {nullable:true})
    OR?: Array<ProductListingWhereInput>;
    @Field(() => [ProductListingWhereInput], {nullable:true})
    NOT?: Array<ProductListingWhereInput>;
    @Field(() => EnumProductListingTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumProductListingTypeFilter>;
    @Field(() => [MediaItemObjectEqualityInput], {nullable:true})
    media?: Array<MediaItemObjectEqualityInput>;
    @Field(() => StringFilter, {nullable:true})
    title?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    categoryId?: InstanceType<typeof StringFilter>;
    @Field(() => JsonNullableFilter, {nullable:true})
    selectedCategoryFilters?: InstanceType<typeof JsonNullableFilter>;
    @Field(() => JsonNullableFilter, {nullable:true})
    extendedData?: InstanceType<typeof JsonNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    brandId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    colorId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => EnumProductConditionFilter, {nullable:true})
    productCondition?: InstanceType<typeof EnumProductConditionFilter>;
    @Field(() => EnumProductDeliveryModeNullableFilter, {nullable:true})
    productDeliveryMode?: InstanceType<typeof EnumProductDeliveryModeNullableFilter>;
    @Field(() => EnumShippingChargePayerNullableFilter, {nullable:true})
    shippingChargePayer?: InstanceType<typeof EnumShippingChargePayerNullableFilter>;
    @Field(() => RentingPreferenceNullableCompositeFilter, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableCompositeFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    weightCategoryId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    uploaderId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => FloatFilter, {nullable:true})
    price?: InstanceType<typeof FloatFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    priceString?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringFilter, {nullable:true})
    description?: InstanceType<typeof StringFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    reasonForSelling?: InstanceType<typeof StringNullableFilter>;
    @Field(() => BoolFilter, {nullable:true})
    shippingEnabled?: InstanceType<typeof BoolFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    shippingFrom?: InstanceType<typeof StringNullableFilter>;
    @Field(() => BoolFilter, {nullable:true})
    active?: InstanceType<typeof BoolFilter>;
    @Field(() => BoolFilter, {nullable:true})
    soldOut?: InstanceType<typeof BoolFilter>;
    @Field(() => BoolFilter, {nullable:true})
    blackListed?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    wishlistedUserIds?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    legacyHash?: InstanceType<typeof StringNullableFilter>;
    @Field(() => BoolFilter, {nullable:true})
    archived?: InstanceType<typeof BoolFilter>;
    @Field(() => EnumPreferredGenderNullableFilter, {nullable:true})
    categoryPreferredGender?: InstanceType<typeof EnumPreferredGenderNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    uploaderEduInstituteId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => ProductCategoryNullableRelationFilter, {nullable:true})
    category?: InstanceType<typeof ProductCategoryNullableRelationFilter>;
    @Field(() => BrandNullableRelationFilter, {nullable:true})
    brand?: InstanceType<typeof BrandNullableRelationFilter>;
    @Field(() => ColorNullableRelationFilter, {nullable:true})
    color?: InstanceType<typeof ColorNullableRelationFilter>;
    @Field(() => WeightCategoryNullableRelationFilter, {nullable:true})
    weightCategory?: InstanceType<typeof WeightCategoryNullableRelationFilter>;
    @Field(() => UserNullableRelationFilter, {nullable:true})
    uploader?: InstanceType<typeof UserNullableRelationFilter>;
    @Field(() => UserListRelationFilter, {nullable:true})
    wishlistedBy?: InstanceType<typeof UserListRelationFilter>;
    @Field(() => ConversationListRelationFilter, {nullable:true})
    conversations?: InstanceType<typeof ConversationListRelationFilter>;
    @Field(() => ProductReportListRelationFilter, {nullable:true})
    reports?: InstanceType<typeof ProductReportListRelationFilter>;
    @Field(() => EduInstituteNullableRelationFilter, {nullable:true})
    uploaderEduInstitute?: InstanceType<typeof EduInstituteNullableRelationFilter>;
}

@InputType()
export class ProductListingWhereInput {
    @Field(() => [ProductListingWhereInput], {nullable:true})
    AND?: Array<ProductListingWhereInput>;
    @Field(() => [ProductListingWhereInput], {nullable:true})
    OR?: Array<ProductListingWhereInput>;
    @Field(() => [ProductListingWhereInput], {nullable:true})
    NOT?: Array<ProductListingWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => EnumProductListingTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumProductListingTypeFilter>;
    @Field(() => [MediaItemObjectEqualityInput], {nullable:true})
    media?: Array<MediaItemObjectEqualityInput>;
    @Field(() => StringFilter, {nullable:true})
    title?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    categoryId?: InstanceType<typeof StringFilter>;
    @Field(() => JsonNullableFilter, {nullable:true})
    selectedCategoryFilters?: InstanceType<typeof JsonNullableFilter>;
    @Field(() => JsonNullableFilter, {nullable:true})
    extendedData?: InstanceType<typeof JsonNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    brandId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    colorId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => EnumProductConditionFilter, {nullable:true})
    productCondition?: InstanceType<typeof EnumProductConditionFilter>;
    @Field(() => EnumProductDeliveryModeNullableFilter, {nullable:true})
    productDeliveryMode?: InstanceType<typeof EnumProductDeliveryModeNullableFilter>;
    @Field(() => EnumShippingChargePayerNullableFilter, {nullable:true})
    shippingChargePayer?: InstanceType<typeof EnumShippingChargePayerNullableFilter>;
    @Field(() => RentingPreferenceNullableCompositeFilter, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreferenceNullableCompositeFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    weightCategoryId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    uploaderId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => FloatFilter, {nullable:true})
    price?: InstanceType<typeof FloatFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    priceString?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringFilter, {nullable:true})
    description?: InstanceType<typeof StringFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    reasonForSelling?: InstanceType<typeof StringNullableFilter>;
    @Field(() => BoolFilter, {nullable:true})
    shippingEnabled?: InstanceType<typeof BoolFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    shippingFrom?: InstanceType<typeof StringNullableFilter>;
    @Field(() => BoolFilter, {nullable:true})
    active?: InstanceType<typeof BoolFilter>;
    @Field(() => BoolFilter, {nullable:true})
    soldOut?: InstanceType<typeof BoolFilter>;
    @Field(() => BoolFilter, {nullable:true})
    blackListed?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    wishlistedUserIds?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    legacyHash?: InstanceType<typeof StringNullableFilter>;
    @Field(() => BoolFilter, {nullable:true})
    archived?: InstanceType<typeof BoolFilter>;
    @Field(() => EnumPreferredGenderNullableFilter, {nullable:true})
    categoryPreferredGender?: InstanceType<typeof EnumPreferredGenderNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    uploaderEduInstituteId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => ProductCategoryNullableRelationFilter, {nullable:true})
    category?: InstanceType<typeof ProductCategoryNullableRelationFilter>;
    @Field(() => BrandNullableRelationFilter, {nullable:true})
    brand?: InstanceType<typeof BrandNullableRelationFilter>;
    @Field(() => ColorNullableRelationFilter, {nullable:true})
    color?: InstanceType<typeof ColorNullableRelationFilter>;
    @Field(() => WeightCategoryNullableRelationFilter, {nullable:true})
    weightCategory?: InstanceType<typeof WeightCategoryNullableRelationFilter>;
    @Field(() => UserNullableRelationFilter, {nullable:true})
    uploader?: InstanceType<typeof UserNullableRelationFilter>;
    @Field(() => UserListRelationFilter, {nullable:true})
    wishlistedBy?: InstanceType<typeof UserListRelationFilter>;
    @Field(() => ConversationListRelationFilter, {nullable:true})
    conversations?: InstanceType<typeof ConversationListRelationFilter>;
    @Field(() => ProductReportListRelationFilter, {nullable:true})
    reports?: InstanceType<typeof ProductReportListRelationFilter>;
    @Field(() => EduInstituteNullableRelationFilter, {nullable:true})
    uploaderEduInstitute?: InstanceType<typeof EduInstituteNullableRelationFilter>;
}

@ObjectType()
export class ProductListing {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => ProductListingType, {nullable:false})
    type!: `${ProductListingType}`;
    @Field(() => [MediaItem], {nullable:true})
    media?: Array<MediaItem>;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => String, {nullable:false})
    categoryId!: string;
    @Field(() => GraphQLJSON, {nullable:true})
    selectedCategoryFilters!: any | null;
    @Field(() => GraphQLJSON, {nullable:true})
    extendedData!: any | null;
    @Field(() => String, {nullable:true})
    brandId!: string | null;
    @Field(() => String, {nullable:true})
    colorId!: string | null;
    @Field(() => ProductCondition, {nullable:false})
    productCondition!: `${ProductCondition}`;
    @Field(() => ProductDeliveryMode, {nullable:true})
    productDeliveryMode!: `${ProductDeliveryMode}` | null;
    @Field(() => ShippingChargePayer, {nullable:true})
    shippingChargePayer!: `${ShippingChargePayer}` | null;
    @Field(() => RentingPreference, {nullable:true})
    rentingPreference?: InstanceType<typeof RentingPreference> | null;
    @Field(() => String, {nullable:true})
    weightCategoryId!: string | null;
    @Field(() => String, {nullable:true})
    uploaderId!: string | null;
    @Field(() => Float, {nullable:false})
    price!: number;
    @Field(() => String, {nullable:true})
    priceString!: string | null;
    @Field(() => String, {nullable:false})
    description!: string;
    @Field(() => String, {nullable:true})
    reasonForSelling!: string | null;
    @Field(() => Boolean, {defaultValue:false,nullable:false})
    shippingEnabled!: boolean;
    @Field(() => String, {nullable:true})
    shippingFrom!: string | null;
    @Field(() => Boolean, {defaultValue:true,nullable:false})
    active!: boolean;
    @Field(() => Boolean, {defaultValue:false,nullable:false})
    soldOut!: boolean;
    @Field(() => Boolean, {defaultValue:false,nullable:false})
    blackListed!: boolean;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
    @Field(() => Date, {nullable:false})
    updatedAt!: Date;
    @Field(() => [String], {nullable:true})
    wishlistedUserIds!: Array<string>;
    @Field(() => String, {nullable:true})
    legacyHash!: string | null;
    @Field(() => Boolean, {defaultValue:false,nullable:false})
    archived!: boolean;
    @Field(() => PreferredGender, {nullable:true})
    categoryPreferredGender!: `${PreferredGender}` | null;
    @Field(() => String, {nullable:true})
    uploaderEduInstituteId!: string | null;
    @Field(() => ProductCategory, {nullable:true})
    category?: InstanceType<typeof ProductCategory> | null;
    @Field(() => Brand, {nullable:true})
    brand?: InstanceType<typeof Brand> | null;
    @Field(() => Color, {nullable:true})
    color?: InstanceType<typeof Color> | null;
    @Field(() => WeightCategory, {nullable:true})
    weightCategory?: InstanceType<typeof WeightCategory> | null;
    @Field(() => User, {nullable:true})
    uploader?: InstanceType<typeof User> | null;
    @Field(() => [User], {nullable:true})
    wishlistedBy?: Array<User>;
    @Field(() => [Conversation], {nullable:true})
    conversations?: Array<Conversation>;
    @Field(() => [ProductReport], {nullable:true})
    reports?: Array<ProductReport>;
    @Field(() => EduInstitute, {nullable:true})
    uploaderEduInstitute?: InstanceType<typeof EduInstitute> | null;
}

@ArgsType()
export class UpdateManyProductListingArgs {
    @Field(() => ProductListingUpdateManyMutationInput, {nullable:false})
    @Type(() => ProductListingUpdateManyMutationInput)
    data!: InstanceType<typeof ProductListingUpdateManyMutationInput>;
    @Field(() => ProductListingWhereInput, {nullable:true})
    @Type(() => ProductListingWhereInput)
    where?: InstanceType<typeof ProductListingWhereInput>;
}

@ArgsType()
export class UpdateOneProductListingArgs {
    @Field(() => ProductListingUpdateInput, {nullable:false})
    @Type(() => ProductListingUpdateInput)
    data!: InstanceType<typeof ProductListingUpdateInput>;
    @Field(() => ProductListingWhereUniqueInput, {nullable:false})
    @Type(() => ProductListingWhereUniqueInput)
    where!: Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpsertOneProductListingArgs {
    @Field(() => ProductListingWhereUniqueInput, {nullable:false})
    @Type(() => ProductListingWhereUniqueInput)
    where!: Prisma.AtLeast<ProductListingWhereUniqueInput, 'id'>;
    @Field(() => ProductListingCreateInput, {nullable:false})
    @Type(() => ProductListingCreateInput)
    create!: InstanceType<typeof ProductListingCreateInput>;
    @Field(() => ProductListingUpdateInput, {nullable:false})
    @Type(() => ProductListingUpdateInput)
    update!: InstanceType<typeof ProductListingUpdateInput>;
}

@InputType()
export class ProductListingSnapshotCreateEnvelopeInput {
    @Field(() => ProductListingSnapshotCreateInput, {nullable:true})
    @Type(() => ProductListingSnapshotCreateInput)
    set?: InstanceType<typeof ProductListingSnapshotCreateInput>;
}

@InputType()
export class ProductListingSnapshotCreateInput {
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => String, {nullable:false})
    price!: string;
    @Field(() => String, {nullable:false})
    productCondition!: string;
    @Field(() => String, {nullable:true})
    colorName?: string;
    @Field(() => String, {nullable:true})
    brandName?: string;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => ProductDeliveryMode, {nullable:false})
    deliveryMode!: `${ProductDeliveryMode}`;
    @Field(() => ProductListingType, {nullable:false})
    type!: `${ProductListingType}`;
    @Field(() => String, {nullable:true})
    shippingFrom?: string;
    @Field(() => PackageWeightCreateInput, {nullable:true})
    packageWeight?: InstanceType<typeof PackageWeightCreateInput>;
    @Field(() => PackageDimensionsCreateInput, {nullable:true})
    packageDimensions?: InstanceType<typeof PackageDimensionsCreateInput>;
}

@InputType()
export class ProductListingSnapshotOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    title?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    price?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    productCondition?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    colorName?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    brandName?: `${SortOrder}`;
    @Field(() => MediaItemOrderByCompositeAggregateInput, {nullable:true})
    media?: InstanceType<typeof MediaItemOrderByCompositeAggregateInput>;
    @Field(() => SortOrder, {nullable:true})
    deliveryMode?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    shippingFrom?: `${SortOrder}`;
    @Field(() => PackageWeightOrderByInput, {nullable:true})
    packageWeight?: InstanceType<typeof PackageWeightOrderByInput>;
    @Field(() => PackageDimensionsOrderByInput, {nullable:true})
    packageDimensions?: InstanceType<typeof PackageDimensionsOrderByInput>;
}

@InputType()
export class ProductListingSnapshotUpdateEnvelopeInput {
    @Field(() => ProductListingSnapshotCreateInput, {nullable:true})
    @Type(() => ProductListingSnapshotCreateInput)
    set?: InstanceType<typeof ProductListingSnapshotCreateInput>;
    @Field(() => ProductListingSnapshotUpdateInput, {nullable:true})
    @Type(() => ProductListingSnapshotUpdateInput)
    update?: InstanceType<typeof ProductListingSnapshotUpdateInput>;
}

@InputType()
export class ProductListingSnapshotUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    price?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    productCondition?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    colorName?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    brandName?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => [MediaItemCreateInput], {nullable:true})
    media?: Array<MediaItemCreateInput>;
    @Field(() => EnumProductDeliveryModeFieldUpdateOperationsInput, {nullable:true})
    deliveryMode?: InstanceType<typeof EnumProductDeliveryModeFieldUpdateOperationsInput>;
    @Field(() => EnumProductListingTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumProductListingTypeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    shippingFrom?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => PackageWeightNullableUpdateEnvelopeInput, {nullable:true})
    packageWeight?: InstanceType<typeof PackageWeightNullableUpdateEnvelopeInput>;
    @Field(() => PackageDimensionsNullableUpdateEnvelopeInput, {nullable:true})
    packageDimensions?: InstanceType<typeof PackageDimensionsNullableUpdateEnvelopeInput>;
}

@InputType()
export class ProductListingSnapshotWhereInput {
    @Field(() => [ProductListingSnapshotWhereInput], {nullable:true})
    AND?: Array<ProductListingSnapshotWhereInput>;
    @Field(() => [ProductListingSnapshotWhereInput], {nullable:true})
    OR?: Array<ProductListingSnapshotWhereInput>;
    @Field(() => [ProductListingSnapshotWhereInput], {nullable:true})
    NOT?: Array<ProductListingSnapshotWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    title?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    price?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    productCondition?: InstanceType<typeof StringFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    colorName?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    brandName?: InstanceType<typeof StringNullableFilter>;
    @Field(() => [MediaItemObjectEqualityInput], {nullable:true})
    media?: Array<MediaItemObjectEqualityInput>;
    @Field(() => EnumProductDeliveryModeFilter, {nullable:true})
    deliveryMode?: InstanceType<typeof EnumProductDeliveryModeFilter>;
    @Field(() => EnumProductListingTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumProductListingTypeFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    shippingFrom?: InstanceType<typeof StringNullableFilter>;
    @Field(() => PackageWeightNullableCompositeFilter, {nullable:true})
    packageWeight?: InstanceType<typeof PackageWeightNullableCompositeFilter>;
    @Field(() => PackageDimensionsNullableCompositeFilter, {nullable:true})
    packageDimensions?: InstanceType<typeof PackageDimensionsNullableCompositeFilter>;
}

@ObjectType()
export class ProductListingSnapshot {
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => String, {nullable:false})
    price!: string;
    @Field(() => String, {nullable:false})
    productCondition!: string;
    @Field(() => String, {nullable:true})
    colorName!: string | null;
    @Field(() => String, {nullable:true})
    brandName!: string | null;
    @Field(() => [MediaItem], {nullable:true})
    media?: Array<MediaItem>;
    @Field(() => ProductDeliveryMode, {nullable:false})
    deliveryMode!: `${ProductDeliveryMode}`;
    @Field(() => ProductListingType, {nullable:false})
    type!: `${ProductListingType}`;
    @Field(() => String, {nullable:true})
    shippingFrom!: string | null;
    @Field(() => PackageWeight, {nullable:true})
    packageWeight?: InstanceType<typeof PackageWeight> | null;
    @Field(() => PackageDimensions, {nullable:true})
    packageDimensions?: InstanceType<typeof PackageDimensions> | null;
}

@ArgsType()
export class CreateManyProductReportArgs {
    @Field(() => [ProductReportCreateManyInput], {nullable:false})
    @Type(() => ProductReportCreateManyInput)
    data!: Array<ProductReportCreateManyInput>;
}

@ArgsType()
export class CreateOneProductReportArgs {
    @Field(() => ProductReportCreateInput, {nullable:false})
    @Type(() => ProductReportCreateInput)
    data!: InstanceType<typeof ProductReportCreateInput>;
}

@ArgsType()
export class DeleteManyProductReportArgs {
    @Field(() => ProductReportWhereInput, {nullable:true})
    @Type(() => ProductReportWhereInput)
    where?: InstanceType<typeof ProductReportWhereInput>;
}

@ArgsType()
export class DeleteOneProductReportArgs {
    @Field(() => ProductReportWhereUniqueInput, {nullable:false})
    @Type(() => ProductReportWhereUniqueInput)
    where!: Prisma.AtLeast<ProductReportWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindFirstProductReportOrThrowArgs {
    @Field(() => ProductReportWhereInput, {nullable:true})
    @Type(() => ProductReportWhereInput)
    where?: InstanceType<typeof ProductReportWhereInput>;
    @Field(() => [ProductReportOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<ProductReportOrderByWithRelationInput>;
    @Field(() => ProductReportWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<ProductReportWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [ProductReportScalarFieldEnum], {nullable:true})
    distinct?: Array<`${ProductReportScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstProductReportArgs {
    @Field(() => ProductReportWhereInput, {nullable:true})
    @Type(() => ProductReportWhereInput)
    where?: InstanceType<typeof ProductReportWhereInput>;
    @Field(() => [ProductReportOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<ProductReportOrderByWithRelationInput>;
    @Field(() => ProductReportWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<ProductReportWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [ProductReportScalarFieldEnum], {nullable:true})
    distinct?: Array<`${ProductReportScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyProductReportArgs {
    @Field(() => ProductReportWhereInput, {nullable:true})
    @Type(() => ProductReportWhereInput)
    where?: InstanceType<typeof ProductReportWhereInput>;
    @Field(() => [ProductReportOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<ProductReportOrderByWithRelationInput>;
    @Field(() => ProductReportWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<ProductReportWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [ProductReportScalarFieldEnum], {nullable:true})
    distinct?: Array<`${ProductReportScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniqueProductReportOrThrowArgs {
    @Field(() => ProductReportWhereUniqueInput, {nullable:false})
    @Type(() => ProductReportWhereUniqueInput)
    where!: Prisma.AtLeast<ProductReportWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindUniqueProductReportArgs {
    @Field(() => ProductReportWhereUniqueInput, {nullable:false})
    @Type(() => ProductReportWhereUniqueInput)
    where!: Prisma.AtLeast<ProductReportWhereUniqueInput, 'id'>;
}

@ArgsType()
export class ProductReportAggregateArgs {
    @Field(() => ProductReportWhereInput, {nullable:true})
    @Type(() => ProductReportWhereInput)
    where?: InstanceType<typeof ProductReportWhereInput>;
    @Field(() => [ProductReportOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<ProductReportOrderByWithRelationInput>;
    @Field(() => ProductReportWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<ProductReportWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class ProductReportCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    productId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    reporterId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    reason?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    details?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class ProductReportCreateManyProductInputEnvelope {
    @Field(() => [ProductReportCreateManyProductInput], {nullable:false})
    @Type(() => ProductReportCreateManyProductInput)
    data!: Array<ProductReportCreateManyProductInput>;
}

@InputType()
export class ProductReportCreateManyProductInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    reporterId!: string;
    @Field(() => ProductReportReason, {nullable:false})
    reason!: `${ProductReportReason}`;
    @Field(() => String, {nullable:true})
    details?: string;
    @Field(() => ProductReportStatusCreateEnvelopeInput, {nullable:false})
    status!: InstanceType<typeof ProductReportStatusCreateEnvelopeInput>;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class ProductReportCreateManyReporterInputEnvelope {
    @Field(() => [ProductReportCreateManyReporterInput], {nullable:false})
    @Type(() => ProductReportCreateManyReporterInput)
    data!: Array<ProductReportCreateManyReporterInput>;
}

@InputType()
export class ProductReportCreateManyReporterInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    productId!: string;
    @Field(() => ProductReportReason, {nullable:false})
    reason!: `${ProductReportReason}`;
    @Field(() => String, {nullable:true})
    details?: string;
    @Field(() => ProductReportStatusCreateEnvelopeInput, {nullable:false})
    status!: InstanceType<typeof ProductReportStatusCreateEnvelopeInput>;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class ProductReportCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    productId!: string;
    @Field(() => String, {nullable:false})
    reporterId!: string;
    @Field(() => ProductReportReason, {nullable:false})
    reason!: `${ProductReportReason}`;
    @Field(() => String, {nullable:true})
    details?: string;
    @Field(() => ProductReportStatusCreateEnvelopeInput, {nullable:false})
    status!: InstanceType<typeof ProductReportStatusCreateEnvelopeInput>;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class ProductReportCreateNestedManyWithoutProductInput {
    @Field(() => [ProductReportCreateWithoutProductInput], {nullable:true})
    @Type(() => ProductReportCreateWithoutProductInput)
    create?: Array<ProductReportCreateWithoutProductInput>;
    @Field(() => [ProductReportCreateOrConnectWithoutProductInput], {nullable:true})
    @Type(() => ProductReportCreateOrConnectWithoutProductInput)
    connectOrCreate?: Array<ProductReportCreateOrConnectWithoutProductInput>;
    @Field(() => ProductReportCreateManyProductInputEnvelope, {nullable:true})
    @Type(() => ProductReportCreateManyProductInputEnvelope)
    createMany?: InstanceType<typeof ProductReportCreateManyProductInputEnvelope>;
    @Field(() => [ProductReportWhereUniqueInput], {nullable:true})
    @Type(() => ProductReportWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ProductReportWhereUniqueInput, 'id'>>;
}

@InputType()
export class ProductReportCreateNestedManyWithoutReporterInput {
    @Field(() => [ProductReportCreateWithoutReporterInput], {nullable:true})
    @Type(() => ProductReportCreateWithoutReporterInput)
    create?: Array<ProductReportCreateWithoutReporterInput>;
    @Field(() => [ProductReportCreateOrConnectWithoutReporterInput], {nullable:true})
    @Type(() => ProductReportCreateOrConnectWithoutReporterInput)
    connectOrCreate?: Array<ProductReportCreateOrConnectWithoutReporterInput>;
    @Field(() => ProductReportCreateManyReporterInputEnvelope, {nullable:true})
    @Type(() => ProductReportCreateManyReporterInputEnvelope)
    createMany?: InstanceType<typeof ProductReportCreateManyReporterInputEnvelope>;
    @Field(() => [ProductReportWhereUniqueInput], {nullable:true})
    @Type(() => ProductReportWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ProductReportWhereUniqueInput, 'id'>>;
}

@InputType()
export class ProductReportCreateOrConnectWithoutProductInput {
    @Field(() => ProductReportWhereUniqueInput, {nullable:false})
    @Type(() => ProductReportWhereUniqueInput)
    where!: Prisma.AtLeast<ProductReportWhereUniqueInput, 'id'>;
    @Field(() => ProductReportCreateWithoutProductInput, {nullable:false})
    @Type(() => ProductReportCreateWithoutProductInput)
    create!: InstanceType<typeof ProductReportCreateWithoutProductInput>;
}

@InputType()
export class ProductReportCreateOrConnectWithoutReporterInput {
    @Field(() => ProductReportWhereUniqueInput, {nullable:false})
    @Type(() => ProductReportWhereUniqueInput)
    where!: Prisma.AtLeast<ProductReportWhereUniqueInput, 'id'>;
    @Field(() => ProductReportCreateWithoutReporterInput, {nullable:false})
    @Type(() => ProductReportCreateWithoutReporterInput)
    create!: InstanceType<typeof ProductReportCreateWithoutReporterInput>;
}

@InputType()
export class ProductReportCreateWithoutProductInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => ProductReportReason, {nullable:false})
    reason!: `${ProductReportReason}`;
    @Field(() => String, {nullable:true})
    details?: string;
    @Field(() => ProductReportStatusCreateEnvelopeInput, {nullable:false})
    status!: InstanceType<typeof ProductReportStatusCreateEnvelopeInput>;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => UserCreateNestedOneWithoutReportedProductsInput, {nullable:false})
    reporter!: InstanceType<typeof UserCreateNestedOneWithoutReportedProductsInput>;
}

@InputType()
export class ProductReportCreateWithoutReporterInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => ProductReportReason, {nullable:false})
    reason!: `${ProductReportReason}`;
    @Field(() => String, {nullable:true})
    details?: string;
    @Field(() => ProductReportStatusCreateEnvelopeInput, {nullable:false})
    status!: InstanceType<typeof ProductReportStatusCreateEnvelopeInput>;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => ProductListingCreateNestedOneWithoutReportsInput, {nullable:false})
    product!: InstanceType<typeof ProductListingCreateNestedOneWithoutReportsInput>;
}

@InputType()
export class ProductReportCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => ProductReportReason, {nullable:false})
    reason!: `${ProductReportReason}`;
    @Field(() => String, {nullable:true})
    details?: string;
    @Field(() => ProductReportStatusCreateEnvelopeInput, {nullable:false})
    status!: InstanceType<typeof ProductReportStatusCreateEnvelopeInput>;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => ProductListingCreateNestedOneWithoutReportsInput, {nullable:false})
    product!: InstanceType<typeof ProductListingCreateNestedOneWithoutReportsInput>;
    @Field(() => UserCreateNestedOneWithoutReportedProductsInput, {nullable:false})
    reporter!: InstanceType<typeof UserCreateNestedOneWithoutReportedProductsInput>;
}

@ArgsType()
export class ProductReportGroupByArgs {
    @Field(() => ProductReportWhereInput, {nullable:true})
    @Type(() => ProductReportWhereInput)
    where?: InstanceType<typeof ProductReportWhereInput>;
    @Field(() => [ProductReportOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<ProductReportOrderByWithAggregationInput>;
    @Field(() => [ProductReportScalarFieldEnum], {nullable:false})
    by!: Array<`${ProductReportScalarFieldEnum}`>;
    @Field(() => ProductReportScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof ProductReportScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class ProductReportListRelationFilter {
    @Field(() => ProductReportWhereInput, {nullable:true})
    every?: InstanceType<typeof ProductReportWhereInput>;
    @Field(() => ProductReportWhereInput, {nullable:true})
    some?: InstanceType<typeof ProductReportWhereInput>;
    @Field(() => ProductReportWhereInput, {nullable:true})
    none?: InstanceType<typeof ProductReportWhereInput>;
}

@InputType()
export class ProductReportMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    productId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    reporterId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    reason?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    details?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class ProductReportMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    productId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    reporterId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    reason?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    details?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class ProductReportOrderByRelationAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    _count?: `${SortOrder}`;
}

@InputType()
export class ProductReportOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    productId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    reporterId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    reason?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    details?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => ProductReportCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof ProductReportCountOrderByAggregateInput>;
    @Field(() => ProductReportMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof ProductReportMaxOrderByAggregateInput>;
    @Field(() => ProductReportMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof ProductReportMinOrderByAggregateInput>;
}

@InputType()
export class ProductReportOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    productId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    reporterId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    reason?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    details?: `${SortOrder}`;
    @Field(() => ProductReportStatusOrderByInput, {nullable:true})
    status?: InstanceType<typeof ProductReportStatusOrderByInput>;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => ProductListingOrderByWithRelationInput, {nullable:true})
    product?: InstanceType<typeof ProductListingOrderByWithRelationInput>;
    @Field(() => UserOrderByWithRelationInput, {nullable:true})
    reporter?: InstanceType<typeof UserOrderByWithRelationInput>;
}

@InputType()
export class ProductReportScalarWhereWithAggregatesInput {
    @Field(() => [ProductReportScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<ProductReportScalarWhereWithAggregatesInput>;
    @Field(() => [ProductReportScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<ProductReportScalarWhereWithAggregatesInput>;
    @Field(() => [ProductReportScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<ProductReportScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    productId?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    reporterId?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => EnumProductReportReasonWithAggregatesFilter, {nullable:true})
    reason?: InstanceType<typeof EnumProductReportReasonWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    details?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
}

@InputType()
export class ProductReportScalarWhereInput {
    @Field(() => [ProductReportScalarWhereInput], {nullable:true})
    AND?: Array<ProductReportScalarWhereInput>;
    @Field(() => [ProductReportScalarWhereInput], {nullable:true})
    OR?: Array<ProductReportScalarWhereInput>;
    @Field(() => [ProductReportScalarWhereInput], {nullable:true})
    NOT?: Array<ProductReportScalarWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    productId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    reporterId?: InstanceType<typeof StringFilter>;
    @Field(() => EnumProductReportReasonFilter, {nullable:true})
    reason?: InstanceType<typeof EnumProductReportReasonFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    details?: InstanceType<typeof StringNullableFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@InputType()
export class ProductReportUncheckedCreateNestedManyWithoutProductInput {
    @Field(() => [ProductReportCreateWithoutProductInput], {nullable:true})
    @Type(() => ProductReportCreateWithoutProductInput)
    create?: Array<ProductReportCreateWithoutProductInput>;
    @Field(() => [ProductReportCreateOrConnectWithoutProductInput], {nullable:true})
    @Type(() => ProductReportCreateOrConnectWithoutProductInput)
    connectOrCreate?: Array<ProductReportCreateOrConnectWithoutProductInput>;
    @Field(() => ProductReportCreateManyProductInputEnvelope, {nullable:true})
    @Type(() => ProductReportCreateManyProductInputEnvelope)
    createMany?: InstanceType<typeof ProductReportCreateManyProductInputEnvelope>;
    @Field(() => [ProductReportWhereUniqueInput], {nullable:true})
    @Type(() => ProductReportWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ProductReportWhereUniqueInput, 'id'>>;
}

@InputType()
export class ProductReportUncheckedCreateNestedManyWithoutReporterInput {
    @Field(() => [ProductReportCreateWithoutReporterInput], {nullable:true})
    @Type(() => ProductReportCreateWithoutReporterInput)
    create?: Array<ProductReportCreateWithoutReporterInput>;
    @Field(() => [ProductReportCreateOrConnectWithoutReporterInput], {nullable:true})
    @Type(() => ProductReportCreateOrConnectWithoutReporterInput)
    connectOrCreate?: Array<ProductReportCreateOrConnectWithoutReporterInput>;
    @Field(() => ProductReportCreateManyReporterInputEnvelope, {nullable:true})
    @Type(() => ProductReportCreateManyReporterInputEnvelope)
    createMany?: InstanceType<typeof ProductReportCreateManyReporterInputEnvelope>;
    @Field(() => [ProductReportWhereUniqueInput], {nullable:true})
    @Type(() => ProductReportWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ProductReportWhereUniqueInput, 'id'>>;
}

@InputType()
export class ProductReportUncheckedCreateWithoutProductInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    reporterId!: string;
    @Field(() => ProductReportReason, {nullable:false})
    reason!: `${ProductReportReason}`;
    @Field(() => String, {nullable:true})
    details?: string;
    @Field(() => ProductReportStatusCreateEnvelopeInput, {nullable:false})
    status!: InstanceType<typeof ProductReportStatusCreateEnvelopeInput>;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class ProductReportUncheckedCreateWithoutReporterInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    productId!: string;
    @Field(() => ProductReportReason, {nullable:false})
    reason!: `${ProductReportReason}`;
    @Field(() => String, {nullable:true})
    details?: string;
    @Field(() => ProductReportStatusCreateEnvelopeInput, {nullable:false})
    status!: InstanceType<typeof ProductReportStatusCreateEnvelopeInput>;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class ProductReportUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    productId!: string;
    @Field(() => String, {nullable:false})
    reporterId!: string;
    @Field(() => ProductReportReason, {nullable:false})
    reason!: `${ProductReportReason}`;
    @Field(() => String, {nullable:true})
    details?: string;
    @Field(() => ProductReportStatusCreateEnvelopeInput, {nullable:false})
    status!: InstanceType<typeof ProductReportStatusCreateEnvelopeInput>;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class ProductReportUncheckedUpdateManyWithoutProductNestedInput {
    @Field(() => [ProductReportCreateWithoutProductInput], {nullable:true})
    @Type(() => ProductReportCreateWithoutProductInput)
    create?: Array<ProductReportCreateWithoutProductInput>;
    @Field(() => [ProductReportCreateOrConnectWithoutProductInput], {nullable:true})
    @Type(() => ProductReportCreateOrConnectWithoutProductInput)
    connectOrCreate?: Array<ProductReportCreateOrConnectWithoutProductInput>;
    @Field(() => [ProductReportUpsertWithWhereUniqueWithoutProductInput], {nullable:true})
    @Type(() => ProductReportUpsertWithWhereUniqueWithoutProductInput)
    upsert?: Array<ProductReportUpsertWithWhereUniqueWithoutProductInput>;
    @Field(() => ProductReportCreateManyProductInputEnvelope, {nullable:true})
    @Type(() => ProductReportCreateManyProductInputEnvelope)
    createMany?: InstanceType<typeof ProductReportCreateManyProductInputEnvelope>;
    @Field(() => [ProductReportWhereUniqueInput], {nullable:true})
    @Type(() => ProductReportWhereUniqueInput)
    set?: Array<Prisma.AtLeast<ProductReportWhereUniqueInput, 'id'>>;
    @Field(() => [ProductReportWhereUniqueInput], {nullable:true})
    @Type(() => ProductReportWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<ProductReportWhereUniqueInput, 'id'>>;
    @Field(() => [ProductReportWhereUniqueInput], {nullable:true})
    @Type(() => ProductReportWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<ProductReportWhereUniqueInput, 'id'>>;
    @Field(() => [ProductReportWhereUniqueInput], {nullable:true})
    @Type(() => ProductReportWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ProductReportWhereUniqueInput, 'id'>>;
    @Field(() => [ProductReportUpdateWithWhereUniqueWithoutProductInput], {nullable:true})
    @Type(() => ProductReportUpdateWithWhereUniqueWithoutProductInput)
    update?: Array<ProductReportUpdateWithWhereUniqueWithoutProductInput>;
    @Field(() => [ProductReportUpdateManyWithWhereWithoutProductInput], {nullable:true})
    @Type(() => ProductReportUpdateManyWithWhereWithoutProductInput)
    updateMany?: Array<ProductReportUpdateManyWithWhereWithoutProductInput>;
    @Field(() => [ProductReportScalarWhereInput], {nullable:true})
    @Type(() => ProductReportScalarWhereInput)
    deleteMany?: Array<ProductReportScalarWhereInput>;
}

@InputType()
export class ProductReportUncheckedUpdateManyWithoutProductInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    reporterId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumProductReportReasonFieldUpdateOperationsInput, {nullable:true})
    reason?: InstanceType<typeof EnumProductReportReasonFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    details?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => ProductReportStatusUpdateEnvelopeInput, {nullable:true})
    status?: InstanceType<typeof ProductReportStatusUpdateEnvelopeInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class ProductReportUncheckedUpdateManyWithoutReporterNestedInput {
    @Field(() => [ProductReportCreateWithoutReporterInput], {nullable:true})
    @Type(() => ProductReportCreateWithoutReporterInput)
    create?: Array<ProductReportCreateWithoutReporterInput>;
    @Field(() => [ProductReportCreateOrConnectWithoutReporterInput], {nullable:true})
    @Type(() => ProductReportCreateOrConnectWithoutReporterInput)
    connectOrCreate?: Array<ProductReportCreateOrConnectWithoutReporterInput>;
    @Field(() => [ProductReportUpsertWithWhereUniqueWithoutReporterInput], {nullable:true})
    @Type(() => ProductReportUpsertWithWhereUniqueWithoutReporterInput)
    upsert?: Array<ProductReportUpsertWithWhereUniqueWithoutReporterInput>;
    @Field(() => ProductReportCreateManyReporterInputEnvelope, {nullable:true})
    @Type(() => ProductReportCreateManyReporterInputEnvelope)
    createMany?: InstanceType<typeof ProductReportCreateManyReporterInputEnvelope>;
    @Field(() => [ProductReportWhereUniqueInput], {nullable:true})
    @Type(() => ProductReportWhereUniqueInput)
    set?: Array<Prisma.AtLeast<ProductReportWhereUniqueInput, 'id'>>;
    @Field(() => [ProductReportWhereUniqueInput], {nullable:true})
    @Type(() => ProductReportWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<ProductReportWhereUniqueInput, 'id'>>;
    @Field(() => [ProductReportWhereUniqueInput], {nullable:true})
    @Type(() => ProductReportWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<ProductReportWhereUniqueInput, 'id'>>;
    @Field(() => [ProductReportWhereUniqueInput], {nullable:true})
    @Type(() => ProductReportWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ProductReportWhereUniqueInput, 'id'>>;
    @Field(() => [ProductReportUpdateWithWhereUniqueWithoutReporterInput], {nullable:true})
    @Type(() => ProductReportUpdateWithWhereUniqueWithoutReporterInput)
    update?: Array<ProductReportUpdateWithWhereUniqueWithoutReporterInput>;
    @Field(() => [ProductReportUpdateManyWithWhereWithoutReporterInput], {nullable:true})
    @Type(() => ProductReportUpdateManyWithWhereWithoutReporterInput)
    updateMany?: Array<ProductReportUpdateManyWithWhereWithoutReporterInput>;
    @Field(() => [ProductReportScalarWhereInput], {nullable:true})
    @Type(() => ProductReportScalarWhereInput)
    deleteMany?: Array<ProductReportScalarWhereInput>;
}

@InputType()
export class ProductReportUncheckedUpdateManyWithoutReporterInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    productId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumProductReportReasonFieldUpdateOperationsInput, {nullable:true})
    reason?: InstanceType<typeof EnumProductReportReasonFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    details?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => ProductReportStatusUpdateEnvelopeInput, {nullable:true})
    status?: InstanceType<typeof ProductReportStatusUpdateEnvelopeInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class ProductReportUncheckedUpdateManyInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    productId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    reporterId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumProductReportReasonFieldUpdateOperationsInput, {nullable:true})
    reason?: InstanceType<typeof EnumProductReportReasonFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    details?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => ProductReportStatusUpdateEnvelopeInput, {nullable:true})
    status?: InstanceType<typeof ProductReportStatusUpdateEnvelopeInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class ProductReportUncheckedUpdateWithoutProductInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    reporterId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumProductReportReasonFieldUpdateOperationsInput, {nullable:true})
    reason?: InstanceType<typeof EnumProductReportReasonFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    details?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => ProductReportStatusUpdateEnvelopeInput, {nullable:true})
    status?: InstanceType<typeof ProductReportStatusUpdateEnvelopeInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class ProductReportUncheckedUpdateWithoutReporterInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    productId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumProductReportReasonFieldUpdateOperationsInput, {nullable:true})
    reason?: InstanceType<typeof EnumProductReportReasonFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    details?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => ProductReportStatusUpdateEnvelopeInput, {nullable:true})
    status?: InstanceType<typeof ProductReportStatusUpdateEnvelopeInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class ProductReportUncheckedUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    productId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    reporterId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumProductReportReasonFieldUpdateOperationsInput, {nullable:true})
    reason?: InstanceType<typeof EnumProductReportReasonFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    details?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => ProductReportStatusUpdateEnvelopeInput, {nullable:true})
    status?: InstanceType<typeof ProductReportStatusUpdateEnvelopeInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class ProductReportUpdateManyMutationInput {
    @Field(() => EnumProductReportReasonFieldUpdateOperationsInput, {nullable:true})
    reason?: InstanceType<typeof EnumProductReportReasonFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    details?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => ProductReportStatusUpdateEnvelopeInput, {nullable:true})
    status?: InstanceType<typeof ProductReportStatusUpdateEnvelopeInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class ProductReportUpdateManyWithWhereWithoutProductInput {
    @Field(() => ProductReportScalarWhereInput, {nullable:false})
    @Type(() => ProductReportScalarWhereInput)
    where!: InstanceType<typeof ProductReportScalarWhereInput>;
    @Field(() => ProductReportUpdateManyMutationInput, {nullable:false})
    @Type(() => ProductReportUpdateManyMutationInput)
    data!: InstanceType<typeof ProductReportUpdateManyMutationInput>;
}

@InputType()
export class ProductReportUpdateManyWithWhereWithoutReporterInput {
    @Field(() => ProductReportScalarWhereInput, {nullable:false})
    @Type(() => ProductReportScalarWhereInput)
    where!: InstanceType<typeof ProductReportScalarWhereInput>;
    @Field(() => ProductReportUpdateManyMutationInput, {nullable:false})
    @Type(() => ProductReportUpdateManyMutationInput)
    data!: InstanceType<typeof ProductReportUpdateManyMutationInput>;
}

@InputType()
export class ProductReportUpdateManyWithoutProductNestedInput {
    @Field(() => [ProductReportCreateWithoutProductInput], {nullable:true})
    @Type(() => ProductReportCreateWithoutProductInput)
    create?: Array<ProductReportCreateWithoutProductInput>;
    @Field(() => [ProductReportCreateOrConnectWithoutProductInput], {nullable:true})
    @Type(() => ProductReportCreateOrConnectWithoutProductInput)
    connectOrCreate?: Array<ProductReportCreateOrConnectWithoutProductInput>;
    @Field(() => [ProductReportUpsertWithWhereUniqueWithoutProductInput], {nullable:true})
    @Type(() => ProductReportUpsertWithWhereUniqueWithoutProductInput)
    upsert?: Array<ProductReportUpsertWithWhereUniqueWithoutProductInput>;
    @Field(() => ProductReportCreateManyProductInputEnvelope, {nullable:true})
    @Type(() => ProductReportCreateManyProductInputEnvelope)
    createMany?: InstanceType<typeof ProductReportCreateManyProductInputEnvelope>;
    @Field(() => [ProductReportWhereUniqueInput], {nullable:true})
    @Type(() => ProductReportWhereUniqueInput)
    set?: Array<Prisma.AtLeast<ProductReportWhereUniqueInput, 'id'>>;
    @Field(() => [ProductReportWhereUniqueInput], {nullable:true})
    @Type(() => ProductReportWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<ProductReportWhereUniqueInput, 'id'>>;
    @Field(() => [ProductReportWhereUniqueInput], {nullable:true})
    @Type(() => ProductReportWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<ProductReportWhereUniqueInput, 'id'>>;
    @Field(() => [ProductReportWhereUniqueInput], {nullable:true})
    @Type(() => ProductReportWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ProductReportWhereUniqueInput, 'id'>>;
    @Field(() => [ProductReportUpdateWithWhereUniqueWithoutProductInput], {nullable:true})
    @Type(() => ProductReportUpdateWithWhereUniqueWithoutProductInput)
    update?: Array<ProductReportUpdateWithWhereUniqueWithoutProductInput>;
    @Field(() => [ProductReportUpdateManyWithWhereWithoutProductInput], {nullable:true})
    @Type(() => ProductReportUpdateManyWithWhereWithoutProductInput)
    updateMany?: Array<ProductReportUpdateManyWithWhereWithoutProductInput>;
    @Field(() => [ProductReportScalarWhereInput], {nullable:true})
    @Type(() => ProductReportScalarWhereInput)
    deleteMany?: Array<ProductReportScalarWhereInput>;
}

@InputType()
export class ProductReportUpdateManyWithoutReporterNestedInput {
    @Field(() => [ProductReportCreateWithoutReporterInput], {nullable:true})
    @Type(() => ProductReportCreateWithoutReporterInput)
    create?: Array<ProductReportCreateWithoutReporterInput>;
    @Field(() => [ProductReportCreateOrConnectWithoutReporterInput], {nullable:true})
    @Type(() => ProductReportCreateOrConnectWithoutReporterInput)
    connectOrCreate?: Array<ProductReportCreateOrConnectWithoutReporterInput>;
    @Field(() => [ProductReportUpsertWithWhereUniqueWithoutReporterInput], {nullable:true})
    @Type(() => ProductReportUpsertWithWhereUniqueWithoutReporterInput)
    upsert?: Array<ProductReportUpsertWithWhereUniqueWithoutReporterInput>;
    @Field(() => ProductReportCreateManyReporterInputEnvelope, {nullable:true})
    @Type(() => ProductReportCreateManyReporterInputEnvelope)
    createMany?: InstanceType<typeof ProductReportCreateManyReporterInputEnvelope>;
    @Field(() => [ProductReportWhereUniqueInput], {nullable:true})
    @Type(() => ProductReportWhereUniqueInput)
    set?: Array<Prisma.AtLeast<ProductReportWhereUniqueInput, 'id'>>;
    @Field(() => [ProductReportWhereUniqueInput], {nullable:true})
    @Type(() => ProductReportWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<ProductReportWhereUniqueInput, 'id'>>;
    @Field(() => [ProductReportWhereUniqueInput], {nullable:true})
    @Type(() => ProductReportWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<ProductReportWhereUniqueInput, 'id'>>;
    @Field(() => [ProductReportWhereUniqueInput], {nullable:true})
    @Type(() => ProductReportWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ProductReportWhereUniqueInput, 'id'>>;
    @Field(() => [ProductReportUpdateWithWhereUniqueWithoutReporterInput], {nullable:true})
    @Type(() => ProductReportUpdateWithWhereUniqueWithoutReporterInput)
    update?: Array<ProductReportUpdateWithWhereUniqueWithoutReporterInput>;
    @Field(() => [ProductReportUpdateManyWithWhereWithoutReporterInput], {nullable:true})
    @Type(() => ProductReportUpdateManyWithWhereWithoutReporterInput)
    updateMany?: Array<ProductReportUpdateManyWithWhereWithoutReporterInput>;
    @Field(() => [ProductReportScalarWhereInput], {nullable:true})
    @Type(() => ProductReportScalarWhereInput)
    deleteMany?: Array<ProductReportScalarWhereInput>;
}

@InputType()
export class ProductReportUpdateWithWhereUniqueWithoutProductInput {
    @Field(() => ProductReportWhereUniqueInput, {nullable:false})
    @Type(() => ProductReportWhereUniqueInput)
    where!: Prisma.AtLeast<ProductReportWhereUniqueInput, 'id'>;
    @Field(() => ProductReportUpdateWithoutProductInput, {nullable:false})
    @Type(() => ProductReportUpdateWithoutProductInput)
    data!: InstanceType<typeof ProductReportUpdateWithoutProductInput>;
}

@InputType()
export class ProductReportUpdateWithWhereUniqueWithoutReporterInput {
    @Field(() => ProductReportWhereUniqueInput, {nullable:false})
    @Type(() => ProductReportWhereUniqueInput)
    where!: Prisma.AtLeast<ProductReportWhereUniqueInput, 'id'>;
    @Field(() => ProductReportUpdateWithoutReporterInput, {nullable:false})
    @Type(() => ProductReportUpdateWithoutReporterInput)
    data!: InstanceType<typeof ProductReportUpdateWithoutReporterInput>;
}

@InputType()
export class ProductReportUpdateWithoutProductInput {
    @Field(() => EnumProductReportReasonFieldUpdateOperationsInput, {nullable:true})
    reason?: InstanceType<typeof EnumProductReportReasonFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    details?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => ProductReportStatusUpdateEnvelopeInput, {nullable:true})
    status?: InstanceType<typeof ProductReportStatusUpdateEnvelopeInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => UserUpdateOneRequiredWithoutReportedProductsNestedInput, {nullable:true})
    reporter?: InstanceType<typeof UserUpdateOneRequiredWithoutReportedProductsNestedInput>;
}

@InputType()
export class ProductReportUpdateWithoutReporterInput {
    @Field(() => EnumProductReportReasonFieldUpdateOperationsInput, {nullable:true})
    reason?: InstanceType<typeof EnumProductReportReasonFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    details?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => ProductReportStatusUpdateEnvelopeInput, {nullable:true})
    status?: InstanceType<typeof ProductReportStatusUpdateEnvelopeInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => ProductListingUpdateOneRequiredWithoutReportsNestedInput, {nullable:true})
    product?: InstanceType<typeof ProductListingUpdateOneRequiredWithoutReportsNestedInput>;
}

@InputType()
export class ProductReportUpdateInput {
    @Field(() => EnumProductReportReasonFieldUpdateOperationsInput, {nullable:true})
    reason?: InstanceType<typeof EnumProductReportReasonFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    details?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => ProductReportStatusUpdateEnvelopeInput, {nullable:true})
    status?: InstanceType<typeof ProductReportStatusUpdateEnvelopeInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => ProductListingUpdateOneRequiredWithoutReportsNestedInput, {nullable:true})
    product?: InstanceType<typeof ProductListingUpdateOneRequiredWithoutReportsNestedInput>;
    @Field(() => UserUpdateOneRequiredWithoutReportedProductsNestedInput, {nullable:true})
    reporter?: InstanceType<typeof UserUpdateOneRequiredWithoutReportedProductsNestedInput>;
}

@InputType()
export class ProductReportUpsertWithWhereUniqueWithoutProductInput {
    @Field(() => ProductReportWhereUniqueInput, {nullable:false})
    @Type(() => ProductReportWhereUniqueInput)
    where!: Prisma.AtLeast<ProductReportWhereUniqueInput, 'id'>;
    @Field(() => ProductReportUpdateWithoutProductInput, {nullable:false})
    @Type(() => ProductReportUpdateWithoutProductInput)
    update!: InstanceType<typeof ProductReportUpdateWithoutProductInput>;
    @Field(() => ProductReportCreateWithoutProductInput, {nullable:false})
    @Type(() => ProductReportCreateWithoutProductInput)
    create!: InstanceType<typeof ProductReportCreateWithoutProductInput>;
}

@InputType()
export class ProductReportUpsertWithWhereUniqueWithoutReporterInput {
    @Field(() => ProductReportWhereUniqueInput, {nullable:false})
    @Type(() => ProductReportWhereUniqueInput)
    where!: Prisma.AtLeast<ProductReportWhereUniqueInput, 'id'>;
    @Field(() => ProductReportUpdateWithoutReporterInput, {nullable:false})
    @Type(() => ProductReportUpdateWithoutReporterInput)
    update!: InstanceType<typeof ProductReportUpdateWithoutReporterInput>;
    @Field(() => ProductReportCreateWithoutReporterInput, {nullable:false})
    @Type(() => ProductReportCreateWithoutReporterInput)
    create!: InstanceType<typeof ProductReportCreateWithoutReporterInput>;
}

@InputType()
export class ProductReportWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => [ProductReportWhereInput], {nullable:true})
    AND?: Array<ProductReportWhereInput>;
    @Field(() => [ProductReportWhereInput], {nullable:true})
    OR?: Array<ProductReportWhereInput>;
    @Field(() => [ProductReportWhereInput], {nullable:true})
    NOT?: Array<ProductReportWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    productId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    reporterId?: InstanceType<typeof StringFilter>;
    @Field(() => EnumProductReportReasonFilter, {nullable:true})
    reason?: InstanceType<typeof EnumProductReportReasonFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    details?: InstanceType<typeof StringNullableFilter>;
    @Field(() => ProductReportStatusCompositeFilter, {nullable:true})
    status?: InstanceType<typeof ProductReportStatusCompositeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => ProductListingRelationFilter, {nullable:true})
    product?: InstanceType<typeof ProductListingRelationFilter>;
    @Field(() => UserRelationFilter, {nullable:true})
    reporter?: InstanceType<typeof UserRelationFilter>;
}

@InputType()
export class ProductReportWhereInput {
    @Field(() => [ProductReportWhereInput], {nullable:true})
    AND?: Array<ProductReportWhereInput>;
    @Field(() => [ProductReportWhereInput], {nullable:true})
    OR?: Array<ProductReportWhereInput>;
    @Field(() => [ProductReportWhereInput], {nullable:true})
    NOT?: Array<ProductReportWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    productId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    reporterId?: InstanceType<typeof StringFilter>;
    @Field(() => EnumProductReportReasonFilter, {nullable:true})
    reason?: InstanceType<typeof EnumProductReportReasonFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    details?: InstanceType<typeof StringNullableFilter>;
    @Field(() => ProductReportStatusCompositeFilter, {nullable:true})
    status?: InstanceType<typeof ProductReportStatusCompositeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => ProductListingRelationFilter, {nullable:true})
    product?: InstanceType<typeof ProductListingRelationFilter>;
    @Field(() => UserRelationFilter, {nullable:true})
    reporter?: InstanceType<typeof UserRelationFilter>;
}

@ObjectType()
export class ProductReport {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    productId!: string;
    @Field(() => String, {nullable:false})
    reporterId!: string;
    @Field(() => ProductReportReason, {nullable:false})
    reason!: `${ProductReportReason}`;
    @Field(() => String, {nullable:true})
    details!: string | null;
    @Field(() => ProductReportStatus, {nullable:false})
    status?: InstanceType<typeof ProductReportStatus>;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
    @Field(() => Date, {nullable:false})
    updatedAt!: Date;
    @Field(() => ProductListing, {nullable:false})
    product?: InstanceType<typeof ProductListing>;
    @Field(() => User, {nullable:false})
    reporter?: InstanceType<typeof User>;
}

@ArgsType()
export class UpdateManyProductReportArgs {
    @Field(() => ProductReportUpdateManyMutationInput, {nullable:false})
    @Type(() => ProductReportUpdateManyMutationInput)
    data!: InstanceType<typeof ProductReportUpdateManyMutationInput>;
    @Field(() => ProductReportWhereInput, {nullable:true})
    @Type(() => ProductReportWhereInput)
    where?: InstanceType<typeof ProductReportWhereInput>;
}

@ArgsType()
export class UpdateOneProductReportArgs {
    @Field(() => ProductReportUpdateInput, {nullable:false})
    @Type(() => ProductReportUpdateInput)
    data!: InstanceType<typeof ProductReportUpdateInput>;
    @Field(() => ProductReportWhereUniqueInput, {nullable:false})
    @Type(() => ProductReportWhereUniqueInput)
    where!: Prisma.AtLeast<ProductReportWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpsertOneProductReportArgs {
    @Field(() => ProductReportWhereUniqueInput, {nullable:false})
    @Type(() => ProductReportWhereUniqueInput)
    where!: Prisma.AtLeast<ProductReportWhereUniqueInput, 'id'>;
    @Field(() => ProductReportCreateInput, {nullable:false})
    @Type(() => ProductReportCreateInput)
    create!: InstanceType<typeof ProductReportCreateInput>;
    @Field(() => ProductReportUpdateInput, {nullable:false})
    @Type(() => ProductReportUpdateInput)
    update!: InstanceType<typeof ProductReportUpdateInput>;
}

@InputType()
export class ProductReportStatusCreateEnvelopeInput {
    @Field(() => ProductReportStatusCreateInput, {nullable:true})
    @Type(() => ProductReportStatusCreateInput)
    set?: InstanceType<typeof ProductReportStatusCreateInput>;
}

@InputType()
export class ProductReportStatusCreateInput {
    @Field(() => Boolean, {nullable:true})
    reviewed?: boolean;
    @Field(() => Date, {nullable:true})
    reviewedAt?: Date | string;
    @Field(() => String, {nullable:true})
    reviewedBy?: string;
    @Field(() => ProductReportAction, {nullable:true})
    action?: `${ProductReportAction}`;
}

@InputType()
export class ProductReportStatusOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    reviewed?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    reviewedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    reviewedBy?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    action?: `${SortOrder}`;
}

@InputType()
export class ProductReportStatusUpdateEnvelopeInput {
    @Field(() => ProductReportStatusCreateInput, {nullable:true})
    @Type(() => ProductReportStatusCreateInput)
    set?: InstanceType<typeof ProductReportStatusCreateInput>;
    @Field(() => ProductReportStatusUpdateInput, {nullable:true})
    @Type(() => ProductReportStatusUpdateInput)
    update?: InstanceType<typeof ProductReportStatusUpdateInput>;
}

@InputType()
export class ProductReportStatusUpdateInput {
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    reviewed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableDateTimeFieldUpdateOperationsInput, {nullable:true})
    reviewedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    reviewedBy?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableEnumProductReportActionFieldUpdateOperationsInput, {nullable:true})
    action?: InstanceType<typeof NullableEnumProductReportActionFieldUpdateOperationsInput>;
}

@InputType()
export class ProductReportStatusWhereInput {
    @Field(() => [ProductReportStatusWhereInput], {nullable:true})
    AND?: Array<ProductReportStatusWhereInput>;
    @Field(() => [ProductReportStatusWhereInput], {nullable:true})
    OR?: Array<ProductReportStatusWhereInput>;
    @Field(() => [ProductReportStatusWhereInput], {nullable:true})
    NOT?: Array<ProductReportStatusWhereInput>;
    @Field(() => BoolFilter, {nullable:true})
    reviewed?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeNullableFilter, {nullable:true})
    reviewedAt?: InstanceType<typeof DateTimeNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    reviewedBy?: InstanceType<typeof StringNullableFilter>;
    @Field(() => EnumProductReportActionNullableFilter, {nullable:true})
    action?: InstanceType<typeof EnumProductReportActionNullableFilter>;
}

@ObjectType()
export class ProductReportStatus {
    @Field(() => Boolean, {defaultValue:false,nullable:false})
    reviewed!: boolean;
    @Field(() => Date, {nullable:true})
    reviewedAt!: Date | null;
    @Field(() => String, {nullable:true})
    reviewedBy!: string | null;
    @Field(() => ProductReportAction, {nullable:true})
    action!: `${ProductReportAction}` | null;
}

@InputType()
export class ProductShareCampusChatPayloadCreateEnvelopeInput {
    @Field(() => ProductShareCampusChatPayloadCreateInput, {nullable:true})
    @Type(() => ProductShareCampusChatPayloadCreateInput)
    set?: InstanceType<typeof ProductShareCampusChatPayloadCreateInput>;
}

@InputType()
export class ProductShareCampusChatPayloadCreateInput {
    @Field(() => String, {nullable:false})
    productId!: string;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => Float, {nullable:false})
    price!: number;
    @Field(() => String, {nullable:false})
    priceString!: string;
    @Field(() => MediaItemCreateInput, {nullable:false})
    mediaItem!: InstanceType<typeof MediaItemCreateInput>;
    @Field(() => ProductListingType, {nullable:false})
    type!: `${ProductListingType}`;
    @Field(() => String, {nullable:true})
    text?: string;
}

@InputType()
export class ProductShareCampusChatPayloadOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    productId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    title?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    price?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    priceString?: `${SortOrder}`;
    @Field(() => MediaItemOrderByInput, {nullable:true})
    mediaItem?: InstanceType<typeof MediaItemOrderByInput>;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    text?: `${SortOrder}`;
}

@InputType()
export class ProductShareCampusChatPayloadUpdateEnvelopeInput {
    @Field(() => ProductShareCampusChatPayloadCreateInput, {nullable:true})
    @Type(() => ProductShareCampusChatPayloadCreateInput)
    set?: InstanceType<typeof ProductShareCampusChatPayloadCreateInput>;
    @Field(() => ProductShareCampusChatPayloadUpdateInput, {nullable:true})
    @Type(() => ProductShareCampusChatPayloadUpdateInput)
    update?: InstanceType<typeof ProductShareCampusChatPayloadUpdateInput>;
}

@InputType()
export class ProductShareCampusChatPayloadUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    productId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    priceString?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => MediaItemUpdateEnvelopeInput, {nullable:true})
    mediaItem?: InstanceType<typeof MediaItemUpdateEnvelopeInput>;
    @Field(() => EnumProductListingTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumProductListingTypeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    text?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
}

@InputType()
export class ProductShareCampusChatPayloadWhereInput {
    @Field(() => [ProductShareCampusChatPayloadWhereInput], {nullable:true})
    AND?: Array<ProductShareCampusChatPayloadWhereInput>;
    @Field(() => [ProductShareCampusChatPayloadWhereInput], {nullable:true})
    OR?: Array<ProductShareCampusChatPayloadWhereInput>;
    @Field(() => [ProductShareCampusChatPayloadWhereInput], {nullable:true})
    NOT?: Array<ProductShareCampusChatPayloadWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    productId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    title?: InstanceType<typeof StringFilter>;
    @Field(() => FloatFilter, {nullable:true})
    price?: InstanceType<typeof FloatFilter>;
    @Field(() => StringFilter, {nullable:true})
    priceString?: InstanceType<typeof StringFilter>;
    @Field(() => MediaItemCompositeFilter, {nullable:true})
    mediaItem?: InstanceType<typeof MediaItemCompositeFilter>;
    @Field(() => EnumProductListingTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumProductListingTypeFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    text?: InstanceType<typeof StringNullableFilter>;
}

@ObjectType()
export class ProductShareCampusChatPayload {
    @Field(() => String, {nullable:false})
    productId!: string;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => Float, {nullable:false})
    price!: number;
    @Field(() => String, {nullable:false})
    priceString!: string;
    @Field(() => MediaItem, {nullable:false})
    mediaItem?: InstanceType<typeof MediaItem>;
    @Field(() => ProductListingType, {nullable:false})
    type!: `${ProductListingType}`;
    @Field(() => String, {nullable:true})
    text!: string | null;
}

@ArgsType()
export class CreateManyPromoCodeArgs {
    @Field(() => [PromoCodeCreateManyInput], {nullable:false})
    @Type(() => PromoCodeCreateManyInput)
    data!: Array<PromoCodeCreateManyInput>;
}

@ArgsType()
export class CreateOnePromoCodeArgs {
    @Field(() => PromoCodeCreateInput, {nullable:false})
    @Type(() => PromoCodeCreateInput)
    data!: InstanceType<typeof PromoCodeCreateInput>;
}

@ArgsType()
export class DeleteManyPromoCodeArgs {
    @Field(() => PromoCodeWhereInput, {nullable:true})
    @Type(() => PromoCodeWhereInput)
    where?: InstanceType<typeof PromoCodeWhereInput>;
}

@ArgsType()
export class DeleteOnePromoCodeArgs {
    @Field(() => PromoCodeWhereUniqueInput, {nullable:false})
    @Type(() => PromoCodeWhereUniqueInput)
    where!: Prisma.AtLeast<PromoCodeWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindFirstPromoCodeOrThrowArgs {
    @Field(() => PromoCodeWhereInput, {nullable:true})
    @Type(() => PromoCodeWhereInput)
    where?: InstanceType<typeof PromoCodeWhereInput>;
    @Field(() => [PromoCodeOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<PromoCodeOrderByWithRelationInput>;
    @Field(() => PromoCodeWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<PromoCodeWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [PromoCodeScalarFieldEnum], {nullable:true})
    distinct?: Array<`${PromoCodeScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstPromoCodeArgs {
    @Field(() => PromoCodeWhereInput, {nullable:true})
    @Type(() => PromoCodeWhereInput)
    where?: InstanceType<typeof PromoCodeWhereInput>;
    @Field(() => [PromoCodeOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<PromoCodeOrderByWithRelationInput>;
    @Field(() => PromoCodeWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<PromoCodeWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [PromoCodeScalarFieldEnum], {nullable:true})
    distinct?: Array<`${PromoCodeScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyPromoCodeArgs {
    @Field(() => PromoCodeWhereInput, {nullable:true})
    @Type(() => PromoCodeWhereInput)
    where?: InstanceType<typeof PromoCodeWhereInput>;
    @Field(() => [PromoCodeOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<PromoCodeOrderByWithRelationInput>;
    @Field(() => PromoCodeWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<PromoCodeWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [PromoCodeScalarFieldEnum], {nullable:true})
    distinct?: Array<`${PromoCodeScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniquePromoCodeOrThrowArgs {
    @Field(() => PromoCodeWhereUniqueInput, {nullable:false})
    @Type(() => PromoCodeWhereUniqueInput)
    where!: Prisma.AtLeast<PromoCodeWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindUniquePromoCodeArgs {
    @Field(() => PromoCodeWhereUniqueInput, {nullable:false})
    @Type(() => PromoCodeWhereUniqueInput)
    where!: Prisma.AtLeast<PromoCodeWhereUniqueInput, 'id'>;
}

@ArgsType()
export class PromoCodeAggregateArgs {
    @Field(() => PromoCodeWhereInput, {nullable:true})
    @Type(() => PromoCodeWhereInput)
    where?: InstanceType<typeof PromoCodeWhereInput>;
    @Field(() => [PromoCodeOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<PromoCodeOrderByWithRelationInput>;
    @Field(() => PromoCodeWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<PromoCodeWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class PromoCodeAvgOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    value?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    usageLimit?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    useCount?: `${SortOrder}`;
}

@InputType()
export class PromoCodeCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    code?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    value?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    usageLimit?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    useCount?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class PromoCodeCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    code!: string;
    @Field(() => Boolean, {nullable:false})
    active!: boolean;
    @Field(() => DateRangeCreateEnvelopeInput, {nullable:false})
    validity!: InstanceType<typeof DateRangeCreateEnvelopeInput>;
    @Field(() => PromoCodeType, {nullable:false})
    type!: `${PromoCodeType}`;
    @Field(() => Int, {nullable:false})
    value!: number;
    @Field(() => Int, {nullable:false})
    usageLimit!: number;
    @Field(() => Int, {nullable:true})
    useCount?: number;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class PromoCodeCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    code!: string;
    @Field(() => Boolean, {nullable:false})
    active!: boolean;
    @Field(() => DateRangeCreateEnvelopeInput, {nullable:false})
    validity!: InstanceType<typeof DateRangeCreateEnvelopeInput>;
    @Field(() => PromoCodeType, {nullable:false})
    type!: `${PromoCodeType}`;
    @Field(() => Int, {nullable:false})
    value!: number;
    @Field(() => Int, {nullable:false})
    usageLimit!: number;
    @Field(() => Int, {nullable:true})
    useCount?: number;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@ArgsType()
export class PromoCodeGroupByArgs {
    @Field(() => PromoCodeWhereInput, {nullable:true})
    @Type(() => PromoCodeWhereInput)
    where?: InstanceType<typeof PromoCodeWhereInput>;
    @Field(() => [PromoCodeOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<PromoCodeOrderByWithAggregationInput>;
    @Field(() => [PromoCodeScalarFieldEnum], {nullable:false})
    by!: Array<`${PromoCodeScalarFieldEnum}`>;
    @Field(() => PromoCodeScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof PromoCodeScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class PromoCodeMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    code?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    value?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    usageLimit?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    useCount?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class PromoCodeMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    code?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    value?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    usageLimit?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    useCount?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class PromoCodeOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    code?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    value?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    usageLimit?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    useCount?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => PromoCodeCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof PromoCodeCountOrderByAggregateInput>;
    @Field(() => PromoCodeAvgOrderByAggregateInput, {nullable:true})
    _avg?: InstanceType<typeof PromoCodeAvgOrderByAggregateInput>;
    @Field(() => PromoCodeMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof PromoCodeMaxOrderByAggregateInput>;
    @Field(() => PromoCodeMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof PromoCodeMinOrderByAggregateInput>;
    @Field(() => PromoCodeSumOrderByAggregateInput, {nullable:true})
    _sum?: InstanceType<typeof PromoCodeSumOrderByAggregateInput>;
}

@InputType()
export class PromoCodeOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    code?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => DateRangeOrderByInput, {nullable:true})
    validity?: InstanceType<typeof DateRangeOrderByInput>;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    value?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    usageLimit?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    useCount?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class PromoCodeScalarWhereWithAggregatesInput {
    @Field(() => [PromoCodeScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<PromoCodeScalarWhereWithAggregatesInput>;
    @Field(() => [PromoCodeScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<PromoCodeScalarWhereWithAggregatesInput>;
    @Field(() => [PromoCodeScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<PromoCodeScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    name?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    code?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => BoolWithAggregatesFilter, {nullable:true})
    active?: InstanceType<typeof BoolWithAggregatesFilter>;
    @Field(() => EnumPromoCodeTypeWithAggregatesFilter, {nullable:true})
    type?: InstanceType<typeof EnumPromoCodeTypeWithAggregatesFilter>;
    @Field(() => IntWithAggregatesFilter, {nullable:true})
    value?: InstanceType<typeof IntWithAggregatesFilter>;
    @Field(() => IntWithAggregatesFilter, {nullable:true})
    usageLimit?: InstanceType<typeof IntWithAggregatesFilter>;
    @Field(() => IntNullableWithAggregatesFilter, {nullable:true})
    useCount?: InstanceType<typeof IntNullableWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
}

@InputType()
export class PromoCodeSumOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    value?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    usageLimit?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    useCount?: `${SortOrder}`;
}

@InputType()
export class PromoCodeUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    code!: string;
    @Field(() => Boolean, {nullable:false})
    active!: boolean;
    @Field(() => DateRangeCreateEnvelopeInput, {nullable:false})
    validity!: InstanceType<typeof DateRangeCreateEnvelopeInput>;
    @Field(() => PromoCodeType, {nullable:false})
    type!: `${PromoCodeType}`;
    @Field(() => Int, {nullable:false})
    value!: number;
    @Field(() => Int, {nullable:false})
    usageLimit!: number;
    @Field(() => Int, {nullable:true})
    useCount?: number;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class PromoCodeUncheckedUpdateManyInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    code?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateRangeUpdateEnvelopeInput, {nullable:true})
    validity?: InstanceType<typeof DateRangeUpdateEnvelopeInput>;
    @Field(() => EnumPromoCodeTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumPromoCodeTypeFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    value?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    usageLimit?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => NullableIntFieldUpdateOperationsInput, {nullable:true})
    useCount?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class PromoCodeUncheckedUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    code?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateRangeUpdateEnvelopeInput, {nullable:true})
    validity?: InstanceType<typeof DateRangeUpdateEnvelopeInput>;
    @Field(() => EnumPromoCodeTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumPromoCodeTypeFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    value?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    usageLimit?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => NullableIntFieldUpdateOperationsInput, {nullable:true})
    useCount?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class PromoCodeUpdateManyMutationInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    code?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateRangeUpdateEnvelopeInput, {nullable:true})
    validity?: InstanceType<typeof DateRangeUpdateEnvelopeInput>;
    @Field(() => EnumPromoCodeTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumPromoCodeTypeFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    value?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    usageLimit?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => NullableIntFieldUpdateOperationsInput, {nullable:true})
    useCount?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class PromoCodeUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    code?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateRangeUpdateEnvelopeInput, {nullable:true})
    validity?: InstanceType<typeof DateRangeUpdateEnvelopeInput>;
    @Field(() => EnumPromoCodeTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumPromoCodeTypeFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    value?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    usageLimit?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => NullableIntFieldUpdateOperationsInput, {nullable:true})
    useCount?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class PromoCodeWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => [PromoCodeWhereInput], {nullable:true})
    AND?: Array<PromoCodeWhereInput>;
    @Field(() => [PromoCodeWhereInput], {nullable:true})
    OR?: Array<PromoCodeWhereInput>;
    @Field(() => [PromoCodeWhereInput], {nullable:true})
    NOT?: Array<PromoCodeWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    name?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    code?: InstanceType<typeof StringFilter>;
    @Field(() => BoolFilter, {nullable:true})
    active?: InstanceType<typeof BoolFilter>;
    @Field(() => DateRangeCompositeFilter, {nullable:true})
    validity?: InstanceType<typeof DateRangeCompositeFilter>;
    @Field(() => EnumPromoCodeTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumPromoCodeTypeFilter>;
    @Field(() => IntFilter, {nullable:true})
    value?: InstanceType<typeof IntFilter>;
    @Field(() => IntFilter, {nullable:true})
    usageLimit?: InstanceType<typeof IntFilter>;
    @Field(() => IntNullableFilter, {nullable:true})
    useCount?: InstanceType<typeof IntNullableFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@InputType()
export class PromoCodeWhereInput {
    @Field(() => [PromoCodeWhereInput], {nullable:true})
    AND?: Array<PromoCodeWhereInput>;
    @Field(() => [PromoCodeWhereInput], {nullable:true})
    OR?: Array<PromoCodeWhereInput>;
    @Field(() => [PromoCodeWhereInput], {nullable:true})
    NOT?: Array<PromoCodeWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    name?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    code?: InstanceType<typeof StringFilter>;
    @Field(() => BoolFilter, {nullable:true})
    active?: InstanceType<typeof BoolFilter>;
    @Field(() => DateRangeCompositeFilter, {nullable:true})
    validity?: InstanceType<typeof DateRangeCompositeFilter>;
    @Field(() => EnumPromoCodeTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumPromoCodeTypeFilter>;
    @Field(() => IntFilter, {nullable:true})
    value?: InstanceType<typeof IntFilter>;
    @Field(() => IntFilter, {nullable:true})
    usageLimit?: InstanceType<typeof IntFilter>;
    @Field(() => IntNullableFilter, {nullable:true})
    useCount?: InstanceType<typeof IntNullableFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@ObjectType()
export class PromoCode {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    code!: string;
    @Field(() => Boolean, {nullable:false})
    active!: boolean;
    @Field(() => DateRange, {nullable:false})
    validity?: InstanceType<typeof DateRange>;
    @Field(() => PromoCodeType, {nullable:false})
    type!: `${PromoCodeType}`;
    @Field(() => Int, {nullable:false})
    value!: number;
    @Field(() => Int, {nullable:false})
    usageLimit!: number;
    @Field(() => Int, {nullable:true})
    useCount!: number | null;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
    @Field(() => Date, {nullable:false})
    updatedAt!: Date;
}

@ArgsType()
export class UpdateManyPromoCodeArgs {
    @Field(() => PromoCodeUpdateManyMutationInput, {nullable:false})
    @Type(() => PromoCodeUpdateManyMutationInput)
    data!: InstanceType<typeof PromoCodeUpdateManyMutationInput>;
    @Field(() => PromoCodeWhereInput, {nullable:true})
    @Type(() => PromoCodeWhereInput)
    where?: InstanceType<typeof PromoCodeWhereInput>;
}

@ArgsType()
export class UpdateOnePromoCodeArgs {
    @Field(() => PromoCodeUpdateInput, {nullable:false})
    @Type(() => PromoCodeUpdateInput)
    data!: InstanceType<typeof PromoCodeUpdateInput>;
    @Field(() => PromoCodeWhereUniqueInput, {nullable:false})
    @Type(() => PromoCodeWhereUniqueInput)
    where!: Prisma.AtLeast<PromoCodeWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpsertOnePromoCodeArgs {
    @Field(() => PromoCodeWhereUniqueInput, {nullable:false})
    @Type(() => PromoCodeWhereUniqueInput)
    where!: Prisma.AtLeast<PromoCodeWhereUniqueInput, 'id'>;
    @Field(() => PromoCodeCreateInput, {nullable:false})
    @Type(() => PromoCodeCreateInput)
    create!: InstanceType<typeof PromoCodeCreateInput>;
    @Field(() => PromoCodeUpdateInput, {nullable:false})
    @Type(() => PromoCodeUpdateInput)
    update!: InstanceType<typeof PromoCodeUpdateInput>;
}

@ArgsType()
export class CreateManyPushNotificationCampaignArgs {
    @Field(() => [PushNotificationCampaignCreateManyInput], {nullable:false})
    @Type(() => PushNotificationCampaignCreateManyInput)
    data!: Array<PushNotificationCampaignCreateManyInput>;
}

@ArgsType()
export class CreateOnePushNotificationCampaignArgs {
    @Field(() => PushNotificationCampaignCreateInput, {nullable:false})
    @Type(() => PushNotificationCampaignCreateInput)
    data!: InstanceType<typeof PushNotificationCampaignCreateInput>;
}

@ArgsType()
export class DeleteManyPushNotificationCampaignArgs {
    @Field(() => PushNotificationCampaignWhereInput, {nullable:true})
    @Type(() => PushNotificationCampaignWhereInput)
    where?: InstanceType<typeof PushNotificationCampaignWhereInput>;
}

@ArgsType()
export class DeleteOnePushNotificationCampaignArgs {
    @Field(() => PushNotificationCampaignWhereUniqueInput, {nullable:false})
    @Type(() => PushNotificationCampaignWhereUniqueInput)
    where!: Prisma.AtLeast<PushNotificationCampaignWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindFirstPushNotificationCampaignOrThrowArgs {
    @Field(() => PushNotificationCampaignWhereInput, {nullable:true})
    @Type(() => PushNotificationCampaignWhereInput)
    where?: InstanceType<typeof PushNotificationCampaignWhereInput>;
    @Field(() => [PushNotificationCampaignOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<PushNotificationCampaignOrderByWithRelationInput>;
    @Field(() => PushNotificationCampaignWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<PushNotificationCampaignWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [PushNotificationCampaignScalarFieldEnum], {nullable:true})
    distinct?: Array<`${PushNotificationCampaignScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstPushNotificationCampaignArgs {
    @Field(() => PushNotificationCampaignWhereInput, {nullable:true})
    @Type(() => PushNotificationCampaignWhereInput)
    where?: InstanceType<typeof PushNotificationCampaignWhereInput>;
    @Field(() => [PushNotificationCampaignOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<PushNotificationCampaignOrderByWithRelationInput>;
    @Field(() => PushNotificationCampaignWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<PushNotificationCampaignWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [PushNotificationCampaignScalarFieldEnum], {nullable:true})
    distinct?: Array<`${PushNotificationCampaignScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyPushNotificationCampaignArgs {
    @Field(() => PushNotificationCampaignWhereInput, {nullable:true})
    @Type(() => PushNotificationCampaignWhereInput)
    where?: InstanceType<typeof PushNotificationCampaignWhereInput>;
    @Field(() => [PushNotificationCampaignOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<PushNotificationCampaignOrderByWithRelationInput>;
    @Field(() => PushNotificationCampaignWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<PushNotificationCampaignWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [PushNotificationCampaignScalarFieldEnum], {nullable:true})
    distinct?: Array<`${PushNotificationCampaignScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniquePushNotificationCampaignOrThrowArgs {
    @Field(() => PushNotificationCampaignWhereUniqueInput, {nullable:false})
    @Type(() => PushNotificationCampaignWhereUniqueInput)
    where!: Prisma.AtLeast<PushNotificationCampaignWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindUniquePushNotificationCampaignArgs {
    @Field(() => PushNotificationCampaignWhereUniqueInput, {nullable:false})
    @Type(() => PushNotificationCampaignWhereUniqueInput)
    where!: Prisma.AtLeast<PushNotificationCampaignWhereUniqueInput, 'id'>;
}

@ArgsType()
export class PushNotificationCampaignAggregateArgs {
    @Field(() => PushNotificationCampaignWhereInput, {nullable:true})
    @Type(() => PushNotificationCampaignWhereInput)
    where?: InstanceType<typeof PushNotificationCampaignWhereInput>;
    @Field(() => [PushNotificationCampaignOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<PushNotificationCampaignOrderByWithRelationInput>;
    @Field(() => PushNotificationCampaignWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<PushNotificationCampaignWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class PushNotificationCampaignCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    senderListType?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    status?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class PushNotificationCampaignCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => PushNotificationDataCreateEnvelopeInput, {nullable:false})
    notification!: InstanceType<typeof PushNotificationDataCreateEnvelopeInput>;
    @Field(() => PushNotificationSenderListType, {nullable:false})
    senderListType!: `${PushNotificationSenderListType}`;
    @Field(() => [EduInstituteSelectOptionCreateInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionCreateInput>;
    @Field(() => PushNotificationCampaignFiltersCreateEnvelopeInput, {nullable:false})
    filters!: InstanceType<typeof PushNotificationCampaignFiltersCreateEnvelopeInput>;
    @Field(() => PushNotificationCampaignStatus, {nullable:false})
    status!: `${PushNotificationCampaignStatus}`;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class PushNotificationCampaignCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => PushNotificationDataCreateEnvelopeInput, {nullable:false})
    notification!: InstanceType<typeof PushNotificationDataCreateEnvelopeInput>;
    @Field(() => PushNotificationSenderListType, {nullable:false})
    senderListType!: `${PushNotificationSenderListType}`;
    @Field(() => [EduInstituteSelectOptionCreateInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionCreateInput>;
    @Field(() => PushNotificationCampaignFiltersCreateEnvelopeInput, {nullable:false})
    filters!: InstanceType<typeof PushNotificationCampaignFiltersCreateEnvelopeInput>;
    @Field(() => PushNotificationCampaignStatus, {nullable:false})
    status!: `${PushNotificationCampaignStatus}`;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class PushNotificationCampaignFiltersCompositeFilter {
    @Field(() => PushNotificationCampaignFiltersObjectEqualityInput, {nullable:true})
    equals?: InstanceType<typeof PushNotificationCampaignFiltersObjectEqualityInput>;
    @Field(() => PushNotificationCampaignFiltersWhereInput, {nullable:true})
    is?: InstanceType<typeof PushNotificationCampaignFiltersWhereInput>;
    @Field(() => PushNotificationCampaignFiltersWhereInput, {nullable:true})
    isNot?: InstanceType<typeof PushNotificationCampaignFiltersWhereInput>;
}

@InputType()
export class PushNotificationCampaignFiltersCreateEnvelopeInput {
    @Field(() => PushNotificationCampaignFiltersCreateInput, {nullable:true})
    @Type(() => PushNotificationCampaignFiltersCreateInput)
    set?: InstanceType<typeof PushNotificationCampaignFiltersCreateInput>;
}

@InputType()
export class PushNotificationCampaignFiltersObjectEqualityInput {
    @Field(() => UserGenderFilter, {nullable:false})
    userGender!: `${UserGenderFilter}`;
    @Field(() => UserListedFilter, {nullable:true})
    userListed?: `${UserListedFilter}`;
    @Field(() => BooleanChoice, {nullable:true})
    userRentedEver?: `${BooleanChoice}`;
    @Field(() => BooleanChoice, {nullable:true})
    userBoughtEver?: `${BooleanChoice}`;
}

@InputType()
export class PushNotificationCampaignFiltersUpdateEnvelopeInput {
    @Field(() => PushNotificationCampaignFiltersCreateInput, {nullable:true})
    @Type(() => PushNotificationCampaignFiltersCreateInput)
    set?: InstanceType<typeof PushNotificationCampaignFiltersCreateInput>;
    @Field(() => PushNotificationCampaignFiltersUpdateInput, {nullable:true})
    @Type(() => PushNotificationCampaignFiltersUpdateInput)
    update?: InstanceType<typeof PushNotificationCampaignFiltersUpdateInput>;
}

@ArgsType()
export class PushNotificationCampaignGroupByArgs {
    @Field(() => PushNotificationCampaignWhereInput, {nullable:true})
    @Type(() => PushNotificationCampaignWhereInput)
    where?: InstanceType<typeof PushNotificationCampaignWhereInput>;
    @Field(() => [PushNotificationCampaignOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<PushNotificationCampaignOrderByWithAggregationInput>;
    @Field(() => [PushNotificationCampaignScalarFieldEnum], {nullable:false})
    by!: Array<`${PushNotificationCampaignScalarFieldEnum}`>;
    @Field(() => PushNotificationCampaignScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof PushNotificationCampaignScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class PushNotificationCampaignMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    senderListType?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    status?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class PushNotificationCampaignMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    senderListType?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    status?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class PushNotificationCampaignOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    senderListType?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    status?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => PushNotificationCampaignCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof PushNotificationCampaignCountOrderByAggregateInput>;
    @Field(() => PushNotificationCampaignMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof PushNotificationCampaignMaxOrderByAggregateInput>;
    @Field(() => PushNotificationCampaignMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof PushNotificationCampaignMinOrderByAggregateInput>;
}

@InputType()
export class PushNotificationCampaignOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => PushNotificationDataOrderByInput, {nullable:true})
    notification?: InstanceType<typeof PushNotificationDataOrderByInput>;
    @Field(() => SortOrder, {nullable:true})
    senderListType?: `${SortOrder}`;
    @Field(() => EduInstituteSelectOptionOrderByCompositeAggregateInput, {nullable:true})
    selectedEduInstitutes?: InstanceType<typeof EduInstituteSelectOptionOrderByCompositeAggregateInput>;
    @Field(() => PushNotificationCampaignFiltersOrderByInput, {nullable:true})
    filters?: InstanceType<typeof PushNotificationCampaignFiltersOrderByInput>;
    @Field(() => SortOrder, {nullable:true})
    status?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class PushNotificationCampaignScalarWhereWithAggregatesInput {
    @Field(() => [PushNotificationCampaignScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<PushNotificationCampaignScalarWhereWithAggregatesInput>;
    @Field(() => [PushNotificationCampaignScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<PushNotificationCampaignScalarWhereWithAggregatesInput>;
    @Field(() => [PushNotificationCampaignScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<PushNotificationCampaignScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    name?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => EnumPushNotificationSenderListTypeWithAggregatesFilter, {nullable:true})
    senderListType?: InstanceType<typeof EnumPushNotificationSenderListTypeWithAggregatesFilter>;
    @Field(() => EnumPushNotificationCampaignStatusWithAggregatesFilter, {nullable:true})
    status?: InstanceType<typeof EnumPushNotificationCampaignStatusWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
}

@InputType()
export class PushNotificationCampaignUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => PushNotificationDataCreateEnvelopeInput, {nullable:false})
    notification!: InstanceType<typeof PushNotificationDataCreateEnvelopeInput>;
    @Field(() => PushNotificationSenderListType, {nullable:false})
    senderListType!: `${PushNotificationSenderListType}`;
    @Field(() => [EduInstituteSelectOptionCreateInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionCreateInput>;
    @Field(() => PushNotificationCampaignFiltersCreateEnvelopeInput, {nullable:false})
    filters!: InstanceType<typeof PushNotificationCampaignFiltersCreateEnvelopeInput>;
    @Field(() => PushNotificationCampaignStatus, {nullable:false})
    status!: `${PushNotificationCampaignStatus}`;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class PushNotificationCampaignUncheckedUpdateManyInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => PushNotificationDataUpdateEnvelopeInput, {nullable:true})
    notification?: InstanceType<typeof PushNotificationDataUpdateEnvelopeInput>;
    @Field(() => EnumPushNotificationSenderListTypeFieldUpdateOperationsInput, {nullable:true})
    senderListType?: InstanceType<typeof EnumPushNotificationSenderListTypeFieldUpdateOperationsInput>;
    @Field(() => [EduInstituteSelectOptionCreateInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionCreateInput>;
    @Field(() => PushNotificationCampaignFiltersUpdateEnvelopeInput, {nullable:true})
    filters?: InstanceType<typeof PushNotificationCampaignFiltersUpdateEnvelopeInput>;
    @Field(() => EnumPushNotificationCampaignStatusFieldUpdateOperationsInput, {nullable:true})
    status?: InstanceType<typeof EnumPushNotificationCampaignStatusFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class PushNotificationCampaignUncheckedUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => PushNotificationDataUpdateEnvelopeInput, {nullable:true})
    notification?: InstanceType<typeof PushNotificationDataUpdateEnvelopeInput>;
    @Field(() => EnumPushNotificationSenderListTypeFieldUpdateOperationsInput, {nullable:true})
    senderListType?: InstanceType<typeof EnumPushNotificationSenderListTypeFieldUpdateOperationsInput>;
    @Field(() => [EduInstituteSelectOptionCreateInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionCreateInput>;
    @Field(() => PushNotificationCampaignFiltersUpdateEnvelopeInput, {nullable:true})
    filters?: InstanceType<typeof PushNotificationCampaignFiltersUpdateEnvelopeInput>;
    @Field(() => EnumPushNotificationCampaignStatusFieldUpdateOperationsInput, {nullable:true})
    status?: InstanceType<typeof EnumPushNotificationCampaignStatusFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class PushNotificationCampaignUpdateManyMutationInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => PushNotificationDataUpdateEnvelopeInput, {nullable:true})
    notification?: InstanceType<typeof PushNotificationDataUpdateEnvelopeInput>;
    @Field(() => EnumPushNotificationSenderListTypeFieldUpdateOperationsInput, {nullable:true})
    senderListType?: InstanceType<typeof EnumPushNotificationSenderListTypeFieldUpdateOperationsInput>;
    @Field(() => [EduInstituteSelectOptionCreateInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionCreateInput>;
    @Field(() => PushNotificationCampaignFiltersUpdateEnvelopeInput, {nullable:true})
    filters?: InstanceType<typeof PushNotificationCampaignFiltersUpdateEnvelopeInput>;
    @Field(() => EnumPushNotificationCampaignStatusFieldUpdateOperationsInput, {nullable:true})
    status?: InstanceType<typeof EnumPushNotificationCampaignStatusFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class PushNotificationCampaignUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => PushNotificationDataUpdateEnvelopeInput, {nullable:true})
    notification?: InstanceType<typeof PushNotificationDataUpdateEnvelopeInput>;
    @Field(() => EnumPushNotificationSenderListTypeFieldUpdateOperationsInput, {nullable:true})
    senderListType?: InstanceType<typeof EnumPushNotificationSenderListTypeFieldUpdateOperationsInput>;
    @Field(() => [EduInstituteSelectOptionCreateInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionCreateInput>;
    @Field(() => PushNotificationCampaignFiltersUpdateEnvelopeInput, {nullable:true})
    filters?: InstanceType<typeof PushNotificationCampaignFiltersUpdateEnvelopeInput>;
    @Field(() => EnumPushNotificationCampaignStatusFieldUpdateOperationsInput, {nullable:true})
    status?: InstanceType<typeof EnumPushNotificationCampaignStatusFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class PushNotificationCampaignWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => [PushNotificationCampaignWhereInput], {nullable:true})
    AND?: Array<PushNotificationCampaignWhereInput>;
    @Field(() => [PushNotificationCampaignWhereInput], {nullable:true})
    OR?: Array<PushNotificationCampaignWhereInput>;
    @Field(() => [PushNotificationCampaignWhereInput], {nullable:true})
    NOT?: Array<PushNotificationCampaignWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    name?: InstanceType<typeof StringFilter>;
    @Field(() => PushNotificationDataCompositeFilter, {nullable:true})
    notification?: InstanceType<typeof PushNotificationDataCompositeFilter>;
    @Field(() => EnumPushNotificationSenderListTypeFilter, {nullable:true})
    senderListType?: InstanceType<typeof EnumPushNotificationSenderListTypeFilter>;
    @Field(() => [EduInstituteSelectOptionObjectEqualityInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionObjectEqualityInput>;
    @Field(() => PushNotificationCampaignFiltersCompositeFilter, {nullable:true})
    filters?: InstanceType<typeof PushNotificationCampaignFiltersCompositeFilter>;
    @Field(() => EnumPushNotificationCampaignStatusFilter, {nullable:true})
    status?: InstanceType<typeof EnumPushNotificationCampaignStatusFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@InputType()
export class PushNotificationCampaignWhereInput {
    @Field(() => [PushNotificationCampaignWhereInput], {nullable:true})
    AND?: Array<PushNotificationCampaignWhereInput>;
    @Field(() => [PushNotificationCampaignWhereInput], {nullable:true})
    OR?: Array<PushNotificationCampaignWhereInput>;
    @Field(() => [PushNotificationCampaignWhereInput], {nullable:true})
    NOT?: Array<PushNotificationCampaignWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    name?: InstanceType<typeof StringFilter>;
    @Field(() => PushNotificationDataCompositeFilter, {nullable:true})
    notification?: InstanceType<typeof PushNotificationDataCompositeFilter>;
    @Field(() => EnumPushNotificationSenderListTypeFilter, {nullable:true})
    senderListType?: InstanceType<typeof EnumPushNotificationSenderListTypeFilter>;
    @Field(() => [EduInstituteSelectOptionObjectEqualityInput], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOptionObjectEqualityInput>;
    @Field(() => PushNotificationCampaignFiltersCompositeFilter, {nullable:true})
    filters?: InstanceType<typeof PushNotificationCampaignFiltersCompositeFilter>;
    @Field(() => EnumPushNotificationCampaignStatusFilter, {nullable:true})
    status?: InstanceType<typeof EnumPushNotificationCampaignStatusFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@ObjectType()
export class PushNotificationCampaign {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => PushNotificationData, {nullable:false})
    notification?: InstanceType<typeof PushNotificationData>;
    @Field(() => PushNotificationSenderListType, {nullable:false})
    senderListType!: `${PushNotificationSenderListType}`;
    @Field(() => [EduInstituteSelectOption], {nullable:true})
    selectedEduInstitutes?: Array<EduInstituteSelectOption>;
    @Field(() => PushNotificationCampaignFilters, {nullable:false})
    filters?: InstanceType<typeof PushNotificationCampaignFilters>;
    @Field(() => PushNotificationCampaignStatus, {nullable:false})
    status!: `${PushNotificationCampaignStatus}`;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
    @Field(() => Date, {nullable:false})
    updatedAt!: Date;
}

@ArgsType()
export class UpdateManyPushNotificationCampaignArgs {
    @Field(() => PushNotificationCampaignUpdateManyMutationInput, {nullable:false})
    @Type(() => PushNotificationCampaignUpdateManyMutationInput)
    data!: InstanceType<typeof PushNotificationCampaignUpdateManyMutationInput>;
    @Field(() => PushNotificationCampaignWhereInput, {nullable:true})
    @Type(() => PushNotificationCampaignWhereInput)
    where?: InstanceType<typeof PushNotificationCampaignWhereInput>;
}

@ArgsType()
export class UpdateOnePushNotificationCampaignArgs {
    @Field(() => PushNotificationCampaignUpdateInput, {nullable:false})
    @Type(() => PushNotificationCampaignUpdateInput)
    data!: InstanceType<typeof PushNotificationCampaignUpdateInput>;
    @Field(() => PushNotificationCampaignWhereUniqueInput, {nullable:false})
    @Type(() => PushNotificationCampaignWhereUniqueInput)
    where!: Prisma.AtLeast<PushNotificationCampaignWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpsertOnePushNotificationCampaignArgs {
    @Field(() => PushNotificationCampaignWhereUniqueInput, {nullable:false})
    @Type(() => PushNotificationCampaignWhereUniqueInput)
    where!: Prisma.AtLeast<PushNotificationCampaignWhereUniqueInput, 'id'>;
    @Field(() => PushNotificationCampaignCreateInput, {nullable:false})
    @Type(() => PushNotificationCampaignCreateInput)
    create!: InstanceType<typeof PushNotificationCampaignCreateInput>;
    @Field(() => PushNotificationCampaignUpdateInput, {nullable:false})
    @Type(() => PushNotificationCampaignUpdateInput)
    update!: InstanceType<typeof PushNotificationCampaignUpdateInput>;
}

@InputType()
export class PushNotificationCampaignFiltersCreateInput {
    @Field(() => UserGenderFilter, {nullable:false})
    userGender!: `${UserGenderFilter}`;
    @Field(() => UserListedFilter, {nullable:true})
    userListed?: `${UserListedFilter}`;
    @Field(() => BooleanChoice, {nullable:true})
    userRentedEver?: `${BooleanChoice}`;
    @Field(() => BooleanChoice, {nullable:true})
    userBoughtEver?: `${BooleanChoice}`;
}

@InputType()
export class PushNotificationCampaignFiltersOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    userGender?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userListed?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userRentedEver?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userBoughtEver?: `${SortOrder}`;
}

@InputType()
export class PushNotificationCampaignFiltersUpdateInput {
    @Field(() => EnumUserGenderFilterFieldUpdateOperationsInput, {nullable:true})
    userGender?: InstanceType<typeof EnumUserGenderFilterFieldUpdateOperationsInput>;
    @Field(() => NullableEnumUserListedFilterFieldUpdateOperationsInput, {nullable:true})
    userListed?: InstanceType<typeof NullableEnumUserListedFilterFieldUpdateOperationsInput>;
    @Field(() => NullableEnumBooleanChoiceFieldUpdateOperationsInput, {nullable:true})
    userRentedEver?: InstanceType<typeof NullableEnumBooleanChoiceFieldUpdateOperationsInput>;
    @Field(() => NullableEnumBooleanChoiceFieldUpdateOperationsInput, {nullable:true})
    userBoughtEver?: InstanceType<typeof NullableEnumBooleanChoiceFieldUpdateOperationsInput>;
}

@InputType()
export class PushNotificationCampaignFiltersWhereInput {
    @Field(() => [PushNotificationCampaignFiltersWhereInput], {nullable:true})
    AND?: Array<PushNotificationCampaignFiltersWhereInput>;
    @Field(() => [PushNotificationCampaignFiltersWhereInput], {nullable:true})
    OR?: Array<PushNotificationCampaignFiltersWhereInput>;
    @Field(() => [PushNotificationCampaignFiltersWhereInput], {nullable:true})
    NOT?: Array<PushNotificationCampaignFiltersWhereInput>;
    @Field(() => EnumUserGenderFilterFilter, {nullable:true})
    userGender?: InstanceType<typeof EnumUserGenderFilterFilter>;
    @Field(() => EnumUserListedFilterNullableFilter, {nullable:true})
    userListed?: InstanceType<typeof EnumUserListedFilterNullableFilter>;
    @Field(() => EnumBooleanChoiceNullableFilter, {nullable:true})
    userRentedEver?: InstanceType<typeof EnumBooleanChoiceNullableFilter>;
    @Field(() => EnumBooleanChoiceNullableFilter, {nullable:true})
    userBoughtEver?: InstanceType<typeof EnumBooleanChoiceNullableFilter>;
}

@ObjectType()
export class PushNotificationCampaignFilters {
    @Field(() => UserGenderFilter, {nullable:false})
    userGender!: `${UserGenderFilter}`;
    @Field(() => UserListedFilter, {nullable:true})
    userListed!: `${UserListedFilter}` | null;
    @Field(() => BooleanChoice, {nullable:true})
    userRentedEver!: `${BooleanChoice}` | null;
    @Field(() => BooleanChoice, {nullable:true})
    userBoughtEver!: `${BooleanChoice}` | null;
}

@InputType()
export class PushNotificationDataCreateEnvelopeInput {
    @Field(() => PushNotificationDataCreateInput, {nullable:true})
    @Type(() => PushNotificationDataCreateInput)
    set?: InstanceType<typeof PushNotificationDataCreateInput>;
}

@InputType()
export class PushNotificationDataCreateInput {
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => String, {nullable:false})
    body!: string;
    @Field(() => String, {nullable:true})
    icon?: string;
    @Field(() => String, {nullable:true})
    cardImage?: string;
}

@InputType()
export class PushNotificationDataOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    title?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    body?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    icon?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    cardImage?: `${SortOrder}`;
}

@InputType()
export class PushNotificationDataUpdateEnvelopeInput {
    @Field(() => PushNotificationDataCreateInput, {nullable:true})
    @Type(() => PushNotificationDataCreateInput)
    set?: InstanceType<typeof PushNotificationDataCreateInput>;
    @Field(() => PushNotificationDataUpdateInput, {nullable:true})
    @Type(() => PushNotificationDataUpdateInput)
    update?: InstanceType<typeof PushNotificationDataUpdateInput>;
}

@InputType()
export class PushNotificationDataUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    body?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    icon?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    cardImage?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
}

@InputType()
export class PushNotificationDataWhereInput {
    @Field(() => [PushNotificationDataWhereInput], {nullable:true})
    AND?: Array<PushNotificationDataWhereInput>;
    @Field(() => [PushNotificationDataWhereInput], {nullable:true})
    OR?: Array<PushNotificationDataWhereInput>;
    @Field(() => [PushNotificationDataWhereInput], {nullable:true})
    NOT?: Array<PushNotificationDataWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    title?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    body?: InstanceType<typeof StringFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    icon?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    cardImage?: InstanceType<typeof StringNullableFilter>;
}

@ObjectType()
export class PushNotificationData {
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => String, {nullable:false})
    body!: string;
    @Field(() => String, {nullable:true})
    icon!: string | null;
    @Field(() => String, {nullable:true})
    cardImage!: string | null;
}

@InputType()
export class RentDateTimeCreateInput {
    @Field(() => String, {nullable:false})
    date!: string;
    @Field(() => String, {nullable:false})
    time!: string;
}

@InputType()
export class RentDateTimeOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    date?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    time?: `${SortOrder}`;
}

@InputType()
export class RentDateTimeUpdateEnvelopeInput {
    @Field(() => RentDateTimeCreateInput, {nullable:true})
    @Type(() => RentDateTimeCreateInput)
    set?: InstanceType<typeof RentDateTimeCreateInput>;
    @Field(() => RentDateTimeUpdateInput, {nullable:true})
    @Type(() => RentDateTimeUpdateInput)
    update?: InstanceType<typeof RentDateTimeUpdateInput>;
}

@InputType()
export class RentDateTimeUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    date?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    time?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}

@InputType()
export class RentDateTimeWhereInput {
    @Field(() => [RentDateTimeWhereInput], {nullable:true})
    AND?: Array<RentDateTimeWhereInput>;
    @Field(() => [RentDateTimeWhereInput], {nullable:true})
    OR?: Array<RentDateTimeWhereInput>;
    @Field(() => [RentDateTimeWhereInput], {nullable:true})
    NOT?: Array<RentDateTimeWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    date?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    time?: InstanceType<typeof StringFilter>;
}

@ObjectType()
export class RentDateTime {
    @Field(() => String, {nullable:false})
    date!: string;
    @Field(() => String, {nullable:false})
    time!: string;
}

@InputType()
export class RentOfferBubbleCreateEnvelopeInput {
    @Field(() => RentOfferBubbleCreateInput, {nullable:true})
    @Type(() => RentOfferBubbleCreateInput)
    set?: InstanceType<typeof RentOfferBubbleCreateInput>;
}

@InputType()
export class RentOfferBubbleCreateInput {
    @Field(() => String, {nullable:false})
    headerText!: string;
    @Field(() => ProductBubbleCreateInput, {nullable:false})
    product!: InstanceType<typeof ProductBubbleCreateInput>;
    @Field(() => RentDateTimeCreateInput, {nullable:false})
    start!: InstanceType<typeof RentDateTimeCreateInput>;
    @Field(() => RentDateTimeCreateInput, {nullable:false})
    end!: InstanceType<typeof RentDateTimeCreateInput>;
    @Field(() => String, {nullable:false})
    totalPrice!: string;
    @Field(() => String, {nullable:false})
    buyerFee!: string;
    @Field(() => String, {nullable:false})
    totalPriceWithBuyerFee!: string;
    @Field(() => String, {nullable:false})
    consideredWeeks!: string;
    @Field(() => String, {nullable:false})
    duration!: string;
    @Field(() => String, {nullable:false})
    deliveryMode!: string;
    @Field(() => String, {nullable:false})
    address!: string;
    @Field(() => String, {nullable:false})
    startDateTime!: string;
    @Field(() => String, {nullable:false})
    endDateTime!: string;
    @Field(() => String, {nullable:false})
    userIdHavingAddress!: string;
    @Field(() => String, {nullable:false})
    addressIdSelected!: string;
}

@InputType()
export class RentOfferBubbleOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    headerText?: `${SortOrder}`;
    @Field(() => ProductBubbleOrderByInput, {nullable:true})
    product?: InstanceType<typeof ProductBubbleOrderByInput>;
    @Field(() => RentDateTimeOrderByInput, {nullable:true})
    start?: InstanceType<typeof RentDateTimeOrderByInput>;
    @Field(() => RentDateTimeOrderByInput, {nullable:true})
    end?: InstanceType<typeof RentDateTimeOrderByInput>;
    @Field(() => SortOrder, {nullable:true})
    totalPrice?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    buyerFee?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    totalPriceWithBuyerFee?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    consideredWeeks?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    duration?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    deliveryMode?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    address?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    startDateTime?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    endDateTime?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userIdHavingAddress?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    addressIdSelected?: `${SortOrder}`;
}

@InputType()
export class RentOfferBubbleUpdateEnvelopeInput {
    @Field(() => RentOfferBubbleCreateInput, {nullable:true})
    @Type(() => RentOfferBubbleCreateInput)
    set?: InstanceType<typeof RentOfferBubbleCreateInput>;
    @Field(() => RentOfferBubbleUpdateInput, {nullable:true})
    @Type(() => RentOfferBubbleUpdateInput)
    update?: InstanceType<typeof RentOfferBubbleUpdateInput>;
}

@InputType()
export class RentOfferBubbleUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    headerText?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => ProductBubbleUpdateEnvelopeInput, {nullable:true})
    product?: InstanceType<typeof ProductBubbleUpdateEnvelopeInput>;
    @Field(() => RentDateTimeUpdateEnvelopeInput, {nullable:true})
    start?: InstanceType<typeof RentDateTimeUpdateEnvelopeInput>;
    @Field(() => RentDateTimeUpdateEnvelopeInput, {nullable:true})
    end?: InstanceType<typeof RentDateTimeUpdateEnvelopeInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    totalPrice?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    buyerFee?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    totalPriceWithBuyerFee?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    consideredWeeks?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    duration?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    deliveryMode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    address?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    startDateTime?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    endDateTime?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userIdHavingAddress?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    addressIdSelected?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}

@InputType()
export class RentOfferBubbleWhereInput {
    @Field(() => [RentOfferBubbleWhereInput], {nullable:true})
    AND?: Array<RentOfferBubbleWhereInput>;
    @Field(() => [RentOfferBubbleWhereInput], {nullable:true})
    OR?: Array<RentOfferBubbleWhereInput>;
    @Field(() => [RentOfferBubbleWhereInput], {nullable:true})
    NOT?: Array<RentOfferBubbleWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    headerText?: InstanceType<typeof StringFilter>;
    @Field(() => ProductBubbleCompositeFilter, {nullable:true})
    product?: InstanceType<typeof ProductBubbleCompositeFilter>;
    @Field(() => RentDateTimeCompositeFilter, {nullable:true})
    start?: InstanceType<typeof RentDateTimeCompositeFilter>;
    @Field(() => RentDateTimeCompositeFilter, {nullable:true})
    end?: InstanceType<typeof RentDateTimeCompositeFilter>;
    @Field(() => StringFilter, {nullable:true})
    totalPrice?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    buyerFee?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    totalPriceWithBuyerFee?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    consideredWeeks?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    duration?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    deliveryMode?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    address?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    startDateTime?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    endDateTime?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    userIdHavingAddress?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    addressIdSelected?: InstanceType<typeof StringFilter>;
}

@ObjectType()
export class RentOfferBubble {
    @Field(() => String, {nullable:false})
    headerText!: string;
    @Field(() => ProductBubble, {nullable:false})
    product?: InstanceType<typeof ProductBubble>;
    @Field(() => RentDateTime, {nullable:false})
    start?: InstanceType<typeof RentDateTime>;
    @Field(() => RentDateTime, {nullable:false})
    end?: InstanceType<typeof RentDateTime>;
    @Field(() => String, {nullable:false})
    totalPrice!: string;
    @Field(() => String, {nullable:false})
    buyerFee!: string;
    @Field(() => String, {nullable:false})
    totalPriceWithBuyerFee!: string;
    @Field(() => String, {nullable:false})
    consideredWeeks!: string;
    @Field(() => String, {nullable:false})
    duration!: string;
    @Field(() => String, {nullable:false})
    deliveryMode!: string;
    @Field(() => String, {nullable:false})
    address!: string;
    @Field(() => String, {nullable:false})
    startDateTime!: string;
    @Field(() => String, {nullable:false})
    endDateTime!: string;
    @Field(() => String, {nullable:false})
    userIdHavingAddress!: string;
    @Field(() => String, {nullable:false})
    addressIdSelected!: string;
}

@InputType()
export class RentOrderCreateInput {
    @Field(() => String, {nullable:true})
    startDate?: string;
    @Field(() => String, {nullable:true})
    endDate?: string;
    @Field(() => RentOrderCreateinitialImagesInput, {nullable:true})
    initialImages?: InstanceType<typeof RentOrderCreateinitialImagesInput>;
    @Field(() => RentOrderCreatecompletionImagesInput, {nullable:true})
    completionImages?: InstanceType<typeof RentOrderCreatecompletionImagesInput>;
}

@InputType()
export class RentOrderCreatecompletionImagesInput {
    @Field(() => [String], {nullable:false})
    set!: Array<string>;
}

@InputType()
export class RentOrderCreateinitialImagesInput {
    @Field(() => [String], {nullable:false})
    set!: Array<string>;
}

@InputType()
export class RentOrderOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    startDate?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    endDate?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    initialImages?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    completionImages?: `${SortOrder}`;
}

@InputType()
export class RentOrderUpdateInput {
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    startDate?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    endDate?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => RentOrderUpdateinitialImagesInput, {nullable:true})
    initialImages?: InstanceType<typeof RentOrderUpdateinitialImagesInput>;
    @Field(() => RentOrderUpdatecompletionImagesInput, {nullable:true})
    completionImages?: InstanceType<typeof RentOrderUpdatecompletionImagesInput>;
}

@InputType()
export class RentOrderUpdatecompletionImagesInput {
    @Field(() => [String], {nullable:true})
    set?: Array<string>;
    @Field(() => [String], {nullable:true})
    push?: Array<string>;
}

@InputType()
export class RentOrderUpdateinitialImagesInput {
    @Field(() => [String], {nullable:true})
    set?: Array<string>;
    @Field(() => [String], {nullable:true})
    push?: Array<string>;
}

@InputType()
export class RentOrderWhereInput {
    @Field(() => [RentOrderWhereInput], {nullable:true})
    AND?: Array<RentOrderWhereInput>;
    @Field(() => [RentOrderWhereInput], {nullable:true})
    OR?: Array<RentOrderWhereInput>;
    @Field(() => [RentOrderWhereInput], {nullable:true})
    NOT?: Array<RentOrderWhereInput>;
    @Field(() => StringNullableFilter, {nullable:true})
    startDate?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    endDate?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    initialImages?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    completionImages?: InstanceType<typeof StringNullableListFilter>;
}

@ObjectType()
export class RentOrder {
    @Field(() => String, {nullable:true})
    startDate!: string | null;
    @Field(() => String, {nullable:true})
    endDate!: string | null;
    @Field(() => [String], {nullable:true})
    initialImages!: Array<string>;
    @Field(() => [String], {nullable:true})
    completionImages!: Array<string>;
}

@InputType()
export class RentalNotificationPayloadCreateEnvelopeInput {
    @Field(() => RentalNotificationPayloadCreateInput, {nullable:true})
    @Type(() => RentalNotificationPayloadCreateInput)
    set?: InstanceType<typeof RentalNotificationPayloadCreateInput>;
}

@InputType()
export class RentalNotificationPayloadCreateInput {
    @Field(() => RentalNotificationType, {nullable:false})
    type!: `${RentalNotificationType}`;
    @Field(() => String, {nullable:false})
    conversationId!: string;
    @Field(() => String, {nullable:false})
    orderId!: string;
    @Field(() => String, {nullable:false})
    listingTitle!: string;
}

@InputType()
export class RentalNotificationPayloadOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    conversationId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    orderId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    listingTitle?: `${SortOrder}`;
}

@InputType()
export class RentalNotificationPayloadUpdateEnvelopeInput {
    @Field(() => RentalNotificationPayloadCreateInput, {nullable:true})
    @Type(() => RentalNotificationPayloadCreateInput)
    set?: InstanceType<typeof RentalNotificationPayloadCreateInput>;
    @Field(() => RentalNotificationPayloadUpdateInput, {nullable:true})
    @Type(() => RentalNotificationPayloadUpdateInput)
    update?: InstanceType<typeof RentalNotificationPayloadUpdateInput>;
}

@InputType()
export class RentalNotificationPayloadUpdateInput {
    @Field(() => EnumRentalNotificationTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumRentalNotificationTypeFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    conversationId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    orderId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    listingTitle?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}

@InputType()
export class RentalNotificationPayloadWhereInput {
    @Field(() => [RentalNotificationPayloadWhereInput], {nullable:true})
    AND?: Array<RentalNotificationPayloadWhereInput>;
    @Field(() => [RentalNotificationPayloadWhereInput], {nullable:true})
    OR?: Array<RentalNotificationPayloadWhereInput>;
    @Field(() => [RentalNotificationPayloadWhereInput], {nullable:true})
    NOT?: Array<RentalNotificationPayloadWhereInput>;
    @Field(() => EnumRentalNotificationTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumRentalNotificationTypeFilter>;
    @Field(() => StringFilter, {nullable:true})
    conversationId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    orderId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    listingTitle?: InstanceType<typeof StringFilter>;
}

@ObjectType()
export class RentalNotificationPayload {
    @Field(() => RentalNotificationType, {nullable:false})
    type!: `${RentalNotificationType}`;
    @Field(() => String, {nullable:false})
    conversationId!: string;
    @Field(() => String, {nullable:false})
    orderId!: string;
    @Field(() => String, {nullable:false})
    listingTitle!: string;
}

@InputType()
export class RentingPreferenceCreateInput {
    @Field(() => String, {nullable:true})
    addressId?: string;
    @Field(() => RentingPreferenceCreateavailabilityInput, {nullable:true})
    availability?: InstanceType<typeof RentingPreferenceCreateavailabilityInput>;
    @Field(() => String, {nullable:true})
    addressDescription?: string;
}

@InputType()
export class RentingPreferenceCreateavailabilityInput {
    @Field(() => [Availability], {nullable:false})
    set!: Array<`${Availability}`>;
}

@InputType()
export class RentingPreferenceOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    addressId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    availability?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    addressDescription?: `${SortOrder}`;
}

@InputType()
export class RentingPreferenceUpdateInput {
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    addressId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => RentingPreferenceUpdateavailabilityInput, {nullable:true})
    availability?: InstanceType<typeof RentingPreferenceUpdateavailabilityInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    addressDescription?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
}

@InputType()
export class RentingPreferenceUpdateavailabilityInput {
    @Field(() => [Availability], {nullable:true})
    set?: Array<`${Availability}`>;
    @Field(() => [Availability], {nullable:true})
    push?: Array<`${Availability}`>;
}

@InputType()
export class RentingPreferenceWhereInput {
    @Field(() => [RentingPreferenceWhereInput], {nullable:true})
    AND?: Array<RentingPreferenceWhereInput>;
    @Field(() => [RentingPreferenceWhereInput], {nullable:true})
    OR?: Array<RentingPreferenceWhereInput>;
    @Field(() => [RentingPreferenceWhereInput], {nullable:true})
    NOT?: Array<RentingPreferenceWhereInput>;
    @Field(() => StringNullableFilter, {nullable:true})
    addressId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => EnumAvailabilityNullableListFilter, {nullable:true})
    availability?: InstanceType<typeof EnumAvailabilityNullableListFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    addressDescription?: InstanceType<typeof StringNullableFilter>;
}

@ObjectType()
export class RentingPreference {
    @Field(() => String, {defaultValue:'',nullable:true})
    addressId!: string | null;
    @Field(() => [Availability], {nullable:true})
    availability!: Array<`${Availability}`>;
    @Field(() => String, {defaultValue:'',nullable:true})
    addressDescription!: string | null;
}

@InputType()
export class SessionCreateInput {
    @Field(() => String, {nullable:false})
    token!: string;
    @Field(() => String, {nullable:false})
    deviceModel!: string;
    @Field(() => Boolean, {nullable:true})
    valid?: boolean;
    @Field(() => Date, {nullable:true})
    started?: Date | string;
    @Field(() => Date, {nullable:true})
    lastSeen?: Date | string;
}

@InputType()
export class SessionOrderByCompositeAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    _count?: `${SortOrder}`;
}

@InputType()
export class SessionUpdateManyInput {
    @Field(() => SessionWhereInput, {nullable:false})
    @Type(() => SessionWhereInput)
    where!: InstanceType<typeof SessionWhereInput>;
    @Field(() => SessionUpdateInput, {nullable:false})
    @Type(() => SessionUpdateInput)
    data!: InstanceType<typeof SessionUpdateInput>;
}

@InputType()
export class SessionUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    token?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    deviceModel?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    valid?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    started?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    lastSeen?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class SessionWhereInput {
    @Field(() => [SessionWhereInput], {nullable:true})
    AND?: Array<SessionWhereInput>;
    @Field(() => [SessionWhereInput], {nullable:true})
    OR?: Array<SessionWhereInput>;
    @Field(() => [SessionWhereInput], {nullable:true})
    NOT?: Array<SessionWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    token?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    deviceModel?: InstanceType<typeof StringFilter>;
    @Field(() => BoolFilter, {nullable:true})
    valid?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    started?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    lastSeen?: InstanceType<typeof DateTimeFilter>;
}

@ObjectType()
export class Session {
    @Field(() => String, {nullable:false})
    token!: string;
    @Field(() => String, {nullable:false})
    deviceModel!: string;
    @Field(() => Boolean, {defaultValue:true,nullable:false})
    valid!: boolean;
    @Field(() => Date, {nullable:false})
    started!: Date;
    @Field(() => Date, {nullable:false})
    lastSeen!: Date;
}

@InputType()
export class ShipmentCreateInput {
    @Field(() => String, {nullable:true})
    labelId?: string;
    @Field(() => AddressCreateInput, {nullable:true})
    from?: InstanceType<typeof AddressCreateInput>;
    @Field(() => AddressCreateInput, {nullable:true})
    to?: InstanceType<typeof AddressCreateInput>;
    @Field(() => String, {nullable:true})
    labelDownloadlink?: string;
    @Field(() => String, {nullable:true})
    trackingNumber?: string;
    @Field(() => Float, {nullable:true})
    shippingCharge?: number;
    @Field(() => ShippingChargePayer, {nullable:true})
    shippingChargePayer?: `${ShippingChargePayer}`;
    @Field(() => GraphQLJSON, {nullable:true})
    events?: any;
    @Field(() => String, {nullable:true})
    status_description?: string;
    @Field(() => OrderNotificationType, {nullable:true})
    status?: `${OrderNotificationType}`;
}

@InputType()
export class ShipmentOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    labelId?: `${SortOrder}`;
    @Field(() => AddressOrderByInput, {nullable:true})
    from?: InstanceType<typeof AddressOrderByInput>;
    @Field(() => AddressOrderByInput, {nullable:true})
    to?: InstanceType<typeof AddressOrderByInput>;
    @Field(() => SortOrder, {nullable:true})
    labelDownloadlink?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    trackingNumber?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    shippingCharge?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    shippingChargePayer?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    events?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    status_description?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    status?: `${SortOrder}`;
}

@InputType()
export class ShipmentUpdateInput {
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    labelId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => AddressNullableUpdateEnvelopeInput, {nullable:true})
    from?: InstanceType<typeof AddressNullableUpdateEnvelopeInput>;
    @Field(() => AddressNullableUpdateEnvelopeInput, {nullable:true})
    to?: InstanceType<typeof AddressNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    labelDownloadlink?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    trackingNumber?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableFloatFieldUpdateOperationsInput, {nullable:true})
    shippingCharge?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    @Field(() => NullableEnumShippingChargePayerFieldUpdateOperationsInput, {nullable:true})
    shippingChargePayer?: InstanceType<typeof NullableEnumShippingChargePayerFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    events?: any;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    status_description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableEnumOrderNotificationTypeFieldUpdateOperationsInput, {nullable:true})
    status?: InstanceType<typeof NullableEnumOrderNotificationTypeFieldUpdateOperationsInput>;
}

@InputType()
export class ShipmentWhereInput {
    @Field(() => [ShipmentWhereInput], {nullable:true})
    AND?: Array<ShipmentWhereInput>;
    @Field(() => [ShipmentWhereInput], {nullable:true})
    OR?: Array<ShipmentWhereInput>;
    @Field(() => [ShipmentWhereInput], {nullable:true})
    NOT?: Array<ShipmentWhereInput>;
    @Field(() => StringNullableFilter, {nullable:true})
    labelId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => AddressNullableCompositeFilter, {nullable:true})
    from?: InstanceType<typeof AddressNullableCompositeFilter>;
    @Field(() => AddressNullableCompositeFilter, {nullable:true})
    to?: InstanceType<typeof AddressNullableCompositeFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    labelDownloadlink?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    trackingNumber?: InstanceType<typeof StringNullableFilter>;
    @Field(() => FloatNullableFilter, {nullable:true})
    shippingCharge?: InstanceType<typeof FloatNullableFilter>;
    @Field(() => EnumShippingChargePayerNullableFilter, {nullable:true})
    shippingChargePayer?: InstanceType<typeof EnumShippingChargePayerNullableFilter>;
    @Field(() => JsonNullableFilter, {nullable:true})
    events?: InstanceType<typeof JsonNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    status_description?: InstanceType<typeof StringNullableFilter>;
    @Field(() => EnumOrderNotificationTypeNullableFilter, {nullable:true})
    status?: InstanceType<typeof EnumOrderNotificationTypeNullableFilter>;
}

@ObjectType()
export class Shipment {
    @Field(() => String, {nullable:true})
    labelId!: string | null;
    @Field(() => Address, {nullable:true})
    from?: InstanceType<typeof Address> | null;
    @Field(() => Address, {nullable:true})
    to?: InstanceType<typeof Address> | null;
    @Field(() => String, {nullable:true})
    labelDownloadlink!: string | null;
    @Field(() => String, {nullable:true})
    trackingNumber!: string | null;
    @Field(() => Float, {nullable:true})
    shippingCharge!: number | null;
    @Field(() => ShippingChargePayer, {nullable:true})
    shippingChargePayer!: `${ShippingChargePayer}` | null;
    @Field(() => GraphQLJSON, {nullable:true})
    events!: any | null;
    @Field(() => String, {nullable:true})
    status_description!: string | null;
    @Field(() => OrderNotificationType, {nullable:true})
    status!: `${OrderNotificationType}` | null;
}

@ArgsType()
export class CreateManyShoppingPreferenceArgs {
    @Field(() => [ShoppingPreferenceCreateManyInput], {nullable:false})
    @Type(() => ShoppingPreferenceCreateManyInput)
    data!: Array<ShoppingPreferenceCreateManyInput>;
}

@ArgsType()
export class CreateOneShoppingPreferenceArgs {
    @Field(() => ShoppingPreferenceCreateInput, {nullable:false})
    @Type(() => ShoppingPreferenceCreateInput)
    data!: InstanceType<typeof ShoppingPreferenceCreateInput>;
}

@ArgsType()
export class DeleteManyShoppingPreferenceArgs {
    @Field(() => ShoppingPreferenceWhereInput, {nullable:true})
    @Type(() => ShoppingPreferenceWhereInput)
    where?: InstanceType<typeof ShoppingPreferenceWhereInput>;
}

@ArgsType()
export class DeleteOneShoppingPreferenceArgs {
    @Field(() => ShoppingPreferenceWhereUniqueInput, {nullable:false})
    @Type(() => ShoppingPreferenceWhereUniqueInput)
    where!: Prisma.AtLeast<ShoppingPreferenceWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindFirstShoppingPreferenceOrThrowArgs {
    @Field(() => ShoppingPreferenceWhereInput, {nullable:true})
    @Type(() => ShoppingPreferenceWhereInput)
    where?: InstanceType<typeof ShoppingPreferenceWhereInput>;
    @Field(() => [ShoppingPreferenceOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<ShoppingPreferenceOrderByWithRelationInput>;
    @Field(() => ShoppingPreferenceWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<ShoppingPreferenceWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [ShoppingPreferenceScalarFieldEnum], {nullable:true})
    distinct?: Array<`${ShoppingPreferenceScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstShoppingPreferenceArgs {
    @Field(() => ShoppingPreferenceWhereInput, {nullable:true})
    @Type(() => ShoppingPreferenceWhereInput)
    where?: InstanceType<typeof ShoppingPreferenceWhereInput>;
    @Field(() => [ShoppingPreferenceOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<ShoppingPreferenceOrderByWithRelationInput>;
    @Field(() => ShoppingPreferenceWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<ShoppingPreferenceWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [ShoppingPreferenceScalarFieldEnum], {nullable:true})
    distinct?: Array<`${ShoppingPreferenceScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyShoppingPreferenceArgs {
    @Field(() => ShoppingPreferenceWhereInput, {nullable:true})
    @Type(() => ShoppingPreferenceWhereInput)
    where?: InstanceType<typeof ShoppingPreferenceWhereInput>;
    @Field(() => [ShoppingPreferenceOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<ShoppingPreferenceOrderByWithRelationInput>;
    @Field(() => ShoppingPreferenceWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<ShoppingPreferenceWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [ShoppingPreferenceScalarFieldEnum], {nullable:true})
    distinct?: Array<`${ShoppingPreferenceScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniqueShoppingPreferenceOrThrowArgs {
    @Field(() => ShoppingPreferenceWhereUniqueInput, {nullable:false})
    @Type(() => ShoppingPreferenceWhereUniqueInput)
    where!: Prisma.AtLeast<ShoppingPreferenceWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindUniqueShoppingPreferenceArgs {
    @Field(() => ShoppingPreferenceWhereUniqueInput, {nullable:false})
    @Type(() => ShoppingPreferenceWhereUniqueInput)
    where!: Prisma.AtLeast<ShoppingPreferenceWhereUniqueInput, 'id'>;
}

@ArgsType()
export class ShoppingPreferenceAggregateArgs {
    @Field(() => ShoppingPreferenceWhereInput, {nullable:true})
    @Type(() => ShoppingPreferenceWhereInput)
    where?: InstanceType<typeof ShoppingPreferenceWhereInput>;
    @Field(() => [ShoppingPreferenceOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<ShoppingPreferenceOrderByWithRelationInput>;
    @Field(() => ShoppingPreferenceWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<ShoppingPreferenceWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class ShoppingPreferenceCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    image?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userIds?: `${SortOrder}`;
}

@InputType()
export class ShoppingPreferenceCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => ShoppingPreferenceCreateuserIdsInput, {nullable:true})
    userIds?: InstanceType<typeof ShoppingPreferenceCreateuserIdsInput>;
}

@InputType()
export class ShoppingPreferenceCreateNestedManyWithoutUsersInput {
    @Field(() => [ShoppingPreferenceCreateWithoutUsersInput], {nullable:true})
    @Type(() => ShoppingPreferenceCreateWithoutUsersInput)
    create?: Array<ShoppingPreferenceCreateWithoutUsersInput>;
    @Field(() => [ShoppingPreferenceCreateOrConnectWithoutUsersInput], {nullable:true})
    @Type(() => ShoppingPreferenceCreateOrConnectWithoutUsersInput)
    connectOrCreate?: Array<ShoppingPreferenceCreateOrConnectWithoutUsersInput>;
    @Field(() => [ShoppingPreferenceWhereUniqueInput], {nullable:true})
    @Type(() => ShoppingPreferenceWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ShoppingPreferenceWhereUniqueInput, 'id'>>;
}

@InputType()
export class ShoppingPreferenceCreateOrConnectWithoutUsersInput {
    @Field(() => ShoppingPreferenceWhereUniqueInput, {nullable:false})
    @Type(() => ShoppingPreferenceWhereUniqueInput)
    where!: Prisma.AtLeast<ShoppingPreferenceWhereUniqueInput, 'id'>;
    @Field(() => ShoppingPreferenceCreateWithoutUsersInput, {nullable:false})
    @Type(() => ShoppingPreferenceCreateWithoutUsersInput)
    create!: InstanceType<typeof ShoppingPreferenceCreateWithoutUsersInput>;
}

@InputType()
export class ShoppingPreferenceCreateWithoutUsersInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class ShoppingPreferenceCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => UserCreateNestedManyWithoutShoppingPreferencesInput, {nullable:true})
    users?: InstanceType<typeof UserCreateNestedManyWithoutShoppingPreferencesInput>;
}

@InputType()
export class ShoppingPreferenceCreateuserIdsInput {
    @Field(() => [String], {nullable:false})
    set!: Array<string>;
}

@ArgsType()
export class ShoppingPreferenceGroupByArgs {
    @Field(() => ShoppingPreferenceWhereInput, {nullable:true})
    @Type(() => ShoppingPreferenceWhereInput)
    where?: InstanceType<typeof ShoppingPreferenceWhereInput>;
    @Field(() => [ShoppingPreferenceOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<ShoppingPreferenceOrderByWithAggregationInput>;
    @Field(() => [ShoppingPreferenceScalarFieldEnum], {nullable:false})
    by!: Array<`${ShoppingPreferenceScalarFieldEnum}`>;
    @Field(() => ShoppingPreferenceScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof ShoppingPreferenceScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class ShoppingPreferenceListRelationFilter {
    @Field(() => ShoppingPreferenceWhereInput, {nullable:true})
    every?: InstanceType<typeof ShoppingPreferenceWhereInput>;
    @Field(() => ShoppingPreferenceWhereInput, {nullable:true})
    some?: InstanceType<typeof ShoppingPreferenceWhereInput>;
    @Field(() => ShoppingPreferenceWhereInput, {nullable:true})
    none?: InstanceType<typeof ShoppingPreferenceWhereInput>;
}

@InputType()
export class ShoppingPreferenceMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    image?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class ShoppingPreferenceMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    image?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class ShoppingPreferenceOrderByRelationAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    _count?: `${SortOrder}`;
}

@InputType()
export class ShoppingPreferenceOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    image?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userIds?: `${SortOrder}`;
    @Field(() => ShoppingPreferenceCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof ShoppingPreferenceCountOrderByAggregateInput>;
    @Field(() => ShoppingPreferenceMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof ShoppingPreferenceMaxOrderByAggregateInput>;
    @Field(() => ShoppingPreferenceMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof ShoppingPreferenceMinOrderByAggregateInput>;
}

@InputType()
export class ShoppingPreferenceOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    image?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userIds?: `${SortOrder}`;
    @Field(() => UserOrderByRelationAggregateInput, {nullable:true})
    users?: InstanceType<typeof UserOrderByRelationAggregateInput>;
}

@InputType()
export class ShoppingPreferenceScalarWhereWithAggregatesInput {
    @Field(() => [ShoppingPreferenceScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<ShoppingPreferenceScalarWhereWithAggregatesInput>;
    @Field(() => [ShoppingPreferenceScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<ShoppingPreferenceScalarWhereWithAggregatesInput>;
    @Field(() => [ShoppingPreferenceScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<ShoppingPreferenceScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    name?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    image?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => BoolWithAggregatesFilter, {nullable:true})
    active?: InstanceType<typeof BoolWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    userIds?: InstanceType<typeof StringNullableListFilter>;
}

@InputType()
export class ShoppingPreferenceScalarWhereInput {
    @Field(() => [ShoppingPreferenceScalarWhereInput], {nullable:true})
    AND?: Array<ShoppingPreferenceScalarWhereInput>;
    @Field(() => [ShoppingPreferenceScalarWhereInput], {nullable:true})
    OR?: Array<ShoppingPreferenceScalarWhereInput>;
    @Field(() => [ShoppingPreferenceScalarWhereInput], {nullable:true})
    NOT?: Array<ShoppingPreferenceScalarWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    name?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    image?: InstanceType<typeof StringFilter>;
    @Field(() => BoolFilter, {nullable:true})
    active?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    userIds?: InstanceType<typeof StringNullableListFilter>;
}

@InputType()
export class ShoppingPreferenceUncheckedCreateNestedManyWithoutUsersInput {
    @Field(() => [ShoppingPreferenceCreateWithoutUsersInput], {nullable:true})
    @Type(() => ShoppingPreferenceCreateWithoutUsersInput)
    create?: Array<ShoppingPreferenceCreateWithoutUsersInput>;
    @Field(() => [ShoppingPreferenceCreateOrConnectWithoutUsersInput], {nullable:true})
    @Type(() => ShoppingPreferenceCreateOrConnectWithoutUsersInput)
    connectOrCreate?: Array<ShoppingPreferenceCreateOrConnectWithoutUsersInput>;
    @Field(() => [ShoppingPreferenceWhereUniqueInput], {nullable:true})
    @Type(() => ShoppingPreferenceWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ShoppingPreferenceWhereUniqueInput, 'id'>>;
}

@InputType()
export class ShoppingPreferenceUncheckedCreateWithoutUsersInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => ShoppingPreferenceCreateuserIdsInput, {nullable:true})
    userIds?: InstanceType<typeof ShoppingPreferenceCreateuserIdsInput>;
}

@InputType()
export class ShoppingPreferenceUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => ShoppingPreferenceCreateuserIdsInput, {nullable:true})
    userIds?: InstanceType<typeof ShoppingPreferenceCreateuserIdsInput>;
    @Field(() => UserUncheckedCreateNestedManyWithoutShoppingPreferencesInput, {nullable:true})
    users?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutShoppingPreferencesInput>;
}

@InputType()
export class ShoppingPreferenceUncheckedUpdateManyWithoutUsersNestedInput {
    @Field(() => [ShoppingPreferenceCreateWithoutUsersInput], {nullable:true})
    @Type(() => ShoppingPreferenceCreateWithoutUsersInput)
    create?: Array<ShoppingPreferenceCreateWithoutUsersInput>;
    @Field(() => [ShoppingPreferenceCreateOrConnectWithoutUsersInput], {nullable:true})
    @Type(() => ShoppingPreferenceCreateOrConnectWithoutUsersInput)
    connectOrCreate?: Array<ShoppingPreferenceCreateOrConnectWithoutUsersInput>;
    @Field(() => [ShoppingPreferenceUpsertWithWhereUniqueWithoutUsersInput], {nullable:true})
    @Type(() => ShoppingPreferenceUpsertWithWhereUniqueWithoutUsersInput)
    upsert?: Array<ShoppingPreferenceUpsertWithWhereUniqueWithoutUsersInput>;
    @Field(() => [ShoppingPreferenceWhereUniqueInput], {nullable:true})
    @Type(() => ShoppingPreferenceWhereUniqueInput)
    set?: Array<Prisma.AtLeast<ShoppingPreferenceWhereUniqueInput, 'id'>>;
    @Field(() => [ShoppingPreferenceWhereUniqueInput], {nullable:true})
    @Type(() => ShoppingPreferenceWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<ShoppingPreferenceWhereUniqueInput, 'id'>>;
    @Field(() => [ShoppingPreferenceWhereUniqueInput], {nullable:true})
    @Type(() => ShoppingPreferenceWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<ShoppingPreferenceWhereUniqueInput, 'id'>>;
    @Field(() => [ShoppingPreferenceWhereUniqueInput], {nullable:true})
    @Type(() => ShoppingPreferenceWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ShoppingPreferenceWhereUniqueInput, 'id'>>;
    @Field(() => [ShoppingPreferenceUpdateWithWhereUniqueWithoutUsersInput], {nullable:true})
    @Type(() => ShoppingPreferenceUpdateWithWhereUniqueWithoutUsersInput)
    update?: Array<ShoppingPreferenceUpdateWithWhereUniqueWithoutUsersInput>;
    @Field(() => [ShoppingPreferenceUpdateManyWithWhereWithoutUsersInput], {nullable:true})
    @Type(() => ShoppingPreferenceUpdateManyWithWhereWithoutUsersInput)
    updateMany?: Array<ShoppingPreferenceUpdateManyWithWhereWithoutUsersInput>;
    @Field(() => [ShoppingPreferenceScalarWhereInput], {nullable:true})
    @Type(() => ShoppingPreferenceScalarWhereInput)
    deleteMany?: Array<ShoppingPreferenceScalarWhereInput>;
}

@InputType()
export class ShoppingPreferenceUncheckedUpdateManyWithoutUsersInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => ShoppingPreferenceUpdateuserIdsInput, {nullable:true})
    userIds?: InstanceType<typeof ShoppingPreferenceUpdateuserIdsInput>;
}

@InputType()
export class ShoppingPreferenceUncheckedUpdateManyInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => ShoppingPreferenceUpdateuserIdsInput, {nullable:true})
    userIds?: InstanceType<typeof ShoppingPreferenceUpdateuserIdsInput>;
}

@InputType()
export class ShoppingPreferenceUncheckedUpdateWithoutUsersInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => ShoppingPreferenceUpdateuserIdsInput, {nullable:true})
    userIds?: InstanceType<typeof ShoppingPreferenceUpdateuserIdsInput>;
}

@InputType()
export class ShoppingPreferenceUncheckedUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => ShoppingPreferenceUpdateuserIdsInput, {nullable:true})
    userIds?: InstanceType<typeof ShoppingPreferenceUpdateuserIdsInput>;
    @Field(() => UserUncheckedUpdateManyWithoutShoppingPreferencesNestedInput, {nullable:true})
    users?: InstanceType<typeof UserUncheckedUpdateManyWithoutShoppingPreferencesNestedInput>;
}

@InputType()
export class ShoppingPreferenceUpdateManyMutationInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class ShoppingPreferenceUpdateManyWithWhereWithoutUsersInput {
    @Field(() => ShoppingPreferenceScalarWhereInput, {nullable:false})
    @Type(() => ShoppingPreferenceScalarWhereInput)
    where!: InstanceType<typeof ShoppingPreferenceScalarWhereInput>;
    @Field(() => ShoppingPreferenceUpdateManyMutationInput, {nullable:false})
    @Type(() => ShoppingPreferenceUpdateManyMutationInput)
    data!: InstanceType<typeof ShoppingPreferenceUpdateManyMutationInput>;
}

@InputType()
export class ShoppingPreferenceUpdateManyWithoutUsersNestedInput {
    @Field(() => [ShoppingPreferenceCreateWithoutUsersInput], {nullable:true})
    @Type(() => ShoppingPreferenceCreateWithoutUsersInput)
    create?: Array<ShoppingPreferenceCreateWithoutUsersInput>;
    @Field(() => [ShoppingPreferenceCreateOrConnectWithoutUsersInput], {nullable:true})
    @Type(() => ShoppingPreferenceCreateOrConnectWithoutUsersInput)
    connectOrCreate?: Array<ShoppingPreferenceCreateOrConnectWithoutUsersInput>;
    @Field(() => [ShoppingPreferenceUpsertWithWhereUniqueWithoutUsersInput], {nullable:true})
    @Type(() => ShoppingPreferenceUpsertWithWhereUniqueWithoutUsersInput)
    upsert?: Array<ShoppingPreferenceUpsertWithWhereUniqueWithoutUsersInput>;
    @Field(() => [ShoppingPreferenceWhereUniqueInput], {nullable:true})
    @Type(() => ShoppingPreferenceWhereUniqueInput)
    set?: Array<Prisma.AtLeast<ShoppingPreferenceWhereUniqueInput, 'id'>>;
    @Field(() => [ShoppingPreferenceWhereUniqueInput], {nullable:true})
    @Type(() => ShoppingPreferenceWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<ShoppingPreferenceWhereUniqueInput, 'id'>>;
    @Field(() => [ShoppingPreferenceWhereUniqueInput], {nullable:true})
    @Type(() => ShoppingPreferenceWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<ShoppingPreferenceWhereUniqueInput, 'id'>>;
    @Field(() => [ShoppingPreferenceWhereUniqueInput], {nullable:true})
    @Type(() => ShoppingPreferenceWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<ShoppingPreferenceWhereUniqueInput, 'id'>>;
    @Field(() => [ShoppingPreferenceUpdateWithWhereUniqueWithoutUsersInput], {nullable:true})
    @Type(() => ShoppingPreferenceUpdateWithWhereUniqueWithoutUsersInput)
    update?: Array<ShoppingPreferenceUpdateWithWhereUniqueWithoutUsersInput>;
    @Field(() => [ShoppingPreferenceUpdateManyWithWhereWithoutUsersInput], {nullable:true})
    @Type(() => ShoppingPreferenceUpdateManyWithWhereWithoutUsersInput)
    updateMany?: Array<ShoppingPreferenceUpdateManyWithWhereWithoutUsersInput>;
    @Field(() => [ShoppingPreferenceScalarWhereInput], {nullable:true})
    @Type(() => ShoppingPreferenceScalarWhereInput)
    deleteMany?: Array<ShoppingPreferenceScalarWhereInput>;
}

@InputType()
export class ShoppingPreferenceUpdateWithWhereUniqueWithoutUsersInput {
    @Field(() => ShoppingPreferenceWhereUniqueInput, {nullable:false})
    @Type(() => ShoppingPreferenceWhereUniqueInput)
    where!: Prisma.AtLeast<ShoppingPreferenceWhereUniqueInput, 'id'>;
    @Field(() => ShoppingPreferenceUpdateWithoutUsersInput, {nullable:false})
    @Type(() => ShoppingPreferenceUpdateWithoutUsersInput)
    data!: InstanceType<typeof ShoppingPreferenceUpdateWithoutUsersInput>;
}

@InputType()
export class ShoppingPreferenceUpdateWithoutUsersInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class ShoppingPreferenceUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => UserUpdateManyWithoutShoppingPreferencesNestedInput, {nullable:true})
    users?: InstanceType<typeof UserUpdateManyWithoutShoppingPreferencesNestedInput>;
}

@InputType()
export class ShoppingPreferenceUpdateuserIdsInput {
    @Field(() => [String], {nullable:true})
    set?: Array<string>;
    @Field(() => [String], {nullable:true})
    push?: Array<string>;
}

@InputType()
export class ShoppingPreferenceUpsertWithWhereUniqueWithoutUsersInput {
    @Field(() => ShoppingPreferenceWhereUniqueInput, {nullable:false})
    @Type(() => ShoppingPreferenceWhereUniqueInput)
    where!: Prisma.AtLeast<ShoppingPreferenceWhereUniqueInput, 'id'>;
    @Field(() => ShoppingPreferenceUpdateWithoutUsersInput, {nullable:false})
    @Type(() => ShoppingPreferenceUpdateWithoutUsersInput)
    update!: InstanceType<typeof ShoppingPreferenceUpdateWithoutUsersInput>;
    @Field(() => ShoppingPreferenceCreateWithoutUsersInput, {nullable:false})
    @Type(() => ShoppingPreferenceCreateWithoutUsersInput)
    create!: InstanceType<typeof ShoppingPreferenceCreateWithoutUsersInput>;
}

@InputType()
export class ShoppingPreferenceWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => [ShoppingPreferenceWhereInput], {nullable:true})
    AND?: Array<ShoppingPreferenceWhereInput>;
    @Field(() => [ShoppingPreferenceWhereInput], {nullable:true})
    OR?: Array<ShoppingPreferenceWhereInput>;
    @Field(() => [ShoppingPreferenceWhereInput], {nullable:true})
    NOT?: Array<ShoppingPreferenceWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    name?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    image?: InstanceType<typeof StringFilter>;
    @Field(() => BoolFilter, {nullable:true})
    active?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    userIds?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => UserListRelationFilter, {nullable:true})
    users?: InstanceType<typeof UserListRelationFilter>;
}

@InputType()
export class ShoppingPreferenceWhereInput {
    @Field(() => [ShoppingPreferenceWhereInput], {nullable:true})
    AND?: Array<ShoppingPreferenceWhereInput>;
    @Field(() => [ShoppingPreferenceWhereInput], {nullable:true})
    OR?: Array<ShoppingPreferenceWhereInput>;
    @Field(() => [ShoppingPreferenceWhereInput], {nullable:true})
    NOT?: Array<ShoppingPreferenceWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    name?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    image?: InstanceType<typeof StringFilter>;
    @Field(() => BoolFilter, {nullable:true})
    active?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    userIds?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => UserListRelationFilter, {nullable:true})
    users?: InstanceType<typeof UserListRelationFilter>;
}

@ObjectType()
export class ShoppingPreference {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => Boolean, {defaultValue:false,nullable:false})
    active!: boolean;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
    @Field(() => Date, {nullable:false})
    updatedAt!: Date;
    @Field(() => [String], {nullable:true})
    userIds!: Array<string>;
    @Field(() => [User], {nullable:true})
    users?: Array<User>;
}

@ArgsType()
export class UpdateManyShoppingPreferenceArgs {
    @Field(() => ShoppingPreferenceUpdateManyMutationInput, {nullable:false})
    @Type(() => ShoppingPreferenceUpdateManyMutationInput)
    data!: InstanceType<typeof ShoppingPreferenceUpdateManyMutationInput>;
    @Field(() => ShoppingPreferenceWhereInput, {nullable:true})
    @Type(() => ShoppingPreferenceWhereInput)
    where?: InstanceType<typeof ShoppingPreferenceWhereInput>;
}

@ArgsType()
export class UpdateOneShoppingPreferenceArgs {
    @Field(() => ShoppingPreferenceUpdateInput, {nullable:false})
    @Type(() => ShoppingPreferenceUpdateInput)
    data!: InstanceType<typeof ShoppingPreferenceUpdateInput>;
    @Field(() => ShoppingPreferenceWhereUniqueInput, {nullable:false})
    @Type(() => ShoppingPreferenceWhereUniqueInput)
    where!: Prisma.AtLeast<ShoppingPreferenceWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpsertOneShoppingPreferenceArgs {
    @Field(() => ShoppingPreferenceWhereUniqueInput, {nullable:false})
    @Type(() => ShoppingPreferenceWhereUniqueInput)
    where!: Prisma.AtLeast<ShoppingPreferenceWhereUniqueInput, 'id'>;
    @Field(() => ShoppingPreferenceCreateInput, {nullable:false})
    @Type(() => ShoppingPreferenceCreateInput)
    create!: InstanceType<typeof ShoppingPreferenceCreateInput>;
    @Field(() => ShoppingPreferenceUpdateInput, {nullable:false})
    @Type(() => ShoppingPreferenceUpdateInput)
    update!: InstanceType<typeof ShoppingPreferenceUpdateInput>;
}

@InputType()
export class SizesCreateInput {
    @Field(() => String, {nullable:false})
    shoes!: string;
    @Field(() => String, {nullable:false})
    upperWear!: string;
    @Field(() => String, {nullable:false})
    lowerWear!: string;
}

@InputType()
export class SizesOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    shoes?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    upperWear?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    lowerWear?: `${SortOrder}`;
}

@InputType()
export class SizesUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    shoes?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    upperWear?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    lowerWear?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}

@InputType()
export class SizesWhereInput {
    @Field(() => [SizesWhereInput], {nullable:true})
    AND?: Array<SizesWhereInput>;
    @Field(() => [SizesWhereInput], {nullable:true})
    OR?: Array<SizesWhereInput>;
    @Field(() => [SizesWhereInput], {nullable:true})
    NOT?: Array<SizesWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    shoes?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    upperWear?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    lowerWear?: InstanceType<typeof StringFilter>;
}

@ObjectType()
export class Sizes {
    @Field(() => String, {nullable:false})
    shoes!: string;
    @Field(() => String, {nullable:false})
    upperWear!: string;
    @Field(() => String, {nullable:false})
    lowerWear!: string;
}

@ArgsType()
export class CreateManyStoryArgs {
    @Field(() => [StoryCreateManyInput], {nullable:false})
    @Type(() => StoryCreateManyInput)
    data!: Array<StoryCreateManyInput>;
}

@ArgsType()
export class CreateOneStoryArgs {
    @Field(() => StoryCreateInput, {nullable:false})
    @Type(() => StoryCreateInput)
    data!: InstanceType<typeof StoryCreateInput>;
}

@ArgsType()
export class DeleteManyStoryArgs {
    @Field(() => StoryWhereInput, {nullable:true})
    @Type(() => StoryWhereInput)
    where?: InstanceType<typeof StoryWhereInput>;
}

@ArgsType()
export class DeleteOneStoryArgs {
    @Field(() => StoryWhereUniqueInput, {nullable:false})
    @Type(() => StoryWhereUniqueInput)
    where!: Prisma.AtLeast<StoryWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindFirstStoryOrThrowArgs {
    @Field(() => StoryWhereInput, {nullable:true})
    @Type(() => StoryWhereInput)
    where?: InstanceType<typeof StoryWhereInput>;
    @Field(() => [StoryOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<StoryOrderByWithRelationInput>;
    @Field(() => StoryWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<StoryWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [StoryScalarFieldEnum], {nullable:true})
    distinct?: Array<`${StoryScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstStoryArgs {
    @Field(() => StoryWhereInput, {nullable:true})
    @Type(() => StoryWhereInput)
    where?: InstanceType<typeof StoryWhereInput>;
    @Field(() => [StoryOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<StoryOrderByWithRelationInput>;
    @Field(() => StoryWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<StoryWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [StoryScalarFieldEnum], {nullable:true})
    distinct?: Array<`${StoryScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyStoryArgs {
    @Field(() => StoryWhereInput, {nullable:true})
    @Type(() => StoryWhereInput)
    where?: InstanceType<typeof StoryWhereInput>;
    @Field(() => [StoryOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<StoryOrderByWithRelationInput>;
    @Field(() => StoryWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<StoryWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [StoryScalarFieldEnum], {nullable:true})
    distinct?: Array<`${StoryScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniqueStoryOrThrowArgs {
    @Field(() => StoryWhereUniqueInput, {nullable:false})
    @Type(() => StoryWhereUniqueInput)
    where!: Prisma.AtLeast<StoryWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindUniqueStoryArgs {
    @Field(() => StoryWhereUniqueInput, {nullable:false})
    @Type(() => StoryWhereUniqueInput)
    where!: Prisma.AtLeast<StoryWhereUniqueInput, 'id'>;
}

@ArgsType()
export class StoryAggregateArgs {
    @Field(() => StoryWhereInput, {nullable:true})
    @Type(() => StoryWhereInput)
    where?: InstanceType<typeof StoryWhereInput>;
    @Field(() => [StoryOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<StoryOrderByWithRelationInput>;
    @Field(() => StoryWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<StoryWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class StoryAvgOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    viewCount?: `${SortOrder}`;
}

@InputType()
export class StoryCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    content?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    caption?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    backgroundColor?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    viewCount?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    eduInstituteId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    expiresAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    archived?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class StoryCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => StoryMediaCreateEnvelopeInput, {nullable:false})
    media!: InstanceType<typeof StoryMediaCreateEnvelopeInput>;
    @Field(() => StoryType, {nullable:false})
    type!: `${StoryType}`;
    @Field(() => GraphQLJSON, {nullable:true})
    content?: any;
    @Field(() => String, {nullable:true})
    caption?: string;
    @Field(() => String, {nullable:true})
    backgroundColor?: string;
    @Field(() => Int, {nullable:true})
    viewCount?: number;
    @Field(() => String, {nullable:false})
    eduInstituteId!: string;
    @Field(() => Date, {nullable:false})
    expiresAt!: Date | string;
    @Field(() => Boolean, {nullable:true})
    archived?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class StoryCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => StoryMediaCreateEnvelopeInput, {nullable:false})
    media!: InstanceType<typeof StoryMediaCreateEnvelopeInput>;
    @Field(() => StoryType, {nullable:false})
    type!: `${StoryType}`;
    @Field(() => GraphQLJSON, {nullable:true})
    content?: any;
    @Field(() => String, {nullable:true})
    caption?: string;
    @Field(() => String, {nullable:true})
    backgroundColor?: string;
    @Field(() => Int, {nullable:true})
    viewCount?: number;
    @Field(() => String, {nullable:false})
    eduInstituteId!: string;
    @Field(() => Date, {nullable:false})
    expiresAt!: Date | string;
    @Field(() => Boolean, {nullable:true})
    archived?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@ArgsType()
export class StoryGroupByArgs {
    @Field(() => StoryWhereInput, {nullable:true})
    @Type(() => StoryWhereInput)
    where?: InstanceType<typeof StoryWhereInput>;
    @Field(() => [StoryOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<StoryOrderByWithAggregationInput>;
    @Field(() => [StoryScalarFieldEnum], {nullable:false})
    by!: Array<`${StoryScalarFieldEnum}`>;
    @Field(() => StoryScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof StoryScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class StoryMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    caption?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    backgroundColor?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    viewCount?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    eduInstituteId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    expiresAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    archived?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class StoryMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    caption?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    backgroundColor?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    viewCount?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    eduInstituteId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    expiresAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    archived?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class StoryOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    content?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    caption?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    backgroundColor?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    viewCount?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    eduInstituteId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    expiresAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    archived?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => StoryCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof StoryCountOrderByAggregateInput>;
    @Field(() => StoryAvgOrderByAggregateInput, {nullable:true})
    _avg?: InstanceType<typeof StoryAvgOrderByAggregateInput>;
    @Field(() => StoryMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof StoryMaxOrderByAggregateInput>;
    @Field(() => StoryMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof StoryMinOrderByAggregateInput>;
    @Field(() => StorySumOrderByAggregateInput, {nullable:true})
    _sum?: InstanceType<typeof StorySumOrderByAggregateInput>;
}

@InputType()
export class StoryOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => StoryMediaOrderByInput, {nullable:true})
    media?: InstanceType<typeof StoryMediaOrderByInput>;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    content?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    caption?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    backgroundColor?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    viewCount?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    eduInstituteId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    expiresAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    archived?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class StoryScalarWhereWithAggregatesInput {
    @Field(() => [StoryScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<StoryScalarWhereWithAggregatesInput>;
    @Field(() => [StoryScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<StoryScalarWhereWithAggregatesInput>;
    @Field(() => [StoryScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<StoryScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    userId?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => EnumStoryTypeWithAggregatesFilter, {nullable:true})
    type?: InstanceType<typeof EnumStoryTypeWithAggregatesFilter>;
    @Field(() => JsonNullableWithAggregatesFilter, {nullable:true})
    content?: InstanceType<typeof JsonNullableWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    caption?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    backgroundColor?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => IntWithAggregatesFilter, {nullable:true})
    viewCount?: InstanceType<typeof IntWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    eduInstituteId?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    expiresAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => BoolWithAggregatesFilter, {nullable:true})
    archived?: InstanceType<typeof BoolWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
}

@InputType()
export class StorySumOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    viewCount?: `${SortOrder}`;
}

@InputType()
export class StoryUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => StoryMediaCreateEnvelopeInput, {nullable:false})
    media!: InstanceType<typeof StoryMediaCreateEnvelopeInput>;
    @Field(() => StoryType, {nullable:false})
    type!: `${StoryType}`;
    @Field(() => GraphQLJSON, {nullable:true})
    content?: any;
    @Field(() => String, {nullable:true})
    caption?: string;
    @Field(() => String, {nullable:true})
    backgroundColor?: string;
    @Field(() => Int, {nullable:true})
    viewCount?: number;
    @Field(() => String, {nullable:false})
    eduInstituteId!: string;
    @Field(() => Date, {nullable:false})
    expiresAt!: Date | string;
    @Field(() => Boolean, {nullable:true})
    archived?: boolean;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class StoryUncheckedUpdateManyInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StoryMediaUpdateEnvelopeInput, {nullable:true})
    media?: InstanceType<typeof StoryMediaUpdateEnvelopeInput>;
    @Field(() => EnumStoryTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumStoryTypeFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    content?: any;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    caption?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    backgroundColor?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    viewCount?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    eduInstituteId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    expiresAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    archived?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class StoryUncheckedUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StoryMediaUpdateEnvelopeInput, {nullable:true})
    media?: InstanceType<typeof StoryMediaUpdateEnvelopeInput>;
    @Field(() => EnumStoryTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumStoryTypeFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    content?: any;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    caption?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    backgroundColor?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    viewCount?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    eduInstituteId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    expiresAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    archived?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class StoryUpdateManyMutationInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StoryMediaUpdateEnvelopeInput, {nullable:true})
    media?: InstanceType<typeof StoryMediaUpdateEnvelopeInput>;
    @Field(() => EnumStoryTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumStoryTypeFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    content?: any;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    caption?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    backgroundColor?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    viewCount?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    eduInstituteId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    expiresAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    archived?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class StoryUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StoryMediaUpdateEnvelopeInput, {nullable:true})
    media?: InstanceType<typeof StoryMediaUpdateEnvelopeInput>;
    @Field(() => EnumStoryTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumStoryTypeFieldUpdateOperationsInput>;
    @Field(() => GraphQLJSON, {nullable:true})
    content?: any;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    caption?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    backgroundColor?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => IntFieldUpdateOperationsInput, {nullable:true})
    viewCount?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    eduInstituteId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    expiresAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    archived?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class StoryWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => [StoryWhereInput], {nullable:true})
    AND?: Array<StoryWhereInput>;
    @Field(() => [StoryWhereInput], {nullable:true})
    OR?: Array<StoryWhereInput>;
    @Field(() => [StoryWhereInput], {nullable:true})
    NOT?: Array<StoryWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    userId?: InstanceType<typeof StringFilter>;
    @Field(() => StoryMediaCompositeFilter, {nullable:true})
    media?: InstanceType<typeof StoryMediaCompositeFilter>;
    @Field(() => EnumStoryTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumStoryTypeFilter>;
    @Field(() => JsonNullableFilter, {nullable:true})
    content?: InstanceType<typeof JsonNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    caption?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    backgroundColor?: InstanceType<typeof StringNullableFilter>;
    @Field(() => IntFilter, {nullable:true})
    viewCount?: InstanceType<typeof IntFilter>;
    @Field(() => StringFilter, {nullable:true})
    eduInstituteId?: InstanceType<typeof StringFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    expiresAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => BoolFilter, {nullable:true})
    archived?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@InputType()
export class StoryWhereInput {
    @Field(() => [StoryWhereInput], {nullable:true})
    AND?: Array<StoryWhereInput>;
    @Field(() => [StoryWhereInput], {nullable:true})
    OR?: Array<StoryWhereInput>;
    @Field(() => [StoryWhereInput], {nullable:true})
    NOT?: Array<StoryWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    userId?: InstanceType<typeof StringFilter>;
    @Field(() => StoryMediaCompositeFilter, {nullable:true})
    media?: InstanceType<typeof StoryMediaCompositeFilter>;
    @Field(() => EnumStoryTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumStoryTypeFilter>;
    @Field(() => JsonNullableFilter, {nullable:true})
    content?: InstanceType<typeof JsonNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    caption?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    backgroundColor?: InstanceType<typeof StringNullableFilter>;
    @Field(() => IntFilter, {nullable:true})
    viewCount?: InstanceType<typeof IntFilter>;
    @Field(() => StringFilter, {nullable:true})
    eduInstituteId?: InstanceType<typeof StringFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    expiresAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => BoolFilter, {nullable:true})
    archived?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@ObjectType()
export class Story {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => StoryMedia, {nullable:false})
    media?: InstanceType<typeof StoryMedia>;
    @Field(() => StoryType, {nullable:false})
    type!: `${StoryType}`;
    @Field(() => GraphQLJSON, {nullable:true})
    content!: any | null;
    @Field(() => String, {nullable:true})
    caption!: string | null;
    @Field(() => String, {nullable:true})
    backgroundColor!: string | null;
    @Field(() => Int, {defaultValue:0,nullable:false})
    viewCount!: number;
    @Field(() => String, {nullable:false})
    eduInstituteId!: string;
    @Field(() => Date, {nullable:false})
    expiresAt!: Date;
    @Field(() => Boolean, {defaultValue:false,nullable:false})
    archived!: boolean;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
    @Field(() => Date, {nullable:false})
    updatedAt!: Date;
}

@ArgsType()
export class UpdateManyStoryArgs {
    @Field(() => StoryUpdateManyMutationInput, {nullable:false})
    @Type(() => StoryUpdateManyMutationInput)
    data!: InstanceType<typeof StoryUpdateManyMutationInput>;
    @Field(() => StoryWhereInput, {nullable:true})
    @Type(() => StoryWhereInput)
    where?: InstanceType<typeof StoryWhereInput>;
}

@ArgsType()
export class UpdateOneStoryArgs {
    @Field(() => StoryUpdateInput, {nullable:false})
    @Type(() => StoryUpdateInput)
    data!: InstanceType<typeof StoryUpdateInput>;
    @Field(() => StoryWhereUniqueInput, {nullable:false})
    @Type(() => StoryWhereUniqueInput)
    where!: Prisma.AtLeast<StoryWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpsertOneStoryArgs {
    @Field(() => StoryWhereUniqueInput, {nullable:false})
    @Type(() => StoryWhereUniqueInput)
    where!: Prisma.AtLeast<StoryWhereUniqueInput, 'id'>;
    @Field(() => StoryCreateInput, {nullable:false})
    @Type(() => StoryCreateInput)
    create!: InstanceType<typeof StoryCreateInput>;
    @Field(() => StoryUpdateInput, {nullable:false})
    @Type(() => StoryUpdateInput)
    update!: InstanceType<typeof StoryUpdateInput>;
}

@InputType()
export class StoryMediaCreateEnvelopeInput {
    @Field(() => StoryMediaCreateInput, {nullable:true})
    @Type(() => StoryMediaCreateInput)
    set?: InstanceType<typeof StoryMediaCreateInput>;
}

@InputType()
export class StoryMediaCreateInput {
    @Field(() => String, {nullable:false})
    url!: string;
    @Field(() => StoryType, {nullable:false})
    type!: `${StoryType}`;
    @Field(() => Int, {nullable:true})
    duration?: number;
    @Field(() => String, {nullable:true})
    thumbnail?: string;
}

@InputType()
export class StoryMediaOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    url?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    duration?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    thumbnail?: `${SortOrder}`;
}

@InputType()
export class StoryMediaUpdateEnvelopeInput {
    @Field(() => StoryMediaCreateInput, {nullable:true})
    @Type(() => StoryMediaCreateInput)
    set?: InstanceType<typeof StoryMediaCreateInput>;
    @Field(() => StoryMediaUpdateInput, {nullable:true})
    @Type(() => StoryMediaUpdateInput)
    update?: InstanceType<typeof StoryMediaUpdateInput>;
}

@InputType()
export class StoryMediaUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumStoryTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumStoryTypeFieldUpdateOperationsInput>;
    @Field(() => NullableIntFieldUpdateOperationsInput, {nullable:true})
    duration?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    thumbnail?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
}

@InputType()
export class StoryMediaWhereInput {
    @Field(() => [StoryMediaWhereInput], {nullable:true})
    AND?: Array<StoryMediaWhereInput>;
    @Field(() => [StoryMediaWhereInput], {nullable:true})
    OR?: Array<StoryMediaWhereInput>;
    @Field(() => [StoryMediaWhereInput], {nullable:true})
    NOT?: Array<StoryMediaWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    url?: InstanceType<typeof StringFilter>;
    @Field(() => EnumStoryTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumStoryTypeFilter>;
    @Field(() => IntNullableFilter, {nullable:true})
    duration?: InstanceType<typeof IntNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    thumbnail?: InstanceType<typeof StringNullableFilter>;
}

@ObjectType()
export class StoryMedia {
    @Field(() => String, {nullable:false})
    url!: string;
    @Field(() => StoryType, {nullable:false})
    type!: `${StoryType}`;
    @Field(() => Int, {nullable:true})
    duration!: number | null;
    @Field(() => String, {nullable:true})
    thumbnail!: string | null;
}

@ArgsType()
export class CreateManyStoryPayloadArgs {
    @Field(() => [StoryPayloadCreateManyInput], {nullable:false})
    @Type(() => StoryPayloadCreateManyInput)
    data!: Array<StoryPayloadCreateManyInput>;
}

@ArgsType()
export class CreateOneStoryPayloadArgs {
    @Field(() => StoryPayloadCreateInput, {nullable:false})
    @Type(() => StoryPayloadCreateInput)
    data!: InstanceType<typeof StoryPayloadCreateInput>;
}

@ArgsType()
export class DeleteManyStoryPayloadArgs {
    @Field(() => StoryPayloadWhereInput, {nullable:true})
    @Type(() => StoryPayloadWhereInput)
    where?: InstanceType<typeof StoryPayloadWhereInput>;
}

@ArgsType()
export class DeleteOneStoryPayloadArgs {
    @Field(() => StoryPayloadWhereUniqueInput, {nullable:false})
    @Type(() => StoryPayloadWhereUniqueInput)
    where!: Prisma.AtLeast<StoryPayloadWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindFirstStoryPayloadOrThrowArgs {
    @Field(() => StoryPayloadWhereInput, {nullable:true})
    @Type(() => StoryPayloadWhereInput)
    where?: InstanceType<typeof StoryPayloadWhereInput>;
    @Field(() => [StoryPayloadOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<StoryPayloadOrderByWithRelationInput>;
    @Field(() => StoryPayloadWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<StoryPayloadWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [StoryPayloadScalarFieldEnum], {nullable:true})
    distinct?: Array<`${StoryPayloadScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstStoryPayloadArgs {
    @Field(() => StoryPayloadWhereInput, {nullable:true})
    @Type(() => StoryPayloadWhereInput)
    where?: InstanceType<typeof StoryPayloadWhereInput>;
    @Field(() => [StoryPayloadOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<StoryPayloadOrderByWithRelationInput>;
    @Field(() => StoryPayloadWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<StoryPayloadWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [StoryPayloadScalarFieldEnum], {nullable:true})
    distinct?: Array<`${StoryPayloadScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyStoryPayloadArgs {
    @Field(() => StoryPayloadWhereInput, {nullable:true})
    @Type(() => StoryPayloadWhereInput)
    where?: InstanceType<typeof StoryPayloadWhereInput>;
    @Field(() => [StoryPayloadOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<StoryPayloadOrderByWithRelationInput>;
    @Field(() => StoryPayloadWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<StoryPayloadWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [StoryPayloadScalarFieldEnum], {nullable:true})
    distinct?: Array<`${StoryPayloadScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniqueStoryPayloadOrThrowArgs {
    @Field(() => StoryPayloadWhereUniqueInput, {nullable:false})
    @Type(() => StoryPayloadWhereUniqueInput)
    where!: Prisma.AtLeast<StoryPayloadWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindUniqueStoryPayloadArgs {
    @Field(() => StoryPayloadWhereUniqueInput, {nullable:false})
    @Type(() => StoryPayloadWhereUniqueInput)
    where!: Prisma.AtLeast<StoryPayloadWhereUniqueInput, 'id'>;
}

@ArgsType()
export class StoryPayloadAggregateArgs {
    @Field(() => StoryPayloadWhereInput, {nullable:true})
    @Type(() => StoryPayloadWhereInput)
    where?: InstanceType<typeof StoryPayloadWhereInput>;
    @Field(() => [StoryPayloadOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<StoryPayloadOrderByWithRelationInput>;
    @Field(() => StoryPayloadWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<StoryPayloadWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class StoryPayloadCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
}

@InputType()
export class StoryPayloadCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => StoryProductPayloadCreateEnvelopeInput, {nullable:false})
    photo!: InstanceType<typeof StoryProductPayloadCreateEnvelopeInput>;
    @Field(() => ImageStoryPayloadCreateEnvelopeInput, {nullable:false})
    image!: InstanceType<typeof ImageStoryPayloadCreateEnvelopeInput>;
}

@InputType()
export class StoryPayloadCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => StoryProductPayloadCreateEnvelopeInput, {nullable:false})
    photo!: InstanceType<typeof StoryProductPayloadCreateEnvelopeInput>;
    @Field(() => ImageStoryPayloadCreateEnvelopeInput, {nullable:false})
    image!: InstanceType<typeof ImageStoryPayloadCreateEnvelopeInput>;
}

@ArgsType()
export class StoryPayloadGroupByArgs {
    @Field(() => StoryPayloadWhereInput, {nullable:true})
    @Type(() => StoryPayloadWhereInput)
    where?: InstanceType<typeof StoryPayloadWhereInput>;
    @Field(() => [StoryPayloadOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<StoryPayloadOrderByWithAggregationInput>;
    @Field(() => [StoryPayloadScalarFieldEnum], {nullable:false})
    by!: Array<`${StoryPayloadScalarFieldEnum}`>;
    @Field(() => StoryPayloadScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof StoryPayloadScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class StoryPayloadMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
}

@InputType()
export class StoryPayloadMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
}

@InputType()
export class StoryPayloadOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => StoryPayloadCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof StoryPayloadCountOrderByAggregateInput>;
    @Field(() => StoryPayloadMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof StoryPayloadMaxOrderByAggregateInput>;
    @Field(() => StoryPayloadMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof StoryPayloadMinOrderByAggregateInput>;
}

@InputType()
export class StoryPayloadOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => StoryProductPayloadOrderByInput, {nullable:true})
    photo?: InstanceType<typeof StoryProductPayloadOrderByInput>;
    @Field(() => ImageStoryPayloadOrderByInput, {nullable:true})
    image?: InstanceType<typeof ImageStoryPayloadOrderByInput>;
}

@InputType()
export class StoryPayloadScalarWhereWithAggregatesInput {
    @Field(() => [StoryPayloadScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<StoryPayloadScalarWhereWithAggregatesInput>;
    @Field(() => [StoryPayloadScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<StoryPayloadScalarWhereWithAggregatesInput>;
    @Field(() => [StoryPayloadScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<StoryPayloadScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
}

@InputType()
export class StoryPayloadUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => StoryProductPayloadCreateEnvelopeInput, {nullable:false})
    photo!: InstanceType<typeof StoryProductPayloadCreateEnvelopeInput>;
    @Field(() => ImageStoryPayloadCreateEnvelopeInput, {nullable:false})
    image!: InstanceType<typeof ImageStoryPayloadCreateEnvelopeInput>;
}

@InputType()
export class StoryPayloadUncheckedUpdateManyInput {
    @Field(() => StoryProductPayloadUpdateEnvelopeInput, {nullable:true})
    photo?: InstanceType<typeof StoryProductPayloadUpdateEnvelopeInput>;
    @Field(() => ImageStoryPayloadUpdateEnvelopeInput, {nullable:true})
    image?: InstanceType<typeof ImageStoryPayloadUpdateEnvelopeInput>;
}

@InputType()
export class StoryPayloadUncheckedUpdateInput {
    @Field(() => StoryProductPayloadUpdateEnvelopeInput, {nullable:true})
    photo?: InstanceType<typeof StoryProductPayloadUpdateEnvelopeInput>;
    @Field(() => ImageStoryPayloadUpdateEnvelopeInput, {nullable:true})
    image?: InstanceType<typeof ImageStoryPayloadUpdateEnvelopeInput>;
}

@InputType()
export class StoryPayloadUpdateManyMutationInput {
    @Field(() => StoryProductPayloadUpdateEnvelopeInput, {nullable:true})
    photo?: InstanceType<typeof StoryProductPayloadUpdateEnvelopeInput>;
    @Field(() => ImageStoryPayloadUpdateEnvelopeInput, {nullable:true})
    image?: InstanceType<typeof ImageStoryPayloadUpdateEnvelopeInput>;
}

@InputType()
export class StoryPayloadUpdateInput {
    @Field(() => StoryProductPayloadUpdateEnvelopeInput, {nullable:true})
    photo?: InstanceType<typeof StoryProductPayloadUpdateEnvelopeInput>;
    @Field(() => ImageStoryPayloadUpdateEnvelopeInput, {nullable:true})
    image?: InstanceType<typeof ImageStoryPayloadUpdateEnvelopeInput>;
}

@InputType()
export class StoryPayloadWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => [StoryPayloadWhereInput], {nullable:true})
    AND?: Array<StoryPayloadWhereInput>;
    @Field(() => [StoryPayloadWhereInput], {nullable:true})
    OR?: Array<StoryPayloadWhereInput>;
    @Field(() => [StoryPayloadWhereInput], {nullable:true})
    NOT?: Array<StoryPayloadWhereInput>;
    @Field(() => StoryProductPayloadCompositeFilter, {nullable:true})
    photo?: InstanceType<typeof StoryProductPayloadCompositeFilter>;
    @Field(() => ImageStoryPayloadCompositeFilter, {nullable:true})
    image?: InstanceType<typeof ImageStoryPayloadCompositeFilter>;
}

@InputType()
export class StoryPayloadWhereInput {
    @Field(() => [StoryPayloadWhereInput], {nullable:true})
    AND?: Array<StoryPayloadWhereInput>;
    @Field(() => [StoryPayloadWhereInput], {nullable:true})
    OR?: Array<StoryPayloadWhereInput>;
    @Field(() => [StoryPayloadWhereInput], {nullable:true})
    NOT?: Array<StoryPayloadWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StoryProductPayloadCompositeFilter, {nullable:true})
    photo?: InstanceType<typeof StoryProductPayloadCompositeFilter>;
    @Field(() => ImageStoryPayloadCompositeFilter, {nullable:true})
    image?: InstanceType<typeof ImageStoryPayloadCompositeFilter>;
}

@ObjectType()
export class StoryPayload {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => StoryProductPayload, {nullable:false})
    photo?: InstanceType<typeof StoryProductPayload>;
    @Field(() => ImageStoryPayload, {nullable:false})
    image?: InstanceType<typeof ImageStoryPayload>;
}

@ArgsType()
export class UpdateManyStoryPayloadArgs {
    @Field(() => StoryPayloadUpdateManyMutationInput, {nullable:false})
    @Type(() => StoryPayloadUpdateManyMutationInput)
    data!: InstanceType<typeof StoryPayloadUpdateManyMutationInput>;
    @Field(() => StoryPayloadWhereInput, {nullable:true})
    @Type(() => StoryPayloadWhereInput)
    where?: InstanceType<typeof StoryPayloadWhereInput>;
}

@ArgsType()
export class UpdateOneStoryPayloadArgs {
    @Field(() => StoryPayloadUpdateInput, {nullable:false})
    @Type(() => StoryPayloadUpdateInput)
    data!: InstanceType<typeof StoryPayloadUpdateInput>;
    @Field(() => StoryPayloadWhereUniqueInput, {nullable:false})
    @Type(() => StoryPayloadWhereUniqueInput)
    where!: Prisma.AtLeast<StoryPayloadWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpsertOneStoryPayloadArgs {
    @Field(() => StoryPayloadWhereUniqueInput, {nullable:false})
    @Type(() => StoryPayloadWhereUniqueInput)
    where!: Prisma.AtLeast<StoryPayloadWhereUniqueInput, 'id'>;
    @Field(() => StoryPayloadCreateInput, {nullable:false})
    @Type(() => StoryPayloadCreateInput)
    create!: InstanceType<typeof StoryPayloadCreateInput>;
    @Field(() => StoryPayloadUpdateInput, {nullable:false})
    @Type(() => StoryPayloadUpdateInput)
    update!: InstanceType<typeof StoryPayloadUpdateInput>;
}

@InputType()
export class StoryProductPayloadCreateEnvelopeInput {
    @Field(() => StoryProductPayloadCreateInput, {nullable:true})
    @Type(() => StoryProductPayloadCreateInput)
    set?: InstanceType<typeof StoryProductPayloadCreateInput>;
}

@InputType()
export class StoryProductPayloadCreateInput {
    @Field(() => String, {nullable:false})
    productId!: string;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => String, {nullable:true})
    fontColor?: string;
    @Field(() => String, {nullable:true})
    textPosX?: string;
    @Field(() => String, {nullable:true})
    textPosY?: string;
    @Field(() => String, {nullable:true})
    textHexCode?: string;
}

@InputType()
export class StoryProductPayloadOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    productId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    title?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    image?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    fontColor?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    textPosX?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    textPosY?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    textHexCode?: `${SortOrder}`;
}

@InputType()
export class StoryProductPayloadUpdateEnvelopeInput {
    @Field(() => StoryProductPayloadCreateInput, {nullable:true})
    @Type(() => StoryProductPayloadCreateInput)
    set?: InstanceType<typeof StoryProductPayloadCreateInput>;
    @Field(() => StoryProductPayloadUpdateInput, {nullable:true})
    @Type(() => StoryProductPayloadUpdateInput)
    update?: InstanceType<typeof StoryProductPayloadUpdateInput>;
}

@InputType()
export class StoryProductPayloadUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    productId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    image?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    fontColor?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    textPosX?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    textPosY?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    textHexCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
}

@InputType()
export class StoryProductPayloadWhereInput {
    @Field(() => [StoryProductPayloadWhereInput], {nullable:true})
    AND?: Array<StoryProductPayloadWhereInput>;
    @Field(() => [StoryProductPayloadWhereInput], {nullable:true})
    OR?: Array<StoryProductPayloadWhereInput>;
    @Field(() => [StoryProductPayloadWhereInput], {nullable:true})
    NOT?: Array<StoryProductPayloadWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    productId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    title?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    image?: InstanceType<typeof StringFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    fontColor?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    textPosX?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    textPosY?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    textHexCode?: InstanceType<typeof StringNullableFilter>;
}

@ObjectType()
export class StoryProductPayload {
    @Field(() => String, {nullable:false})
    productId!: string;
    @Field(() => String, {nullable:false})
    title!: string;
    @Field(() => String, {nullable:false})
    image!: string;
    @Field(() => String, {nullable:true})
    fontColor!: string | null;
    @Field(() => String, {nullable:true})
    textPosX!: string | null;
    @Field(() => String, {nullable:true})
    textPosY!: string | null;
    @Field(() => String, {nullable:true})
    textHexCode!: string | null;
}

@ArgsType()
export class CreateManyStoryReactionArgs {
    @Field(() => [StoryReactionCreateManyInput], {nullable:false})
    @Type(() => StoryReactionCreateManyInput)
    data!: Array<StoryReactionCreateManyInput>;
}

@ArgsType()
export class CreateOneStoryReactionArgs {
    @Field(() => StoryReactionCreateInput, {nullable:false})
    @Type(() => StoryReactionCreateInput)
    data!: InstanceType<typeof StoryReactionCreateInput>;
}

@ArgsType()
export class DeleteManyStoryReactionArgs {
    @Field(() => StoryReactionWhereInput, {nullable:true})
    @Type(() => StoryReactionWhereInput)
    where?: InstanceType<typeof StoryReactionWhereInput>;
}

@ArgsType()
export class DeleteOneStoryReactionArgs {
    @Field(() => StoryReactionWhereUniqueInput, {nullable:false})
    @Type(() => StoryReactionWhereUniqueInput)
    where!: Prisma.AtLeast<StoryReactionWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindFirstStoryReactionOrThrowArgs {
    @Field(() => StoryReactionWhereInput, {nullable:true})
    @Type(() => StoryReactionWhereInput)
    where?: InstanceType<typeof StoryReactionWhereInput>;
    @Field(() => [StoryReactionOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<StoryReactionOrderByWithRelationInput>;
    @Field(() => StoryReactionWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<StoryReactionWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [StoryReactionScalarFieldEnum], {nullable:true})
    distinct?: Array<`${StoryReactionScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstStoryReactionArgs {
    @Field(() => StoryReactionWhereInput, {nullable:true})
    @Type(() => StoryReactionWhereInput)
    where?: InstanceType<typeof StoryReactionWhereInput>;
    @Field(() => [StoryReactionOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<StoryReactionOrderByWithRelationInput>;
    @Field(() => StoryReactionWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<StoryReactionWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [StoryReactionScalarFieldEnum], {nullable:true})
    distinct?: Array<`${StoryReactionScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyStoryReactionArgs {
    @Field(() => StoryReactionWhereInput, {nullable:true})
    @Type(() => StoryReactionWhereInput)
    where?: InstanceType<typeof StoryReactionWhereInput>;
    @Field(() => [StoryReactionOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<StoryReactionOrderByWithRelationInput>;
    @Field(() => StoryReactionWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<StoryReactionWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [StoryReactionScalarFieldEnum], {nullable:true})
    distinct?: Array<`${StoryReactionScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniqueStoryReactionOrThrowArgs {
    @Field(() => StoryReactionWhereUniqueInput, {nullable:false})
    @Type(() => StoryReactionWhereUniqueInput)
    where!: Prisma.AtLeast<StoryReactionWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindUniqueStoryReactionArgs {
    @Field(() => StoryReactionWhereUniqueInput, {nullable:false})
    @Type(() => StoryReactionWhereUniqueInput)
    where!: Prisma.AtLeast<StoryReactionWhereUniqueInput, 'id'>;
}

@ArgsType()
export class StoryReactionAggregateArgs {
    @Field(() => StoryReactionWhereInput, {nullable:true})
    @Type(() => StoryReactionWhereInput)
    where?: InstanceType<typeof StoryReactionWhereInput>;
    @Field(() => [StoryReactionOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<StoryReactionOrderByWithRelationInput>;
    @Field(() => StoryReactionWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<StoryReactionWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class StoryReactionCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    storyId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    previousReactionId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    removedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
}

@InputType()
export class StoryReactionCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    storyId!: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => ReactionType, {nullable:false})
    type!: `${ReactionType}`;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => String, {nullable:true})
    previousReactionId?: string;
    @Field(() => Date, {nullable:true})
    removedAt?: Date | string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
}

@InputType()
export class StoryReactionCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    storyId!: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => ReactionType, {nullable:false})
    type!: `${ReactionType}`;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => String, {nullable:true})
    previousReactionId?: string;
    @Field(() => Date, {nullable:true})
    removedAt?: Date | string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
}

@ArgsType()
export class StoryReactionGroupByArgs {
    @Field(() => StoryReactionWhereInput, {nullable:true})
    @Type(() => StoryReactionWhereInput)
    where?: InstanceType<typeof StoryReactionWhereInput>;
    @Field(() => [StoryReactionOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<StoryReactionOrderByWithAggregationInput>;
    @Field(() => [StoryReactionScalarFieldEnum], {nullable:false})
    by!: Array<`${StoryReactionScalarFieldEnum}`>;
    @Field(() => StoryReactionScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof StoryReactionScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class StoryReactionMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    storyId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    previousReactionId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    removedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
}

@InputType()
export class StoryReactionMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    storyId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    previousReactionId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    removedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
}

@InputType()
export class StoryReactionOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    storyId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    previousReactionId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    removedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => StoryReactionCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof StoryReactionCountOrderByAggregateInput>;
    @Field(() => StoryReactionMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof StoryReactionMaxOrderByAggregateInput>;
    @Field(() => StoryReactionMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof StoryReactionMinOrderByAggregateInput>;
}

@InputType()
export class StoryReactionOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    storyId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    previousReactionId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    removedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
}

@InputType()
export class StoryReactionScalarWhereWithAggregatesInput {
    @Field(() => [StoryReactionScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<StoryReactionScalarWhereWithAggregatesInput>;
    @Field(() => [StoryReactionScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<StoryReactionScalarWhereWithAggregatesInput>;
    @Field(() => [StoryReactionScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<StoryReactionScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    storyId?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    userId?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => EnumReactionTypeWithAggregatesFilter, {nullable:true})
    type?: InstanceType<typeof EnumReactionTypeWithAggregatesFilter>;
    @Field(() => BoolWithAggregatesFilter, {nullable:true})
    active?: InstanceType<typeof BoolWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    previousReactionId?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => DateTimeNullableWithAggregatesFilter, {nullable:true})
    removedAt?: InstanceType<typeof DateTimeNullableWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
}

@InputType()
export class StoryReactionUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    storyId!: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => ReactionType, {nullable:false})
    type!: `${ReactionType}`;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => String, {nullable:true})
    previousReactionId?: string;
    @Field(() => Date, {nullable:true})
    removedAt?: Date | string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
}

@InputType()
export class StoryReactionUncheckedUpdateManyInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    storyId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumReactionTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumReactionTypeFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    previousReactionId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableDateTimeFieldUpdateOperationsInput, {nullable:true})
    removedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class StoryReactionUncheckedUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    storyId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumReactionTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumReactionTypeFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    previousReactionId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableDateTimeFieldUpdateOperationsInput, {nullable:true})
    removedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class StoryReactionUpdateManyMutationInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    storyId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumReactionTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumReactionTypeFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    previousReactionId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableDateTimeFieldUpdateOperationsInput, {nullable:true})
    removedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class StoryReactionUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    storyId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumReactionTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumReactionTypeFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    previousReactionId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableDateTimeFieldUpdateOperationsInput, {nullable:true})
    removedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class StoryReactionWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => [StoryReactionWhereInput], {nullable:true})
    AND?: Array<StoryReactionWhereInput>;
    @Field(() => [StoryReactionWhereInput], {nullable:true})
    OR?: Array<StoryReactionWhereInput>;
    @Field(() => [StoryReactionWhereInput], {nullable:true})
    NOT?: Array<StoryReactionWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    storyId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    userId?: InstanceType<typeof StringFilter>;
    @Field(() => EnumReactionTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumReactionTypeFilter>;
    @Field(() => BoolFilter, {nullable:true})
    active?: InstanceType<typeof BoolFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    previousReactionId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => DateTimeNullableFilter, {nullable:true})
    removedAt?: InstanceType<typeof DateTimeNullableFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
}

@InputType()
export class StoryReactionWhereInput {
    @Field(() => [StoryReactionWhereInput], {nullable:true})
    AND?: Array<StoryReactionWhereInput>;
    @Field(() => [StoryReactionWhereInput], {nullable:true})
    OR?: Array<StoryReactionWhereInput>;
    @Field(() => [StoryReactionWhereInput], {nullable:true})
    NOT?: Array<StoryReactionWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    storyId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    userId?: InstanceType<typeof StringFilter>;
    @Field(() => EnumReactionTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumReactionTypeFilter>;
    @Field(() => BoolFilter, {nullable:true})
    active?: InstanceType<typeof BoolFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    previousReactionId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => DateTimeNullableFilter, {nullable:true})
    removedAt?: InstanceType<typeof DateTimeNullableFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
}

@ObjectType()
export class StoryReaction {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    storyId!: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => ReactionType, {nullable:false})
    type!: `${ReactionType}`;
    @Field(() => Boolean, {defaultValue:true,nullable:false})
    active!: boolean;
    @Field(() => String, {nullable:true})
    previousReactionId!: string | null;
    @Field(() => Date, {nullable:true})
    removedAt!: Date | null;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
}

@ArgsType()
export class UpdateManyStoryReactionArgs {
    @Field(() => StoryReactionUpdateManyMutationInput, {nullable:false})
    @Type(() => StoryReactionUpdateManyMutationInput)
    data!: InstanceType<typeof StoryReactionUpdateManyMutationInput>;
    @Field(() => StoryReactionWhereInput, {nullable:true})
    @Type(() => StoryReactionWhereInput)
    where?: InstanceType<typeof StoryReactionWhereInput>;
}

@ArgsType()
export class UpdateOneStoryReactionArgs {
    @Field(() => StoryReactionUpdateInput, {nullable:false})
    @Type(() => StoryReactionUpdateInput)
    data!: InstanceType<typeof StoryReactionUpdateInput>;
    @Field(() => StoryReactionWhereUniqueInput, {nullable:false})
    @Type(() => StoryReactionWhereUniqueInput)
    where!: Prisma.AtLeast<StoryReactionWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpsertOneStoryReactionArgs {
    @Field(() => StoryReactionWhereUniqueInput, {nullable:false})
    @Type(() => StoryReactionWhereUniqueInput)
    where!: Prisma.AtLeast<StoryReactionWhereUniqueInput, 'id'>;
    @Field(() => StoryReactionCreateInput, {nullable:false})
    @Type(() => StoryReactionCreateInput)
    create!: InstanceType<typeof StoryReactionCreateInput>;
    @Field(() => StoryReactionUpdateInput, {nullable:false})
    @Type(() => StoryReactionUpdateInput)
    update!: InstanceType<typeof StoryReactionUpdateInput>;
}

@ArgsType()
export class CreateManyStoryViewArgs {
    @Field(() => [StoryViewCreateManyInput], {nullable:false})
    @Type(() => StoryViewCreateManyInput)
    data!: Array<StoryViewCreateManyInput>;
}

@ArgsType()
export class CreateOneStoryViewArgs {
    @Field(() => StoryViewCreateInput, {nullable:false})
    @Type(() => StoryViewCreateInput)
    data!: InstanceType<typeof StoryViewCreateInput>;
}

@ArgsType()
export class DeleteManyStoryViewArgs {
    @Field(() => StoryViewWhereInput, {nullable:true})
    @Type(() => StoryViewWhereInput)
    where?: InstanceType<typeof StoryViewWhereInput>;
}

@ArgsType()
export class DeleteOneStoryViewArgs {
    @Field(() => StoryViewWhereUniqueInput, {nullable:false})
    @Type(() => StoryViewWhereUniqueInput)
    where!: Prisma.AtLeast<StoryViewWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindFirstStoryViewOrThrowArgs {
    @Field(() => StoryViewWhereInput, {nullable:true})
    @Type(() => StoryViewWhereInput)
    where?: InstanceType<typeof StoryViewWhereInput>;
    @Field(() => [StoryViewOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<StoryViewOrderByWithRelationInput>;
    @Field(() => StoryViewWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<StoryViewWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [StoryViewScalarFieldEnum], {nullable:true})
    distinct?: Array<`${StoryViewScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstStoryViewArgs {
    @Field(() => StoryViewWhereInput, {nullable:true})
    @Type(() => StoryViewWhereInput)
    where?: InstanceType<typeof StoryViewWhereInput>;
    @Field(() => [StoryViewOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<StoryViewOrderByWithRelationInput>;
    @Field(() => StoryViewWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<StoryViewWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [StoryViewScalarFieldEnum], {nullable:true})
    distinct?: Array<`${StoryViewScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyStoryViewArgs {
    @Field(() => StoryViewWhereInput, {nullable:true})
    @Type(() => StoryViewWhereInput)
    where?: InstanceType<typeof StoryViewWhereInput>;
    @Field(() => [StoryViewOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<StoryViewOrderByWithRelationInput>;
    @Field(() => StoryViewWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<StoryViewWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [StoryViewScalarFieldEnum], {nullable:true})
    distinct?: Array<`${StoryViewScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniqueStoryViewOrThrowArgs {
    @Field(() => StoryViewWhereUniqueInput, {nullable:false})
    @Type(() => StoryViewWhereUniqueInput)
    where!: Prisma.AtLeast<StoryViewWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindUniqueStoryViewArgs {
    @Field(() => StoryViewWhereUniqueInput, {nullable:false})
    @Type(() => StoryViewWhereUniqueInput)
    where!: Prisma.AtLeast<StoryViewWhereUniqueInput, 'id'>;
}

@ArgsType()
export class StoryViewAggregateArgs {
    @Field(() => StoryViewWhereInput, {nullable:true})
    @Type(() => StoryViewWhereInput)
    where?: InstanceType<typeof StoryViewWhereInput>;
    @Field(() => [StoryViewOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<StoryViewOrderByWithRelationInput>;
    @Field(() => StoryViewWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<StoryViewWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class StoryViewCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    storyId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
}

@InputType()
export class StoryViewCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    storyId!: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
}

@InputType()
export class StoryViewCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    storyId!: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
}

@ArgsType()
export class StoryViewGroupByArgs {
    @Field(() => StoryViewWhereInput, {nullable:true})
    @Type(() => StoryViewWhereInput)
    where?: InstanceType<typeof StoryViewWhereInput>;
    @Field(() => [StoryViewOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<StoryViewOrderByWithAggregationInput>;
    @Field(() => [StoryViewScalarFieldEnum], {nullable:false})
    by!: Array<`${StoryViewScalarFieldEnum}`>;
    @Field(() => StoryViewScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof StoryViewScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class StoryViewMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    storyId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
}

@InputType()
export class StoryViewMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    storyId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
}

@InputType()
export class StoryViewOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    storyId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => StoryViewCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof StoryViewCountOrderByAggregateInput>;
    @Field(() => StoryViewMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof StoryViewMaxOrderByAggregateInput>;
    @Field(() => StoryViewMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof StoryViewMinOrderByAggregateInput>;
}

@InputType()
export class StoryViewOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    storyId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
}

@InputType()
export class StoryViewScalarWhereWithAggregatesInput {
    @Field(() => [StoryViewScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<StoryViewScalarWhereWithAggregatesInput>;
    @Field(() => [StoryViewScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<StoryViewScalarWhereWithAggregatesInput>;
    @Field(() => [StoryViewScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<StoryViewScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    storyId?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    userId?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
}

@InputType()
export class StoryViewUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    storyId!: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
}

@InputType()
export class StoryViewUncheckedUpdateManyInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    storyId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class StoryViewUncheckedUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    storyId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class StoryViewUpdateManyMutationInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    storyId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class StoryViewUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    storyId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class StoryViewWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => [StoryViewWhereInput], {nullable:true})
    AND?: Array<StoryViewWhereInput>;
    @Field(() => [StoryViewWhereInput], {nullable:true})
    OR?: Array<StoryViewWhereInput>;
    @Field(() => [StoryViewWhereInput], {nullable:true})
    NOT?: Array<StoryViewWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    storyId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    userId?: InstanceType<typeof StringFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
}

@InputType()
export class StoryViewWhereInput {
    @Field(() => [StoryViewWhereInput], {nullable:true})
    AND?: Array<StoryViewWhereInput>;
    @Field(() => [StoryViewWhereInput], {nullable:true})
    OR?: Array<StoryViewWhereInput>;
    @Field(() => [StoryViewWhereInput], {nullable:true})
    NOT?: Array<StoryViewWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    storyId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    userId?: InstanceType<typeof StringFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
}

@ObjectType()
export class StoryView {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    storyId!: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
}

@ArgsType()
export class UpdateManyStoryViewArgs {
    @Field(() => StoryViewUpdateManyMutationInput, {nullable:false})
    @Type(() => StoryViewUpdateManyMutationInput)
    data!: InstanceType<typeof StoryViewUpdateManyMutationInput>;
    @Field(() => StoryViewWhereInput, {nullable:true})
    @Type(() => StoryViewWhereInput)
    where?: InstanceType<typeof StoryViewWhereInput>;
}

@ArgsType()
export class UpdateOneStoryViewArgs {
    @Field(() => StoryViewUpdateInput, {nullable:false})
    @Type(() => StoryViewUpdateInput)
    data!: InstanceType<typeof StoryViewUpdateInput>;
    @Field(() => StoryViewWhereUniqueInput, {nullable:false})
    @Type(() => StoryViewWhereUniqueInput)
    where!: Prisma.AtLeast<StoryViewWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpsertOneStoryViewArgs {
    @Field(() => StoryViewWhereUniqueInput, {nullable:false})
    @Type(() => StoryViewWhereUniqueInput)
    where!: Prisma.AtLeast<StoryViewWhereUniqueInput, 'id'>;
    @Field(() => StoryViewCreateInput, {nullable:false})
    @Type(() => StoryViewCreateInput)
    create!: InstanceType<typeof StoryViewCreateInput>;
    @Field(() => StoryViewUpdateInput, {nullable:false})
    @Type(() => StoryViewUpdateInput)
    update!: InstanceType<typeof StoryViewUpdateInput>;
}

@InputType()
export class SupportMessageCreateInput {
    @Field(() => String, {nullable:false})
    id!: string;
    @Field(() => SupportTicketParticipant, {nullable:false})
    sender!: `${SupportTicketParticipant}`;
    @Field(() => String, {nullable:false})
    text!: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
}

@InputType()
export class SupportMessageOrderByCompositeAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    _count?: `${SortOrder}`;
}

@InputType()
export class SupportMessageUpdateManyInput {
    @Field(() => SupportMessageWhereInput, {nullable:false})
    @Type(() => SupportMessageWhereInput)
    where!: InstanceType<typeof SupportMessageWhereInput>;
    @Field(() => SupportMessageUpdateInput, {nullable:false})
    @Type(() => SupportMessageUpdateInput)
    data!: InstanceType<typeof SupportMessageUpdateInput>;
}

@InputType()
export class SupportMessageUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumSupportTicketParticipantFieldUpdateOperationsInput, {nullable:true})
    sender?: InstanceType<typeof EnumSupportTicketParticipantFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    text?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class SupportMessageWhereInput {
    @Field(() => [SupportMessageWhereInput], {nullable:true})
    AND?: Array<SupportMessageWhereInput>;
    @Field(() => [SupportMessageWhereInput], {nullable:true})
    OR?: Array<SupportMessageWhereInput>;
    @Field(() => [SupportMessageWhereInput], {nullable:true})
    NOT?: Array<SupportMessageWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => EnumSupportTicketParticipantFilter, {nullable:true})
    sender?: InstanceType<typeof EnumSupportTicketParticipantFilter>;
    @Field(() => StringFilter, {nullable:true})
    text?: InstanceType<typeof StringFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
}

@ObjectType()
export class SupportMessage {
    @Field(() => String, {nullable:false})
    id!: string;
    @Field(() => SupportTicketParticipant, {nullable:false})
    sender!: `${SupportTicketParticipant}`;
    @Field(() => String, {nullable:false})
    text!: string;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
}

@ArgsType()
export class CreateManySupportRequestArgs {
    @Field(() => [SupportRequestCreateManyInput], {nullable:false})
    @Type(() => SupportRequestCreateManyInput)
    data!: Array<SupportRequestCreateManyInput>;
}

@ArgsType()
export class CreateOneSupportRequestArgs {
    @Field(() => SupportRequestCreateInput, {nullable:false})
    @Type(() => SupportRequestCreateInput)
    data!: InstanceType<typeof SupportRequestCreateInput>;
}

@ArgsType()
export class DeleteManySupportRequestArgs {
    @Field(() => SupportRequestWhereInput, {nullable:true})
    @Type(() => SupportRequestWhereInput)
    where?: InstanceType<typeof SupportRequestWhereInput>;
}

@ArgsType()
export class DeleteOneSupportRequestArgs {
    @Field(() => SupportRequestWhereUniqueInput, {nullable:false})
    @Type(() => SupportRequestWhereUniqueInput)
    where!: Prisma.AtLeast<SupportRequestWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindFirstSupportRequestOrThrowArgs {
    @Field(() => SupportRequestWhereInput, {nullable:true})
    @Type(() => SupportRequestWhereInput)
    where?: InstanceType<typeof SupportRequestWhereInput>;
    @Field(() => [SupportRequestOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<SupportRequestOrderByWithRelationInput>;
    @Field(() => SupportRequestWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<SupportRequestWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [SupportRequestScalarFieldEnum], {nullable:true})
    distinct?: Array<`${SupportRequestScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstSupportRequestArgs {
    @Field(() => SupportRequestWhereInput, {nullable:true})
    @Type(() => SupportRequestWhereInput)
    where?: InstanceType<typeof SupportRequestWhereInput>;
    @Field(() => [SupportRequestOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<SupportRequestOrderByWithRelationInput>;
    @Field(() => SupportRequestWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<SupportRequestWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [SupportRequestScalarFieldEnum], {nullable:true})
    distinct?: Array<`${SupportRequestScalarFieldEnum}`>;
}

@ArgsType()
export class FindManySupportRequestArgs {
    @Field(() => SupportRequestWhereInput, {nullable:true})
    @Type(() => SupportRequestWhereInput)
    where?: InstanceType<typeof SupportRequestWhereInput>;
    @Field(() => [SupportRequestOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<SupportRequestOrderByWithRelationInput>;
    @Field(() => SupportRequestWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<SupportRequestWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [SupportRequestScalarFieldEnum], {nullable:true})
    distinct?: Array<`${SupportRequestScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniqueSupportRequestOrThrowArgs {
    @Field(() => SupportRequestWhereUniqueInput, {nullable:false})
    @Type(() => SupportRequestWhereUniqueInput)
    where!: Prisma.AtLeast<SupportRequestWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindUniqueSupportRequestArgs {
    @Field(() => SupportRequestWhereUniqueInput, {nullable:false})
    @Type(() => SupportRequestWhereUniqueInput)
    where!: Prisma.AtLeast<SupportRequestWhereUniqueInput, 'id'>;
}

@ArgsType()
export class SupportRequestAggregateArgs {
    @Field(() => SupportRequestWhereInput, {nullable:true})
    @Type(() => SupportRequestWhereInput)
    where?: InstanceType<typeof SupportRequestWhereInput>;
    @Field(() => [SupportRequestOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<SupportRequestOrderByWithRelationInput>;
    @Field(() => SupportRequestWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<SupportRequestWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class SupportRequestCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    ticketId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    email?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    message?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    status?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class SupportRequestCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => String, {nullable:false})
    ticketId!: string;
    @Field(() => String, {nullable:false})
    email!: string;
    @Field(() => String, {nullable:false})
    message!: string;
    @Field(() => SupportStatusType, {nullable:true})
    status?: `${SupportStatusType}`;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class SupportRequestCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => String, {nullable:false})
    ticketId!: string;
    @Field(() => String, {nullable:false})
    email!: string;
    @Field(() => String, {nullable:false})
    message!: string;
    @Field(() => SupportStatusType, {nullable:true})
    status?: `${SupportStatusType}`;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@ArgsType()
export class SupportRequestGroupByArgs {
    @Field(() => SupportRequestWhereInput, {nullable:true})
    @Type(() => SupportRequestWhereInput)
    where?: InstanceType<typeof SupportRequestWhereInput>;
    @Field(() => [SupportRequestOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<SupportRequestOrderByWithAggregationInput>;
    @Field(() => [SupportRequestScalarFieldEnum], {nullable:false})
    by!: Array<`${SupportRequestScalarFieldEnum}`>;
    @Field(() => SupportRequestScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof SupportRequestScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class SupportRequestMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    ticketId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    email?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    message?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    status?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class SupportRequestMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    ticketId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    email?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    message?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    status?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class SupportRequestOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    ticketId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    email?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    message?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    status?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => SupportRequestCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof SupportRequestCountOrderByAggregateInput>;
    @Field(() => SupportRequestMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof SupportRequestMaxOrderByAggregateInput>;
    @Field(() => SupportRequestMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof SupportRequestMinOrderByAggregateInput>;
}

@InputType()
export class SupportRequestOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    ticketId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    email?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    message?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    status?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class SupportRequestScalarWhereWithAggregatesInput {
    @Field(() => [SupportRequestScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<SupportRequestScalarWhereWithAggregatesInput>;
    @Field(() => [SupportRequestScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<SupportRequestScalarWhereWithAggregatesInput>;
    @Field(() => [SupportRequestScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<SupportRequestScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    userId?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    ticketId?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    email?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    message?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => EnumSupportStatusTypeWithAggregatesFilter, {nullable:true})
    status?: InstanceType<typeof EnumSupportStatusTypeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
}

@InputType()
export class SupportRequestUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => String, {nullable:false})
    ticketId!: string;
    @Field(() => String, {nullable:false})
    email!: string;
    @Field(() => String, {nullable:false})
    message!: string;
    @Field(() => SupportStatusType, {nullable:true})
    status?: `${SupportStatusType}`;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class SupportRequestUncheckedUpdateManyInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    ticketId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    message?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumSupportStatusTypeFieldUpdateOperationsInput, {nullable:true})
    status?: InstanceType<typeof EnumSupportStatusTypeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class SupportRequestUncheckedUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    ticketId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    message?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumSupportStatusTypeFieldUpdateOperationsInput, {nullable:true})
    status?: InstanceType<typeof EnumSupportStatusTypeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class SupportRequestUpdateManyMutationInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    ticketId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    message?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumSupportStatusTypeFieldUpdateOperationsInput, {nullable:true})
    status?: InstanceType<typeof EnumSupportStatusTypeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class SupportRequestUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    ticketId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    message?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumSupportStatusTypeFieldUpdateOperationsInput, {nullable:true})
    status?: InstanceType<typeof EnumSupportStatusTypeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class SupportRequestWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => [SupportRequestWhereInput], {nullable:true})
    AND?: Array<SupportRequestWhereInput>;
    @Field(() => [SupportRequestWhereInput], {nullable:true})
    OR?: Array<SupportRequestWhereInput>;
    @Field(() => [SupportRequestWhereInput], {nullable:true})
    NOT?: Array<SupportRequestWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    userId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    ticketId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    email?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    message?: InstanceType<typeof StringFilter>;
    @Field(() => EnumSupportStatusTypeFilter, {nullable:true})
    status?: InstanceType<typeof EnumSupportStatusTypeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@InputType()
export class SupportRequestWhereInput {
    @Field(() => [SupportRequestWhereInput], {nullable:true})
    AND?: Array<SupportRequestWhereInput>;
    @Field(() => [SupportRequestWhereInput], {nullable:true})
    OR?: Array<SupportRequestWhereInput>;
    @Field(() => [SupportRequestWhereInput], {nullable:true})
    NOT?: Array<SupportRequestWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    userId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    ticketId?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    email?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    message?: InstanceType<typeof StringFilter>;
    @Field(() => EnumSupportStatusTypeFilter, {nullable:true})
    status?: InstanceType<typeof EnumSupportStatusTypeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@ObjectType()
export class SupportRequest {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    userId!: string;
    @Field(() => String, {nullable:false})
    ticketId!: string;
    @Field(() => String, {nullable:false})
    email!: string;
    @Field(() => String, {nullable:false})
    message!: string;
    @Field(() => SupportStatusType, {defaultValue:'OPEN',nullable:false})
    status!: `${SupportStatusType}`;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
    @Field(() => Date, {nullable:false})
    updatedAt!: Date;
}

@ArgsType()
export class UpdateManySupportRequestArgs {
    @Field(() => SupportRequestUpdateManyMutationInput, {nullable:false})
    @Type(() => SupportRequestUpdateManyMutationInput)
    data!: InstanceType<typeof SupportRequestUpdateManyMutationInput>;
    @Field(() => SupportRequestWhereInput, {nullable:true})
    @Type(() => SupportRequestWhereInput)
    where?: InstanceType<typeof SupportRequestWhereInput>;
}

@ArgsType()
export class UpdateOneSupportRequestArgs {
    @Field(() => SupportRequestUpdateInput, {nullable:false})
    @Type(() => SupportRequestUpdateInput)
    data!: InstanceType<typeof SupportRequestUpdateInput>;
    @Field(() => SupportRequestWhereUniqueInput, {nullable:false})
    @Type(() => SupportRequestWhereUniqueInput)
    where!: Prisma.AtLeast<SupportRequestWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpsertOneSupportRequestArgs {
    @Field(() => SupportRequestWhereUniqueInput, {nullable:false})
    @Type(() => SupportRequestWhereUniqueInput)
    where!: Prisma.AtLeast<SupportRequestWhereUniqueInput, 'id'>;
    @Field(() => SupportRequestCreateInput, {nullable:false})
    @Type(() => SupportRequestCreateInput)
    create!: InstanceType<typeof SupportRequestCreateInput>;
    @Field(() => SupportRequestUpdateInput, {nullable:false})
    @Type(() => SupportRequestUpdateInput)
    update!: InstanceType<typeof SupportRequestUpdateInput>;
}

@ArgsType()
export class CreateManySupportTicketArgs {
    @Field(() => [SupportTicketCreateManyInput], {nullable:false})
    @Type(() => SupportTicketCreateManyInput)
    data!: Array<SupportTicketCreateManyInput>;
}

@ArgsType()
export class CreateOneSupportTicketArgs {
    @Field(() => SupportTicketCreateInput, {nullable:false})
    @Type(() => SupportTicketCreateInput)
    data!: InstanceType<typeof SupportTicketCreateInput>;
}

@ArgsType()
export class DeleteManySupportTicketArgs {
    @Field(() => SupportTicketWhereInput, {nullable:true})
    @Type(() => SupportTicketWhereInput)
    where?: InstanceType<typeof SupportTicketWhereInput>;
}

@ArgsType()
export class DeleteOneSupportTicketArgs {
    @Field(() => SupportTicketWhereUniqueInput, {nullable:false})
    @Type(() => SupportTicketWhereUniqueInput)
    where!: Prisma.AtLeast<SupportTicketWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindFirstSupportTicketOrThrowArgs {
    @Field(() => SupportTicketWhereInput, {nullable:true})
    @Type(() => SupportTicketWhereInput)
    where?: InstanceType<typeof SupportTicketWhereInput>;
    @Field(() => [SupportTicketOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<SupportTicketOrderByWithRelationInput>;
    @Field(() => SupportTicketWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<SupportTicketWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [SupportTicketScalarFieldEnum], {nullable:true})
    distinct?: Array<`${SupportTicketScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstSupportTicketArgs {
    @Field(() => SupportTicketWhereInput, {nullable:true})
    @Type(() => SupportTicketWhereInput)
    where?: InstanceType<typeof SupportTicketWhereInput>;
    @Field(() => [SupportTicketOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<SupportTicketOrderByWithRelationInput>;
    @Field(() => SupportTicketWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<SupportTicketWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [SupportTicketScalarFieldEnum], {nullable:true})
    distinct?: Array<`${SupportTicketScalarFieldEnum}`>;
}

@ArgsType()
export class FindManySupportTicketArgs {
    @Field(() => SupportTicketWhereInput, {nullable:true})
    @Type(() => SupportTicketWhereInput)
    where?: InstanceType<typeof SupportTicketWhereInput>;
    @Field(() => [SupportTicketOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<SupportTicketOrderByWithRelationInput>;
    @Field(() => SupportTicketWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<SupportTicketWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [SupportTicketScalarFieldEnum], {nullable:true})
    distinct?: Array<`${SupportTicketScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniqueSupportTicketOrThrowArgs {
    @Field(() => SupportTicketWhereUniqueInput, {nullable:false})
    @Type(() => SupportTicketWhereUniqueInput)
    where!: Prisma.AtLeast<SupportTicketWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindUniqueSupportTicketArgs {
    @Field(() => SupportTicketWhereUniqueInput, {nullable:false})
    @Type(() => SupportTicketWhereUniqueInput)
    where!: Prisma.AtLeast<SupportTicketWhereUniqueInput, 'id'>;
}

@ArgsType()
export class SupportTicketAggregateArgs {
    @Field(() => SupportTicketWhereInput, {nullable:true})
    @Type(() => SupportTicketWhereInput)
    where?: InstanceType<typeof SupportTicketWhereInput>;
    @Field(() => [SupportTicketOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<SupportTicketOrderByWithRelationInput>;
    @Field(() => SupportTicketWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<SupportTicketWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class SupportTicketCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    issue?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    initiator?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    associatedUserId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    resolved?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    concernedId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userLastSeen?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    adminLastSeen?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class SupportTicketCreateManyConcernedOrderInputEnvelope {
    @Field(() => [SupportTicketCreateManyConcernedOrderInput], {nullable:false})
    @Type(() => SupportTicketCreateManyConcernedOrderInput)
    data!: Array<SupportTicketCreateManyConcernedOrderInput>;
}

@InputType()
export class SupportTicketCreateManyConcernedOrderInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => SupportTicketType, {nullable:false})
    type!: `${SupportTicketType}`;
    @Field(() => String, {nullable:false})
    issue!: string;
    @Field(() => [SupportMessageCreateInput], {nullable:true})
    messages?: Array<SupportMessageCreateInput>;
    @Field(() => SupportTicketParticipant, {nullable:false})
    initiator!: `${SupportTicketParticipant}`;
    @Field(() => String, {nullable:false})
    associatedUserId!: string;
    @Field(() => Boolean, {nullable:true})
    resolved?: boolean;
    @Field(() => String, {nullable:true})
    userLastSeen?: string;
    @Field(() => String, {nullable:true})
    adminLastSeen?: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class SupportTicketCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => SupportTicketType, {nullable:false})
    type!: `${SupportTicketType}`;
    @Field(() => String, {nullable:false})
    issue!: string;
    @Field(() => [SupportMessageCreateInput], {nullable:true})
    messages?: Array<SupportMessageCreateInput>;
    @Field(() => SupportTicketParticipant, {nullable:false})
    initiator!: `${SupportTicketParticipant}`;
    @Field(() => String, {nullable:false})
    associatedUserId!: string;
    @Field(() => Boolean, {nullable:true})
    resolved?: boolean;
    @Field(() => String, {nullable:true})
    concernedId?: string;
    @Field(() => String, {nullable:true})
    userLastSeen?: string;
    @Field(() => String, {nullable:true})
    adminLastSeen?: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class SupportTicketCreateNestedManyWithoutConcernedOrderInput {
    @Field(() => [SupportTicketCreateWithoutConcernedOrderInput], {nullable:true})
    @Type(() => SupportTicketCreateWithoutConcernedOrderInput)
    create?: Array<SupportTicketCreateWithoutConcernedOrderInput>;
    @Field(() => [SupportTicketCreateOrConnectWithoutConcernedOrderInput], {nullable:true})
    @Type(() => SupportTicketCreateOrConnectWithoutConcernedOrderInput)
    connectOrCreate?: Array<SupportTicketCreateOrConnectWithoutConcernedOrderInput>;
    @Field(() => SupportTicketCreateManyConcernedOrderInputEnvelope, {nullable:true})
    @Type(() => SupportTicketCreateManyConcernedOrderInputEnvelope)
    createMany?: InstanceType<typeof SupportTicketCreateManyConcernedOrderInputEnvelope>;
    @Field(() => [SupportTicketWhereUniqueInput], {nullable:true})
    @Type(() => SupportTicketWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<SupportTicketWhereUniqueInput, 'id'>>;
}

@InputType()
export class SupportTicketCreateOrConnectWithoutConcernedOrderInput {
    @Field(() => SupportTicketWhereUniqueInput, {nullable:false})
    @Type(() => SupportTicketWhereUniqueInput)
    where!: Prisma.AtLeast<SupportTicketWhereUniqueInput, 'id'>;
    @Field(() => SupportTicketCreateWithoutConcernedOrderInput, {nullable:false})
    @Type(() => SupportTicketCreateWithoutConcernedOrderInput)
    create!: InstanceType<typeof SupportTicketCreateWithoutConcernedOrderInput>;
}

@InputType()
export class SupportTicketCreateWithoutConcernedOrderInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => SupportTicketType, {nullable:false})
    type!: `${SupportTicketType}`;
    @Field(() => String, {nullable:false})
    issue!: string;
    @Field(() => [SupportMessageCreateInput], {nullable:true})
    messages?: Array<SupportMessageCreateInput>;
    @Field(() => SupportTicketParticipant, {nullable:false})
    initiator!: `${SupportTicketParticipant}`;
    @Field(() => String, {nullable:false})
    associatedUserId!: string;
    @Field(() => Boolean, {nullable:true})
    resolved?: boolean;
    @Field(() => String, {nullable:true})
    userLastSeen?: string;
    @Field(() => String, {nullable:true})
    adminLastSeen?: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class SupportTicketCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => SupportTicketType, {nullable:false})
    type!: `${SupportTicketType}`;
    @Field(() => String, {nullable:false})
    issue!: string;
    @Field(() => [SupportMessageCreateInput], {nullable:true})
    messages?: Array<SupportMessageCreateInput>;
    @Field(() => SupportTicketParticipant, {nullable:false})
    initiator!: `${SupportTicketParticipant}`;
    @Field(() => String, {nullable:false})
    associatedUserId!: string;
    @Field(() => Boolean, {nullable:true})
    resolved?: boolean;
    @Field(() => String, {nullable:true})
    userLastSeen?: string;
    @Field(() => String, {nullable:true})
    adminLastSeen?: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => OrderCreateNestedOneWithoutSupportTicketsInput, {nullable:true})
    concernedOrder?: InstanceType<typeof OrderCreateNestedOneWithoutSupportTicketsInput>;
}

@ArgsType()
export class SupportTicketGroupByArgs {
    @Field(() => SupportTicketWhereInput, {nullable:true})
    @Type(() => SupportTicketWhereInput)
    where?: InstanceType<typeof SupportTicketWhereInput>;
    @Field(() => [SupportTicketOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<SupportTicketOrderByWithAggregationInput>;
    @Field(() => [SupportTicketScalarFieldEnum], {nullable:false})
    by!: Array<`${SupportTicketScalarFieldEnum}`>;
    @Field(() => SupportTicketScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof SupportTicketScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class SupportTicketListRelationFilter {
    @Field(() => SupportTicketWhereInput, {nullable:true})
    every?: InstanceType<typeof SupportTicketWhereInput>;
    @Field(() => SupportTicketWhereInput, {nullable:true})
    some?: InstanceType<typeof SupportTicketWhereInput>;
    @Field(() => SupportTicketWhereInput, {nullable:true})
    none?: InstanceType<typeof SupportTicketWhereInput>;
}

@InputType()
export class SupportTicketMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    issue?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    initiator?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    associatedUserId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    resolved?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    concernedId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userLastSeen?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    adminLastSeen?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class SupportTicketMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    issue?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    initiator?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    associatedUserId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    resolved?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    concernedId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userLastSeen?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    adminLastSeen?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class SupportTicketOrderByRelationAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    _count?: `${SortOrder}`;
}

@InputType()
export class SupportTicketOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    issue?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    initiator?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    associatedUserId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    resolved?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    concernedId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userLastSeen?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    adminLastSeen?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => SupportTicketCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof SupportTicketCountOrderByAggregateInput>;
    @Field(() => SupportTicketMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof SupportTicketMaxOrderByAggregateInput>;
    @Field(() => SupportTicketMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof SupportTicketMinOrderByAggregateInput>;
}

@InputType()
export class SupportTicketOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    issue?: `${SortOrder}`;
    @Field(() => SupportMessageOrderByCompositeAggregateInput, {nullable:true})
    messages?: InstanceType<typeof SupportMessageOrderByCompositeAggregateInput>;
    @Field(() => SortOrder, {nullable:true})
    initiator?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    associatedUserId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    resolved?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    concernedId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userLastSeen?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    adminLastSeen?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => OrderOrderByWithRelationInput, {nullable:true})
    concernedOrder?: InstanceType<typeof OrderOrderByWithRelationInput>;
}

@InputType()
export class SupportTicketScalarWhereWithAggregatesInput {
    @Field(() => [SupportTicketScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<SupportTicketScalarWhereWithAggregatesInput>;
    @Field(() => [SupportTicketScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<SupportTicketScalarWhereWithAggregatesInput>;
    @Field(() => [SupportTicketScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<SupportTicketScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => EnumSupportTicketTypeWithAggregatesFilter, {nullable:true})
    type?: InstanceType<typeof EnumSupportTicketTypeWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    issue?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => EnumSupportTicketParticipantWithAggregatesFilter, {nullable:true})
    initiator?: InstanceType<typeof EnumSupportTicketParticipantWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    associatedUserId?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => BoolWithAggregatesFilter, {nullable:true})
    resolved?: InstanceType<typeof BoolWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    concernedId?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    userLastSeen?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    adminLastSeen?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
}

@InputType()
export class SupportTicketScalarWhereInput {
    @Field(() => [SupportTicketScalarWhereInput], {nullable:true})
    AND?: Array<SupportTicketScalarWhereInput>;
    @Field(() => [SupportTicketScalarWhereInput], {nullable:true})
    OR?: Array<SupportTicketScalarWhereInput>;
    @Field(() => [SupportTicketScalarWhereInput], {nullable:true})
    NOT?: Array<SupportTicketScalarWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => EnumSupportTicketTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumSupportTicketTypeFilter>;
    @Field(() => StringFilter, {nullable:true})
    issue?: InstanceType<typeof StringFilter>;
    @Field(() => EnumSupportTicketParticipantFilter, {nullable:true})
    initiator?: InstanceType<typeof EnumSupportTicketParticipantFilter>;
    @Field(() => StringFilter, {nullable:true})
    associatedUserId?: InstanceType<typeof StringFilter>;
    @Field(() => BoolFilter, {nullable:true})
    resolved?: InstanceType<typeof BoolFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    concernedId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    userLastSeen?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    adminLastSeen?: InstanceType<typeof StringNullableFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}

@InputType()
export class SupportTicketUncheckedCreateNestedManyWithoutConcernedOrderInput {
    @Field(() => [SupportTicketCreateWithoutConcernedOrderInput], {nullable:true})
    @Type(() => SupportTicketCreateWithoutConcernedOrderInput)
    create?: Array<SupportTicketCreateWithoutConcernedOrderInput>;
    @Field(() => [SupportTicketCreateOrConnectWithoutConcernedOrderInput], {nullable:true})
    @Type(() => SupportTicketCreateOrConnectWithoutConcernedOrderInput)
    connectOrCreate?: Array<SupportTicketCreateOrConnectWithoutConcernedOrderInput>;
    @Field(() => SupportTicketCreateManyConcernedOrderInputEnvelope, {nullable:true})
    @Type(() => SupportTicketCreateManyConcernedOrderInputEnvelope)
    createMany?: InstanceType<typeof SupportTicketCreateManyConcernedOrderInputEnvelope>;
    @Field(() => [SupportTicketWhereUniqueInput], {nullable:true})
    @Type(() => SupportTicketWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<SupportTicketWhereUniqueInput, 'id'>>;
}

@InputType()
export class SupportTicketUncheckedCreateWithoutConcernedOrderInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => SupportTicketType, {nullable:false})
    type!: `${SupportTicketType}`;
    @Field(() => String, {nullable:false})
    issue!: string;
    @Field(() => [SupportMessageCreateInput], {nullable:true})
    messages?: Array<SupportMessageCreateInput>;
    @Field(() => SupportTicketParticipant, {nullable:false})
    initiator!: `${SupportTicketParticipant}`;
    @Field(() => String, {nullable:false})
    associatedUserId!: string;
    @Field(() => Boolean, {nullable:true})
    resolved?: boolean;
    @Field(() => String, {nullable:true})
    userLastSeen?: string;
    @Field(() => String, {nullable:true})
    adminLastSeen?: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class SupportTicketUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => SupportTicketType, {nullable:false})
    type!: `${SupportTicketType}`;
    @Field(() => String, {nullable:false})
    issue!: string;
    @Field(() => [SupportMessageCreateInput], {nullable:true})
    messages?: Array<SupportMessageCreateInput>;
    @Field(() => SupportTicketParticipant, {nullable:false})
    initiator!: `${SupportTicketParticipant}`;
    @Field(() => String, {nullable:false})
    associatedUserId!: string;
    @Field(() => Boolean, {nullable:true})
    resolved?: boolean;
    @Field(() => String, {nullable:true})
    concernedId?: string;
    @Field(() => String, {nullable:true})
    userLastSeen?: string;
    @Field(() => String, {nullable:true})
    adminLastSeen?: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class SupportTicketUncheckedUpdateManyWithoutConcernedOrderNestedInput {
    @Field(() => [SupportTicketCreateWithoutConcernedOrderInput], {nullable:true})
    @Type(() => SupportTicketCreateWithoutConcernedOrderInput)
    create?: Array<SupportTicketCreateWithoutConcernedOrderInput>;
    @Field(() => [SupportTicketCreateOrConnectWithoutConcernedOrderInput], {nullable:true})
    @Type(() => SupportTicketCreateOrConnectWithoutConcernedOrderInput)
    connectOrCreate?: Array<SupportTicketCreateOrConnectWithoutConcernedOrderInput>;
    @Field(() => [SupportTicketUpsertWithWhereUniqueWithoutConcernedOrderInput], {nullable:true})
    @Type(() => SupportTicketUpsertWithWhereUniqueWithoutConcernedOrderInput)
    upsert?: Array<SupportTicketUpsertWithWhereUniqueWithoutConcernedOrderInput>;
    @Field(() => SupportTicketCreateManyConcernedOrderInputEnvelope, {nullable:true})
    @Type(() => SupportTicketCreateManyConcernedOrderInputEnvelope)
    createMany?: InstanceType<typeof SupportTicketCreateManyConcernedOrderInputEnvelope>;
    @Field(() => [SupportTicketWhereUniqueInput], {nullable:true})
    @Type(() => SupportTicketWhereUniqueInput)
    set?: Array<Prisma.AtLeast<SupportTicketWhereUniqueInput, 'id'>>;
    @Field(() => [SupportTicketWhereUniqueInput], {nullable:true})
    @Type(() => SupportTicketWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<SupportTicketWhereUniqueInput, 'id'>>;
    @Field(() => [SupportTicketWhereUniqueInput], {nullable:true})
    @Type(() => SupportTicketWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<SupportTicketWhereUniqueInput, 'id'>>;
    @Field(() => [SupportTicketWhereUniqueInput], {nullable:true})
    @Type(() => SupportTicketWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<SupportTicketWhereUniqueInput, 'id'>>;
    @Field(() => [SupportTicketUpdateWithWhereUniqueWithoutConcernedOrderInput], {nullable:true})
    @Type(() => SupportTicketUpdateWithWhereUniqueWithoutConcernedOrderInput)
    update?: Array<SupportTicketUpdateWithWhereUniqueWithoutConcernedOrderInput>;
    @Field(() => [SupportTicketUpdateManyWithWhereWithoutConcernedOrderInput], {nullable:true})
    @Type(() => SupportTicketUpdateManyWithWhereWithoutConcernedOrderInput)
    updateMany?: Array<SupportTicketUpdateManyWithWhereWithoutConcernedOrderInput>;
    @Field(() => [SupportTicketScalarWhereInput], {nullable:true})
    @Type(() => SupportTicketScalarWhereInput)
    deleteMany?: Array<SupportTicketScalarWhereInput>;
}

@InputType()
export class SupportTicketUncheckedUpdateManyWithoutConcernedOrderInput {
    @Field(() => EnumSupportTicketTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumSupportTicketTypeFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    issue?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => [SupportMessageCreateInput], {nullable:true})
    messages?: Array<SupportMessageCreateInput>;
    @Field(() => EnumSupportTicketParticipantFieldUpdateOperationsInput, {nullable:true})
    initiator?: InstanceType<typeof EnumSupportTicketParticipantFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    associatedUserId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    resolved?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    userLastSeen?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    adminLastSeen?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class SupportTicketUncheckedUpdateManyInput {
    @Field(() => EnumSupportTicketTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumSupportTicketTypeFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    issue?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => [SupportMessageCreateInput], {nullable:true})
    messages?: Array<SupportMessageCreateInput>;
    @Field(() => EnumSupportTicketParticipantFieldUpdateOperationsInput, {nullable:true})
    initiator?: InstanceType<typeof EnumSupportTicketParticipantFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    associatedUserId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    resolved?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    concernedId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    userLastSeen?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    adminLastSeen?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class SupportTicketUncheckedUpdateWithoutConcernedOrderInput {
    @Field(() => EnumSupportTicketTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumSupportTicketTypeFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    issue?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => [SupportMessageCreateInput], {nullable:true})
    messages?: Array<SupportMessageCreateInput>;
    @Field(() => EnumSupportTicketParticipantFieldUpdateOperationsInput, {nullable:true})
    initiator?: InstanceType<typeof EnumSupportTicketParticipantFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    associatedUserId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    resolved?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    userLastSeen?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    adminLastSeen?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class SupportTicketUncheckedUpdateInput {
    @Field(() => EnumSupportTicketTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumSupportTicketTypeFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    issue?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => [SupportMessageCreateInput], {nullable:true})
    messages?: Array<SupportMessageCreateInput>;
    @Field(() => EnumSupportTicketParticipantFieldUpdateOperationsInput, {nullable:true})
    initiator?: InstanceType<typeof EnumSupportTicketParticipantFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    associatedUserId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    resolved?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    concernedId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    userLastSeen?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    adminLastSeen?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class SupportTicketUpdateManyMutationInput {
    @Field(() => EnumSupportTicketTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumSupportTicketTypeFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    issue?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => [SupportMessageCreateInput], {nullable:true})
    messages?: Array<SupportMessageCreateInput>;
    @Field(() => EnumSupportTicketParticipantFieldUpdateOperationsInput, {nullable:true})
    initiator?: InstanceType<typeof EnumSupportTicketParticipantFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    associatedUserId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    resolved?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    userLastSeen?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    adminLastSeen?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class SupportTicketUpdateManyWithWhereWithoutConcernedOrderInput {
    @Field(() => SupportTicketScalarWhereInput, {nullable:false})
    @Type(() => SupportTicketScalarWhereInput)
    where!: InstanceType<typeof SupportTicketScalarWhereInput>;
    @Field(() => SupportTicketUpdateManyMutationInput, {nullable:false})
    @Type(() => SupportTicketUpdateManyMutationInput)
    data!: InstanceType<typeof SupportTicketUpdateManyMutationInput>;
}

@InputType()
export class SupportTicketUpdateManyWithoutConcernedOrderNestedInput {
    @Field(() => [SupportTicketCreateWithoutConcernedOrderInput], {nullable:true})
    @Type(() => SupportTicketCreateWithoutConcernedOrderInput)
    create?: Array<SupportTicketCreateWithoutConcernedOrderInput>;
    @Field(() => [SupportTicketCreateOrConnectWithoutConcernedOrderInput], {nullable:true})
    @Type(() => SupportTicketCreateOrConnectWithoutConcernedOrderInput)
    connectOrCreate?: Array<SupportTicketCreateOrConnectWithoutConcernedOrderInput>;
    @Field(() => [SupportTicketUpsertWithWhereUniqueWithoutConcernedOrderInput], {nullable:true})
    @Type(() => SupportTicketUpsertWithWhereUniqueWithoutConcernedOrderInput)
    upsert?: Array<SupportTicketUpsertWithWhereUniqueWithoutConcernedOrderInput>;
    @Field(() => SupportTicketCreateManyConcernedOrderInputEnvelope, {nullable:true})
    @Type(() => SupportTicketCreateManyConcernedOrderInputEnvelope)
    createMany?: InstanceType<typeof SupportTicketCreateManyConcernedOrderInputEnvelope>;
    @Field(() => [SupportTicketWhereUniqueInput], {nullable:true})
    @Type(() => SupportTicketWhereUniqueInput)
    set?: Array<Prisma.AtLeast<SupportTicketWhereUniqueInput, 'id'>>;
    @Field(() => [SupportTicketWhereUniqueInput], {nullable:true})
    @Type(() => SupportTicketWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<SupportTicketWhereUniqueInput, 'id'>>;
    @Field(() => [SupportTicketWhereUniqueInput], {nullable:true})
    @Type(() => SupportTicketWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<SupportTicketWhereUniqueInput, 'id'>>;
    @Field(() => [SupportTicketWhereUniqueInput], {nullable:true})
    @Type(() => SupportTicketWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<SupportTicketWhereUniqueInput, 'id'>>;
    @Field(() => [SupportTicketUpdateWithWhereUniqueWithoutConcernedOrderInput], {nullable:true})
    @Type(() => SupportTicketUpdateWithWhereUniqueWithoutConcernedOrderInput)
    update?: Array<SupportTicketUpdateWithWhereUniqueWithoutConcernedOrderInput>;
    @Field(() => [SupportTicketUpdateManyWithWhereWithoutConcernedOrderInput], {nullable:true})
    @Type(() => SupportTicketUpdateManyWithWhereWithoutConcernedOrderInput)
    updateMany?: Array<SupportTicketUpdateManyWithWhereWithoutConcernedOrderInput>;
    @Field(() => [SupportTicketScalarWhereInput], {nullable:true})
    @Type(() => SupportTicketScalarWhereInput)
    deleteMany?: Array<SupportTicketScalarWhereInput>;
}

@InputType()
export class SupportTicketUpdateWithWhereUniqueWithoutConcernedOrderInput {
    @Field(() => SupportTicketWhereUniqueInput, {nullable:false})
    @Type(() => SupportTicketWhereUniqueInput)
    where!: Prisma.AtLeast<SupportTicketWhereUniqueInput, 'id'>;
    @Field(() => SupportTicketUpdateWithoutConcernedOrderInput, {nullable:false})
    @Type(() => SupportTicketUpdateWithoutConcernedOrderInput)
    data!: InstanceType<typeof SupportTicketUpdateWithoutConcernedOrderInput>;
}

@InputType()
export class SupportTicketUpdateWithoutConcernedOrderInput {
    @Field(() => EnumSupportTicketTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumSupportTicketTypeFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    issue?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => [SupportMessageCreateInput], {nullable:true})
    messages?: Array<SupportMessageCreateInput>;
    @Field(() => EnumSupportTicketParticipantFieldUpdateOperationsInput, {nullable:true})
    initiator?: InstanceType<typeof EnumSupportTicketParticipantFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    associatedUserId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    resolved?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    userLastSeen?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    adminLastSeen?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class SupportTicketUpdateInput {
    @Field(() => EnumSupportTicketTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumSupportTicketTypeFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    issue?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => [SupportMessageCreateInput], {nullable:true})
    messages?: Array<SupportMessageCreateInput>;
    @Field(() => EnumSupportTicketParticipantFieldUpdateOperationsInput, {nullable:true})
    initiator?: InstanceType<typeof EnumSupportTicketParticipantFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    associatedUserId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    resolved?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    userLastSeen?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    adminLastSeen?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => OrderUpdateOneWithoutSupportTicketsNestedInput, {nullable:true})
    concernedOrder?: InstanceType<typeof OrderUpdateOneWithoutSupportTicketsNestedInput>;
}

@InputType()
export class SupportTicketUpsertWithWhereUniqueWithoutConcernedOrderInput {
    @Field(() => SupportTicketWhereUniqueInput, {nullable:false})
    @Type(() => SupportTicketWhereUniqueInput)
    where!: Prisma.AtLeast<SupportTicketWhereUniqueInput, 'id'>;
    @Field(() => SupportTicketUpdateWithoutConcernedOrderInput, {nullable:false})
    @Type(() => SupportTicketUpdateWithoutConcernedOrderInput)
    update!: InstanceType<typeof SupportTicketUpdateWithoutConcernedOrderInput>;
    @Field(() => SupportTicketCreateWithoutConcernedOrderInput, {nullable:false})
    @Type(() => SupportTicketCreateWithoutConcernedOrderInput)
    create!: InstanceType<typeof SupportTicketCreateWithoutConcernedOrderInput>;
}

@InputType()
export class SupportTicketWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => [SupportTicketWhereInput], {nullable:true})
    AND?: Array<SupportTicketWhereInput>;
    @Field(() => [SupportTicketWhereInput], {nullable:true})
    OR?: Array<SupportTicketWhereInput>;
    @Field(() => [SupportTicketWhereInput], {nullable:true})
    NOT?: Array<SupportTicketWhereInput>;
    @Field(() => EnumSupportTicketTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumSupportTicketTypeFilter>;
    @Field(() => StringFilter, {nullable:true})
    issue?: InstanceType<typeof StringFilter>;
    @Field(() => [SupportMessageObjectEqualityInput], {nullable:true})
    messages?: Array<SupportMessageObjectEqualityInput>;
    @Field(() => EnumSupportTicketParticipantFilter, {nullable:true})
    initiator?: InstanceType<typeof EnumSupportTicketParticipantFilter>;
    @Field(() => StringFilter, {nullable:true})
    associatedUserId?: InstanceType<typeof StringFilter>;
    @Field(() => BoolFilter, {nullable:true})
    resolved?: InstanceType<typeof BoolFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    concernedId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    userLastSeen?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    adminLastSeen?: InstanceType<typeof StringNullableFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => OrderNullableRelationFilter, {nullable:true})
    concernedOrder?: InstanceType<typeof OrderNullableRelationFilter>;
}

@InputType()
export class SupportTicketWhereInput {
    @Field(() => [SupportTicketWhereInput], {nullable:true})
    AND?: Array<SupportTicketWhereInput>;
    @Field(() => [SupportTicketWhereInput], {nullable:true})
    OR?: Array<SupportTicketWhereInput>;
    @Field(() => [SupportTicketWhereInput], {nullable:true})
    NOT?: Array<SupportTicketWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => EnumSupportTicketTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumSupportTicketTypeFilter>;
    @Field(() => StringFilter, {nullable:true})
    issue?: InstanceType<typeof StringFilter>;
    @Field(() => [SupportMessageObjectEqualityInput], {nullable:true})
    messages?: Array<SupportMessageObjectEqualityInput>;
    @Field(() => EnumSupportTicketParticipantFilter, {nullable:true})
    initiator?: InstanceType<typeof EnumSupportTicketParticipantFilter>;
    @Field(() => StringFilter, {nullable:true})
    associatedUserId?: InstanceType<typeof StringFilter>;
    @Field(() => BoolFilter, {nullable:true})
    resolved?: InstanceType<typeof BoolFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    concernedId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    userLastSeen?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    adminLastSeen?: InstanceType<typeof StringNullableFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => OrderNullableRelationFilter, {nullable:true})
    concernedOrder?: InstanceType<typeof OrderNullableRelationFilter>;
}

@ObjectType()
export class SupportTicket {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => SupportTicketType, {nullable:false})
    type!: `${SupportTicketType}`;
    @Field(() => String, {nullable:false})
    issue!: string;
    @Field(() => [SupportMessage], {nullable:true})
    messages?: Array<SupportMessage>;
    @Field(() => SupportTicketParticipant, {nullable:false})
    initiator!: `${SupportTicketParticipant}`;
    @Field(() => String, {nullable:false})
    associatedUserId!: string;
    @Field(() => Boolean, {defaultValue:false,nullable:false})
    resolved!: boolean;
    @Field(() => String, {nullable:true})
    concernedId!: string | null;
    @Field(() => String, {defaultValue:'DEFAULT',nullable:true})
    userLastSeen!: string | null;
    @Field(() => String, {defaultValue:'DEFAULT',nullable:true})
    adminLastSeen!: string | null;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
    @Field(() => Date, {nullable:false})
    updatedAt!: Date;
    @Field(() => Order, {nullable:true})
    concernedOrder?: InstanceType<typeof Order> | null;
}

@ArgsType()
export class UpdateManySupportTicketArgs {
    @Field(() => SupportTicketUpdateManyMutationInput, {nullable:false})
    @Type(() => SupportTicketUpdateManyMutationInput)
    data!: InstanceType<typeof SupportTicketUpdateManyMutationInput>;
    @Field(() => SupportTicketWhereInput, {nullable:true})
    @Type(() => SupportTicketWhereInput)
    where?: InstanceType<typeof SupportTicketWhereInput>;
}

@ArgsType()
export class UpdateOneSupportTicketArgs {
    @Field(() => SupportTicketUpdateInput, {nullable:false})
    @Type(() => SupportTicketUpdateInput)
    data!: InstanceType<typeof SupportTicketUpdateInput>;
    @Field(() => SupportTicketWhereUniqueInput, {nullable:false})
    @Type(() => SupportTicketWhereUniqueInput)
    where!: Prisma.AtLeast<SupportTicketWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpsertOneSupportTicketArgs {
    @Field(() => SupportTicketWhereUniqueInput, {nullable:false})
    @Type(() => SupportTicketWhereUniqueInput)
    where!: Prisma.AtLeast<SupportTicketWhereUniqueInput, 'id'>;
    @Field(() => SupportTicketCreateInput, {nullable:false})
    @Type(() => SupportTicketCreateInput)
    create!: InstanceType<typeof SupportTicketCreateInput>;
    @Field(() => SupportTicketUpdateInput, {nullable:false})
    @Type(() => SupportTicketUpdateInput)
    update!: InstanceType<typeof SupportTicketUpdateInput>;
}

@InputType()
export class SystemNotificationPayloadCreateEnvelopeInput {
    @Field(() => SystemNotificationPayloadCreateInput, {nullable:true})
    @Type(() => SystemNotificationPayloadCreateInput)
    set?: InstanceType<typeof SystemNotificationPayloadCreateInput>;
}

@InputType()
export class SystemNotificationPayloadCreateInput {
    @Field(() => SystemNotificationType, {nullable:false})
    type!: `${SystemNotificationType}`;
    @Field(() => String, {nullable:true})
    conversationId?: string;
    @Field(() => String, {nullable:true})
    orderId?: string;
    @Field(() => String, {nullable:true})
    payoutID?: string;
    @Field(() => String, {nullable:true})
    userID?: string;
}

@InputType()
export class SystemNotificationPayloadOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    type?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    conversationId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    orderId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    payoutID?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userID?: `${SortOrder}`;
}

@InputType()
export class SystemNotificationPayloadUpdateEnvelopeInput {
    @Field(() => SystemNotificationPayloadCreateInput, {nullable:true})
    @Type(() => SystemNotificationPayloadCreateInput)
    set?: InstanceType<typeof SystemNotificationPayloadCreateInput>;
    @Field(() => SystemNotificationPayloadUpdateInput, {nullable:true})
    @Type(() => SystemNotificationPayloadUpdateInput)
    update?: InstanceType<typeof SystemNotificationPayloadUpdateInput>;
}

@InputType()
export class SystemNotificationPayloadUpdateInput {
    @Field(() => EnumSystemNotificationTypeFieldUpdateOperationsInput, {nullable:true})
    type?: InstanceType<typeof EnumSystemNotificationTypeFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    conversationId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    orderId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    payoutID?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    userID?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
}

@InputType()
export class SystemNotificationPayloadWhereInput {
    @Field(() => [SystemNotificationPayloadWhereInput], {nullable:true})
    AND?: Array<SystemNotificationPayloadWhereInput>;
    @Field(() => [SystemNotificationPayloadWhereInput], {nullable:true})
    OR?: Array<SystemNotificationPayloadWhereInput>;
    @Field(() => [SystemNotificationPayloadWhereInput], {nullable:true})
    NOT?: Array<SystemNotificationPayloadWhereInput>;
    @Field(() => EnumSystemNotificationTypeFilter, {nullable:true})
    type?: InstanceType<typeof EnumSystemNotificationTypeFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    conversationId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    orderId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    payoutID?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    userID?: InstanceType<typeof StringNullableFilter>;
}

@ObjectType()
export class SystemNotificationPayload {
    @Field(() => SystemNotificationType, {nullable:false})
    type!: `${SystemNotificationType}`;
    @Field(() => String, {nullable:true})
    conversationId!: string | null;
    @Field(() => String, {nullable:true})
    orderId!: string | null;
    @Field(() => String, {nullable:true})
    payoutID!: string | null;
    @Field(() => String, {nullable:true})
    userID!: string | null;
}

@InputType()
export class TextCampusChatPayloadCreateEnvelopeInput {
    @Field(() => TextCampusChatPayloadCreateInput, {nullable:true})
    @Type(() => TextCampusChatPayloadCreateInput)
    set?: InstanceType<typeof TextCampusChatPayloadCreateInput>;
}

@InputType()
export class TextCampusChatPayloadCreateInput {
    @Field(() => String, {nullable:true})
    title?: string;
    @Field(() => String, {nullable:false})
    text!: string;
}

@InputType()
export class TextCampusChatPayloadOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    title?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    text?: `${SortOrder}`;
}

@InputType()
export class TextCampusChatPayloadUpdateEnvelopeInput {
    @Field(() => TextCampusChatPayloadCreateInput, {nullable:true})
    @Type(() => TextCampusChatPayloadCreateInput)
    set?: InstanceType<typeof TextCampusChatPayloadCreateInput>;
    @Field(() => TextCampusChatPayloadUpdateInput, {nullable:true})
    @Type(() => TextCampusChatPayloadUpdateInput)
    update?: InstanceType<typeof TextCampusChatPayloadUpdateInput>;
}

@InputType()
export class TextCampusChatPayloadUpdateInput {
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    title?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    text?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}

@InputType()
export class TextCampusChatPayloadWhereInput {
    @Field(() => [TextCampusChatPayloadWhereInput], {nullable:true})
    AND?: Array<TextCampusChatPayloadWhereInput>;
    @Field(() => [TextCampusChatPayloadWhereInput], {nullable:true})
    OR?: Array<TextCampusChatPayloadWhereInput>;
    @Field(() => [TextCampusChatPayloadWhereInput], {nullable:true})
    NOT?: Array<TextCampusChatPayloadWhereInput>;
    @Field(() => StringNullableFilter, {nullable:true})
    title?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringFilter, {nullable:true})
    text?: InstanceType<typeof StringFilter>;
}

@ObjectType()
export class TextCampusChatPayload {
    @Field(() => String, {nullable:true})
    title!: string | null;
    @Field(() => String, {nullable:false})
    text!: string;
}

@ArgsType()
export class CreateManyUniversityAdminArgs {
    @Field(() => [UniversityAdminCreateManyInput], {nullable:false})
    @Type(() => UniversityAdminCreateManyInput)
    data!: Array<UniversityAdminCreateManyInput>;
}

@ArgsType()
export class CreateOneUniversityAdminArgs {
    @Field(() => UniversityAdminCreateInput, {nullable:false})
    @Type(() => UniversityAdminCreateInput)
    data!: InstanceType<typeof UniversityAdminCreateInput>;
}

@ArgsType()
export class DeleteManyUniversityAdminArgs {
    @Field(() => UniversityAdminWhereInput, {nullable:true})
    @Type(() => UniversityAdminWhereInput)
    where?: InstanceType<typeof UniversityAdminWhereInput>;
}

@ArgsType()
export class DeleteOneUniversityAdminArgs {
    @Field(() => UniversityAdminWhereUniqueInput, {nullable:false})
    @Type(() => UniversityAdminWhereUniqueInput)
    where!: Prisma.AtLeast<UniversityAdminWhereUniqueInput, 'id' | 'email'>;
}

@ArgsType()
export class FindFirstUniversityAdminOrThrowArgs {
    @Field(() => UniversityAdminWhereInput, {nullable:true})
    @Type(() => UniversityAdminWhereInput)
    where?: InstanceType<typeof UniversityAdminWhereInput>;
    @Field(() => [UniversityAdminOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<UniversityAdminOrderByWithRelationInput>;
    @Field(() => UniversityAdminWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<UniversityAdminWhereUniqueInput, 'id' | 'email'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [UniversityAdminScalarFieldEnum], {nullable:true})
    distinct?: Array<`${UniversityAdminScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstUniversityAdminArgs {
    @Field(() => UniversityAdminWhereInput, {nullable:true})
    @Type(() => UniversityAdminWhereInput)
    where?: InstanceType<typeof UniversityAdminWhereInput>;
    @Field(() => [UniversityAdminOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<UniversityAdminOrderByWithRelationInput>;
    @Field(() => UniversityAdminWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<UniversityAdminWhereUniqueInput, 'id' | 'email'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [UniversityAdminScalarFieldEnum], {nullable:true})
    distinct?: Array<`${UniversityAdminScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyUniversityAdminArgs {
    @Field(() => UniversityAdminWhereInput, {nullable:true})
    @Type(() => UniversityAdminWhereInput)
    where?: InstanceType<typeof UniversityAdminWhereInput>;
    @Field(() => [UniversityAdminOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<UniversityAdminOrderByWithRelationInput>;
    @Field(() => UniversityAdminWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<UniversityAdminWhereUniqueInput, 'id' | 'email'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [UniversityAdminScalarFieldEnum], {nullable:true})
    distinct?: Array<`${UniversityAdminScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniqueUniversityAdminOrThrowArgs {
    @Field(() => UniversityAdminWhereUniqueInput, {nullable:false})
    @Type(() => UniversityAdminWhereUniqueInput)
    where!: Prisma.AtLeast<UniversityAdminWhereUniqueInput, 'id' | 'email'>;
}

@ArgsType()
export class FindUniqueUniversityAdminArgs {
    @Field(() => UniversityAdminWhereUniqueInput, {nullable:false})
    @Type(() => UniversityAdminWhereUniqueInput)
    where!: Prisma.AtLeast<UniversityAdminWhereUniqueInput, 'id' | 'email'>;
}

@ArgsType()
export class UniversityAdminAggregateArgs {
    @Field(() => UniversityAdminWhereInput, {nullable:true})
    @Type(() => UniversityAdminWhereInput)
    where?: InstanceType<typeof UniversityAdminWhereInput>;
    @Field(() => [UniversityAdminOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<UniversityAdminOrderByWithRelationInput>;
    @Field(() => UniversityAdminWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<UniversityAdminWhereUniqueInput, 'id' | 'email'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class UniversityAdminCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userType?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userName?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    email?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    password?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class UniversityAdminCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => UniversityAdminType, {nullable:false})
    userType!: `${UniversityAdminType}`;
    @Field(() => String, {nullable:false})
    userName!: string;
    @Field(() => String, {nullable:false})
    email!: string;
    @Field(() => String, {nullable:false})
    password!: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => [SessionCreateInput], {nullable:true})
    sessions?: Array<SessionCreateInput>;
}

@InputType()
export class UniversityAdminCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => UniversityAdminType, {nullable:false})
    userType!: `${UniversityAdminType}`;
    @Field(() => String, {nullable:false})
    userName!: string;
    @Field(() => String, {nullable:false})
    email!: string;
    @Field(() => String, {nullable:false})
    password!: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => [SessionCreateInput], {nullable:true})
    sessions?: Array<SessionCreateInput>;
}

@ArgsType()
export class UniversityAdminGroupByArgs {
    @Field(() => UniversityAdminWhereInput, {nullable:true})
    @Type(() => UniversityAdminWhereInput)
    where?: InstanceType<typeof UniversityAdminWhereInput>;
    @Field(() => [UniversityAdminOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<UniversityAdminOrderByWithAggregationInput>;
    @Field(() => [UniversityAdminScalarFieldEnum], {nullable:false})
    by!: Array<`${UniversityAdminScalarFieldEnum}`>;
    @Field(() => UniversityAdminScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof UniversityAdminScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class UniversityAdminMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userType?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userName?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    email?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    password?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class UniversityAdminMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userType?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userName?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    email?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    password?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class UniversityAdminOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userType?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userName?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    email?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    password?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => UniversityAdminCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof UniversityAdminCountOrderByAggregateInput>;
    @Field(() => UniversityAdminMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof UniversityAdminMaxOrderByAggregateInput>;
    @Field(() => UniversityAdminMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof UniversityAdminMinOrderByAggregateInput>;
}

@InputType()
export class UniversityAdminOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userType?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    userName?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    email?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    password?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => SessionOrderByCompositeAggregateInput, {nullable:true})
    sessions?: InstanceType<typeof SessionOrderByCompositeAggregateInput>;
}

@InputType()
export class UniversityAdminScalarWhereWithAggregatesInput {
    @Field(() => [UniversityAdminScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<UniversityAdminScalarWhereWithAggregatesInput>;
    @Field(() => [UniversityAdminScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<UniversityAdminScalarWhereWithAggregatesInput>;
    @Field(() => [UniversityAdminScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<UniversityAdminScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => EnumUniversityAdminTypeWithAggregatesFilter, {nullable:true})
    userType?: InstanceType<typeof EnumUniversityAdminTypeWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    userName?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    email?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    password?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
}

@InputType()
export class UniversityAdminUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => UniversityAdminType, {nullable:false})
    userType!: `${UniversityAdminType}`;
    @Field(() => String, {nullable:false})
    userName!: string;
    @Field(() => String, {nullable:false})
    email!: string;
    @Field(() => String, {nullable:false})
    password!: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => [SessionCreateInput], {nullable:true})
    sessions?: Array<SessionCreateInput>;
}

@InputType()
export class UniversityAdminUncheckedUpdateManyInput {
    @Field(() => EnumUniversityAdminTypeFieldUpdateOperationsInput, {nullable:true})
    userType?: InstanceType<typeof EnumUniversityAdminTypeFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => [SessionCreateInput], {nullable:true})
    sessions?: Array<SessionCreateInput>;
}

@InputType()
export class UniversityAdminUncheckedUpdateInput {
    @Field(() => EnumUniversityAdminTypeFieldUpdateOperationsInput, {nullable:true})
    userType?: InstanceType<typeof EnumUniversityAdminTypeFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => [SessionCreateInput], {nullable:true})
    sessions?: Array<SessionCreateInput>;
}

@InputType()
export class UniversityAdminUpdateManyMutationInput {
    @Field(() => EnumUniversityAdminTypeFieldUpdateOperationsInput, {nullable:true})
    userType?: InstanceType<typeof EnumUniversityAdminTypeFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => [SessionCreateInput], {nullable:true})
    sessions?: Array<SessionCreateInput>;
}

@InputType()
export class UniversityAdminUpdateInput {
    @Field(() => EnumUniversityAdminTypeFieldUpdateOperationsInput, {nullable:true})
    userType?: InstanceType<typeof EnumUniversityAdminTypeFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    userName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => [SessionCreateInput], {nullable:true})
    sessions?: Array<SessionCreateInput>;
}

@InputType()
export class UniversityAdminWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:true})
    email?: string;
    @Field(() => [UniversityAdminWhereInput], {nullable:true})
    AND?: Array<UniversityAdminWhereInput>;
    @Field(() => [UniversityAdminWhereInput], {nullable:true})
    OR?: Array<UniversityAdminWhereInput>;
    @Field(() => [UniversityAdminWhereInput], {nullable:true})
    NOT?: Array<UniversityAdminWhereInput>;
    @Field(() => EnumUniversityAdminTypeFilter, {nullable:true})
    userType?: InstanceType<typeof EnumUniversityAdminTypeFilter>;
    @Field(() => StringFilter, {nullable:true})
    userName?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    password?: InstanceType<typeof StringFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => [SessionObjectEqualityInput], {nullable:true})
    sessions?: Array<SessionObjectEqualityInput>;
}

@InputType()
export class UniversityAdminWhereInput {
    @Field(() => [UniversityAdminWhereInput], {nullable:true})
    AND?: Array<UniversityAdminWhereInput>;
    @Field(() => [UniversityAdminWhereInput], {nullable:true})
    OR?: Array<UniversityAdminWhereInput>;
    @Field(() => [UniversityAdminWhereInput], {nullable:true})
    NOT?: Array<UniversityAdminWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => EnumUniversityAdminTypeFilter, {nullable:true})
    userType?: InstanceType<typeof EnumUniversityAdminTypeFilter>;
    @Field(() => StringFilter, {nullable:true})
    userName?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    email?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    password?: InstanceType<typeof StringFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => [SessionObjectEqualityInput], {nullable:true})
    sessions?: Array<SessionObjectEqualityInput>;
}

@ObjectType()
export class UniversityAdmin {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => UniversityAdminType, {nullable:false})
    userType!: `${UniversityAdminType}`;
    @Field(() => String, {nullable:false})
    userName!: string;
    @Field(() => String, {nullable:false})
    email!: string;
    @Field(() => String, {nullable:false})
    password!: string;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
    @Field(() => Date, {nullable:false})
    updatedAt!: Date;
    @Field(() => [Session], {nullable:true})
    sessions?: Array<Session>;
}

@ArgsType()
export class UpdateManyUniversityAdminArgs {
    @Field(() => UniversityAdminUpdateManyMutationInput, {nullable:false})
    @Type(() => UniversityAdminUpdateManyMutationInput)
    data!: InstanceType<typeof UniversityAdminUpdateManyMutationInput>;
    @Field(() => UniversityAdminWhereInput, {nullable:true})
    @Type(() => UniversityAdminWhereInput)
    where?: InstanceType<typeof UniversityAdminWhereInput>;
}

@ArgsType()
export class UpdateOneUniversityAdminArgs {
    @Field(() => UniversityAdminUpdateInput, {nullable:false})
    @Type(() => UniversityAdminUpdateInput)
    data!: InstanceType<typeof UniversityAdminUpdateInput>;
    @Field(() => UniversityAdminWhereUniqueInput, {nullable:false})
    @Type(() => UniversityAdminWhereUniqueInput)
    where!: Prisma.AtLeast<UniversityAdminWhereUniqueInput, 'id' | 'email'>;
}

@ArgsType()
export class UpsertOneUniversityAdminArgs {
    @Field(() => UniversityAdminWhereUniqueInput, {nullable:false})
    @Type(() => UniversityAdminWhereUniqueInput)
    where!: Prisma.AtLeast<UniversityAdminWhereUniqueInput, 'id' | 'email'>;
    @Field(() => UniversityAdminCreateInput, {nullable:false})
    @Type(() => UniversityAdminCreateInput)
    create!: InstanceType<typeof UniversityAdminCreateInput>;
    @Field(() => UniversityAdminUpdateInput, {nullable:false})
    @Type(() => UniversityAdminUpdateInput)
    update!: InstanceType<typeof UniversityAdminUpdateInput>;
}

@ArgsType()
export class CreateManyUserArgs {
    @Field(() => [UserCreateManyInput], {nullable:false})
    @Type(() => UserCreateManyInput)
    data!: Array<UserCreateManyInput>;
}

@ArgsType()
export class CreateOneUserArgs {
    @Field(() => UserCreateInput, {nullable:false})
    @Type(() => UserCreateInput)
    data!: InstanceType<typeof UserCreateInput>;
}

@ArgsType()
export class DeleteManyUserArgs {
    @Field(() => UserWhereInput, {nullable:true})
    @Type(() => UserWhereInput)
    where?: InstanceType<typeof UserWhereInput>;
}

@ArgsType()
export class DeleteOneUserArgs {
    @Field(() => UserWhereUniqueInput, {nullable:false})
    @Type(() => UserWhereUniqueInput)
    where!: Prisma.AtLeast<UserWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindFirstUserOrThrowArgs {
    @Field(() => UserWhereInput, {nullable:true})
    @Type(() => UserWhereInput)
    where?: InstanceType<typeof UserWhereInput>;
    @Field(() => [UserOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<UserOrderByWithRelationInput>;
    @Field(() => UserWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<UserWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [UserScalarFieldEnum], {nullable:true})
    distinct?: Array<`${UserScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstUserArgs {
    @Field(() => UserWhereInput, {nullable:true})
    @Type(() => UserWhereInput)
    where?: InstanceType<typeof UserWhereInput>;
    @Field(() => [UserOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<UserOrderByWithRelationInput>;
    @Field(() => UserWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<UserWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [UserScalarFieldEnum], {nullable:true})
    distinct?: Array<`${UserScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyUserArgs {
    @Field(() => UserWhereInput, {nullable:true})
    @Type(() => UserWhereInput)
    where?: InstanceType<typeof UserWhereInput>;
    @Field(() => [UserOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<UserOrderByWithRelationInput>;
    @Field(() => UserWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<UserWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [UserScalarFieldEnum], {nullable:true})
    distinct?: Array<`${UserScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniqueUserOrThrowArgs {
    @Field(() => UserWhereUniqueInput, {nullable:false})
    @Type(() => UserWhereUniqueInput)
    where!: Prisma.AtLeast<UserWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindUniqueUserArgs {
    @Field(() => UserWhereUniqueInput, {nullable:false})
    @Type(() => UserWhereUniqueInput)
    where!: Prisma.AtLeast<UserWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpdateManyUserArgs {
    @Field(() => UserUpdateManyMutationInput, {nullable:false})
    @Type(() => UserUpdateManyMutationInput)
    data!: InstanceType<typeof UserUpdateManyMutationInput>;
    @Field(() => UserWhereInput, {nullable:true})
    @Type(() => UserWhereInput)
    where?: InstanceType<typeof UserWhereInput>;
}

@ArgsType()
export class UpdateOneUserArgs {
    @Field(() => UserUpdateInput, {nullable:false})
    @Type(() => UserUpdateInput)
    data!: InstanceType<typeof UserUpdateInput>;
    @Field(() => UserWhereUniqueInput, {nullable:false})
    @Type(() => UserWhereUniqueInput)
    where!: Prisma.AtLeast<UserWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpsertOneUserArgs {
    @Field(() => UserWhereUniqueInput, {nullable:false})
    @Type(() => UserWhereUniqueInput)
    where!: Prisma.AtLeast<UserWhereUniqueInput, 'id'>;
    @Field(() => UserCreateInput, {nullable:false})
    @Type(() => UserCreateInput)
    create!: InstanceType<typeof UserCreateInput>;
    @Field(() => UserUpdateInput, {nullable:false})
    @Type(() => UserUpdateInput)
    update!: InstanceType<typeof UserUpdateInput>;
}

@ArgsType()
export class UserAggregateArgs {
    @Field(() => UserWhereInput, {nullable:true})
    @Type(() => UserWhereInput)
    where?: InstanceType<typeof UserWhereInput>;
    @Field(() => [UserOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<UserOrderByWithRelationInput>;
    @Field(() => UserWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<UserWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class UserCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    firstName?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    lastName?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    email?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    countryCode?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    phoneNumber?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    phoneNumberVerified?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    roles?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    password?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    referrer?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    gender?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    displayPicture?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    personalEmail?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    eduInstituteId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    shoppingPreferenceIds?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    hobbyIds?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    about?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    wishlistIds?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    savedDealIds?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    conversationIds?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    dmIds?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    orderIds?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    followedByIDs?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    followingIDs?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    legacyId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    blackListed?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    addedManually?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    registrationPlatform?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    instagramUsername?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    referralRockCode?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    deactivated?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    signupV?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    isParent?: `${SortOrder}`;
}

@InputType()
export class UserCreateManyEduInstituteInputEnvelope {
    @Field(() => [UserCreateManyEduInstituteInput], {nullable:false})
    @Type(() => UserCreateManyEduInstituteInput)
    data!: Array<UserCreateManyEduInstituteInput>;
}

@InputType()
export class UserCreateManyEduInstituteInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    firstName!: string;
    @Field(() => String, {nullable:false})
    lastName!: string;
    @Field(() => String, {nullable:false})
    email!: string;
    @Field(() => String, {nullable:false})
    countryCode!: string;
    @Field(() => String, {nullable:false})
    phoneNumber!: string;
    @Field(() => Boolean, {nullable:true})
    phoneNumberVerified?: boolean;
    @Field(() => UserCreaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserCreaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => String, {nullable:true})
    password?: string;
    @Field(() => String, {nullable:true})
    referrer?: string;
    @Field(() => Gender, {nullable:true})
    gender?: `${Gender}`;
    @Field(() => SizesNullableCreateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableCreateEnvelopeInput>;
    @Field(() => String, {nullable:true})
    displayPicture?: string;
    @Field(() => String, {nullable:true})
    personalEmail?: string;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => UserCreateshoppingPreferenceIdsInput, {nullable:true})
    shoppingPreferenceIds?: InstanceType<typeof UserCreateshoppingPreferenceIdsInput>;
    @Field(() => UserCreatehobbyIdsInput, {nullable:true})
    hobbyIds?: InstanceType<typeof UserCreatehobbyIdsInput>;
    @Field(() => String, {nullable:true})
    about?: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserCreatewishlistIdsInput, {nullable:true})
    wishlistIds?: InstanceType<typeof UserCreatewishlistIdsInput>;
    @Field(() => UserCreatesavedDealIdsInput, {nullable:true})
    savedDealIds?: InstanceType<typeof UserCreatesavedDealIdsInput>;
    @Field(() => UserCreateconversationIdsInput, {nullable:true})
    conversationIds?: InstanceType<typeof UserCreateconversationIdsInput>;
    @Field(() => UserCreatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserCreatedmIdsInput>;
    @Field(() => UserStripeNullableCreateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableCreateEnvelopeInput>;
    @Field(() => UserCreateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserCreateorderIdsInput>;
    @Field(() => UserCreatefollowedByIDsInput, {nullable:true})
    followedByIDs?: InstanceType<typeof UserCreatefollowedByIDsInput>;
    @Field(() => UserCreatefollowingIDsInput, {nullable:true})
    followingIDs?: InstanceType<typeof UserCreatefollowingIDsInput>;
    @Field(() => String, {nullable:true})
    legacyId?: string;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Boolean, {nullable:true})
    addedManually?: boolean;
    @Field(() => AltSignupNullableCreateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableCreateEnvelopeInput>;
    @Field(() => Platform, {nullable:true})
    registrationPlatform?: `${Platform}`;
    @Field(() => String, {nullable:true})
    instagramUsername?: string;
    @Field(() => String, {nullable:true})
    referralRockCode?: string;
    @Field(() => Boolean, {nullable:true})
    deactivated?: boolean;
    @Field(() => String, {nullable:true})
    signupV?: string;
    @Field(() => Boolean, {nullable:true})
    isParent?: boolean;
}

@InputType()
export class UserCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    firstName!: string;
    @Field(() => String, {nullable:false})
    lastName!: string;
    @Field(() => String, {nullable:false})
    email!: string;
    @Field(() => String, {nullable:false})
    countryCode!: string;
    @Field(() => String, {nullable:false})
    phoneNumber!: string;
    @Field(() => Boolean, {nullable:true})
    phoneNumberVerified?: boolean;
    @Field(() => UserCreaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserCreaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => String, {nullable:true})
    password?: string;
    @Field(() => String, {nullable:true})
    referrer?: string;
    @Field(() => Gender, {nullable:true})
    gender?: `${Gender}`;
    @Field(() => SizesNullableCreateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableCreateEnvelopeInput>;
    @Field(() => String, {nullable:true})
    displayPicture?: string;
    @Field(() => String, {nullable:true})
    personalEmail?: string;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => String, {nullable:true})
    eduInstituteId?: string;
    @Field(() => UserCreateshoppingPreferenceIdsInput, {nullable:true})
    shoppingPreferenceIds?: InstanceType<typeof UserCreateshoppingPreferenceIdsInput>;
    @Field(() => UserCreatehobbyIdsInput, {nullable:true})
    hobbyIds?: InstanceType<typeof UserCreatehobbyIdsInput>;
    @Field(() => String, {nullable:true})
    about?: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserCreatewishlistIdsInput, {nullable:true})
    wishlistIds?: InstanceType<typeof UserCreatewishlistIdsInput>;
    @Field(() => UserCreatesavedDealIdsInput, {nullable:true})
    savedDealIds?: InstanceType<typeof UserCreatesavedDealIdsInput>;
    @Field(() => UserCreateconversationIdsInput, {nullable:true})
    conversationIds?: InstanceType<typeof UserCreateconversationIdsInput>;
    @Field(() => UserCreatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserCreatedmIdsInput>;
    @Field(() => UserStripeNullableCreateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableCreateEnvelopeInput>;
    @Field(() => UserCreateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserCreateorderIdsInput>;
    @Field(() => UserCreatefollowedByIDsInput, {nullable:true})
    followedByIDs?: InstanceType<typeof UserCreatefollowedByIDsInput>;
    @Field(() => UserCreatefollowingIDsInput, {nullable:true})
    followingIDs?: InstanceType<typeof UserCreatefollowingIDsInput>;
    @Field(() => String, {nullable:true})
    legacyId?: string;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Boolean, {nullable:true})
    addedManually?: boolean;
    @Field(() => AltSignupNullableCreateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableCreateEnvelopeInput>;
    @Field(() => Platform, {nullable:true})
    registrationPlatform?: `${Platform}`;
    @Field(() => String, {nullable:true})
    instagramUsername?: string;
    @Field(() => String, {nullable:true})
    referralRockCode?: string;
    @Field(() => Boolean, {nullable:true})
    deactivated?: boolean;
    @Field(() => String, {nullable:true})
    signupV?: string;
    @Field(() => Boolean, {nullable:true})
    isParent?: boolean;
}

@InputType()
export class UserCreateNestedManyWithoutConversationsInput {
    @Field(() => [UserCreateWithoutConversationsInput], {nullable:true})
    @Type(() => UserCreateWithoutConversationsInput)
    create?: Array<UserCreateWithoutConversationsInput>;
    @Field(() => [UserCreateOrConnectWithoutConversationsInput], {nullable:true})
    @Type(() => UserCreateOrConnectWithoutConversationsInput)
    connectOrCreate?: Array<UserCreateOrConnectWithoutConversationsInput>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
}

@InputType()
export class UserCreateNestedManyWithoutEduInstituteInput {
    @Field(() => [UserCreateWithoutEduInstituteInput], {nullable:true})
    @Type(() => UserCreateWithoutEduInstituteInput)
    create?: Array<UserCreateWithoutEduInstituteInput>;
    @Field(() => [UserCreateOrConnectWithoutEduInstituteInput], {nullable:true})
    @Type(() => UserCreateOrConnectWithoutEduInstituteInput)
    connectOrCreate?: Array<UserCreateOrConnectWithoutEduInstituteInput>;
    @Field(() => UserCreateManyEduInstituteInputEnvelope, {nullable:true})
    @Type(() => UserCreateManyEduInstituteInputEnvelope)
    createMany?: InstanceType<typeof UserCreateManyEduInstituteInputEnvelope>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
}

@InputType()
export class UserCreateNestedManyWithoutFollowedByInput {
    @Field(() => [UserCreateWithoutFollowedByInput], {nullable:true})
    @Type(() => UserCreateWithoutFollowedByInput)
    create?: Array<UserCreateWithoutFollowedByInput>;
    @Field(() => [UserCreateOrConnectWithoutFollowedByInput], {nullable:true})
    @Type(() => UserCreateOrConnectWithoutFollowedByInput)
    connectOrCreate?: Array<UserCreateOrConnectWithoutFollowedByInput>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
}

@InputType()
export class UserCreateNestedManyWithoutFollowingInput {
    @Field(() => [UserCreateWithoutFollowingInput], {nullable:true})
    @Type(() => UserCreateWithoutFollowingInput)
    create?: Array<UserCreateWithoutFollowingInput>;
    @Field(() => [UserCreateOrConnectWithoutFollowingInput], {nullable:true})
    @Type(() => UserCreateOrConnectWithoutFollowingInput)
    connectOrCreate?: Array<UserCreateOrConnectWithoutFollowingInput>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
}

@InputType()
export class UserCreateNestedManyWithoutHobbiesInput {
    @Field(() => [UserCreateWithoutHobbiesInput], {nullable:true})
    @Type(() => UserCreateWithoutHobbiesInput)
    create?: Array<UserCreateWithoutHobbiesInput>;
    @Field(() => [UserCreateOrConnectWithoutHobbiesInput], {nullable:true})
    @Type(() => UserCreateOrConnectWithoutHobbiesInput)
    connectOrCreate?: Array<UserCreateOrConnectWithoutHobbiesInput>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
}

@InputType()
export class UserCreateNestedManyWithoutSavedDealsInput {
    @Field(() => [UserCreateWithoutSavedDealsInput], {nullable:true})
    @Type(() => UserCreateWithoutSavedDealsInput)
    create?: Array<UserCreateWithoutSavedDealsInput>;
    @Field(() => [UserCreateOrConnectWithoutSavedDealsInput], {nullable:true})
    @Type(() => UserCreateOrConnectWithoutSavedDealsInput)
    connectOrCreate?: Array<UserCreateOrConnectWithoutSavedDealsInput>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
}

@InputType()
export class UserCreateNestedManyWithoutShoppingPreferencesInput {
    @Field(() => [UserCreateWithoutShoppingPreferencesInput], {nullable:true})
    @Type(() => UserCreateWithoutShoppingPreferencesInput)
    create?: Array<UserCreateWithoutShoppingPreferencesInput>;
    @Field(() => [UserCreateOrConnectWithoutShoppingPreferencesInput], {nullable:true})
    @Type(() => UserCreateOrConnectWithoutShoppingPreferencesInput)
    connectOrCreate?: Array<UserCreateOrConnectWithoutShoppingPreferencesInput>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
}

@InputType()
export class UserCreateNestedManyWithoutWishlistInput {
    @Field(() => [UserCreateWithoutWishlistInput], {nullable:true})
    @Type(() => UserCreateWithoutWishlistInput)
    create?: Array<UserCreateWithoutWishlistInput>;
    @Field(() => [UserCreateOrConnectWithoutWishlistInput], {nullable:true})
    @Type(() => UserCreateOrConnectWithoutWishlistInput)
    connectOrCreate?: Array<UserCreateOrConnectWithoutWishlistInput>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
}

@InputType()
export class UserCreateNestedOneWithoutProductListingsInput {
    @Field(() => UserCreateWithoutProductListingsInput, {nullable:true})
    @Type(() => UserCreateWithoutProductListingsInput)
    create?: InstanceType<typeof UserCreateWithoutProductListingsInput>;
    @Field(() => UserCreateOrConnectWithoutProductListingsInput, {nullable:true})
    @Type(() => UserCreateOrConnectWithoutProductListingsInput)
    connectOrCreate?: InstanceType<typeof UserCreateOrConnectWithoutProductListingsInput>;
    @Field(() => UserWhereUniqueInput, {nullable:true})
    @Type(() => UserWhereUniqueInput)
    connect?: Prisma.AtLeast<UserWhereUniqueInput, 'id'>;
}

@InputType()
export class UserCreateNestedOneWithoutReportedProductsInput {
    @Field(() => UserCreateWithoutReportedProductsInput, {nullable:true})
    @Type(() => UserCreateWithoutReportedProductsInput)
    create?: InstanceType<typeof UserCreateWithoutReportedProductsInput>;
    @Field(() => UserCreateOrConnectWithoutReportedProductsInput, {nullable:true})
    @Type(() => UserCreateOrConnectWithoutReportedProductsInput)
    connectOrCreate?: InstanceType<typeof UserCreateOrConnectWithoutReportedProductsInput>;
    @Field(() => UserWhereUniqueInput, {nullable:true})
    @Type(() => UserWhereUniqueInput)
    connect?: Prisma.AtLeast<UserWhereUniqueInput, 'id'>;
}

@InputType()
export class UserCreateOrConnectWithoutConversationsInput {
    @Field(() => UserWhereUniqueInput, {nullable:false})
    @Type(() => UserWhereUniqueInput)
    where!: Prisma.AtLeast<UserWhereUniqueInput, 'id'>;
    @Field(() => UserCreateWithoutConversationsInput, {nullable:false})
    @Type(() => UserCreateWithoutConversationsInput)
    create!: InstanceType<typeof UserCreateWithoutConversationsInput>;
}

@InputType()
export class UserCreateOrConnectWithoutEduInstituteInput {
    @Field(() => UserWhereUniqueInput, {nullable:false})
    @Type(() => UserWhereUniqueInput)
    where!: Prisma.AtLeast<UserWhereUniqueInput, 'id'>;
    @Field(() => UserCreateWithoutEduInstituteInput, {nullable:false})
    @Type(() => UserCreateWithoutEduInstituteInput)
    create!: InstanceType<typeof UserCreateWithoutEduInstituteInput>;
}

@InputType()
export class UserCreateOrConnectWithoutFollowedByInput {
    @Field(() => UserWhereUniqueInput, {nullable:false})
    @Type(() => UserWhereUniqueInput)
    where!: Prisma.AtLeast<UserWhereUniqueInput, 'id'>;
    @Field(() => UserCreateWithoutFollowedByInput, {nullable:false})
    @Type(() => UserCreateWithoutFollowedByInput)
    create!: InstanceType<typeof UserCreateWithoutFollowedByInput>;
}

@InputType()
export class UserCreateOrConnectWithoutFollowingInput {
    @Field(() => UserWhereUniqueInput, {nullable:false})
    @Type(() => UserWhereUniqueInput)
    where!: Prisma.AtLeast<UserWhereUniqueInput, 'id'>;
    @Field(() => UserCreateWithoutFollowingInput, {nullable:false})
    @Type(() => UserCreateWithoutFollowingInput)
    create!: InstanceType<typeof UserCreateWithoutFollowingInput>;
}

@InputType()
export class UserCreateOrConnectWithoutHobbiesInput {
    @Field(() => UserWhereUniqueInput, {nullable:false})
    @Type(() => UserWhereUniqueInput)
    where!: Prisma.AtLeast<UserWhereUniqueInput, 'id'>;
    @Field(() => UserCreateWithoutHobbiesInput, {nullable:false})
    @Type(() => UserCreateWithoutHobbiesInput)
    create!: InstanceType<typeof UserCreateWithoutHobbiesInput>;
}

@InputType()
export class UserCreateOrConnectWithoutProductListingsInput {
    @Field(() => UserWhereUniqueInput, {nullable:false})
    @Type(() => UserWhereUniqueInput)
    where!: Prisma.AtLeast<UserWhereUniqueInput, 'id'>;
    @Field(() => UserCreateWithoutProductListingsInput, {nullable:false})
    @Type(() => UserCreateWithoutProductListingsInput)
    create!: InstanceType<typeof UserCreateWithoutProductListingsInput>;
}

@InputType()
export class UserCreateOrConnectWithoutReportedProductsInput {
    @Field(() => UserWhereUniqueInput, {nullable:false})
    @Type(() => UserWhereUniqueInput)
    where!: Prisma.AtLeast<UserWhereUniqueInput, 'id'>;
    @Field(() => UserCreateWithoutReportedProductsInput, {nullable:false})
    @Type(() => UserCreateWithoutReportedProductsInput)
    create!: InstanceType<typeof UserCreateWithoutReportedProductsInput>;
}

@InputType()
export class UserCreateOrConnectWithoutSavedDealsInput {
    @Field(() => UserWhereUniqueInput, {nullable:false})
    @Type(() => UserWhereUniqueInput)
    where!: Prisma.AtLeast<UserWhereUniqueInput, 'id'>;
    @Field(() => UserCreateWithoutSavedDealsInput, {nullable:false})
    @Type(() => UserCreateWithoutSavedDealsInput)
    create!: InstanceType<typeof UserCreateWithoutSavedDealsInput>;
}

@InputType()
export class UserCreateOrConnectWithoutShoppingPreferencesInput {
    @Field(() => UserWhereUniqueInput, {nullable:false})
    @Type(() => UserWhereUniqueInput)
    where!: Prisma.AtLeast<UserWhereUniqueInput, 'id'>;
    @Field(() => UserCreateWithoutShoppingPreferencesInput, {nullable:false})
    @Type(() => UserCreateWithoutShoppingPreferencesInput)
    create!: InstanceType<typeof UserCreateWithoutShoppingPreferencesInput>;
}

@InputType()
export class UserCreateOrConnectWithoutWishlistInput {
    @Field(() => UserWhereUniqueInput, {nullable:false})
    @Type(() => UserWhereUniqueInput)
    where!: Prisma.AtLeast<UserWhereUniqueInput, 'id'>;
    @Field(() => UserCreateWithoutWishlistInput, {nullable:false})
    @Type(() => UserCreateWithoutWishlistInput)
    create!: InstanceType<typeof UserCreateWithoutWishlistInput>;
}

@InputType()
export class UserCreateWithoutConversationsInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    firstName!: string;
    @Field(() => String, {nullable:false})
    lastName!: string;
    @Field(() => String, {nullable:false})
    email!: string;
    @Field(() => String, {nullable:false})
    countryCode!: string;
    @Field(() => String, {nullable:false})
    phoneNumber!: string;
    @Field(() => Boolean, {nullable:true})
    phoneNumberVerified?: boolean;
    @Field(() => UserCreaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserCreaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => String, {nullable:true})
    password?: string;
    @Field(() => String, {nullable:true})
    referrer?: string;
    @Field(() => Gender, {nullable:true})
    gender?: `${Gender}`;
    @Field(() => SizesNullableCreateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableCreateEnvelopeInput>;
    @Field(() => String, {nullable:true})
    displayPicture?: string;
    @Field(() => String, {nullable:true})
    personalEmail?: string;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => String, {nullable:true})
    about?: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserCreatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserCreatedmIdsInput>;
    @Field(() => UserStripeNullableCreateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableCreateEnvelopeInput>;
    @Field(() => UserCreateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserCreateorderIdsInput>;
    @Field(() => String, {nullable:true})
    legacyId?: string;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Boolean, {nullable:true})
    addedManually?: boolean;
    @Field(() => AltSignupNullableCreateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableCreateEnvelopeInput>;
    @Field(() => Platform, {nullable:true})
    registrationPlatform?: `${Platform}`;
    @Field(() => String, {nullable:true})
    instagramUsername?: string;
    @Field(() => String, {nullable:true})
    referralRockCode?: string;
    @Field(() => Boolean, {nullable:true})
    deactivated?: boolean;
    @Field(() => String, {nullable:true})
    signupV?: string;
    @Field(() => Boolean, {nullable:true})
    isParent?: boolean;
    @Field(() => EduInstituteCreateNestedOneWithoutStudentsInput, {nullable:true})
    eduInstitute?: InstanceType<typeof EduInstituteCreateNestedOneWithoutStudentsInput>;
    @Field(() => ShoppingPreferenceCreateNestedManyWithoutUsersInput, {nullable:true})
    shoppingPreferences?: InstanceType<typeof ShoppingPreferenceCreateNestedManyWithoutUsersInput>;
    @Field(() => HobbyCreateNestedManyWithoutUsersInput, {nullable:true})
    hobbies?: InstanceType<typeof HobbyCreateNestedManyWithoutUsersInput>;
    @Field(() => ProductListingCreateNestedManyWithoutUploaderInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingCreateNestedManyWithoutUploaderInput>;
    @Field(() => ProductReportCreateNestedManyWithoutReporterInput, {nullable:true})
    reportedProducts?: InstanceType<typeof ProductReportCreateNestedManyWithoutReporterInput>;
    @Field(() => ProductListingCreateNestedManyWithoutWishlistedByInput, {nullable:true})
    wishlist?: InstanceType<typeof ProductListingCreateNestedManyWithoutWishlistedByInput>;
    @Field(() => DealCreateNestedManyWithoutSavedUsersInput, {nullable:true})
    savedDeals?: InstanceType<typeof DealCreateNestedManyWithoutSavedUsersInput>;
    @Field(() => UserCreateNestedManyWithoutFollowingInput, {nullable:true})
    followedBy?: InstanceType<typeof UserCreateNestedManyWithoutFollowingInput>;
    @Field(() => UserCreateNestedManyWithoutFollowedByInput, {nullable:true})
    following?: InstanceType<typeof UserCreateNestedManyWithoutFollowedByInput>;
}

@InputType()
export class UserCreateWithoutEduInstituteInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    firstName!: string;
    @Field(() => String, {nullable:false})
    lastName!: string;
    @Field(() => String, {nullable:false})
    email!: string;
    @Field(() => String, {nullable:false})
    countryCode!: string;
    @Field(() => String, {nullable:false})
    phoneNumber!: string;
    @Field(() => Boolean, {nullable:true})
    phoneNumberVerified?: boolean;
    @Field(() => UserCreaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserCreaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => String, {nullable:true})
    password?: string;
    @Field(() => String, {nullable:true})
    referrer?: string;
    @Field(() => Gender, {nullable:true})
    gender?: `${Gender}`;
    @Field(() => SizesNullableCreateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableCreateEnvelopeInput>;
    @Field(() => String, {nullable:true})
    displayPicture?: string;
    @Field(() => String, {nullable:true})
    personalEmail?: string;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => String, {nullable:true})
    about?: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserCreatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserCreatedmIdsInput>;
    @Field(() => UserStripeNullableCreateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableCreateEnvelopeInput>;
    @Field(() => UserCreateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserCreateorderIdsInput>;
    @Field(() => String, {nullable:true})
    legacyId?: string;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Boolean, {nullable:true})
    addedManually?: boolean;
    @Field(() => AltSignupNullableCreateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableCreateEnvelopeInput>;
    @Field(() => Platform, {nullable:true})
    registrationPlatform?: `${Platform}`;
    @Field(() => String, {nullable:true})
    instagramUsername?: string;
    @Field(() => String, {nullable:true})
    referralRockCode?: string;
    @Field(() => Boolean, {nullable:true})
    deactivated?: boolean;
    @Field(() => String, {nullable:true})
    signupV?: string;
    @Field(() => Boolean, {nullable:true})
    isParent?: boolean;
    @Field(() => ShoppingPreferenceCreateNestedManyWithoutUsersInput, {nullable:true})
    shoppingPreferences?: InstanceType<typeof ShoppingPreferenceCreateNestedManyWithoutUsersInput>;
    @Field(() => HobbyCreateNestedManyWithoutUsersInput, {nullable:true})
    hobbies?: InstanceType<typeof HobbyCreateNestedManyWithoutUsersInput>;
    @Field(() => ProductListingCreateNestedManyWithoutUploaderInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingCreateNestedManyWithoutUploaderInput>;
    @Field(() => ProductReportCreateNestedManyWithoutReporterInput, {nullable:true})
    reportedProducts?: InstanceType<typeof ProductReportCreateNestedManyWithoutReporterInput>;
    @Field(() => ProductListingCreateNestedManyWithoutWishlistedByInput, {nullable:true})
    wishlist?: InstanceType<typeof ProductListingCreateNestedManyWithoutWishlistedByInput>;
    @Field(() => DealCreateNestedManyWithoutSavedUsersInput, {nullable:true})
    savedDeals?: InstanceType<typeof DealCreateNestedManyWithoutSavedUsersInput>;
    @Field(() => ConversationCreateNestedManyWithoutParticipantsInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationCreateNestedManyWithoutParticipantsInput>;
    @Field(() => UserCreateNestedManyWithoutFollowingInput, {nullable:true})
    followedBy?: InstanceType<typeof UserCreateNestedManyWithoutFollowingInput>;
    @Field(() => UserCreateNestedManyWithoutFollowedByInput, {nullable:true})
    following?: InstanceType<typeof UserCreateNestedManyWithoutFollowedByInput>;
}

@InputType()
export class UserCreateWithoutFollowedByInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    firstName!: string;
    @Field(() => String, {nullable:false})
    lastName!: string;
    @Field(() => String, {nullable:false})
    email!: string;
    @Field(() => String, {nullable:false})
    countryCode!: string;
    @Field(() => String, {nullable:false})
    phoneNumber!: string;
    @Field(() => Boolean, {nullable:true})
    phoneNumberVerified?: boolean;
    @Field(() => UserCreaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserCreaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => String, {nullable:true})
    password?: string;
    @Field(() => String, {nullable:true})
    referrer?: string;
    @Field(() => Gender, {nullable:true})
    gender?: `${Gender}`;
    @Field(() => SizesNullableCreateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableCreateEnvelopeInput>;
    @Field(() => String, {nullable:true})
    displayPicture?: string;
    @Field(() => String, {nullable:true})
    personalEmail?: string;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => String, {nullable:true})
    about?: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserCreatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserCreatedmIdsInput>;
    @Field(() => UserStripeNullableCreateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableCreateEnvelopeInput>;
    @Field(() => UserCreateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserCreateorderIdsInput>;
    @Field(() => String, {nullable:true})
    legacyId?: string;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Boolean, {nullable:true})
    addedManually?: boolean;
    @Field(() => AltSignupNullableCreateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableCreateEnvelopeInput>;
    @Field(() => Platform, {nullable:true})
    registrationPlatform?: `${Platform}`;
    @Field(() => String, {nullable:true})
    instagramUsername?: string;
    @Field(() => String, {nullable:true})
    referralRockCode?: string;
    @Field(() => Boolean, {nullable:true})
    deactivated?: boolean;
    @Field(() => String, {nullable:true})
    signupV?: string;
    @Field(() => Boolean, {nullable:true})
    isParent?: boolean;
    @Field(() => EduInstituteCreateNestedOneWithoutStudentsInput, {nullable:true})
    eduInstitute?: InstanceType<typeof EduInstituteCreateNestedOneWithoutStudentsInput>;
    @Field(() => ShoppingPreferenceCreateNestedManyWithoutUsersInput, {nullable:true})
    shoppingPreferences?: InstanceType<typeof ShoppingPreferenceCreateNestedManyWithoutUsersInput>;
    @Field(() => HobbyCreateNestedManyWithoutUsersInput, {nullable:true})
    hobbies?: InstanceType<typeof HobbyCreateNestedManyWithoutUsersInput>;
    @Field(() => ProductListingCreateNestedManyWithoutUploaderInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingCreateNestedManyWithoutUploaderInput>;
    @Field(() => ProductReportCreateNestedManyWithoutReporterInput, {nullable:true})
    reportedProducts?: InstanceType<typeof ProductReportCreateNestedManyWithoutReporterInput>;
    @Field(() => ProductListingCreateNestedManyWithoutWishlistedByInput, {nullable:true})
    wishlist?: InstanceType<typeof ProductListingCreateNestedManyWithoutWishlistedByInput>;
    @Field(() => DealCreateNestedManyWithoutSavedUsersInput, {nullable:true})
    savedDeals?: InstanceType<typeof DealCreateNestedManyWithoutSavedUsersInput>;
    @Field(() => ConversationCreateNestedManyWithoutParticipantsInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationCreateNestedManyWithoutParticipantsInput>;
    @Field(() => UserCreateNestedManyWithoutFollowedByInput, {nullable:true})
    following?: InstanceType<typeof UserCreateNestedManyWithoutFollowedByInput>;
}

@InputType()
export class UserCreateWithoutFollowingInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    firstName!: string;
    @Field(() => String, {nullable:false})
    lastName!: string;
    @Field(() => String, {nullable:false})
    email!: string;
    @Field(() => String, {nullable:false})
    countryCode!: string;
    @Field(() => String, {nullable:false})
    phoneNumber!: string;
    @Field(() => Boolean, {nullable:true})
    phoneNumberVerified?: boolean;
    @Field(() => UserCreaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserCreaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => String, {nullable:true})
    password?: string;
    @Field(() => String, {nullable:true})
    referrer?: string;
    @Field(() => Gender, {nullable:true})
    gender?: `${Gender}`;
    @Field(() => SizesNullableCreateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableCreateEnvelopeInput>;
    @Field(() => String, {nullable:true})
    displayPicture?: string;
    @Field(() => String, {nullable:true})
    personalEmail?: string;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => String, {nullable:true})
    about?: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserCreatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserCreatedmIdsInput>;
    @Field(() => UserStripeNullableCreateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableCreateEnvelopeInput>;
    @Field(() => UserCreateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserCreateorderIdsInput>;
    @Field(() => String, {nullable:true})
    legacyId?: string;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Boolean, {nullable:true})
    addedManually?: boolean;
    @Field(() => AltSignupNullableCreateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableCreateEnvelopeInput>;
    @Field(() => Platform, {nullable:true})
    registrationPlatform?: `${Platform}`;
    @Field(() => String, {nullable:true})
    instagramUsername?: string;
    @Field(() => String, {nullable:true})
    referralRockCode?: string;
    @Field(() => Boolean, {nullable:true})
    deactivated?: boolean;
    @Field(() => String, {nullable:true})
    signupV?: string;
    @Field(() => Boolean, {nullable:true})
    isParent?: boolean;
    @Field(() => EduInstituteCreateNestedOneWithoutStudentsInput, {nullable:true})
    eduInstitute?: InstanceType<typeof EduInstituteCreateNestedOneWithoutStudentsInput>;
    @Field(() => ShoppingPreferenceCreateNestedManyWithoutUsersInput, {nullable:true})
    shoppingPreferences?: InstanceType<typeof ShoppingPreferenceCreateNestedManyWithoutUsersInput>;
    @Field(() => HobbyCreateNestedManyWithoutUsersInput, {nullable:true})
    hobbies?: InstanceType<typeof HobbyCreateNestedManyWithoutUsersInput>;
    @Field(() => ProductListingCreateNestedManyWithoutUploaderInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingCreateNestedManyWithoutUploaderInput>;
    @Field(() => ProductReportCreateNestedManyWithoutReporterInput, {nullable:true})
    reportedProducts?: InstanceType<typeof ProductReportCreateNestedManyWithoutReporterInput>;
    @Field(() => ProductListingCreateNestedManyWithoutWishlistedByInput, {nullable:true})
    wishlist?: InstanceType<typeof ProductListingCreateNestedManyWithoutWishlistedByInput>;
    @Field(() => DealCreateNestedManyWithoutSavedUsersInput, {nullable:true})
    savedDeals?: InstanceType<typeof DealCreateNestedManyWithoutSavedUsersInput>;
    @Field(() => ConversationCreateNestedManyWithoutParticipantsInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationCreateNestedManyWithoutParticipantsInput>;
    @Field(() => UserCreateNestedManyWithoutFollowingInput, {nullable:true})
    followedBy?: InstanceType<typeof UserCreateNestedManyWithoutFollowingInput>;
}

@InputType()
export class UserCreateWithoutHobbiesInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    firstName!: string;
    @Field(() => String, {nullable:false})
    lastName!: string;
    @Field(() => String, {nullable:false})
    email!: string;
    @Field(() => String, {nullable:false})
    countryCode!: string;
    @Field(() => String, {nullable:false})
    phoneNumber!: string;
    @Field(() => Boolean, {nullable:true})
    phoneNumberVerified?: boolean;
    @Field(() => UserCreaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserCreaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => String, {nullable:true})
    password?: string;
    @Field(() => String, {nullable:true})
    referrer?: string;
    @Field(() => Gender, {nullable:true})
    gender?: `${Gender}`;
    @Field(() => SizesNullableCreateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableCreateEnvelopeInput>;
    @Field(() => String, {nullable:true})
    displayPicture?: string;
    @Field(() => String, {nullable:true})
    personalEmail?: string;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => String, {nullable:true})
    about?: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserCreatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserCreatedmIdsInput>;
    @Field(() => UserStripeNullableCreateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableCreateEnvelopeInput>;
    @Field(() => UserCreateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserCreateorderIdsInput>;
    @Field(() => String, {nullable:true})
    legacyId?: string;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Boolean, {nullable:true})
    addedManually?: boolean;
    @Field(() => AltSignupNullableCreateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableCreateEnvelopeInput>;
    @Field(() => Platform, {nullable:true})
    registrationPlatform?: `${Platform}`;
    @Field(() => String, {nullable:true})
    instagramUsername?: string;
    @Field(() => String, {nullable:true})
    referralRockCode?: string;
    @Field(() => Boolean, {nullable:true})
    deactivated?: boolean;
    @Field(() => String, {nullable:true})
    signupV?: string;
    @Field(() => Boolean, {nullable:true})
    isParent?: boolean;
    @Field(() => EduInstituteCreateNestedOneWithoutStudentsInput, {nullable:true})
    eduInstitute?: InstanceType<typeof EduInstituteCreateNestedOneWithoutStudentsInput>;
    @Field(() => ShoppingPreferenceCreateNestedManyWithoutUsersInput, {nullable:true})
    shoppingPreferences?: InstanceType<typeof ShoppingPreferenceCreateNestedManyWithoutUsersInput>;
    @Field(() => ProductListingCreateNestedManyWithoutUploaderInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingCreateNestedManyWithoutUploaderInput>;
    @Field(() => ProductReportCreateNestedManyWithoutReporterInput, {nullable:true})
    reportedProducts?: InstanceType<typeof ProductReportCreateNestedManyWithoutReporterInput>;
    @Field(() => ProductListingCreateNestedManyWithoutWishlistedByInput, {nullable:true})
    wishlist?: InstanceType<typeof ProductListingCreateNestedManyWithoutWishlistedByInput>;
    @Field(() => DealCreateNestedManyWithoutSavedUsersInput, {nullable:true})
    savedDeals?: InstanceType<typeof DealCreateNestedManyWithoutSavedUsersInput>;
    @Field(() => ConversationCreateNestedManyWithoutParticipantsInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationCreateNestedManyWithoutParticipantsInput>;
    @Field(() => UserCreateNestedManyWithoutFollowingInput, {nullable:true})
    followedBy?: InstanceType<typeof UserCreateNestedManyWithoutFollowingInput>;
    @Field(() => UserCreateNestedManyWithoutFollowedByInput, {nullable:true})
    following?: InstanceType<typeof UserCreateNestedManyWithoutFollowedByInput>;
}

@InputType()
export class UserCreateWithoutProductListingsInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    firstName!: string;
    @Field(() => String, {nullable:false})
    lastName!: string;
    @Field(() => String, {nullable:false})
    email!: string;
    @Field(() => String, {nullable:false})
    countryCode!: string;
    @Field(() => String, {nullable:false})
    phoneNumber!: string;
    @Field(() => Boolean, {nullable:true})
    phoneNumberVerified?: boolean;
    @Field(() => UserCreaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserCreaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => String, {nullable:true})
    password?: string;
    @Field(() => String, {nullable:true})
    referrer?: string;
    @Field(() => Gender, {nullable:true})
    gender?: `${Gender}`;
    @Field(() => SizesNullableCreateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableCreateEnvelopeInput>;
    @Field(() => String, {nullable:true})
    displayPicture?: string;
    @Field(() => String, {nullable:true})
    personalEmail?: string;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => String, {nullable:true})
    about?: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserCreatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserCreatedmIdsInput>;
    @Field(() => UserStripeNullableCreateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableCreateEnvelopeInput>;
    @Field(() => UserCreateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserCreateorderIdsInput>;
    @Field(() => String, {nullable:true})
    legacyId?: string;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Boolean, {nullable:true})
    addedManually?: boolean;
    @Field(() => AltSignupNullableCreateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableCreateEnvelopeInput>;
    @Field(() => Platform, {nullable:true})
    registrationPlatform?: `${Platform}`;
    @Field(() => String, {nullable:true})
    instagramUsername?: string;
    @Field(() => String, {nullable:true})
    referralRockCode?: string;
    @Field(() => Boolean, {nullable:true})
    deactivated?: boolean;
    @Field(() => String, {nullable:true})
    signupV?: string;
    @Field(() => Boolean, {nullable:true})
    isParent?: boolean;
    @Field(() => EduInstituteCreateNestedOneWithoutStudentsInput, {nullable:true})
    eduInstitute?: InstanceType<typeof EduInstituteCreateNestedOneWithoutStudentsInput>;
    @Field(() => ShoppingPreferenceCreateNestedManyWithoutUsersInput, {nullable:true})
    shoppingPreferences?: InstanceType<typeof ShoppingPreferenceCreateNestedManyWithoutUsersInput>;
    @Field(() => HobbyCreateNestedManyWithoutUsersInput, {nullable:true})
    hobbies?: InstanceType<typeof HobbyCreateNestedManyWithoutUsersInput>;
    @Field(() => ProductReportCreateNestedManyWithoutReporterInput, {nullable:true})
    reportedProducts?: InstanceType<typeof ProductReportCreateNestedManyWithoutReporterInput>;
    @Field(() => ProductListingCreateNestedManyWithoutWishlistedByInput, {nullable:true})
    wishlist?: InstanceType<typeof ProductListingCreateNestedManyWithoutWishlistedByInput>;
    @Field(() => DealCreateNestedManyWithoutSavedUsersInput, {nullable:true})
    savedDeals?: InstanceType<typeof DealCreateNestedManyWithoutSavedUsersInput>;
    @Field(() => ConversationCreateNestedManyWithoutParticipantsInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationCreateNestedManyWithoutParticipantsInput>;
    @Field(() => UserCreateNestedManyWithoutFollowingInput, {nullable:true})
    followedBy?: InstanceType<typeof UserCreateNestedManyWithoutFollowingInput>;
    @Field(() => UserCreateNestedManyWithoutFollowedByInput, {nullable:true})
    following?: InstanceType<typeof UserCreateNestedManyWithoutFollowedByInput>;
}

@InputType()
export class UserCreateWithoutReportedProductsInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    firstName!: string;
    @Field(() => String, {nullable:false})
    lastName!: string;
    @Field(() => String, {nullable:false})
    email!: string;
    @Field(() => String, {nullable:false})
    countryCode!: string;
    @Field(() => String, {nullable:false})
    phoneNumber!: string;
    @Field(() => Boolean, {nullable:true})
    phoneNumberVerified?: boolean;
    @Field(() => UserCreaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserCreaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => String, {nullable:true})
    password?: string;
    @Field(() => String, {nullable:true})
    referrer?: string;
    @Field(() => Gender, {nullable:true})
    gender?: `${Gender}`;
    @Field(() => SizesNullableCreateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableCreateEnvelopeInput>;
    @Field(() => String, {nullable:true})
    displayPicture?: string;
    @Field(() => String, {nullable:true})
    personalEmail?: string;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => String, {nullable:true})
    about?: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserCreatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserCreatedmIdsInput>;
    @Field(() => UserStripeNullableCreateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableCreateEnvelopeInput>;
    @Field(() => UserCreateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserCreateorderIdsInput>;
    @Field(() => String, {nullable:true})
    legacyId?: string;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Boolean, {nullable:true})
    addedManually?: boolean;
    @Field(() => AltSignupNullableCreateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableCreateEnvelopeInput>;
    @Field(() => Platform, {nullable:true})
    registrationPlatform?: `${Platform}`;
    @Field(() => String, {nullable:true})
    instagramUsername?: string;
    @Field(() => String, {nullable:true})
    referralRockCode?: string;
    @Field(() => Boolean, {nullable:true})
    deactivated?: boolean;
    @Field(() => String, {nullable:true})
    signupV?: string;
    @Field(() => Boolean, {nullable:true})
    isParent?: boolean;
    @Field(() => EduInstituteCreateNestedOneWithoutStudentsInput, {nullable:true})
    eduInstitute?: InstanceType<typeof EduInstituteCreateNestedOneWithoutStudentsInput>;
    @Field(() => ShoppingPreferenceCreateNestedManyWithoutUsersInput, {nullable:true})
    shoppingPreferences?: InstanceType<typeof ShoppingPreferenceCreateNestedManyWithoutUsersInput>;
    @Field(() => HobbyCreateNestedManyWithoutUsersInput, {nullable:true})
    hobbies?: InstanceType<typeof HobbyCreateNestedManyWithoutUsersInput>;
    @Field(() => ProductListingCreateNestedManyWithoutUploaderInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingCreateNestedManyWithoutUploaderInput>;
    @Field(() => ProductListingCreateNestedManyWithoutWishlistedByInput, {nullable:true})
    wishlist?: InstanceType<typeof ProductListingCreateNestedManyWithoutWishlistedByInput>;
    @Field(() => DealCreateNestedManyWithoutSavedUsersInput, {nullable:true})
    savedDeals?: InstanceType<typeof DealCreateNestedManyWithoutSavedUsersInput>;
    @Field(() => ConversationCreateNestedManyWithoutParticipantsInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationCreateNestedManyWithoutParticipantsInput>;
    @Field(() => UserCreateNestedManyWithoutFollowingInput, {nullable:true})
    followedBy?: InstanceType<typeof UserCreateNestedManyWithoutFollowingInput>;
    @Field(() => UserCreateNestedManyWithoutFollowedByInput, {nullable:true})
    following?: InstanceType<typeof UserCreateNestedManyWithoutFollowedByInput>;
}

@InputType()
export class UserCreateWithoutSavedDealsInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    firstName!: string;
    @Field(() => String, {nullable:false})
    lastName!: string;
    @Field(() => String, {nullable:false})
    email!: string;
    @Field(() => String, {nullable:false})
    countryCode!: string;
    @Field(() => String, {nullable:false})
    phoneNumber!: string;
    @Field(() => Boolean, {nullable:true})
    phoneNumberVerified?: boolean;
    @Field(() => UserCreaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserCreaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => String, {nullable:true})
    password?: string;
    @Field(() => String, {nullable:true})
    referrer?: string;
    @Field(() => Gender, {nullable:true})
    gender?: `${Gender}`;
    @Field(() => SizesNullableCreateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableCreateEnvelopeInput>;
    @Field(() => String, {nullable:true})
    displayPicture?: string;
    @Field(() => String, {nullable:true})
    personalEmail?: string;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => String, {nullable:true})
    about?: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserCreatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserCreatedmIdsInput>;
    @Field(() => UserStripeNullableCreateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableCreateEnvelopeInput>;
    @Field(() => UserCreateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserCreateorderIdsInput>;
    @Field(() => String, {nullable:true})
    legacyId?: string;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Boolean, {nullable:true})
    addedManually?: boolean;
    @Field(() => AltSignupNullableCreateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableCreateEnvelopeInput>;
    @Field(() => Platform, {nullable:true})
    registrationPlatform?: `${Platform}`;
    @Field(() => String, {nullable:true})
    instagramUsername?: string;
    @Field(() => String, {nullable:true})
    referralRockCode?: string;
    @Field(() => Boolean, {nullable:true})
    deactivated?: boolean;
    @Field(() => String, {nullable:true})
    signupV?: string;
    @Field(() => Boolean, {nullable:true})
    isParent?: boolean;
    @Field(() => EduInstituteCreateNestedOneWithoutStudentsInput, {nullable:true})
    eduInstitute?: InstanceType<typeof EduInstituteCreateNestedOneWithoutStudentsInput>;
    @Field(() => ShoppingPreferenceCreateNestedManyWithoutUsersInput, {nullable:true})
    shoppingPreferences?: InstanceType<typeof ShoppingPreferenceCreateNestedManyWithoutUsersInput>;
    @Field(() => HobbyCreateNestedManyWithoutUsersInput, {nullable:true})
    hobbies?: InstanceType<typeof HobbyCreateNestedManyWithoutUsersInput>;
    @Field(() => ProductListingCreateNestedManyWithoutUploaderInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingCreateNestedManyWithoutUploaderInput>;
    @Field(() => ProductReportCreateNestedManyWithoutReporterInput, {nullable:true})
    reportedProducts?: InstanceType<typeof ProductReportCreateNestedManyWithoutReporterInput>;
    @Field(() => ProductListingCreateNestedManyWithoutWishlistedByInput, {nullable:true})
    wishlist?: InstanceType<typeof ProductListingCreateNestedManyWithoutWishlistedByInput>;
    @Field(() => ConversationCreateNestedManyWithoutParticipantsInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationCreateNestedManyWithoutParticipantsInput>;
    @Field(() => UserCreateNestedManyWithoutFollowingInput, {nullable:true})
    followedBy?: InstanceType<typeof UserCreateNestedManyWithoutFollowingInput>;
    @Field(() => UserCreateNestedManyWithoutFollowedByInput, {nullable:true})
    following?: InstanceType<typeof UserCreateNestedManyWithoutFollowedByInput>;
}

@InputType()
export class UserCreateWithoutShoppingPreferencesInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    firstName!: string;
    @Field(() => String, {nullable:false})
    lastName!: string;
    @Field(() => String, {nullable:false})
    email!: string;
    @Field(() => String, {nullable:false})
    countryCode!: string;
    @Field(() => String, {nullable:false})
    phoneNumber!: string;
    @Field(() => Boolean, {nullable:true})
    phoneNumberVerified?: boolean;
    @Field(() => UserCreaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserCreaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => String, {nullable:true})
    password?: string;
    @Field(() => String, {nullable:true})
    referrer?: string;
    @Field(() => Gender, {nullable:true})
    gender?: `${Gender}`;
    @Field(() => SizesNullableCreateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableCreateEnvelopeInput>;
    @Field(() => String, {nullable:true})
    displayPicture?: string;
    @Field(() => String, {nullable:true})
    personalEmail?: string;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => String, {nullable:true})
    about?: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserCreatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserCreatedmIdsInput>;
    @Field(() => UserStripeNullableCreateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableCreateEnvelopeInput>;
    @Field(() => UserCreateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserCreateorderIdsInput>;
    @Field(() => String, {nullable:true})
    legacyId?: string;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Boolean, {nullable:true})
    addedManually?: boolean;
    @Field(() => AltSignupNullableCreateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableCreateEnvelopeInput>;
    @Field(() => Platform, {nullable:true})
    registrationPlatform?: `${Platform}`;
    @Field(() => String, {nullable:true})
    instagramUsername?: string;
    @Field(() => String, {nullable:true})
    referralRockCode?: string;
    @Field(() => Boolean, {nullable:true})
    deactivated?: boolean;
    @Field(() => String, {nullable:true})
    signupV?: string;
    @Field(() => Boolean, {nullable:true})
    isParent?: boolean;
    @Field(() => EduInstituteCreateNestedOneWithoutStudentsInput, {nullable:true})
    eduInstitute?: InstanceType<typeof EduInstituteCreateNestedOneWithoutStudentsInput>;
    @Field(() => HobbyCreateNestedManyWithoutUsersInput, {nullable:true})
    hobbies?: InstanceType<typeof HobbyCreateNestedManyWithoutUsersInput>;
    @Field(() => ProductListingCreateNestedManyWithoutUploaderInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingCreateNestedManyWithoutUploaderInput>;
    @Field(() => ProductReportCreateNestedManyWithoutReporterInput, {nullable:true})
    reportedProducts?: InstanceType<typeof ProductReportCreateNestedManyWithoutReporterInput>;
    @Field(() => ProductListingCreateNestedManyWithoutWishlistedByInput, {nullable:true})
    wishlist?: InstanceType<typeof ProductListingCreateNestedManyWithoutWishlistedByInput>;
    @Field(() => DealCreateNestedManyWithoutSavedUsersInput, {nullable:true})
    savedDeals?: InstanceType<typeof DealCreateNestedManyWithoutSavedUsersInput>;
    @Field(() => ConversationCreateNestedManyWithoutParticipantsInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationCreateNestedManyWithoutParticipantsInput>;
    @Field(() => UserCreateNestedManyWithoutFollowingInput, {nullable:true})
    followedBy?: InstanceType<typeof UserCreateNestedManyWithoutFollowingInput>;
    @Field(() => UserCreateNestedManyWithoutFollowedByInput, {nullable:true})
    following?: InstanceType<typeof UserCreateNestedManyWithoutFollowedByInput>;
}

@InputType()
export class UserCreateWithoutWishlistInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    firstName!: string;
    @Field(() => String, {nullable:false})
    lastName!: string;
    @Field(() => String, {nullable:false})
    email!: string;
    @Field(() => String, {nullable:false})
    countryCode!: string;
    @Field(() => String, {nullable:false})
    phoneNumber!: string;
    @Field(() => Boolean, {nullable:true})
    phoneNumberVerified?: boolean;
    @Field(() => UserCreaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserCreaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => String, {nullable:true})
    password?: string;
    @Field(() => String, {nullable:true})
    referrer?: string;
    @Field(() => Gender, {nullable:true})
    gender?: `${Gender}`;
    @Field(() => SizesNullableCreateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableCreateEnvelopeInput>;
    @Field(() => String, {nullable:true})
    displayPicture?: string;
    @Field(() => String, {nullable:true})
    personalEmail?: string;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => String, {nullable:true})
    about?: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserCreatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserCreatedmIdsInput>;
    @Field(() => UserStripeNullableCreateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableCreateEnvelopeInput>;
    @Field(() => UserCreateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserCreateorderIdsInput>;
    @Field(() => String, {nullable:true})
    legacyId?: string;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Boolean, {nullable:true})
    addedManually?: boolean;
    @Field(() => AltSignupNullableCreateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableCreateEnvelopeInput>;
    @Field(() => Platform, {nullable:true})
    registrationPlatform?: `${Platform}`;
    @Field(() => String, {nullable:true})
    instagramUsername?: string;
    @Field(() => String, {nullable:true})
    referralRockCode?: string;
    @Field(() => Boolean, {nullable:true})
    deactivated?: boolean;
    @Field(() => String, {nullable:true})
    signupV?: string;
    @Field(() => Boolean, {nullable:true})
    isParent?: boolean;
    @Field(() => EduInstituteCreateNestedOneWithoutStudentsInput, {nullable:true})
    eduInstitute?: InstanceType<typeof EduInstituteCreateNestedOneWithoutStudentsInput>;
    @Field(() => ShoppingPreferenceCreateNestedManyWithoutUsersInput, {nullable:true})
    shoppingPreferences?: InstanceType<typeof ShoppingPreferenceCreateNestedManyWithoutUsersInput>;
    @Field(() => HobbyCreateNestedManyWithoutUsersInput, {nullable:true})
    hobbies?: InstanceType<typeof HobbyCreateNestedManyWithoutUsersInput>;
    @Field(() => ProductListingCreateNestedManyWithoutUploaderInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingCreateNestedManyWithoutUploaderInput>;
    @Field(() => ProductReportCreateNestedManyWithoutReporterInput, {nullable:true})
    reportedProducts?: InstanceType<typeof ProductReportCreateNestedManyWithoutReporterInput>;
    @Field(() => DealCreateNestedManyWithoutSavedUsersInput, {nullable:true})
    savedDeals?: InstanceType<typeof DealCreateNestedManyWithoutSavedUsersInput>;
    @Field(() => ConversationCreateNestedManyWithoutParticipantsInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationCreateNestedManyWithoutParticipantsInput>;
    @Field(() => UserCreateNestedManyWithoutFollowingInput, {nullable:true})
    followedBy?: InstanceType<typeof UserCreateNestedManyWithoutFollowingInput>;
    @Field(() => UserCreateNestedManyWithoutFollowedByInput, {nullable:true})
    following?: InstanceType<typeof UserCreateNestedManyWithoutFollowedByInput>;
}

@InputType()
export class UserCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    firstName!: string;
    @Field(() => String, {nullable:false})
    lastName!: string;
    @Field(() => String, {nullable:false})
    email!: string;
    @Field(() => String, {nullable:false})
    countryCode!: string;
    @Field(() => String, {nullable:false})
    phoneNumber!: string;
    @Field(() => Boolean, {nullable:true})
    phoneNumberVerified?: boolean;
    @Field(() => UserCreaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserCreaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => String, {nullable:true})
    password?: string;
    @Field(() => String, {nullable:true})
    referrer?: string;
    @Field(() => Gender, {nullable:true})
    gender?: `${Gender}`;
    @Field(() => SizesNullableCreateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableCreateEnvelopeInput>;
    @Field(() => String, {nullable:true})
    displayPicture?: string;
    @Field(() => String, {nullable:true})
    personalEmail?: string;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => String, {nullable:true})
    about?: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserCreatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserCreatedmIdsInput>;
    @Field(() => UserStripeNullableCreateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableCreateEnvelopeInput>;
    @Field(() => UserCreateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserCreateorderIdsInput>;
    @Field(() => String, {nullable:true})
    legacyId?: string;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Boolean, {nullable:true})
    addedManually?: boolean;
    @Field(() => AltSignupNullableCreateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableCreateEnvelopeInput>;
    @Field(() => Platform, {nullable:true})
    registrationPlatform?: `${Platform}`;
    @Field(() => String, {nullable:true})
    instagramUsername?: string;
    @Field(() => String, {nullable:true})
    referralRockCode?: string;
    @Field(() => Boolean, {nullable:true})
    deactivated?: boolean;
    @Field(() => String, {nullable:true})
    signupV?: string;
    @Field(() => Boolean, {nullable:true})
    isParent?: boolean;
    @Field(() => EduInstituteCreateNestedOneWithoutStudentsInput, {nullable:true})
    eduInstitute?: InstanceType<typeof EduInstituteCreateNestedOneWithoutStudentsInput>;
    @Field(() => ShoppingPreferenceCreateNestedManyWithoutUsersInput, {nullable:true})
    shoppingPreferences?: InstanceType<typeof ShoppingPreferenceCreateNestedManyWithoutUsersInput>;
    @Field(() => HobbyCreateNestedManyWithoutUsersInput, {nullable:true})
    hobbies?: InstanceType<typeof HobbyCreateNestedManyWithoutUsersInput>;
    @Field(() => ProductListingCreateNestedManyWithoutUploaderInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingCreateNestedManyWithoutUploaderInput>;
    @Field(() => ProductReportCreateNestedManyWithoutReporterInput, {nullable:true})
    reportedProducts?: InstanceType<typeof ProductReportCreateNestedManyWithoutReporterInput>;
    @Field(() => ProductListingCreateNestedManyWithoutWishlistedByInput, {nullable:true})
    wishlist?: InstanceType<typeof ProductListingCreateNestedManyWithoutWishlistedByInput>;
    @Field(() => DealCreateNestedManyWithoutSavedUsersInput, {nullable:true})
    savedDeals?: InstanceType<typeof DealCreateNestedManyWithoutSavedUsersInput>;
    @Field(() => ConversationCreateNestedManyWithoutParticipantsInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationCreateNestedManyWithoutParticipantsInput>;
    @Field(() => UserCreateNestedManyWithoutFollowingInput, {nullable:true})
    followedBy?: InstanceType<typeof UserCreateNestedManyWithoutFollowingInput>;
    @Field(() => UserCreateNestedManyWithoutFollowedByInput, {nullable:true})
    following?: InstanceType<typeof UserCreateNestedManyWithoutFollowedByInput>;
}

@InputType()
export class UserCreateconversationIdsInput {
    @Field(() => [String], {nullable:false})
    set!: Array<string>;
}

@InputType()
export class UserCreatedmIdsInput {
    @Field(() => [String], {nullable:false})
    set!: Array<string>;
}

@InputType()
export class UserCreatefollowedByIDsInput {
    @Field(() => [String], {nullable:false})
    set!: Array<string>;
}

@InputType()
export class UserCreatefollowingIDsInput {
    @Field(() => [String], {nullable:false})
    set!: Array<string>;
}

@InputType()
export class UserCreatehobbyIdsInput {
    @Field(() => [String], {nullable:false})
    set!: Array<string>;
}

@InputType()
export class UserCreateorderIdsInput {
    @Field(() => [String], {nullable:false})
    set!: Array<string>;
}

@InputType()
export class UserCreaterolesInput {
    @Field(() => [Role], {nullable:false})
    set!: Array<`${Role}`>;
}

@InputType()
export class UserCreatesavedDealIdsInput {
    @Field(() => [String], {nullable:false})
    set!: Array<string>;
}

@InputType()
export class UserCreateshoppingPreferenceIdsInput {
    @Field(() => [String], {nullable:false})
    set!: Array<string>;
}

@InputType()
export class UserCreatewishlistIdsInput {
    @Field(() => [String], {nullable:false})
    set!: Array<string>;
}

@ArgsType()
export class UserGroupByArgs {
    @Field(() => UserWhereInput, {nullable:true})
    @Type(() => UserWhereInput)
    where?: InstanceType<typeof UserWhereInput>;
    @Field(() => [UserOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<UserOrderByWithAggregationInput>;
    @Field(() => [UserScalarFieldEnum], {nullable:false})
    by!: Array<`${UserScalarFieldEnum}`>;
    @Field(() => UserScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof UserScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class UserListRelationFilter {
    @Field(() => UserWhereInput, {nullable:true})
    every?: InstanceType<typeof UserWhereInput>;
    @Field(() => UserWhereInput, {nullable:true})
    some?: InstanceType<typeof UserWhereInput>;
    @Field(() => UserWhereInput, {nullable:true})
    none?: InstanceType<typeof UserWhereInput>;
}

@InputType()
export class UserMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    firstName?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    lastName?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    email?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    countryCode?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    phoneNumber?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    phoneNumberVerified?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    password?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    referrer?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    gender?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    displayPicture?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    personalEmail?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    eduInstituteId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    about?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    legacyId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    blackListed?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    addedManually?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    registrationPlatform?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    instagramUsername?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    referralRockCode?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    deactivated?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    signupV?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    isParent?: `${SortOrder}`;
}

@InputType()
export class UserMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    firstName?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    lastName?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    email?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    countryCode?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    phoneNumber?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    phoneNumberVerified?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    password?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    referrer?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    gender?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    displayPicture?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    personalEmail?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    eduInstituteId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    about?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    legacyId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    blackListed?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    addedManually?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    registrationPlatform?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    instagramUsername?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    referralRockCode?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    deactivated?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    signupV?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    isParent?: `${SortOrder}`;
}

@InputType()
export class UserNullableRelationFilter {
    @Field(() => UserWhereInput, {nullable:true})
    is?: InstanceType<typeof UserWhereInput>;
    @Field(() => UserWhereInput, {nullable:true})
    isNot?: InstanceType<typeof UserWhereInput>;
}

@InputType()
export class UserOrderByRelationAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    _count?: `${SortOrder}`;
}

@InputType()
export class UserOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    firstName?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    lastName?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    email?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    countryCode?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    phoneNumber?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    phoneNumberVerified?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    roles?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    password?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    referrer?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    gender?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    displayPicture?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    personalEmail?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    eduInstituteId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    shoppingPreferenceIds?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    hobbyIds?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    about?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    wishlistIds?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    savedDealIds?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    conversationIds?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    dmIds?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    orderIds?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    followedByIDs?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    followingIDs?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    legacyId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    blackListed?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    addedManually?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    registrationPlatform?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    instagramUsername?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    referralRockCode?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    deactivated?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    signupV?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    isParent?: `${SortOrder}`;
    @Field(() => UserCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof UserCountOrderByAggregateInput>;
    @Field(() => UserMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof UserMaxOrderByAggregateInput>;
    @Field(() => UserMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof UserMinOrderByAggregateInput>;
}

@InputType()
export class UserOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    firstName?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    lastName?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    email?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    countryCode?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    phoneNumber?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    phoneNumberVerified?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    roles?: `${SortOrder}`;
    @Field(() => UserSessionOrderByCompositeAggregateInput, {nullable:true})
    sessions?: InstanceType<typeof UserSessionOrderByCompositeAggregateInput>;
    @Field(() => SortOrder, {nullable:true})
    password?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    referrer?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    gender?: `${SortOrder}`;
    @Field(() => SizesOrderByInput, {nullable:true})
    sizes?: InstanceType<typeof SizesOrderByInput>;
    @Field(() => SortOrder, {nullable:true})
    displayPicture?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    personalEmail?: `${SortOrder}`;
    @Field(() => ImageOrderByCompositeAggregateInput, {nullable:true})
    images?: InstanceType<typeof ImageOrderByCompositeAggregateInput>;
    @Field(() => SortOrder, {nullable:true})
    eduInstituteId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    shoppingPreferenceIds?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    hobbyIds?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    about?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => AddressOrderByCompositeAggregateInput, {nullable:true})
    addressBook?: InstanceType<typeof AddressOrderByCompositeAggregateInput>;
    @Field(() => SortOrder, {nullable:true})
    wishlistIds?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    savedDealIds?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    conversationIds?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    dmIds?: `${SortOrder}`;
    @Field(() => UserStripeOrderByInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeOrderByInput>;
    @Field(() => SortOrder, {nullable:true})
    orderIds?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    followedByIDs?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    followingIDs?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    legacyId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    blackListed?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    addedManually?: `${SortOrder}`;
    @Field(() => AltSignupOrderByInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupOrderByInput>;
    @Field(() => SortOrder, {nullable:true})
    registrationPlatform?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    instagramUsername?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    referralRockCode?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    deactivated?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    signupV?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    isParent?: `${SortOrder}`;
    @Field(() => EduInstituteOrderByWithRelationInput, {nullable:true})
    eduInstitute?: InstanceType<typeof EduInstituteOrderByWithRelationInput>;
    @Field(() => ShoppingPreferenceOrderByRelationAggregateInput, {nullable:true})
    shoppingPreferences?: InstanceType<typeof ShoppingPreferenceOrderByRelationAggregateInput>;
    @Field(() => HobbyOrderByRelationAggregateInput, {nullable:true})
    hobbies?: InstanceType<typeof HobbyOrderByRelationAggregateInput>;
    @Field(() => ProductListingOrderByRelationAggregateInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingOrderByRelationAggregateInput>;
    @Field(() => ProductReportOrderByRelationAggregateInput, {nullable:true})
    reportedProducts?: InstanceType<typeof ProductReportOrderByRelationAggregateInput>;
    @Field(() => ProductListingOrderByRelationAggregateInput, {nullable:true})
    wishlist?: InstanceType<typeof ProductListingOrderByRelationAggregateInput>;
    @Field(() => DealOrderByRelationAggregateInput, {nullable:true})
    savedDeals?: InstanceType<typeof DealOrderByRelationAggregateInput>;
    @Field(() => ConversationOrderByRelationAggregateInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationOrderByRelationAggregateInput>;
    @Field(() => UserOrderByRelationAggregateInput, {nullable:true})
    followedBy?: InstanceType<typeof UserOrderByRelationAggregateInput>;
    @Field(() => UserOrderByRelationAggregateInput, {nullable:true})
    following?: InstanceType<typeof UserOrderByRelationAggregateInput>;
}

@InputType()
export class UserRelationFilter {
    @Field(() => UserWhereInput, {nullable:true})
    is?: InstanceType<typeof UserWhereInput>;
    @Field(() => UserWhereInput, {nullable:true})
    isNot?: InstanceType<typeof UserWhereInput>;
}

@InputType()
export class UserScalarWhereWithAggregatesInput {
    @Field(() => [UserScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<UserScalarWhereWithAggregatesInput>;
    @Field(() => [UserScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<UserScalarWhereWithAggregatesInput>;
    @Field(() => [UserScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<UserScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    firstName?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    lastName?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    email?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    countryCode?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    phoneNumber?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => BoolWithAggregatesFilter, {nullable:true})
    phoneNumberVerified?: InstanceType<typeof BoolWithAggregatesFilter>;
    @Field(() => EnumRoleNullableListFilter, {nullable:true})
    roles?: InstanceType<typeof EnumRoleNullableListFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    password?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    referrer?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => EnumGenderNullableWithAggregatesFilter, {nullable:true})
    gender?: InstanceType<typeof EnumGenderNullableWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    displayPicture?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    personalEmail?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    eduInstituteId?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    shoppingPreferenceIds?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    hobbyIds?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    about?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    wishlistIds?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    savedDealIds?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    conversationIds?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    dmIds?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    orderIds?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    followedByIDs?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    followingIDs?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    legacyId?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => BoolWithAggregatesFilter, {nullable:true})
    blackListed?: InstanceType<typeof BoolWithAggregatesFilter>;
    @Field(() => BoolNullableWithAggregatesFilter, {nullable:true})
    addedManually?: InstanceType<typeof BoolNullableWithAggregatesFilter>;
    @Field(() => EnumPlatformNullableWithAggregatesFilter, {nullable:true})
    registrationPlatform?: InstanceType<typeof EnumPlatformNullableWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    instagramUsername?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    referralRockCode?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => BoolNullableWithAggregatesFilter, {nullable:true})
    deactivated?: InstanceType<typeof BoolNullableWithAggregatesFilter>;
    @Field(() => StringNullableWithAggregatesFilter, {nullable:true})
    signupV?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    @Field(() => BoolNullableWithAggregatesFilter, {nullable:true})
    isParent?: InstanceType<typeof BoolNullableWithAggregatesFilter>;
}

@InputType()
export class UserScalarWhereInput {
    @Field(() => [UserScalarWhereInput], {nullable:true})
    AND?: Array<UserScalarWhereInput>;
    @Field(() => [UserScalarWhereInput], {nullable:true})
    OR?: Array<UserScalarWhereInput>;
    @Field(() => [UserScalarWhereInput], {nullable:true})
    NOT?: Array<UserScalarWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    firstName?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    lastName?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    email?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    countryCode?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    phoneNumber?: InstanceType<typeof StringFilter>;
    @Field(() => BoolFilter, {nullable:true})
    phoneNumberVerified?: InstanceType<typeof BoolFilter>;
    @Field(() => EnumRoleNullableListFilter, {nullable:true})
    roles?: InstanceType<typeof EnumRoleNullableListFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    password?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    referrer?: InstanceType<typeof StringNullableFilter>;
    @Field(() => EnumGenderNullableFilter, {nullable:true})
    gender?: InstanceType<typeof EnumGenderNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    displayPicture?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    personalEmail?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    eduInstituteId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    shoppingPreferenceIds?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    hobbyIds?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    about?: InstanceType<typeof StringNullableFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    wishlistIds?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    savedDealIds?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    conversationIds?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    dmIds?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    orderIds?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    followedByIDs?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    followingIDs?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    legacyId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => BoolFilter, {nullable:true})
    blackListed?: InstanceType<typeof BoolFilter>;
    @Field(() => BoolNullableFilter, {nullable:true})
    addedManually?: InstanceType<typeof BoolNullableFilter>;
    @Field(() => EnumPlatformNullableFilter, {nullable:true})
    registrationPlatform?: InstanceType<typeof EnumPlatformNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    instagramUsername?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    referralRockCode?: InstanceType<typeof StringNullableFilter>;
    @Field(() => BoolNullableFilter, {nullable:true})
    deactivated?: InstanceType<typeof BoolNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    signupV?: InstanceType<typeof StringNullableFilter>;
    @Field(() => BoolNullableFilter, {nullable:true})
    isParent?: InstanceType<typeof BoolNullableFilter>;
}

@InputType()
export class UserUncheckedCreateNestedManyWithoutConversationsInput {
    @Field(() => [UserCreateWithoutConversationsInput], {nullable:true})
    @Type(() => UserCreateWithoutConversationsInput)
    create?: Array<UserCreateWithoutConversationsInput>;
    @Field(() => [UserCreateOrConnectWithoutConversationsInput], {nullable:true})
    @Type(() => UserCreateOrConnectWithoutConversationsInput)
    connectOrCreate?: Array<UserCreateOrConnectWithoutConversationsInput>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
}

@InputType()
export class UserUncheckedCreateNestedManyWithoutEduInstituteInput {
    @Field(() => [UserCreateWithoutEduInstituteInput], {nullable:true})
    @Type(() => UserCreateWithoutEduInstituteInput)
    create?: Array<UserCreateWithoutEduInstituteInput>;
    @Field(() => [UserCreateOrConnectWithoutEduInstituteInput], {nullable:true})
    @Type(() => UserCreateOrConnectWithoutEduInstituteInput)
    connectOrCreate?: Array<UserCreateOrConnectWithoutEduInstituteInput>;
    @Field(() => UserCreateManyEduInstituteInputEnvelope, {nullable:true})
    @Type(() => UserCreateManyEduInstituteInputEnvelope)
    createMany?: InstanceType<typeof UserCreateManyEduInstituteInputEnvelope>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
}

@InputType()
export class UserUncheckedCreateNestedManyWithoutFollowedByInput {
    @Field(() => [UserCreateWithoutFollowedByInput], {nullable:true})
    @Type(() => UserCreateWithoutFollowedByInput)
    create?: Array<UserCreateWithoutFollowedByInput>;
    @Field(() => [UserCreateOrConnectWithoutFollowedByInput], {nullable:true})
    @Type(() => UserCreateOrConnectWithoutFollowedByInput)
    connectOrCreate?: Array<UserCreateOrConnectWithoutFollowedByInput>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
}

@InputType()
export class UserUncheckedCreateNestedManyWithoutFollowingInput {
    @Field(() => [UserCreateWithoutFollowingInput], {nullable:true})
    @Type(() => UserCreateWithoutFollowingInput)
    create?: Array<UserCreateWithoutFollowingInput>;
    @Field(() => [UserCreateOrConnectWithoutFollowingInput], {nullable:true})
    @Type(() => UserCreateOrConnectWithoutFollowingInput)
    connectOrCreate?: Array<UserCreateOrConnectWithoutFollowingInput>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
}

@InputType()
export class UserUncheckedCreateNestedManyWithoutHobbiesInput {
    @Field(() => [UserCreateWithoutHobbiesInput], {nullable:true})
    @Type(() => UserCreateWithoutHobbiesInput)
    create?: Array<UserCreateWithoutHobbiesInput>;
    @Field(() => [UserCreateOrConnectWithoutHobbiesInput], {nullable:true})
    @Type(() => UserCreateOrConnectWithoutHobbiesInput)
    connectOrCreate?: Array<UserCreateOrConnectWithoutHobbiesInput>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
}

@InputType()
export class UserUncheckedCreateNestedManyWithoutSavedDealsInput {
    @Field(() => [UserCreateWithoutSavedDealsInput], {nullable:true})
    @Type(() => UserCreateWithoutSavedDealsInput)
    create?: Array<UserCreateWithoutSavedDealsInput>;
    @Field(() => [UserCreateOrConnectWithoutSavedDealsInput], {nullable:true})
    @Type(() => UserCreateOrConnectWithoutSavedDealsInput)
    connectOrCreate?: Array<UserCreateOrConnectWithoutSavedDealsInput>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
}

@InputType()
export class UserUncheckedCreateNestedManyWithoutShoppingPreferencesInput {
    @Field(() => [UserCreateWithoutShoppingPreferencesInput], {nullable:true})
    @Type(() => UserCreateWithoutShoppingPreferencesInput)
    create?: Array<UserCreateWithoutShoppingPreferencesInput>;
    @Field(() => [UserCreateOrConnectWithoutShoppingPreferencesInput], {nullable:true})
    @Type(() => UserCreateOrConnectWithoutShoppingPreferencesInput)
    connectOrCreate?: Array<UserCreateOrConnectWithoutShoppingPreferencesInput>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
}

@InputType()
export class UserUncheckedCreateNestedManyWithoutWishlistInput {
    @Field(() => [UserCreateWithoutWishlistInput], {nullable:true})
    @Type(() => UserCreateWithoutWishlistInput)
    create?: Array<UserCreateWithoutWishlistInput>;
    @Field(() => [UserCreateOrConnectWithoutWishlistInput], {nullable:true})
    @Type(() => UserCreateOrConnectWithoutWishlistInput)
    connectOrCreate?: Array<UserCreateOrConnectWithoutWishlistInput>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
}

@InputType()
export class UserUncheckedCreateWithoutConversationsInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    firstName!: string;
    @Field(() => String, {nullable:false})
    lastName!: string;
    @Field(() => String, {nullable:false})
    email!: string;
    @Field(() => String, {nullable:false})
    countryCode!: string;
    @Field(() => String, {nullable:false})
    phoneNumber!: string;
    @Field(() => Boolean, {nullable:true})
    phoneNumberVerified?: boolean;
    @Field(() => UserCreaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserCreaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => String, {nullable:true})
    password?: string;
    @Field(() => String, {nullable:true})
    referrer?: string;
    @Field(() => Gender, {nullable:true})
    gender?: `${Gender}`;
    @Field(() => SizesNullableCreateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableCreateEnvelopeInput>;
    @Field(() => String, {nullable:true})
    displayPicture?: string;
    @Field(() => String, {nullable:true})
    personalEmail?: string;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => String, {nullable:true})
    eduInstituteId?: string;
    @Field(() => UserCreateshoppingPreferenceIdsInput, {nullable:true})
    shoppingPreferenceIds?: InstanceType<typeof UserCreateshoppingPreferenceIdsInput>;
    @Field(() => UserCreatehobbyIdsInput, {nullable:true})
    hobbyIds?: InstanceType<typeof UserCreatehobbyIdsInput>;
    @Field(() => String, {nullable:true})
    about?: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserCreatewishlistIdsInput, {nullable:true})
    wishlistIds?: InstanceType<typeof UserCreatewishlistIdsInput>;
    @Field(() => UserCreatesavedDealIdsInput, {nullable:true})
    savedDealIds?: InstanceType<typeof UserCreatesavedDealIdsInput>;
    @Field(() => UserCreateconversationIdsInput, {nullable:true})
    conversationIds?: InstanceType<typeof UserCreateconversationIdsInput>;
    @Field(() => UserCreatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserCreatedmIdsInput>;
    @Field(() => UserStripeNullableCreateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableCreateEnvelopeInput>;
    @Field(() => UserCreateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserCreateorderIdsInput>;
    @Field(() => UserCreatefollowedByIDsInput, {nullable:true})
    followedByIDs?: InstanceType<typeof UserCreatefollowedByIDsInput>;
    @Field(() => UserCreatefollowingIDsInput, {nullable:true})
    followingIDs?: InstanceType<typeof UserCreatefollowingIDsInput>;
    @Field(() => String, {nullable:true})
    legacyId?: string;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Boolean, {nullable:true})
    addedManually?: boolean;
    @Field(() => AltSignupNullableCreateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableCreateEnvelopeInput>;
    @Field(() => Platform, {nullable:true})
    registrationPlatform?: `${Platform}`;
    @Field(() => String, {nullable:true})
    instagramUsername?: string;
    @Field(() => String, {nullable:true})
    referralRockCode?: string;
    @Field(() => Boolean, {nullable:true})
    deactivated?: boolean;
    @Field(() => String, {nullable:true})
    signupV?: string;
    @Field(() => Boolean, {nullable:true})
    isParent?: boolean;
    @Field(() => ShoppingPreferenceUncheckedCreateNestedManyWithoutUsersInput, {nullable:true})
    shoppingPreferences?: InstanceType<typeof ShoppingPreferenceUncheckedCreateNestedManyWithoutUsersInput>;
    @Field(() => HobbyUncheckedCreateNestedManyWithoutUsersInput, {nullable:true})
    hobbies?: InstanceType<typeof HobbyUncheckedCreateNestedManyWithoutUsersInput>;
    @Field(() => ProductListingUncheckedCreateNestedManyWithoutUploaderInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUncheckedCreateNestedManyWithoutUploaderInput>;
    @Field(() => ProductReportUncheckedCreateNestedManyWithoutReporterInput, {nullable:true})
    reportedProducts?: InstanceType<typeof ProductReportUncheckedCreateNestedManyWithoutReporterInput>;
    @Field(() => ProductListingUncheckedCreateNestedManyWithoutWishlistedByInput, {nullable:true})
    wishlist?: InstanceType<typeof ProductListingUncheckedCreateNestedManyWithoutWishlistedByInput>;
    @Field(() => DealUncheckedCreateNestedManyWithoutSavedUsersInput, {nullable:true})
    savedDeals?: InstanceType<typeof DealUncheckedCreateNestedManyWithoutSavedUsersInput>;
    @Field(() => UserUncheckedCreateNestedManyWithoutFollowingInput, {nullable:true})
    followedBy?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutFollowingInput>;
    @Field(() => UserUncheckedCreateNestedManyWithoutFollowedByInput, {nullable:true})
    following?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutFollowedByInput>;
}

@InputType()
export class UserUncheckedCreateWithoutEduInstituteInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    firstName!: string;
    @Field(() => String, {nullable:false})
    lastName!: string;
    @Field(() => String, {nullable:false})
    email!: string;
    @Field(() => String, {nullable:false})
    countryCode!: string;
    @Field(() => String, {nullable:false})
    phoneNumber!: string;
    @Field(() => Boolean, {nullable:true})
    phoneNumberVerified?: boolean;
    @Field(() => UserCreaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserCreaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => String, {nullable:true})
    password?: string;
    @Field(() => String, {nullable:true})
    referrer?: string;
    @Field(() => Gender, {nullable:true})
    gender?: `${Gender}`;
    @Field(() => SizesNullableCreateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableCreateEnvelopeInput>;
    @Field(() => String, {nullable:true})
    displayPicture?: string;
    @Field(() => String, {nullable:true})
    personalEmail?: string;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => UserCreateshoppingPreferenceIdsInput, {nullable:true})
    shoppingPreferenceIds?: InstanceType<typeof UserCreateshoppingPreferenceIdsInput>;
    @Field(() => UserCreatehobbyIdsInput, {nullable:true})
    hobbyIds?: InstanceType<typeof UserCreatehobbyIdsInput>;
    @Field(() => String, {nullable:true})
    about?: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserCreatewishlistIdsInput, {nullable:true})
    wishlistIds?: InstanceType<typeof UserCreatewishlistIdsInput>;
    @Field(() => UserCreatesavedDealIdsInput, {nullable:true})
    savedDealIds?: InstanceType<typeof UserCreatesavedDealIdsInput>;
    @Field(() => UserCreateconversationIdsInput, {nullable:true})
    conversationIds?: InstanceType<typeof UserCreateconversationIdsInput>;
    @Field(() => UserCreatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserCreatedmIdsInput>;
    @Field(() => UserStripeNullableCreateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableCreateEnvelopeInput>;
    @Field(() => UserCreateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserCreateorderIdsInput>;
    @Field(() => UserCreatefollowedByIDsInput, {nullable:true})
    followedByIDs?: InstanceType<typeof UserCreatefollowedByIDsInput>;
    @Field(() => UserCreatefollowingIDsInput, {nullable:true})
    followingIDs?: InstanceType<typeof UserCreatefollowingIDsInput>;
    @Field(() => String, {nullable:true})
    legacyId?: string;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Boolean, {nullable:true})
    addedManually?: boolean;
    @Field(() => AltSignupNullableCreateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableCreateEnvelopeInput>;
    @Field(() => Platform, {nullable:true})
    registrationPlatform?: `${Platform}`;
    @Field(() => String, {nullable:true})
    instagramUsername?: string;
    @Field(() => String, {nullable:true})
    referralRockCode?: string;
    @Field(() => Boolean, {nullable:true})
    deactivated?: boolean;
    @Field(() => String, {nullable:true})
    signupV?: string;
    @Field(() => Boolean, {nullable:true})
    isParent?: boolean;
    @Field(() => ShoppingPreferenceUncheckedCreateNestedManyWithoutUsersInput, {nullable:true})
    shoppingPreferences?: InstanceType<typeof ShoppingPreferenceUncheckedCreateNestedManyWithoutUsersInput>;
    @Field(() => HobbyUncheckedCreateNestedManyWithoutUsersInput, {nullable:true})
    hobbies?: InstanceType<typeof HobbyUncheckedCreateNestedManyWithoutUsersInput>;
    @Field(() => ProductListingUncheckedCreateNestedManyWithoutUploaderInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUncheckedCreateNestedManyWithoutUploaderInput>;
    @Field(() => ProductReportUncheckedCreateNestedManyWithoutReporterInput, {nullable:true})
    reportedProducts?: InstanceType<typeof ProductReportUncheckedCreateNestedManyWithoutReporterInput>;
    @Field(() => ProductListingUncheckedCreateNestedManyWithoutWishlistedByInput, {nullable:true})
    wishlist?: InstanceType<typeof ProductListingUncheckedCreateNestedManyWithoutWishlistedByInput>;
    @Field(() => DealUncheckedCreateNestedManyWithoutSavedUsersInput, {nullable:true})
    savedDeals?: InstanceType<typeof DealUncheckedCreateNestedManyWithoutSavedUsersInput>;
    @Field(() => ConversationUncheckedCreateNestedManyWithoutParticipantsInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUncheckedCreateNestedManyWithoutParticipantsInput>;
    @Field(() => UserUncheckedCreateNestedManyWithoutFollowingInput, {nullable:true})
    followedBy?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutFollowingInput>;
    @Field(() => UserUncheckedCreateNestedManyWithoutFollowedByInput, {nullable:true})
    following?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutFollowedByInput>;
}

@InputType()
export class UserUncheckedCreateWithoutFollowedByInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    firstName!: string;
    @Field(() => String, {nullable:false})
    lastName!: string;
    @Field(() => String, {nullable:false})
    email!: string;
    @Field(() => String, {nullable:false})
    countryCode!: string;
    @Field(() => String, {nullable:false})
    phoneNumber!: string;
    @Field(() => Boolean, {nullable:true})
    phoneNumberVerified?: boolean;
    @Field(() => UserCreaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserCreaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => String, {nullable:true})
    password?: string;
    @Field(() => String, {nullable:true})
    referrer?: string;
    @Field(() => Gender, {nullable:true})
    gender?: `${Gender}`;
    @Field(() => SizesNullableCreateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableCreateEnvelopeInput>;
    @Field(() => String, {nullable:true})
    displayPicture?: string;
    @Field(() => String, {nullable:true})
    personalEmail?: string;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => String, {nullable:true})
    eduInstituteId?: string;
    @Field(() => UserCreateshoppingPreferenceIdsInput, {nullable:true})
    shoppingPreferenceIds?: InstanceType<typeof UserCreateshoppingPreferenceIdsInput>;
    @Field(() => UserCreatehobbyIdsInput, {nullable:true})
    hobbyIds?: InstanceType<typeof UserCreatehobbyIdsInput>;
    @Field(() => String, {nullable:true})
    about?: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserCreatewishlistIdsInput, {nullable:true})
    wishlistIds?: InstanceType<typeof UserCreatewishlistIdsInput>;
    @Field(() => UserCreatesavedDealIdsInput, {nullable:true})
    savedDealIds?: InstanceType<typeof UserCreatesavedDealIdsInput>;
    @Field(() => UserCreateconversationIdsInput, {nullable:true})
    conversationIds?: InstanceType<typeof UserCreateconversationIdsInput>;
    @Field(() => UserCreatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserCreatedmIdsInput>;
    @Field(() => UserStripeNullableCreateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableCreateEnvelopeInput>;
    @Field(() => UserCreateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserCreateorderIdsInput>;
    @Field(() => UserCreatefollowedByIDsInput, {nullable:true})
    followedByIDs?: InstanceType<typeof UserCreatefollowedByIDsInput>;
    @Field(() => UserCreatefollowingIDsInput, {nullable:true})
    followingIDs?: InstanceType<typeof UserCreatefollowingIDsInput>;
    @Field(() => String, {nullable:true})
    legacyId?: string;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Boolean, {nullable:true})
    addedManually?: boolean;
    @Field(() => AltSignupNullableCreateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableCreateEnvelopeInput>;
    @Field(() => Platform, {nullable:true})
    registrationPlatform?: `${Platform}`;
    @Field(() => String, {nullable:true})
    instagramUsername?: string;
    @Field(() => String, {nullable:true})
    referralRockCode?: string;
    @Field(() => Boolean, {nullable:true})
    deactivated?: boolean;
    @Field(() => String, {nullable:true})
    signupV?: string;
    @Field(() => Boolean, {nullable:true})
    isParent?: boolean;
    @Field(() => ShoppingPreferenceUncheckedCreateNestedManyWithoutUsersInput, {nullable:true})
    shoppingPreferences?: InstanceType<typeof ShoppingPreferenceUncheckedCreateNestedManyWithoutUsersInput>;
    @Field(() => HobbyUncheckedCreateNestedManyWithoutUsersInput, {nullable:true})
    hobbies?: InstanceType<typeof HobbyUncheckedCreateNestedManyWithoutUsersInput>;
    @Field(() => ProductListingUncheckedCreateNestedManyWithoutUploaderInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUncheckedCreateNestedManyWithoutUploaderInput>;
    @Field(() => ProductReportUncheckedCreateNestedManyWithoutReporterInput, {nullable:true})
    reportedProducts?: InstanceType<typeof ProductReportUncheckedCreateNestedManyWithoutReporterInput>;
    @Field(() => ProductListingUncheckedCreateNestedManyWithoutWishlistedByInput, {nullable:true})
    wishlist?: InstanceType<typeof ProductListingUncheckedCreateNestedManyWithoutWishlistedByInput>;
    @Field(() => DealUncheckedCreateNestedManyWithoutSavedUsersInput, {nullable:true})
    savedDeals?: InstanceType<typeof DealUncheckedCreateNestedManyWithoutSavedUsersInput>;
    @Field(() => ConversationUncheckedCreateNestedManyWithoutParticipantsInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUncheckedCreateNestedManyWithoutParticipantsInput>;
    @Field(() => UserUncheckedCreateNestedManyWithoutFollowedByInput, {nullable:true})
    following?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutFollowedByInput>;
}

@InputType()
export class UserUncheckedCreateWithoutFollowingInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    firstName!: string;
    @Field(() => String, {nullable:false})
    lastName!: string;
    @Field(() => String, {nullable:false})
    email!: string;
    @Field(() => String, {nullable:false})
    countryCode!: string;
    @Field(() => String, {nullable:false})
    phoneNumber!: string;
    @Field(() => Boolean, {nullable:true})
    phoneNumberVerified?: boolean;
    @Field(() => UserCreaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserCreaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => String, {nullable:true})
    password?: string;
    @Field(() => String, {nullable:true})
    referrer?: string;
    @Field(() => Gender, {nullable:true})
    gender?: `${Gender}`;
    @Field(() => SizesNullableCreateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableCreateEnvelopeInput>;
    @Field(() => String, {nullable:true})
    displayPicture?: string;
    @Field(() => String, {nullable:true})
    personalEmail?: string;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => String, {nullable:true})
    eduInstituteId?: string;
    @Field(() => UserCreateshoppingPreferenceIdsInput, {nullable:true})
    shoppingPreferenceIds?: InstanceType<typeof UserCreateshoppingPreferenceIdsInput>;
    @Field(() => UserCreatehobbyIdsInput, {nullable:true})
    hobbyIds?: InstanceType<typeof UserCreatehobbyIdsInput>;
    @Field(() => String, {nullable:true})
    about?: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserCreatewishlistIdsInput, {nullable:true})
    wishlistIds?: InstanceType<typeof UserCreatewishlistIdsInput>;
    @Field(() => UserCreatesavedDealIdsInput, {nullable:true})
    savedDealIds?: InstanceType<typeof UserCreatesavedDealIdsInput>;
    @Field(() => UserCreateconversationIdsInput, {nullable:true})
    conversationIds?: InstanceType<typeof UserCreateconversationIdsInput>;
    @Field(() => UserCreatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserCreatedmIdsInput>;
    @Field(() => UserStripeNullableCreateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableCreateEnvelopeInput>;
    @Field(() => UserCreateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserCreateorderIdsInput>;
    @Field(() => UserCreatefollowedByIDsInput, {nullable:true})
    followedByIDs?: InstanceType<typeof UserCreatefollowedByIDsInput>;
    @Field(() => UserCreatefollowingIDsInput, {nullable:true})
    followingIDs?: InstanceType<typeof UserCreatefollowingIDsInput>;
    @Field(() => String, {nullable:true})
    legacyId?: string;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Boolean, {nullable:true})
    addedManually?: boolean;
    @Field(() => AltSignupNullableCreateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableCreateEnvelopeInput>;
    @Field(() => Platform, {nullable:true})
    registrationPlatform?: `${Platform}`;
    @Field(() => String, {nullable:true})
    instagramUsername?: string;
    @Field(() => String, {nullable:true})
    referralRockCode?: string;
    @Field(() => Boolean, {nullable:true})
    deactivated?: boolean;
    @Field(() => String, {nullable:true})
    signupV?: string;
    @Field(() => Boolean, {nullable:true})
    isParent?: boolean;
    @Field(() => ShoppingPreferenceUncheckedCreateNestedManyWithoutUsersInput, {nullable:true})
    shoppingPreferences?: InstanceType<typeof ShoppingPreferenceUncheckedCreateNestedManyWithoutUsersInput>;
    @Field(() => HobbyUncheckedCreateNestedManyWithoutUsersInput, {nullable:true})
    hobbies?: InstanceType<typeof HobbyUncheckedCreateNestedManyWithoutUsersInput>;
    @Field(() => ProductListingUncheckedCreateNestedManyWithoutUploaderInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUncheckedCreateNestedManyWithoutUploaderInput>;
    @Field(() => ProductReportUncheckedCreateNestedManyWithoutReporterInput, {nullable:true})
    reportedProducts?: InstanceType<typeof ProductReportUncheckedCreateNestedManyWithoutReporterInput>;
    @Field(() => ProductListingUncheckedCreateNestedManyWithoutWishlistedByInput, {nullable:true})
    wishlist?: InstanceType<typeof ProductListingUncheckedCreateNestedManyWithoutWishlistedByInput>;
    @Field(() => DealUncheckedCreateNestedManyWithoutSavedUsersInput, {nullable:true})
    savedDeals?: InstanceType<typeof DealUncheckedCreateNestedManyWithoutSavedUsersInput>;
    @Field(() => ConversationUncheckedCreateNestedManyWithoutParticipantsInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUncheckedCreateNestedManyWithoutParticipantsInput>;
    @Field(() => UserUncheckedCreateNestedManyWithoutFollowingInput, {nullable:true})
    followedBy?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutFollowingInput>;
}

@InputType()
export class UserUncheckedCreateWithoutHobbiesInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    firstName!: string;
    @Field(() => String, {nullable:false})
    lastName!: string;
    @Field(() => String, {nullable:false})
    email!: string;
    @Field(() => String, {nullable:false})
    countryCode!: string;
    @Field(() => String, {nullable:false})
    phoneNumber!: string;
    @Field(() => Boolean, {nullable:true})
    phoneNumberVerified?: boolean;
    @Field(() => UserCreaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserCreaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => String, {nullable:true})
    password?: string;
    @Field(() => String, {nullable:true})
    referrer?: string;
    @Field(() => Gender, {nullable:true})
    gender?: `${Gender}`;
    @Field(() => SizesNullableCreateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableCreateEnvelopeInput>;
    @Field(() => String, {nullable:true})
    displayPicture?: string;
    @Field(() => String, {nullable:true})
    personalEmail?: string;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => String, {nullable:true})
    eduInstituteId?: string;
    @Field(() => UserCreateshoppingPreferenceIdsInput, {nullable:true})
    shoppingPreferenceIds?: InstanceType<typeof UserCreateshoppingPreferenceIdsInput>;
    @Field(() => UserCreatehobbyIdsInput, {nullable:true})
    hobbyIds?: InstanceType<typeof UserCreatehobbyIdsInput>;
    @Field(() => String, {nullable:true})
    about?: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserCreatewishlistIdsInput, {nullable:true})
    wishlistIds?: InstanceType<typeof UserCreatewishlistIdsInput>;
    @Field(() => UserCreatesavedDealIdsInput, {nullable:true})
    savedDealIds?: InstanceType<typeof UserCreatesavedDealIdsInput>;
    @Field(() => UserCreateconversationIdsInput, {nullable:true})
    conversationIds?: InstanceType<typeof UserCreateconversationIdsInput>;
    @Field(() => UserCreatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserCreatedmIdsInput>;
    @Field(() => UserStripeNullableCreateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableCreateEnvelopeInput>;
    @Field(() => UserCreateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserCreateorderIdsInput>;
    @Field(() => UserCreatefollowedByIDsInput, {nullable:true})
    followedByIDs?: InstanceType<typeof UserCreatefollowedByIDsInput>;
    @Field(() => UserCreatefollowingIDsInput, {nullable:true})
    followingIDs?: InstanceType<typeof UserCreatefollowingIDsInput>;
    @Field(() => String, {nullable:true})
    legacyId?: string;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Boolean, {nullable:true})
    addedManually?: boolean;
    @Field(() => AltSignupNullableCreateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableCreateEnvelopeInput>;
    @Field(() => Platform, {nullable:true})
    registrationPlatform?: `${Platform}`;
    @Field(() => String, {nullable:true})
    instagramUsername?: string;
    @Field(() => String, {nullable:true})
    referralRockCode?: string;
    @Field(() => Boolean, {nullable:true})
    deactivated?: boolean;
    @Field(() => String, {nullable:true})
    signupV?: string;
    @Field(() => Boolean, {nullable:true})
    isParent?: boolean;
    @Field(() => ShoppingPreferenceUncheckedCreateNestedManyWithoutUsersInput, {nullable:true})
    shoppingPreferences?: InstanceType<typeof ShoppingPreferenceUncheckedCreateNestedManyWithoutUsersInput>;
    @Field(() => ProductListingUncheckedCreateNestedManyWithoutUploaderInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUncheckedCreateNestedManyWithoutUploaderInput>;
    @Field(() => ProductReportUncheckedCreateNestedManyWithoutReporterInput, {nullable:true})
    reportedProducts?: InstanceType<typeof ProductReportUncheckedCreateNestedManyWithoutReporterInput>;
    @Field(() => ProductListingUncheckedCreateNestedManyWithoutWishlistedByInput, {nullable:true})
    wishlist?: InstanceType<typeof ProductListingUncheckedCreateNestedManyWithoutWishlistedByInput>;
    @Field(() => DealUncheckedCreateNestedManyWithoutSavedUsersInput, {nullable:true})
    savedDeals?: InstanceType<typeof DealUncheckedCreateNestedManyWithoutSavedUsersInput>;
    @Field(() => ConversationUncheckedCreateNestedManyWithoutParticipantsInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUncheckedCreateNestedManyWithoutParticipantsInput>;
    @Field(() => UserUncheckedCreateNestedManyWithoutFollowingInput, {nullable:true})
    followedBy?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutFollowingInput>;
    @Field(() => UserUncheckedCreateNestedManyWithoutFollowedByInput, {nullable:true})
    following?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutFollowedByInput>;
}

@InputType()
export class UserUncheckedCreateWithoutProductListingsInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    firstName!: string;
    @Field(() => String, {nullable:false})
    lastName!: string;
    @Field(() => String, {nullable:false})
    email!: string;
    @Field(() => String, {nullable:false})
    countryCode!: string;
    @Field(() => String, {nullable:false})
    phoneNumber!: string;
    @Field(() => Boolean, {nullable:true})
    phoneNumberVerified?: boolean;
    @Field(() => UserCreaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserCreaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => String, {nullable:true})
    password?: string;
    @Field(() => String, {nullable:true})
    referrer?: string;
    @Field(() => Gender, {nullable:true})
    gender?: `${Gender}`;
    @Field(() => SizesNullableCreateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableCreateEnvelopeInput>;
    @Field(() => String, {nullable:true})
    displayPicture?: string;
    @Field(() => String, {nullable:true})
    personalEmail?: string;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => String, {nullable:true})
    eduInstituteId?: string;
    @Field(() => UserCreateshoppingPreferenceIdsInput, {nullable:true})
    shoppingPreferenceIds?: InstanceType<typeof UserCreateshoppingPreferenceIdsInput>;
    @Field(() => UserCreatehobbyIdsInput, {nullable:true})
    hobbyIds?: InstanceType<typeof UserCreatehobbyIdsInput>;
    @Field(() => String, {nullable:true})
    about?: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserCreatewishlistIdsInput, {nullable:true})
    wishlistIds?: InstanceType<typeof UserCreatewishlistIdsInput>;
    @Field(() => UserCreatesavedDealIdsInput, {nullable:true})
    savedDealIds?: InstanceType<typeof UserCreatesavedDealIdsInput>;
    @Field(() => UserCreateconversationIdsInput, {nullable:true})
    conversationIds?: InstanceType<typeof UserCreateconversationIdsInput>;
    @Field(() => UserCreatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserCreatedmIdsInput>;
    @Field(() => UserStripeNullableCreateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableCreateEnvelopeInput>;
    @Field(() => UserCreateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserCreateorderIdsInput>;
    @Field(() => UserCreatefollowedByIDsInput, {nullable:true})
    followedByIDs?: InstanceType<typeof UserCreatefollowedByIDsInput>;
    @Field(() => UserCreatefollowingIDsInput, {nullable:true})
    followingIDs?: InstanceType<typeof UserCreatefollowingIDsInput>;
    @Field(() => String, {nullable:true})
    legacyId?: string;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Boolean, {nullable:true})
    addedManually?: boolean;
    @Field(() => AltSignupNullableCreateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableCreateEnvelopeInput>;
    @Field(() => Platform, {nullable:true})
    registrationPlatform?: `${Platform}`;
    @Field(() => String, {nullable:true})
    instagramUsername?: string;
    @Field(() => String, {nullable:true})
    referralRockCode?: string;
    @Field(() => Boolean, {nullable:true})
    deactivated?: boolean;
    @Field(() => String, {nullable:true})
    signupV?: string;
    @Field(() => Boolean, {nullable:true})
    isParent?: boolean;
    @Field(() => ShoppingPreferenceUncheckedCreateNestedManyWithoutUsersInput, {nullable:true})
    shoppingPreferences?: InstanceType<typeof ShoppingPreferenceUncheckedCreateNestedManyWithoutUsersInput>;
    @Field(() => HobbyUncheckedCreateNestedManyWithoutUsersInput, {nullable:true})
    hobbies?: InstanceType<typeof HobbyUncheckedCreateNestedManyWithoutUsersInput>;
    @Field(() => ProductReportUncheckedCreateNestedManyWithoutReporterInput, {nullable:true})
    reportedProducts?: InstanceType<typeof ProductReportUncheckedCreateNestedManyWithoutReporterInput>;
    @Field(() => ProductListingUncheckedCreateNestedManyWithoutWishlistedByInput, {nullable:true})
    wishlist?: InstanceType<typeof ProductListingUncheckedCreateNestedManyWithoutWishlistedByInput>;
    @Field(() => DealUncheckedCreateNestedManyWithoutSavedUsersInput, {nullable:true})
    savedDeals?: InstanceType<typeof DealUncheckedCreateNestedManyWithoutSavedUsersInput>;
    @Field(() => ConversationUncheckedCreateNestedManyWithoutParticipantsInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUncheckedCreateNestedManyWithoutParticipantsInput>;
    @Field(() => UserUncheckedCreateNestedManyWithoutFollowingInput, {nullable:true})
    followedBy?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutFollowingInput>;
    @Field(() => UserUncheckedCreateNestedManyWithoutFollowedByInput, {nullable:true})
    following?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutFollowedByInput>;
}

@InputType()
export class UserUncheckedCreateWithoutReportedProductsInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    firstName!: string;
    @Field(() => String, {nullable:false})
    lastName!: string;
    @Field(() => String, {nullable:false})
    email!: string;
    @Field(() => String, {nullable:false})
    countryCode!: string;
    @Field(() => String, {nullable:false})
    phoneNumber!: string;
    @Field(() => Boolean, {nullable:true})
    phoneNumberVerified?: boolean;
    @Field(() => UserCreaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserCreaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => String, {nullable:true})
    password?: string;
    @Field(() => String, {nullable:true})
    referrer?: string;
    @Field(() => Gender, {nullable:true})
    gender?: `${Gender}`;
    @Field(() => SizesNullableCreateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableCreateEnvelopeInput>;
    @Field(() => String, {nullable:true})
    displayPicture?: string;
    @Field(() => String, {nullable:true})
    personalEmail?: string;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => String, {nullable:true})
    eduInstituteId?: string;
    @Field(() => UserCreateshoppingPreferenceIdsInput, {nullable:true})
    shoppingPreferenceIds?: InstanceType<typeof UserCreateshoppingPreferenceIdsInput>;
    @Field(() => UserCreatehobbyIdsInput, {nullable:true})
    hobbyIds?: InstanceType<typeof UserCreatehobbyIdsInput>;
    @Field(() => String, {nullable:true})
    about?: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserCreatewishlistIdsInput, {nullable:true})
    wishlistIds?: InstanceType<typeof UserCreatewishlistIdsInput>;
    @Field(() => UserCreatesavedDealIdsInput, {nullable:true})
    savedDealIds?: InstanceType<typeof UserCreatesavedDealIdsInput>;
    @Field(() => UserCreateconversationIdsInput, {nullable:true})
    conversationIds?: InstanceType<typeof UserCreateconversationIdsInput>;
    @Field(() => UserCreatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserCreatedmIdsInput>;
    @Field(() => UserStripeNullableCreateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableCreateEnvelopeInput>;
    @Field(() => UserCreateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserCreateorderIdsInput>;
    @Field(() => UserCreatefollowedByIDsInput, {nullable:true})
    followedByIDs?: InstanceType<typeof UserCreatefollowedByIDsInput>;
    @Field(() => UserCreatefollowingIDsInput, {nullable:true})
    followingIDs?: InstanceType<typeof UserCreatefollowingIDsInput>;
    @Field(() => String, {nullable:true})
    legacyId?: string;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Boolean, {nullable:true})
    addedManually?: boolean;
    @Field(() => AltSignupNullableCreateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableCreateEnvelopeInput>;
    @Field(() => Platform, {nullable:true})
    registrationPlatform?: `${Platform}`;
    @Field(() => String, {nullable:true})
    instagramUsername?: string;
    @Field(() => String, {nullable:true})
    referralRockCode?: string;
    @Field(() => Boolean, {nullable:true})
    deactivated?: boolean;
    @Field(() => String, {nullable:true})
    signupV?: string;
    @Field(() => Boolean, {nullable:true})
    isParent?: boolean;
    @Field(() => ShoppingPreferenceUncheckedCreateNestedManyWithoutUsersInput, {nullable:true})
    shoppingPreferences?: InstanceType<typeof ShoppingPreferenceUncheckedCreateNestedManyWithoutUsersInput>;
    @Field(() => HobbyUncheckedCreateNestedManyWithoutUsersInput, {nullable:true})
    hobbies?: InstanceType<typeof HobbyUncheckedCreateNestedManyWithoutUsersInput>;
    @Field(() => ProductListingUncheckedCreateNestedManyWithoutUploaderInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUncheckedCreateNestedManyWithoutUploaderInput>;
    @Field(() => ProductListingUncheckedCreateNestedManyWithoutWishlistedByInput, {nullable:true})
    wishlist?: InstanceType<typeof ProductListingUncheckedCreateNestedManyWithoutWishlistedByInput>;
    @Field(() => DealUncheckedCreateNestedManyWithoutSavedUsersInput, {nullable:true})
    savedDeals?: InstanceType<typeof DealUncheckedCreateNestedManyWithoutSavedUsersInput>;
    @Field(() => ConversationUncheckedCreateNestedManyWithoutParticipantsInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUncheckedCreateNestedManyWithoutParticipantsInput>;
    @Field(() => UserUncheckedCreateNestedManyWithoutFollowingInput, {nullable:true})
    followedBy?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutFollowingInput>;
    @Field(() => UserUncheckedCreateNestedManyWithoutFollowedByInput, {nullable:true})
    following?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutFollowedByInput>;
}

@InputType()
export class UserUncheckedCreateWithoutSavedDealsInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    firstName!: string;
    @Field(() => String, {nullable:false})
    lastName!: string;
    @Field(() => String, {nullable:false})
    email!: string;
    @Field(() => String, {nullable:false})
    countryCode!: string;
    @Field(() => String, {nullable:false})
    phoneNumber!: string;
    @Field(() => Boolean, {nullable:true})
    phoneNumberVerified?: boolean;
    @Field(() => UserCreaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserCreaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => String, {nullable:true})
    password?: string;
    @Field(() => String, {nullable:true})
    referrer?: string;
    @Field(() => Gender, {nullable:true})
    gender?: `${Gender}`;
    @Field(() => SizesNullableCreateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableCreateEnvelopeInput>;
    @Field(() => String, {nullable:true})
    displayPicture?: string;
    @Field(() => String, {nullable:true})
    personalEmail?: string;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => String, {nullable:true})
    eduInstituteId?: string;
    @Field(() => UserCreateshoppingPreferenceIdsInput, {nullable:true})
    shoppingPreferenceIds?: InstanceType<typeof UserCreateshoppingPreferenceIdsInput>;
    @Field(() => UserCreatehobbyIdsInput, {nullable:true})
    hobbyIds?: InstanceType<typeof UserCreatehobbyIdsInput>;
    @Field(() => String, {nullable:true})
    about?: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserCreatewishlistIdsInput, {nullable:true})
    wishlistIds?: InstanceType<typeof UserCreatewishlistIdsInput>;
    @Field(() => UserCreatesavedDealIdsInput, {nullable:true})
    savedDealIds?: InstanceType<typeof UserCreatesavedDealIdsInput>;
    @Field(() => UserCreateconversationIdsInput, {nullable:true})
    conversationIds?: InstanceType<typeof UserCreateconversationIdsInput>;
    @Field(() => UserCreatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserCreatedmIdsInput>;
    @Field(() => UserStripeNullableCreateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableCreateEnvelopeInput>;
    @Field(() => UserCreateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserCreateorderIdsInput>;
    @Field(() => UserCreatefollowedByIDsInput, {nullable:true})
    followedByIDs?: InstanceType<typeof UserCreatefollowedByIDsInput>;
    @Field(() => UserCreatefollowingIDsInput, {nullable:true})
    followingIDs?: InstanceType<typeof UserCreatefollowingIDsInput>;
    @Field(() => String, {nullable:true})
    legacyId?: string;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Boolean, {nullable:true})
    addedManually?: boolean;
    @Field(() => AltSignupNullableCreateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableCreateEnvelopeInput>;
    @Field(() => Platform, {nullable:true})
    registrationPlatform?: `${Platform}`;
    @Field(() => String, {nullable:true})
    instagramUsername?: string;
    @Field(() => String, {nullable:true})
    referralRockCode?: string;
    @Field(() => Boolean, {nullable:true})
    deactivated?: boolean;
    @Field(() => String, {nullable:true})
    signupV?: string;
    @Field(() => Boolean, {nullable:true})
    isParent?: boolean;
    @Field(() => ShoppingPreferenceUncheckedCreateNestedManyWithoutUsersInput, {nullable:true})
    shoppingPreferences?: InstanceType<typeof ShoppingPreferenceUncheckedCreateNestedManyWithoutUsersInput>;
    @Field(() => HobbyUncheckedCreateNestedManyWithoutUsersInput, {nullable:true})
    hobbies?: InstanceType<typeof HobbyUncheckedCreateNestedManyWithoutUsersInput>;
    @Field(() => ProductListingUncheckedCreateNestedManyWithoutUploaderInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUncheckedCreateNestedManyWithoutUploaderInput>;
    @Field(() => ProductReportUncheckedCreateNestedManyWithoutReporterInput, {nullable:true})
    reportedProducts?: InstanceType<typeof ProductReportUncheckedCreateNestedManyWithoutReporterInput>;
    @Field(() => ProductListingUncheckedCreateNestedManyWithoutWishlistedByInput, {nullable:true})
    wishlist?: InstanceType<typeof ProductListingUncheckedCreateNestedManyWithoutWishlistedByInput>;
    @Field(() => ConversationUncheckedCreateNestedManyWithoutParticipantsInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUncheckedCreateNestedManyWithoutParticipantsInput>;
    @Field(() => UserUncheckedCreateNestedManyWithoutFollowingInput, {nullable:true})
    followedBy?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutFollowingInput>;
    @Field(() => UserUncheckedCreateNestedManyWithoutFollowedByInput, {nullable:true})
    following?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutFollowedByInput>;
}

@InputType()
export class UserUncheckedCreateWithoutShoppingPreferencesInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    firstName!: string;
    @Field(() => String, {nullable:false})
    lastName!: string;
    @Field(() => String, {nullable:false})
    email!: string;
    @Field(() => String, {nullable:false})
    countryCode!: string;
    @Field(() => String, {nullable:false})
    phoneNumber!: string;
    @Field(() => Boolean, {nullable:true})
    phoneNumberVerified?: boolean;
    @Field(() => UserCreaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserCreaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => String, {nullable:true})
    password?: string;
    @Field(() => String, {nullable:true})
    referrer?: string;
    @Field(() => Gender, {nullable:true})
    gender?: `${Gender}`;
    @Field(() => SizesNullableCreateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableCreateEnvelopeInput>;
    @Field(() => String, {nullable:true})
    displayPicture?: string;
    @Field(() => String, {nullable:true})
    personalEmail?: string;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => String, {nullable:true})
    eduInstituteId?: string;
    @Field(() => UserCreateshoppingPreferenceIdsInput, {nullable:true})
    shoppingPreferenceIds?: InstanceType<typeof UserCreateshoppingPreferenceIdsInput>;
    @Field(() => UserCreatehobbyIdsInput, {nullable:true})
    hobbyIds?: InstanceType<typeof UserCreatehobbyIdsInput>;
    @Field(() => String, {nullable:true})
    about?: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserCreatewishlistIdsInput, {nullable:true})
    wishlistIds?: InstanceType<typeof UserCreatewishlistIdsInput>;
    @Field(() => UserCreatesavedDealIdsInput, {nullable:true})
    savedDealIds?: InstanceType<typeof UserCreatesavedDealIdsInput>;
    @Field(() => UserCreateconversationIdsInput, {nullable:true})
    conversationIds?: InstanceType<typeof UserCreateconversationIdsInput>;
    @Field(() => UserCreatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserCreatedmIdsInput>;
    @Field(() => UserStripeNullableCreateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableCreateEnvelopeInput>;
    @Field(() => UserCreateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserCreateorderIdsInput>;
    @Field(() => UserCreatefollowedByIDsInput, {nullable:true})
    followedByIDs?: InstanceType<typeof UserCreatefollowedByIDsInput>;
    @Field(() => UserCreatefollowingIDsInput, {nullable:true})
    followingIDs?: InstanceType<typeof UserCreatefollowingIDsInput>;
    @Field(() => String, {nullable:true})
    legacyId?: string;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Boolean, {nullable:true})
    addedManually?: boolean;
    @Field(() => AltSignupNullableCreateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableCreateEnvelopeInput>;
    @Field(() => Platform, {nullable:true})
    registrationPlatform?: `${Platform}`;
    @Field(() => String, {nullable:true})
    instagramUsername?: string;
    @Field(() => String, {nullable:true})
    referralRockCode?: string;
    @Field(() => Boolean, {nullable:true})
    deactivated?: boolean;
    @Field(() => String, {nullable:true})
    signupV?: string;
    @Field(() => Boolean, {nullable:true})
    isParent?: boolean;
    @Field(() => HobbyUncheckedCreateNestedManyWithoutUsersInput, {nullable:true})
    hobbies?: InstanceType<typeof HobbyUncheckedCreateNestedManyWithoutUsersInput>;
    @Field(() => ProductListingUncheckedCreateNestedManyWithoutUploaderInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUncheckedCreateNestedManyWithoutUploaderInput>;
    @Field(() => ProductReportUncheckedCreateNestedManyWithoutReporterInput, {nullable:true})
    reportedProducts?: InstanceType<typeof ProductReportUncheckedCreateNestedManyWithoutReporterInput>;
    @Field(() => ProductListingUncheckedCreateNestedManyWithoutWishlistedByInput, {nullable:true})
    wishlist?: InstanceType<typeof ProductListingUncheckedCreateNestedManyWithoutWishlistedByInput>;
    @Field(() => DealUncheckedCreateNestedManyWithoutSavedUsersInput, {nullable:true})
    savedDeals?: InstanceType<typeof DealUncheckedCreateNestedManyWithoutSavedUsersInput>;
    @Field(() => ConversationUncheckedCreateNestedManyWithoutParticipantsInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUncheckedCreateNestedManyWithoutParticipantsInput>;
    @Field(() => UserUncheckedCreateNestedManyWithoutFollowingInput, {nullable:true})
    followedBy?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutFollowingInput>;
    @Field(() => UserUncheckedCreateNestedManyWithoutFollowedByInput, {nullable:true})
    following?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutFollowedByInput>;
}

@InputType()
export class UserUncheckedCreateWithoutWishlistInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    firstName!: string;
    @Field(() => String, {nullable:false})
    lastName!: string;
    @Field(() => String, {nullable:false})
    email!: string;
    @Field(() => String, {nullable:false})
    countryCode!: string;
    @Field(() => String, {nullable:false})
    phoneNumber!: string;
    @Field(() => Boolean, {nullable:true})
    phoneNumberVerified?: boolean;
    @Field(() => UserCreaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserCreaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => String, {nullable:true})
    password?: string;
    @Field(() => String, {nullable:true})
    referrer?: string;
    @Field(() => Gender, {nullable:true})
    gender?: `${Gender}`;
    @Field(() => SizesNullableCreateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableCreateEnvelopeInput>;
    @Field(() => String, {nullable:true})
    displayPicture?: string;
    @Field(() => String, {nullable:true})
    personalEmail?: string;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => String, {nullable:true})
    eduInstituteId?: string;
    @Field(() => UserCreateshoppingPreferenceIdsInput, {nullable:true})
    shoppingPreferenceIds?: InstanceType<typeof UserCreateshoppingPreferenceIdsInput>;
    @Field(() => UserCreatehobbyIdsInput, {nullable:true})
    hobbyIds?: InstanceType<typeof UserCreatehobbyIdsInput>;
    @Field(() => String, {nullable:true})
    about?: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserCreatewishlistIdsInput, {nullable:true})
    wishlistIds?: InstanceType<typeof UserCreatewishlistIdsInput>;
    @Field(() => UserCreatesavedDealIdsInput, {nullable:true})
    savedDealIds?: InstanceType<typeof UserCreatesavedDealIdsInput>;
    @Field(() => UserCreateconversationIdsInput, {nullable:true})
    conversationIds?: InstanceType<typeof UserCreateconversationIdsInput>;
    @Field(() => UserCreatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserCreatedmIdsInput>;
    @Field(() => UserStripeNullableCreateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableCreateEnvelopeInput>;
    @Field(() => UserCreateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserCreateorderIdsInput>;
    @Field(() => UserCreatefollowedByIDsInput, {nullable:true})
    followedByIDs?: InstanceType<typeof UserCreatefollowedByIDsInput>;
    @Field(() => UserCreatefollowingIDsInput, {nullable:true})
    followingIDs?: InstanceType<typeof UserCreatefollowingIDsInput>;
    @Field(() => String, {nullable:true})
    legacyId?: string;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Boolean, {nullable:true})
    addedManually?: boolean;
    @Field(() => AltSignupNullableCreateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableCreateEnvelopeInput>;
    @Field(() => Platform, {nullable:true})
    registrationPlatform?: `${Platform}`;
    @Field(() => String, {nullable:true})
    instagramUsername?: string;
    @Field(() => String, {nullable:true})
    referralRockCode?: string;
    @Field(() => Boolean, {nullable:true})
    deactivated?: boolean;
    @Field(() => String, {nullable:true})
    signupV?: string;
    @Field(() => Boolean, {nullable:true})
    isParent?: boolean;
    @Field(() => ShoppingPreferenceUncheckedCreateNestedManyWithoutUsersInput, {nullable:true})
    shoppingPreferences?: InstanceType<typeof ShoppingPreferenceUncheckedCreateNestedManyWithoutUsersInput>;
    @Field(() => HobbyUncheckedCreateNestedManyWithoutUsersInput, {nullable:true})
    hobbies?: InstanceType<typeof HobbyUncheckedCreateNestedManyWithoutUsersInput>;
    @Field(() => ProductListingUncheckedCreateNestedManyWithoutUploaderInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUncheckedCreateNestedManyWithoutUploaderInput>;
    @Field(() => ProductReportUncheckedCreateNestedManyWithoutReporterInput, {nullable:true})
    reportedProducts?: InstanceType<typeof ProductReportUncheckedCreateNestedManyWithoutReporterInput>;
    @Field(() => DealUncheckedCreateNestedManyWithoutSavedUsersInput, {nullable:true})
    savedDeals?: InstanceType<typeof DealUncheckedCreateNestedManyWithoutSavedUsersInput>;
    @Field(() => ConversationUncheckedCreateNestedManyWithoutParticipantsInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUncheckedCreateNestedManyWithoutParticipantsInput>;
    @Field(() => UserUncheckedCreateNestedManyWithoutFollowingInput, {nullable:true})
    followedBy?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutFollowingInput>;
    @Field(() => UserUncheckedCreateNestedManyWithoutFollowedByInput, {nullable:true})
    following?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutFollowedByInput>;
}

@InputType()
export class UserUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    firstName!: string;
    @Field(() => String, {nullable:false})
    lastName!: string;
    @Field(() => String, {nullable:false})
    email!: string;
    @Field(() => String, {nullable:false})
    countryCode!: string;
    @Field(() => String, {nullable:false})
    phoneNumber!: string;
    @Field(() => Boolean, {nullable:true})
    phoneNumberVerified?: boolean;
    @Field(() => UserCreaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserCreaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => String, {nullable:true})
    password?: string;
    @Field(() => String, {nullable:true})
    referrer?: string;
    @Field(() => Gender, {nullable:true})
    gender?: `${Gender}`;
    @Field(() => SizesNullableCreateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableCreateEnvelopeInput>;
    @Field(() => String, {nullable:true})
    displayPicture?: string;
    @Field(() => String, {nullable:true})
    personalEmail?: string;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => String, {nullable:true})
    eduInstituteId?: string;
    @Field(() => UserCreateshoppingPreferenceIdsInput, {nullable:true})
    shoppingPreferenceIds?: InstanceType<typeof UserCreateshoppingPreferenceIdsInput>;
    @Field(() => UserCreatehobbyIdsInput, {nullable:true})
    hobbyIds?: InstanceType<typeof UserCreatehobbyIdsInput>;
    @Field(() => String, {nullable:true})
    about?: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserCreatewishlistIdsInput, {nullable:true})
    wishlistIds?: InstanceType<typeof UserCreatewishlistIdsInput>;
    @Field(() => UserCreatesavedDealIdsInput, {nullable:true})
    savedDealIds?: InstanceType<typeof UserCreatesavedDealIdsInput>;
    @Field(() => UserCreateconversationIdsInput, {nullable:true})
    conversationIds?: InstanceType<typeof UserCreateconversationIdsInput>;
    @Field(() => UserCreatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserCreatedmIdsInput>;
    @Field(() => UserStripeNullableCreateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableCreateEnvelopeInput>;
    @Field(() => UserCreateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserCreateorderIdsInput>;
    @Field(() => UserCreatefollowedByIDsInput, {nullable:true})
    followedByIDs?: InstanceType<typeof UserCreatefollowedByIDsInput>;
    @Field(() => UserCreatefollowingIDsInput, {nullable:true})
    followingIDs?: InstanceType<typeof UserCreatefollowingIDsInput>;
    @Field(() => String, {nullable:true})
    legacyId?: string;
    @Field(() => Boolean, {nullable:true})
    blackListed?: boolean;
    @Field(() => Boolean, {nullable:true})
    addedManually?: boolean;
    @Field(() => AltSignupNullableCreateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableCreateEnvelopeInput>;
    @Field(() => Platform, {nullable:true})
    registrationPlatform?: `${Platform}`;
    @Field(() => String, {nullable:true})
    instagramUsername?: string;
    @Field(() => String, {nullable:true})
    referralRockCode?: string;
    @Field(() => Boolean, {nullable:true})
    deactivated?: boolean;
    @Field(() => String, {nullable:true})
    signupV?: string;
    @Field(() => Boolean, {nullable:true})
    isParent?: boolean;
    @Field(() => ShoppingPreferenceUncheckedCreateNestedManyWithoutUsersInput, {nullable:true})
    shoppingPreferences?: InstanceType<typeof ShoppingPreferenceUncheckedCreateNestedManyWithoutUsersInput>;
    @Field(() => HobbyUncheckedCreateNestedManyWithoutUsersInput, {nullable:true})
    hobbies?: InstanceType<typeof HobbyUncheckedCreateNestedManyWithoutUsersInput>;
    @Field(() => ProductListingUncheckedCreateNestedManyWithoutUploaderInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUncheckedCreateNestedManyWithoutUploaderInput>;
    @Field(() => ProductReportUncheckedCreateNestedManyWithoutReporterInput, {nullable:true})
    reportedProducts?: InstanceType<typeof ProductReportUncheckedCreateNestedManyWithoutReporterInput>;
    @Field(() => ProductListingUncheckedCreateNestedManyWithoutWishlistedByInput, {nullable:true})
    wishlist?: InstanceType<typeof ProductListingUncheckedCreateNestedManyWithoutWishlistedByInput>;
    @Field(() => DealUncheckedCreateNestedManyWithoutSavedUsersInput, {nullable:true})
    savedDeals?: InstanceType<typeof DealUncheckedCreateNestedManyWithoutSavedUsersInput>;
    @Field(() => ConversationUncheckedCreateNestedManyWithoutParticipantsInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUncheckedCreateNestedManyWithoutParticipantsInput>;
    @Field(() => UserUncheckedCreateNestedManyWithoutFollowingInput, {nullable:true})
    followedBy?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutFollowingInput>;
    @Field(() => UserUncheckedCreateNestedManyWithoutFollowedByInput, {nullable:true})
    following?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutFollowedByInput>;
}

@InputType()
export class UserUncheckedUpdateManyWithoutConversationsNestedInput {
    @Field(() => [UserCreateWithoutConversationsInput], {nullable:true})
    @Type(() => UserCreateWithoutConversationsInput)
    create?: Array<UserCreateWithoutConversationsInput>;
    @Field(() => [UserCreateOrConnectWithoutConversationsInput], {nullable:true})
    @Type(() => UserCreateOrConnectWithoutConversationsInput)
    connectOrCreate?: Array<UserCreateOrConnectWithoutConversationsInput>;
    @Field(() => [UserUpsertWithWhereUniqueWithoutConversationsInput], {nullable:true})
    @Type(() => UserUpsertWithWhereUniqueWithoutConversationsInput)
    upsert?: Array<UserUpsertWithWhereUniqueWithoutConversationsInput>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    set?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserUpdateWithWhereUniqueWithoutConversationsInput], {nullable:true})
    @Type(() => UserUpdateWithWhereUniqueWithoutConversationsInput)
    update?: Array<UserUpdateWithWhereUniqueWithoutConversationsInput>;
    @Field(() => [UserUpdateManyWithWhereWithoutConversationsInput], {nullable:true})
    @Type(() => UserUpdateManyWithWhereWithoutConversationsInput)
    updateMany?: Array<UserUpdateManyWithWhereWithoutConversationsInput>;
    @Field(() => [UserScalarWhereInput], {nullable:true})
    @Type(() => UserScalarWhereInput)
    deleteMany?: Array<UserScalarWhereInput>;
}

@InputType()
export class UserUncheckedUpdateManyWithoutConversationsInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    firstName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    lastName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    countryCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    phoneNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    phoneNumberVerified?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => UserUpdaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserUpdaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    password?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referrer?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableEnumGenderFieldUpdateOperationsInput, {nullable:true})
    gender?: InstanceType<typeof NullableEnumGenderFieldUpdateOperationsInput>;
    @Field(() => SizesNullableUpdateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    displayPicture?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    personalEmail?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    eduInstituteId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => UserUpdateshoppingPreferenceIdsInput, {nullable:true})
    shoppingPreferenceIds?: InstanceType<typeof UserUpdateshoppingPreferenceIdsInput>;
    @Field(() => UserUpdatehobbyIdsInput, {nullable:true})
    hobbyIds?: InstanceType<typeof UserUpdatehobbyIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    about?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserUpdatewishlistIdsInput, {nullable:true})
    wishlistIds?: InstanceType<typeof UserUpdatewishlistIdsInput>;
    @Field(() => UserUpdatesavedDealIdsInput, {nullable:true})
    savedDealIds?: InstanceType<typeof UserUpdatesavedDealIdsInput>;
    @Field(() => UserUpdateconversationIdsInput, {nullable:true})
    conversationIds?: InstanceType<typeof UserUpdateconversationIdsInput>;
    @Field(() => UserUpdatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserUpdatedmIdsInput>;
    @Field(() => UserStripeNullableUpdateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableUpdateEnvelopeInput>;
    @Field(() => UserUpdateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserUpdateorderIdsInput>;
    @Field(() => UserUpdatefollowedByIDsInput, {nullable:true})
    followedByIDs?: InstanceType<typeof UserUpdatefollowedByIDsInput>;
    @Field(() => UserUpdatefollowingIDsInput, {nullable:true})
    followingIDs?: InstanceType<typeof UserUpdatefollowingIDsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    addedManually?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => AltSignupNullableUpdateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableUpdateEnvelopeInput>;
    @Field(() => NullableEnumPlatformFieldUpdateOperationsInput, {nullable:true})
    registrationPlatform?: InstanceType<typeof NullableEnumPlatformFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    instagramUsername?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referralRockCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    deactivated?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    signupV?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    isParent?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
}

@InputType()
export class UserUncheckedUpdateManyWithoutEduInstituteNestedInput {
    @Field(() => [UserCreateWithoutEduInstituteInput], {nullable:true})
    @Type(() => UserCreateWithoutEduInstituteInput)
    create?: Array<UserCreateWithoutEduInstituteInput>;
    @Field(() => [UserCreateOrConnectWithoutEduInstituteInput], {nullable:true})
    @Type(() => UserCreateOrConnectWithoutEduInstituteInput)
    connectOrCreate?: Array<UserCreateOrConnectWithoutEduInstituteInput>;
    @Field(() => [UserUpsertWithWhereUniqueWithoutEduInstituteInput], {nullable:true})
    @Type(() => UserUpsertWithWhereUniqueWithoutEduInstituteInput)
    upsert?: Array<UserUpsertWithWhereUniqueWithoutEduInstituteInput>;
    @Field(() => UserCreateManyEduInstituteInputEnvelope, {nullable:true})
    @Type(() => UserCreateManyEduInstituteInputEnvelope)
    createMany?: InstanceType<typeof UserCreateManyEduInstituteInputEnvelope>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    set?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserUpdateWithWhereUniqueWithoutEduInstituteInput], {nullable:true})
    @Type(() => UserUpdateWithWhereUniqueWithoutEduInstituteInput)
    update?: Array<UserUpdateWithWhereUniqueWithoutEduInstituteInput>;
    @Field(() => [UserUpdateManyWithWhereWithoutEduInstituteInput], {nullable:true})
    @Type(() => UserUpdateManyWithWhereWithoutEduInstituteInput)
    updateMany?: Array<UserUpdateManyWithWhereWithoutEduInstituteInput>;
    @Field(() => [UserScalarWhereInput], {nullable:true})
    @Type(() => UserScalarWhereInput)
    deleteMany?: Array<UserScalarWhereInput>;
}

@InputType()
export class UserUncheckedUpdateManyWithoutEduInstituteInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    firstName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    lastName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    countryCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    phoneNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    phoneNumberVerified?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => UserUpdaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserUpdaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    password?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referrer?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableEnumGenderFieldUpdateOperationsInput, {nullable:true})
    gender?: InstanceType<typeof NullableEnumGenderFieldUpdateOperationsInput>;
    @Field(() => SizesNullableUpdateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    displayPicture?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    personalEmail?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => UserUpdateshoppingPreferenceIdsInput, {nullable:true})
    shoppingPreferenceIds?: InstanceType<typeof UserUpdateshoppingPreferenceIdsInput>;
    @Field(() => UserUpdatehobbyIdsInput, {nullable:true})
    hobbyIds?: InstanceType<typeof UserUpdatehobbyIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    about?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserUpdatewishlistIdsInput, {nullable:true})
    wishlistIds?: InstanceType<typeof UserUpdatewishlistIdsInput>;
    @Field(() => UserUpdatesavedDealIdsInput, {nullable:true})
    savedDealIds?: InstanceType<typeof UserUpdatesavedDealIdsInput>;
    @Field(() => UserUpdateconversationIdsInput, {nullable:true})
    conversationIds?: InstanceType<typeof UserUpdateconversationIdsInput>;
    @Field(() => UserUpdatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserUpdatedmIdsInput>;
    @Field(() => UserStripeNullableUpdateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableUpdateEnvelopeInput>;
    @Field(() => UserUpdateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserUpdateorderIdsInput>;
    @Field(() => UserUpdatefollowedByIDsInput, {nullable:true})
    followedByIDs?: InstanceType<typeof UserUpdatefollowedByIDsInput>;
    @Field(() => UserUpdatefollowingIDsInput, {nullable:true})
    followingIDs?: InstanceType<typeof UserUpdatefollowingIDsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    addedManually?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => AltSignupNullableUpdateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableUpdateEnvelopeInput>;
    @Field(() => NullableEnumPlatformFieldUpdateOperationsInput, {nullable:true})
    registrationPlatform?: InstanceType<typeof NullableEnumPlatformFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    instagramUsername?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referralRockCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    deactivated?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    signupV?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    isParent?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
}

@InputType()
export class UserUncheckedUpdateManyWithoutFollowedByNestedInput {
    @Field(() => [UserCreateWithoutFollowedByInput], {nullable:true})
    @Type(() => UserCreateWithoutFollowedByInput)
    create?: Array<UserCreateWithoutFollowedByInput>;
    @Field(() => [UserCreateOrConnectWithoutFollowedByInput], {nullable:true})
    @Type(() => UserCreateOrConnectWithoutFollowedByInput)
    connectOrCreate?: Array<UserCreateOrConnectWithoutFollowedByInput>;
    @Field(() => [UserUpsertWithWhereUniqueWithoutFollowedByInput], {nullable:true})
    @Type(() => UserUpsertWithWhereUniqueWithoutFollowedByInput)
    upsert?: Array<UserUpsertWithWhereUniqueWithoutFollowedByInput>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    set?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserUpdateWithWhereUniqueWithoutFollowedByInput], {nullable:true})
    @Type(() => UserUpdateWithWhereUniqueWithoutFollowedByInput)
    update?: Array<UserUpdateWithWhereUniqueWithoutFollowedByInput>;
    @Field(() => [UserUpdateManyWithWhereWithoutFollowedByInput], {nullable:true})
    @Type(() => UserUpdateManyWithWhereWithoutFollowedByInput)
    updateMany?: Array<UserUpdateManyWithWhereWithoutFollowedByInput>;
    @Field(() => [UserScalarWhereInput], {nullable:true})
    @Type(() => UserScalarWhereInput)
    deleteMany?: Array<UserScalarWhereInput>;
}

@InputType()
export class UserUncheckedUpdateManyWithoutFollowedByInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    firstName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    lastName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    countryCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    phoneNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    phoneNumberVerified?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => UserUpdaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserUpdaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    password?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referrer?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableEnumGenderFieldUpdateOperationsInput, {nullable:true})
    gender?: InstanceType<typeof NullableEnumGenderFieldUpdateOperationsInput>;
    @Field(() => SizesNullableUpdateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    displayPicture?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    personalEmail?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    eduInstituteId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => UserUpdateshoppingPreferenceIdsInput, {nullable:true})
    shoppingPreferenceIds?: InstanceType<typeof UserUpdateshoppingPreferenceIdsInput>;
    @Field(() => UserUpdatehobbyIdsInput, {nullable:true})
    hobbyIds?: InstanceType<typeof UserUpdatehobbyIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    about?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserUpdatewishlistIdsInput, {nullable:true})
    wishlistIds?: InstanceType<typeof UserUpdatewishlistIdsInput>;
    @Field(() => UserUpdatesavedDealIdsInput, {nullable:true})
    savedDealIds?: InstanceType<typeof UserUpdatesavedDealIdsInput>;
    @Field(() => UserUpdateconversationIdsInput, {nullable:true})
    conversationIds?: InstanceType<typeof UserUpdateconversationIdsInput>;
    @Field(() => UserUpdatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserUpdatedmIdsInput>;
    @Field(() => UserStripeNullableUpdateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableUpdateEnvelopeInput>;
    @Field(() => UserUpdateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserUpdateorderIdsInput>;
    @Field(() => UserUpdatefollowedByIDsInput, {nullable:true})
    followedByIDs?: InstanceType<typeof UserUpdatefollowedByIDsInput>;
    @Field(() => UserUpdatefollowingIDsInput, {nullable:true})
    followingIDs?: InstanceType<typeof UserUpdatefollowingIDsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    addedManually?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => AltSignupNullableUpdateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableUpdateEnvelopeInput>;
    @Field(() => NullableEnumPlatformFieldUpdateOperationsInput, {nullable:true})
    registrationPlatform?: InstanceType<typeof NullableEnumPlatformFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    instagramUsername?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referralRockCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    deactivated?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    signupV?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    isParent?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
}

@InputType()
export class UserUncheckedUpdateManyWithoutFollowingNestedInput {
    @Field(() => [UserCreateWithoutFollowingInput], {nullable:true})
    @Type(() => UserCreateWithoutFollowingInput)
    create?: Array<UserCreateWithoutFollowingInput>;
    @Field(() => [UserCreateOrConnectWithoutFollowingInput], {nullable:true})
    @Type(() => UserCreateOrConnectWithoutFollowingInput)
    connectOrCreate?: Array<UserCreateOrConnectWithoutFollowingInput>;
    @Field(() => [UserUpsertWithWhereUniqueWithoutFollowingInput], {nullable:true})
    @Type(() => UserUpsertWithWhereUniqueWithoutFollowingInput)
    upsert?: Array<UserUpsertWithWhereUniqueWithoutFollowingInput>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    set?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserUpdateWithWhereUniqueWithoutFollowingInput], {nullable:true})
    @Type(() => UserUpdateWithWhereUniqueWithoutFollowingInput)
    update?: Array<UserUpdateWithWhereUniqueWithoutFollowingInput>;
    @Field(() => [UserUpdateManyWithWhereWithoutFollowingInput], {nullable:true})
    @Type(() => UserUpdateManyWithWhereWithoutFollowingInput)
    updateMany?: Array<UserUpdateManyWithWhereWithoutFollowingInput>;
    @Field(() => [UserScalarWhereInput], {nullable:true})
    @Type(() => UserScalarWhereInput)
    deleteMany?: Array<UserScalarWhereInput>;
}

@InputType()
export class UserUncheckedUpdateManyWithoutFollowingInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    firstName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    lastName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    countryCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    phoneNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    phoneNumberVerified?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => UserUpdaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserUpdaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    password?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referrer?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableEnumGenderFieldUpdateOperationsInput, {nullable:true})
    gender?: InstanceType<typeof NullableEnumGenderFieldUpdateOperationsInput>;
    @Field(() => SizesNullableUpdateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    displayPicture?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    personalEmail?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    eduInstituteId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => UserUpdateshoppingPreferenceIdsInput, {nullable:true})
    shoppingPreferenceIds?: InstanceType<typeof UserUpdateshoppingPreferenceIdsInput>;
    @Field(() => UserUpdatehobbyIdsInput, {nullable:true})
    hobbyIds?: InstanceType<typeof UserUpdatehobbyIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    about?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserUpdatewishlistIdsInput, {nullable:true})
    wishlistIds?: InstanceType<typeof UserUpdatewishlistIdsInput>;
    @Field(() => UserUpdatesavedDealIdsInput, {nullable:true})
    savedDealIds?: InstanceType<typeof UserUpdatesavedDealIdsInput>;
    @Field(() => UserUpdateconversationIdsInput, {nullable:true})
    conversationIds?: InstanceType<typeof UserUpdateconversationIdsInput>;
    @Field(() => UserUpdatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserUpdatedmIdsInput>;
    @Field(() => UserStripeNullableUpdateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableUpdateEnvelopeInput>;
    @Field(() => UserUpdateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserUpdateorderIdsInput>;
    @Field(() => UserUpdatefollowedByIDsInput, {nullable:true})
    followedByIDs?: InstanceType<typeof UserUpdatefollowedByIDsInput>;
    @Field(() => UserUpdatefollowingIDsInput, {nullable:true})
    followingIDs?: InstanceType<typeof UserUpdatefollowingIDsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    addedManually?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => AltSignupNullableUpdateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableUpdateEnvelopeInput>;
    @Field(() => NullableEnumPlatformFieldUpdateOperationsInput, {nullable:true})
    registrationPlatform?: InstanceType<typeof NullableEnumPlatformFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    instagramUsername?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referralRockCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    deactivated?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    signupV?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    isParent?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
}

@InputType()
export class UserUncheckedUpdateManyWithoutHobbiesNestedInput {
    @Field(() => [UserCreateWithoutHobbiesInput], {nullable:true})
    @Type(() => UserCreateWithoutHobbiesInput)
    create?: Array<UserCreateWithoutHobbiesInput>;
    @Field(() => [UserCreateOrConnectWithoutHobbiesInput], {nullable:true})
    @Type(() => UserCreateOrConnectWithoutHobbiesInput)
    connectOrCreate?: Array<UserCreateOrConnectWithoutHobbiesInput>;
    @Field(() => [UserUpsertWithWhereUniqueWithoutHobbiesInput], {nullable:true})
    @Type(() => UserUpsertWithWhereUniqueWithoutHobbiesInput)
    upsert?: Array<UserUpsertWithWhereUniqueWithoutHobbiesInput>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    set?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserUpdateWithWhereUniqueWithoutHobbiesInput], {nullable:true})
    @Type(() => UserUpdateWithWhereUniqueWithoutHobbiesInput)
    update?: Array<UserUpdateWithWhereUniqueWithoutHobbiesInput>;
    @Field(() => [UserUpdateManyWithWhereWithoutHobbiesInput], {nullable:true})
    @Type(() => UserUpdateManyWithWhereWithoutHobbiesInput)
    updateMany?: Array<UserUpdateManyWithWhereWithoutHobbiesInput>;
    @Field(() => [UserScalarWhereInput], {nullable:true})
    @Type(() => UserScalarWhereInput)
    deleteMany?: Array<UserScalarWhereInput>;
}

@InputType()
export class UserUncheckedUpdateManyWithoutHobbiesInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    firstName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    lastName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    countryCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    phoneNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    phoneNumberVerified?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => UserUpdaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserUpdaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    password?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referrer?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableEnumGenderFieldUpdateOperationsInput, {nullable:true})
    gender?: InstanceType<typeof NullableEnumGenderFieldUpdateOperationsInput>;
    @Field(() => SizesNullableUpdateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    displayPicture?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    personalEmail?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    eduInstituteId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => UserUpdateshoppingPreferenceIdsInput, {nullable:true})
    shoppingPreferenceIds?: InstanceType<typeof UserUpdateshoppingPreferenceIdsInput>;
    @Field(() => UserUpdatehobbyIdsInput, {nullable:true})
    hobbyIds?: InstanceType<typeof UserUpdatehobbyIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    about?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserUpdatewishlistIdsInput, {nullable:true})
    wishlistIds?: InstanceType<typeof UserUpdatewishlistIdsInput>;
    @Field(() => UserUpdatesavedDealIdsInput, {nullable:true})
    savedDealIds?: InstanceType<typeof UserUpdatesavedDealIdsInput>;
    @Field(() => UserUpdateconversationIdsInput, {nullable:true})
    conversationIds?: InstanceType<typeof UserUpdateconversationIdsInput>;
    @Field(() => UserUpdatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserUpdatedmIdsInput>;
    @Field(() => UserStripeNullableUpdateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableUpdateEnvelopeInput>;
    @Field(() => UserUpdateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserUpdateorderIdsInput>;
    @Field(() => UserUpdatefollowedByIDsInput, {nullable:true})
    followedByIDs?: InstanceType<typeof UserUpdatefollowedByIDsInput>;
    @Field(() => UserUpdatefollowingIDsInput, {nullable:true})
    followingIDs?: InstanceType<typeof UserUpdatefollowingIDsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    addedManually?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => AltSignupNullableUpdateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableUpdateEnvelopeInput>;
    @Field(() => NullableEnumPlatformFieldUpdateOperationsInput, {nullable:true})
    registrationPlatform?: InstanceType<typeof NullableEnumPlatformFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    instagramUsername?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referralRockCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    deactivated?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    signupV?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    isParent?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
}

@InputType()
export class UserUncheckedUpdateManyWithoutSavedDealsNestedInput {
    @Field(() => [UserCreateWithoutSavedDealsInput], {nullable:true})
    @Type(() => UserCreateWithoutSavedDealsInput)
    create?: Array<UserCreateWithoutSavedDealsInput>;
    @Field(() => [UserCreateOrConnectWithoutSavedDealsInput], {nullable:true})
    @Type(() => UserCreateOrConnectWithoutSavedDealsInput)
    connectOrCreate?: Array<UserCreateOrConnectWithoutSavedDealsInput>;
    @Field(() => [UserUpsertWithWhereUniqueWithoutSavedDealsInput], {nullable:true})
    @Type(() => UserUpsertWithWhereUniqueWithoutSavedDealsInput)
    upsert?: Array<UserUpsertWithWhereUniqueWithoutSavedDealsInput>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    set?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserUpdateWithWhereUniqueWithoutSavedDealsInput], {nullable:true})
    @Type(() => UserUpdateWithWhereUniqueWithoutSavedDealsInput)
    update?: Array<UserUpdateWithWhereUniqueWithoutSavedDealsInput>;
    @Field(() => [UserUpdateManyWithWhereWithoutSavedDealsInput], {nullable:true})
    @Type(() => UserUpdateManyWithWhereWithoutSavedDealsInput)
    updateMany?: Array<UserUpdateManyWithWhereWithoutSavedDealsInput>;
    @Field(() => [UserScalarWhereInput], {nullable:true})
    @Type(() => UserScalarWhereInput)
    deleteMany?: Array<UserScalarWhereInput>;
}

@InputType()
export class UserUncheckedUpdateManyWithoutSavedDealsInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    firstName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    lastName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    countryCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    phoneNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    phoneNumberVerified?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => UserUpdaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserUpdaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    password?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referrer?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableEnumGenderFieldUpdateOperationsInput, {nullable:true})
    gender?: InstanceType<typeof NullableEnumGenderFieldUpdateOperationsInput>;
    @Field(() => SizesNullableUpdateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    displayPicture?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    personalEmail?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    eduInstituteId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => UserUpdateshoppingPreferenceIdsInput, {nullable:true})
    shoppingPreferenceIds?: InstanceType<typeof UserUpdateshoppingPreferenceIdsInput>;
    @Field(() => UserUpdatehobbyIdsInput, {nullable:true})
    hobbyIds?: InstanceType<typeof UserUpdatehobbyIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    about?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserUpdatewishlistIdsInput, {nullable:true})
    wishlistIds?: InstanceType<typeof UserUpdatewishlistIdsInput>;
    @Field(() => UserUpdatesavedDealIdsInput, {nullable:true})
    savedDealIds?: InstanceType<typeof UserUpdatesavedDealIdsInput>;
    @Field(() => UserUpdateconversationIdsInput, {nullable:true})
    conversationIds?: InstanceType<typeof UserUpdateconversationIdsInput>;
    @Field(() => UserUpdatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserUpdatedmIdsInput>;
    @Field(() => UserStripeNullableUpdateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableUpdateEnvelopeInput>;
    @Field(() => UserUpdateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserUpdateorderIdsInput>;
    @Field(() => UserUpdatefollowedByIDsInput, {nullable:true})
    followedByIDs?: InstanceType<typeof UserUpdatefollowedByIDsInput>;
    @Field(() => UserUpdatefollowingIDsInput, {nullable:true})
    followingIDs?: InstanceType<typeof UserUpdatefollowingIDsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    addedManually?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => AltSignupNullableUpdateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableUpdateEnvelopeInput>;
    @Field(() => NullableEnumPlatformFieldUpdateOperationsInput, {nullable:true})
    registrationPlatform?: InstanceType<typeof NullableEnumPlatformFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    instagramUsername?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referralRockCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    deactivated?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    signupV?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    isParent?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
}

@InputType()
export class UserUncheckedUpdateManyWithoutShoppingPreferencesNestedInput {
    @Field(() => [UserCreateWithoutShoppingPreferencesInput], {nullable:true})
    @Type(() => UserCreateWithoutShoppingPreferencesInput)
    create?: Array<UserCreateWithoutShoppingPreferencesInput>;
    @Field(() => [UserCreateOrConnectWithoutShoppingPreferencesInput], {nullable:true})
    @Type(() => UserCreateOrConnectWithoutShoppingPreferencesInput)
    connectOrCreate?: Array<UserCreateOrConnectWithoutShoppingPreferencesInput>;
    @Field(() => [UserUpsertWithWhereUniqueWithoutShoppingPreferencesInput], {nullable:true})
    @Type(() => UserUpsertWithWhereUniqueWithoutShoppingPreferencesInput)
    upsert?: Array<UserUpsertWithWhereUniqueWithoutShoppingPreferencesInput>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    set?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserUpdateWithWhereUniqueWithoutShoppingPreferencesInput], {nullable:true})
    @Type(() => UserUpdateWithWhereUniqueWithoutShoppingPreferencesInput)
    update?: Array<UserUpdateWithWhereUniqueWithoutShoppingPreferencesInput>;
    @Field(() => [UserUpdateManyWithWhereWithoutShoppingPreferencesInput], {nullable:true})
    @Type(() => UserUpdateManyWithWhereWithoutShoppingPreferencesInput)
    updateMany?: Array<UserUpdateManyWithWhereWithoutShoppingPreferencesInput>;
    @Field(() => [UserScalarWhereInput], {nullable:true})
    @Type(() => UserScalarWhereInput)
    deleteMany?: Array<UserScalarWhereInput>;
}

@InputType()
export class UserUncheckedUpdateManyWithoutShoppingPreferencesInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    firstName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    lastName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    countryCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    phoneNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    phoneNumberVerified?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => UserUpdaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserUpdaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    password?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referrer?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableEnumGenderFieldUpdateOperationsInput, {nullable:true})
    gender?: InstanceType<typeof NullableEnumGenderFieldUpdateOperationsInput>;
    @Field(() => SizesNullableUpdateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    displayPicture?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    personalEmail?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    eduInstituteId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => UserUpdateshoppingPreferenceIdsInput, {nullable:true})
    shoppingPreferenceIds?: InstanceType<typeof UserUpdateshoppingPreferenceIdsInput>;
    @Field(() => UserUpdatehobbyIdsInput, {nullable:true})
    hobbyIds?: InstanceType<typeof UserUpdatehobbyIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    about?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserUpdatewishlistIdsInput, {nullable:true})
    wishlistIds?: InstanceType<typeof UserUpdatewishlistIdsInput>;
    @Field(() => UserUpdatesavedDealIdsInput, {nullable:true})
    savedDealIds?: InstanceType<typeof UserUpdatesavedDealIdsInput>;
    @Field(() => UserUpdateconversationIdsInput, {nullable:true})
    conversationIds?: InstanceType<typeof UserUpdateconversationIdsInput>;
    @Field(() => UserUpdatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserUpdatedmIdsInput>;
    @Field(() => UserStripeNullableUpdateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableUpdateEnvelopeInput>;
    @Field(() => UserUpdateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserUpdateorderIdsInput>;
    @Field(() => UserUpdatefollowedByIDsInput, {nullable:true})
    followedByIDs?: InstanceType<typeof UserUpdatefollowedByIDsInput>;
    @Field(() => UserUpdatefollowingIDsInput, {nullable:true})
    followingIDs?: InstanceType<typeof UserUpdatefollowingIDsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    addedManually?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => AltSignupNullableUpdateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableUpdateEnvelopeInput>;
    @Field(() => NullableEnumPlatformFieldUpdateOperationsInput, {nullable:true})
    registrationPlatform?: InstanceType<typeof NullableEnumPlatformFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    instagramUsername?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referralRockCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    deactivated?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    signupV?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    isParent?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
}

@InputType()
export class UserUncheckedUpdateManyWithoutWishlistNestedInput {
    @Field(() => [UserCreateWithoutWishlistInput], {nullable:true})
    @Type(() => UserCreateWithoutWishlistInput)
    create?: Array<UserCreateWithoutWishlistInput>;
    @Field(() => [UserCreateOrConnectWithoutWishlistInput], {nullable:true})
    @Type(() => UserCreateOrConnectWithoutWishlistInput)
    connectOrCreate?: Array<UserCreateOrConnectWithoutWishlistInput>;
    @Field(() => [UserUpsertWithWhereUniqueWithoutWishlistInput], {nullable:true})
    @Type(() => UserUpsertWithWhereUniqueWithoutWishlistInput)
    upsert?: Array<UserUpsertWithWhereUniqueWithoutWishlistInput>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    set?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserUpdateWithWhereUniqueWithoutWishlistInput], {nullable:true})
    @Type(() => UserUpdateWithWhereUniqueWithoutWishlistInput)
    update?: Array<UserUpdateWithWhereUniqueWithoutWishlistInput>;
    @Field(() => [UserUpdateManyWithWhereWithoutWishlistInput], {nullable:true})
    @Type(() => UserUpdateManyWithWhereWithoutWishlistInput)
    updateMany?: Array<UserUpdateManyWithWhereWithoutWishlistInput>;
    @Field(() => [UserScalarWhereInput], {nullable:true})
    @Type(() => UserScalarWhereInput)
    deleteMany?: Array<UserScalarWhereInput>;
}

@InputType()
export class UserUncheckedUpdateManyWithoutWishlistInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    firstName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    lastName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    countryCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    phoneNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    phoneNumberVerified?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => UserUpdaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserUpdaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    password?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referrer?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableEnumGenderFieldUpdateOperationsInput, {nullable:true})
    gender?: InstanceType<typeof NullableEnumGenderFieldUpdateOperationsInput>;
    @Field(() => SizesNullableUpdateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    displayPicture?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    personalEmail?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    eduInstituteId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => UserUpdateshoppingPreferenceIdsInput, {nullable:true})
    shoppingPreferenceIds?: InstanceType<typeof UserUpdateshoppingPreferenceIdsInput>;
    @Field(() => UserUpdatehobbyIdsInput, {nullable:true})
    hobbyIds?: InstanceType<typeof UserUpdatehobbyIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    about?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserUpdatewishlistIdsInput, {nullable:true})
    wishlistIds?: InstanceType<typeof UserUpdatewishlistIdsInput>;
    @Field(() => UserUpdatesavedDealIdsInput, {nullable:true})
    savedDealIds?: InstanceType<typeof UserUpdatesavedDealIdsInput>;
    @Field(() => UserUpdateconversationIdsInput, {nullable:true})
    conversationIds?: InstanceType<typeof UserUpdateconversationIdsInput>;
    @Field(() => UserUpdatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserUpdatedmIdsInput>;
    @Field(() => UserStripeNullableUpdateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableUpdateEnvelopeInput>;
    @Field(() => UserUpdateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserUpdateorderIdsInput>;
    @Field(() => UserUpdatefollowedByIDsInput, {nullable:true})
    followedByIDs?: InstanceType<typeof UserUpdatefollowedByIDsInput>;
    @Field(() => UserUpdatefollowingIDsInput, {nullable:true})
    followingIDs?: InstanceType<typeof UserUpdatefollowingIDsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    addedManually?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => AltSignupNullableUpdateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableUpdateEnvelopeInput>;
    @Field(() => NullableEnumPlatformFieldUpdateOperationsInput, {nullable:true})
    registrationPlatform?: InstanceType<typeof NullableEnumPlatformFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    instagramUsername?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referralRockCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    deactivated?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    signupV?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    isParent?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
}

@InputType()
export class UserUncheckedUpdateManyInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    firstName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    lastName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    countryCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    phoneNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    phoneNumberVerified?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => UserUpdaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserUpdaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    password?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referrer?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableEnumGenderFieldUpdateOperationsInput, {nullable:true})
    gender?: InstanceType<typeof NullableEnumGenderFieldUpdateOperationsInput>;
    @Field(() => SizesNullableUpdateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    displayPicture?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    personalEmail?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    eduInstituteId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => UserUpdateshoppingPreferenceIdsInput, {nullable:true})
    shoppingPreferenceIds?: InstanceType<typeof UserUpdateshoppingPreferenceIdsInput>;
    @Field(() => UserUpdatehobbyIdsInput, {nullable:true})
    hobbyIds?: InstanceType<typeof UserUpdatehobbyIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    about?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserUpdatewishlistIdsInput, {nullable:true})
    wishlistIds?: InstanceType<typeof UserUpdatewishlistIdsInput>;
    @Field(() => UserUpdatesavedDealIdsInput, {nullable:true})
    savedDealIds?: InstanceType<typeof UserUpdatesavedDealIdsInput>;
    @Field(() => UserUpdateconversationIdsInput, {nullable:true})
    conversationIds?: InstanceType<typeof UserUpdateconversationIdsInput>;
    @Field(() => UserUpdatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserUpdatedmIdsInput>;
    @Field(() => UserStripeNullableUpdateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableUpdateEnvelopeInput>;
    @Field(() => UserUpdateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserUpdateorderIdsInput>;
    @Field(() => UserUpdatefollowedByIDsInput, {nullable:true})
    followedByIDs?: InstanceType<typeof UserUpdatefollowedByIDsInput>;
    @Field(() => UserUpdatefollowingIDsInput, {nullable:true})
    followingIDs?: InstanceType<typeof UserUpdatefollowingIDsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    addedManually?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => AltSignupNullableUpdateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableUpdateEnvelopeInput>;
    @Field(() => NullableEnumPlatformFieldUpdateOperationsInput, {nullable:true})
    registrationPlatform?: InstanceType<typeof NullableEnumPlatformFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    instagramUsername?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referralRockCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    deactivated?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    signupV?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    isParent?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
}

@InputType()
export class UserUncheckedUpdateWithoutConversationsInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    firstName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    lastName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    countryCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    phoneNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    phoneNumberVerified?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => UserUpdaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserUpdaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    password?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referrer?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableEnumGenderFieldUpdateOperationsInput, {nullable:true})
    gender?: InstanceType<typeof NullableEnumGenderFieldUpdateOperationsInput>;
    @Field(() => SizesNullableUpdateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    displayPicture?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    personalEmail?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    eduInstituteId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => UserUpdateshoppingPreferenceIdsInput, {nullable:true})
    shoppingPreferenceIds?: InstanceType<typeof UserUpdateshoppingPreferenceIdsInput>;
    @Field(() => UserUpdatehobbyIdsInput, {nullable:true})
    hobbyIds?: InstanceType<typeof UserUpdatehobbyIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    about?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserUpdatewishlistIdsInput, {nullable:true})
    wishlistIds?: InstanceType<typeof UserUpdatewishlistIdsInput>;
    @Field(() => UserUpdatesavedDealIdsInput, {nullable:true})
    savedDealIds?: InstanceType<typeof UserUpdatesavedDealIdsInput>;
    @Field(() => UserUpdateconversationIdsInput, {nullable:true})
    conversationIds?: InstanceType<typeof UserUpdateconversationIdsInput>;
    @Field(() => UserUpdatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserUpdatedmIdsInput>;
    @Field(() => UserStripeNullableUpdateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableUpdateEnvelopeInput>;
    @Field(() => UserUpdateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserUpdateorderIdsInput>;
    @Field(() => UserUpdatefollowedByIDsInput, {nullable:true})
    followedByIDs?: InstanceType<typeof UserUpdatefollowedByIDsInput>;
    @Field(() => UserUpdatefollowingIDsInput, {nullable:true})
    followingIDs?: InstanceType<typeof UserUpdatefollowingIDsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    addedManually?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => AltSignupNullableUpdateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableUpdateEnvelopeInput>;
    @Field(() => NullableEnumPlatformFieldUpdateOperationsInput, {nullable:true})
    registrationPlatform?: InstanceType<typeof NullableEnumPlatformFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    instagramUsername?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referralRockCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    deactivated?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    signupV?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    isParent?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => ShoppingPreferenceUncheckedUpdateManyWithoutUsersNestedInput, {nullable:true})
    shoppingPreferences?: InstanceType<typeof ShoppingPreferenceUncheckedUpdateManyWithoutUsersNestedInput>;
    @Field(() => HobbyUncheckedUpdateManyWithoutUsersNestedInput, {nullable:true})
    hobbies?: InstanceType<typeof HobbyUncheckedUpdateManyWithoutUsersNestedInput>;
    @Field(() => ProductListingUncheckedUpdateManyWithoutUploaderNestedInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUncheckedUpdateManyWithoutUploaderNestedInput>;
    @Field(() => ProductReportUncheckedUpdateManyWithoutReporterNestedInput, {nullable:true})
    reportedProducts?: InstanceType<typeof ProductReportUncheckedUpdateManyWithoutReporterNestedInput>;
    @Field(() => ProductListingUncheckedUpdateManyWithoutWishlistedByNestedInput, {nullable:true})
    wishlist?: InstanceType<typeof ProductListingUncheckedUpdateManyWithoutWishlistedByNestedInput>;
    @Field(() => DealUncheckedUpdateManyWithoutSavedUsersNestedInput, {nullable:true})
    savedDeals?: InstanceType<typeof DealUncheckedUpdateManyWithoutSavedUsersNestedInput>;
    @Field(() => UserUncheckedUpdateManyWithoutFollowingNestedInput, {nullable:true})
    followedBy?: InstanceType<typeof UserUncheckedUpdateManyWithoutFollowingNestedInput>;
    @Field(() => UserUncheckedUpdateManyWithoutFollowedByNestedInput, {nullable:true})
    following?: InstanceType<typeof UserUncheckedUpdateManyWithoutFollowedByNestedInput>;
}

@InputType()
export class UserUncheckedUpdateWithoutEduInstituteInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    firstName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    lastName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    countryCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    phoneNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    phoneNumberVerified?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => UserUpdaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserUpdaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    password?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referrer?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableEnumGenderFieldUpdateOperationsInput, {nullable:true})
    gender?: InstanceType<typeof NullableEnumGenderFieldUpdateOperationsInput>;
    @Field(() => SizesNullableUpdateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    displayPicture?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    personalEmail?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => UserUpdateshoppingPreferenceIdsInput, {nullable:true})
    shoppingPreferenceIds?: InstanceType<typeof UserUpdateshoppingPreferenceIdsInput>;
    @Field(() => UserUpdatehobbyIdsInput, {nullable:true})
    hobbyIds?: InstanceType<typeof UserUpdatehobbyIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    about?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserUpdatewishlistIdsInput, {nullable:true})
    wishlistIds?: InstanceType<typeof UserUpdatewishlistIdsInput>;
    @Field(() => UserUpdatesavedDealIdsInput, {nullable:true})
    savedDealIds?: InstanceType<typeof UserUpdatesavedDealIdsInput>;
    @Field(() => UserUpdateconversationIdsInput, {nullable:true})
    conversationIds?: InstanceType<typeof UserUpdateconversationIdsInput>;
    @Field(() => UserUpdatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserUpdatedmIdsInput>;
    @Field(() => UserStripeNullableUpdateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableUpdateEnvelopeInput>;
    @Field(() => UserUpdateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserUpdateorderIdsInput>;
    @Field(() => UserUpdatefollowedByIDsInput, {nullable:true})
    followedByIDs?: InstanceType<typeof UserUpdatefollowedByIDsInput>;
    @Field(() => UserUpdatefollowingIDsInput, {nullable:true})
    followingIDs?: InstanceType<typeof UserUpdatefollowingIDsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    addedManually?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => AltSignupNullableUpdateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableUpdateEnvelopeInput>;
    @Field(() => NullableEnumPlatformFieldUpdateOperationsInput, {nullable:true})
    registrationPlatform?: InstanceType<typeof NullableEnumPlatformFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    instagramUsername?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referralRockCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    deactivated?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    signupV?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    isParent?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => ShoppingPreferenceUncheckedUpdateManyWithoutUsersNestedInput, {nullable:true})
    shoppingPreferences?: InstanceType<typeof ShoppingPreferenceUncheckedUpdateManyWithoutUsersNestedInput>;
    @Field(() => HobbyUncheckedUpdateManyWithoutUsersNestedInput, {nullable:true})
    hobbies?: InstanceType<typeof HobbyUncheckedUpdateManyWithoutUsersNestedInput>;
    @Field(() => ProductListingUncheckedUpdateManyWithoutUploaderNestedInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUncheckedUpdateManyWithoutUploaderNestedInput>;
    @Field(() => ProductReportUncheckedUpdateManyWithoutReporterNestedInput, {nullable:true})
    reportedProducts?: InstanceType<typeof ProductReportUncheckedUpdateManyWithoutReporterNestedInput>;
    @Field(() => ProductListingUncheckedUpdateManyWithoutWishlistedByNestedInput, {nullable:true})
    wishlist?: InstanceType<typeof ProductListingUncheckedUpdateManyWithoutWishlistedByNestedInput>;
    @Field(() => DealUncheckedUpdateManyWithoutSavedUsersNestedInput, {nullable:true})
    savedDeals?: InstanceType<typeof DealUncheckedUpdateManyWithoutSavedUsersNestedInput>;
    @Field(() => ConversationUncheckedUpdateManyWithoutParticipantsNestedInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUncheckedUpdateManyWithoutParticipantsNestedInput>;
    @Field(() => UserUncheckedUpdateManyWithoutFollowingNestedInput, {nullable:true})
    followedBy?: InstanceType<typeof UserUncheckedUpdateManyWithoutFollowingNestedInput>;
    @Field(() => UserUncheckedUpdateManyWithoutFollowedByNestedInput, {nullable:true})
    following?: InstanceType<typeof UserUncheckedUpdateManyWithoutFollowedByNestedInput>;
}

@InputType()
export class UserUncheckedUpdateWithoutFollowedByInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    firstName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    lastName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    countryCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    phoneNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    phoneNumberVerified?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => UserUpdaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserUpdaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    password?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referrer?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableEnumGenderFieldUpdateOperationsInput, {nullable:true})
    gender?: InstanceType<typeof NullableEnumGenderFieldUpdateOperationsInput>;
    @Field(() => SizesNullableUpdateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    displayPicture?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    personalEmail?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    eduInstituteId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => UserUpdateshoppingPreferenceIdsInput, {nullable:true})
    shoppingPreferenceIds?: InstanceType<typeof UserUpdateshoppingPreferenceIdsInput>;
    @Field(() => UserUpdatehobbyIdsInput, {nullable:true})
    hobbyIds?: InstanceType<typeof UserUpdatehobbyIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    about?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserUpdatewishlistIdsInput, {nullable:true})
    wishlistIds?: InstanceType<typeof UserUpdatewishlistIdsInput>;
    @Field(() => UserUpdatesavedDealIdsInput, {nullable:true})
    savedDealIds?: InstanceType<typeof UserUpdatesavedDealIdsInput>;
    @Field(() => UserUpdateconversationIdsInput, {nullable:true})
    conversationIds?: InstanceType<typeof UserUpdateconversationIdsInput>;
    @Field(() => UserUpdatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserUpdatedmIdsInput>;
    @Field(() => UserStripeNullableUpdateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableUpdateEnvelopeInput>;
    @Field(() => UserUpdateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserUpdateorderIdsInput>;
    @Field(() => UserUpdatefollowedByIDsInput, {nullable:true})
    followedByIDs?: InstanceType<typeof UserUpdatefollowedByIDsInput>;
    @Field(() => UserUpdatefollowingIDsInput, {nullable:true})
    followingIDs?: InstanceType<typeof UserUpdatefollowingIDsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    addedManually?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => AltSignupNullableUpdateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableUpdateEnvelopeInput>;
    @Field(() => NullableEnumPlatformFieldUpdateOperationsInput, {nullable:true})
    registrationPlatform?: InstanceType<typeof NullableEnumPlatformFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    instagramUsername?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referralRockCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    deactivated?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    signupV?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    isParent?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => ShoppingPreferenceUncheckedUpdateManyWithoutUsersNestedInput, {nullable:true})
    shoppingPreferences?: InstanceType<typeof ShoppingPreferenceUncheckedUpdateManyWithoutUsersNestedInput>;
    @Field(() => HobbyUncheckedUpdateManyWithoutUsersNestedInput, {nullable:true})
    hobbies?: InstanceType<typeof HobbyUncheckedUpdateManyWithoutUsersNestedInput>;
    @Field(() => ProductListingUncheckedUpdateManyWithoutUploaderNestedInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUncheckedUpdateManyWithoutUploaderNestedInput>;
    @Field(() => ProductReportUncheckedUpdateManyWithoutReporterNestedInput, {nullable:true})
    reportedProducts?: InstanceType<typeof ProductReportUncheckedUpdateManyWithoutReporterNestedInput>;
    @Field(() => ProductListingUncheckedUpdateManyWithoutWishlistedByNestedInput, {nullable:true})
    wishlist?: InstanceType<typeof ProductListingUncheckedUpdateManyWithoutWishlistedByNestedInput>;
    @Field(() => DealUncheckedUpdateManyWithoutSavedUsersNestedInput, {nullable:true})
    savedDeals?: InstanceType<typeof DealUncheckedUpdateManyWithoutSavedUsersNestedInput>;
    @Field(() => ConversationUncheckedUpdateManyWithoutParticipantsNestedInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUncheckedUpdateManyWithoutParticipantsNestedInput>;
    @Field(() => UserUncheckedUpdateManyWithoutFollowedByNestedInput, {nullable:true})
    following?: InstanceType<typeof UserUncheckedUpdateManyWithoutFollowedByNestedInput>;
}

@InputType()
export class UserUncheckedUpdateWithoutFollowingInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    firstName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    lastName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    countryCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    phoneNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    phoneNumberVerified?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => UserUpdaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserUpdaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    password?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referrer?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableEnumGenderFieldUpdateOperationsInput, {nullable:true})
    gender?: InstanceType<typeof NullableEnumGenderFieldUpdateOperationsInput>;
    @Field(() => SizesNullableUpdateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    displayPicture?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    personalEmail?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    eduInstituteId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => UserUpdateshoppingPreferenceIdsInput, {nullable:true})
    shoppingPreferenceIds?: InstanceType<typeof UserUpdateshoppingPreferenceIdsInput>;
    @Field(() => UserUpdatehobbyIdsInput, {nullable:true})
    hobbyIds?: InstanceType<typeof UserUpdatehobbyIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    about?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserUpdatewishlistIdsInput, {nullable:true})
    wishlistIds?: InstanceType<typeof UserUpdatewishlistIdsInput>;
    @Field(() => UserUpdatesavedDealIdsInput, {nullable:true})
    savedDealIds?: InstanceType<typeof UserUpdatesavedDealIdsInput>;
    @Field(() => UserUpdateconversationIdsInput, {nullable:true})
    conversationIds?: InstanceType<typeof UserUpdateconversationIdsInput>;
    @Field(() => UserUpdatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserUpdatedmIdsInput>;
    @Field(() => UserStripeNullableUpdateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableUpdateEnvelopeInput>;
    @Field(() => UserUpdateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserUpdateorderIdsInput>;
    @Field(() => UserUpdatefollowedByIDsInput, {nullable:true})
    followedByIDs?: InstanceType<typeof UserUpdatefollowedByIDsInput>;
    @Field(() => UserUpdatefollowingIDsInput, {nullable:true})
    followingIDs?: InstanceType<typeof UserUpdatefollowingIDsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    addedManually?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => AltSignupNullableUpdateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableUpdateEnvelopeInput>;
    @Field(() => NullableEnumPlatformFieldUpdateOperationsInput, {nullable:true})
    registrationPlatform?: InstanceType<typeof NullableEnumPlatformFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    instagramUsername?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referralRockCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    deactivated?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    signupV?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    isParent?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => ShoppingPreferenceUncheckedUpdateManyWithoutUsersNestedInput, {nullable:true})
    shoppingPreferences?: InstanceType<typeof ShoppingPreferenceUncheckedUpdateManyWithoutUsersNestedInput>;
    @Field(() => HobbyUncheckedUpdateManyWithoutUsersNestedInput, {nullable:true})
    hobbies?: InstanceType<typeof HobbyUncheckedUpdateManyWithoutUsersNestedInput>;
    @Field(() => ProductListingUncheckedUpdateManyWithoutUploaderNestedInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUncheckedUpdateManyWithoutUploaderNestedInput>;
    @Field(() => ProductReportUncheckedUpdateManyWithoutReporterNestedInput, {nullable:true})
    reportedProducts?: InstanceType<typeof ProductReportUncheckedUpdateManyWithoutReporterNestedInput>;
    @Field(() => ProductListingUncheckedUpdateManyWithoutWishlistedByNestedInput, {nullable:true})
    wishlist?: InstanceType<typeof ProductListingUncheckedUpdateManyWithoutWishlistedByNestedInput>;
    @Field(() => DealUncheckedUpdateManyWithoutSavedUsersNestedInput, {nullable:true})
    savedDeals?: InstanceType<typeof DealUncheckedUpdateManyWithoutSavedUsersNestedInput>;
    @Field(() => ConversationUncheckedUpdateManyWithoutParticipantsNestedInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUncheckedUpdateManyWithoutParticipantsNestedInput>;
    @Field(() => UserUncheckedUpdateManyWithoutFollowingNestedInput, {nullable:true})
    followedBy?: InstanceType<typeof UserUncheckedUpdateManyWithoutFollowingNestedInput>;
}

@InputType()
export class UserUncheckedUpdateWithoutHobbiesInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    firstName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    lastName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    countryCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    phoneNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    phoneNumberVerified?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => UserUpdaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserUpdaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    password?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referrer?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableEnumGenderFieldUpdateOperationsInput, {nullable:true})
    gender?: InstanceType<typeof NullableEnumGenderFieldUpdateOperationsInput>;
    @Field(() => SizesNullableUpdateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    displayPicture?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    personalEmail?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    eduInstituteId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => UserUpdateshoppingPreferenceIdsInput, {nullable:true})
    shoppingPreferenceIds?: InstanceType<typeof UserUpdateshoppingPreferenceIdsInput>;
    @Field(() => UserUpdatehobbyIdsInput, {nullable:true})
    hobbyIds?: InstanceType<typeof UserUpdatehobbyIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    about?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserUpdatewishlistIdsInput, {nullable:true})
    wishlistIds?: InstanceType<typeof UserUpdatewishlistIdsInput>;
    @Field(() => UserUpdatesavedDealIdsInput, {nullable:true})
    savedDealIds?: InstanceType<typeof UserUpdatesavedDealIdsInput>;
    @Field(() => UserUpdateconversationIdsInput, {nullable:true})
    conversationIds?: InstanceType<typeof UserUpdateconversationIdsInput>;
    @Field(() => UserUpdatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserUpdatedmIdsInput>;
    @Field(() => UserStripeNullableUpdateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableUpdateEnvelopeInput>;
    @Field(() => UserUpdateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserUpdateorderIdsInput>;
    @Field(() => UserUpdatefollowedByIDsInput, {nullable:true})
    followedByIDs?: InstanceType<typeof UserUpdatefollowedByIDsInput>;
    @Field(() => UserUpdatefollowingIDsInput, {nullable:true})
    followingIDs?: InstanceType<typeof UserUpdatefollowingIDsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    addedManually?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => AltSignupNullableUpdateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableUpdateEnvelopeInput>;
    @Field(() => NullableEnumPlatformFieldUpdateOperationsInput, {nullable:true})
    registrationPlatform?: InstanceType<typeof NullableEnumPlatformFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    instagramUsername?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referralRockCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    deactivated?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    signupV?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    isParent?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => ShoppingPreferenceUncheckedUpdateManyWithoutUsersNestedInput, {nullable:true})
    shoppingPreferences?: InstanceType<typeof ShoppingPreferenceUncheckedUpdateManyWithoutUsersNestedInput>;
    @Field(() => ProductListingUncheckedUpdateManyWithoutUploaderNestedInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUncheckedUpdateManyWithoutUploaderNestedInput>;
    @Field(() => ProductReportUncheckedUpdateManyWithoutReporterNestedInput, {nullable:true})
    reportedProducts?: InstanceType<typeof ProductReportUncheckedUpdateManyWithoutReporterNestedInput>;
    @Field(() => ProductListingUncheckedUpdateManyWithoutWishlistedByNestedInput, {nullable:true})
    wishlist?: InstanceType<typeof ProductListingUncheckedUpdateManyWithoutWishlistedByNestedInput>;
    @Field(() => DealUncheckedUpdateManyWithoutSavedUsersNestedInput, {nullable:true})
    savedDeals?: InstanceType<typeof DealUncheckedUpdateManyWithoutSavedUsersNestedInput>;
    @Field(() => ConversationUncheckedUpdateManyWithoutParticipantsNestedInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUncheckedUpdateManyWithoutParticipantsNestedInput>;
    @Field(() => UserUncheckedUpdateManyWithoutFollowingNestedInput, {nullable:true})
    followedBy?: InstanceType<typeof UserUncheckedUpdateManyWithoutFollowingNestedInput>;
    @Field(() => UserUncheckedUpdateManyWithoutFollowedByNestedInput, {nullable:true})
    following?: InstanceType<typeof UserUncheckedUpdateManyWithoutFollowedByNestedInput>;
}

@InputType()
export class UserUncheckedUpdateWithoutProductListingsInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    firstName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    lastName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    countryCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    phoneNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    phoneNumberVerified?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => UserUpdaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserUpdaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    password?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referrer?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableEnumGenderFieldUpdateOperationsInput, {nullable:true})
    gender?: InstanceType<typeof NullableEnumGenderFieldUpdateOperationsInput>;
    @Field(() => SizesNullableUpdateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    displayPicture?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    personalEmail?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    eduInstituteId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => UserUpdateshoppingPreferenceIdsInput, {nullable:true})
    shoppingPreferenceIds?: InstanceType<typeof UserUpdateshoppingPreferenceIdsInput>;
    @Field(() => UserUpdatehobbyIdsInput, {nullable:true})
    hobbyIds?: InstanceType<typeof UserUpdatehobbyIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    about?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserUpdatewishlistIdsInput, {nullable:true})
    wishlistIds?: InstanceType<typeof UserUpdatewishlistIdsInput>;
    @Field(() => UserUpdatesavedDealIdsInput, {nullable:true})
    savedDealIds?: InstanceType<typeof UserUpdatesavedDealIdsInput>;
    @Field(() => UserUpdateconversationIdsInput, {nullable:true})
    conversationIds?: InstanceType<typeof UserUpdateconversationIdsInput>;
    @Field(() => UserUpdatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserUpdatedmIdsInput>;
    @Field(() => UserStripeNullableUpdateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableUpdateEnvelopeInput>;
    @Field(() => UserUpdateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserUpdateorderIdsInput>;
    @Field(() => UserUpdatefollowedByIDsInput, {nullable:true})
    followedByIDs?: InstanceType<typeof UserUpdatefollowedByIDsInput>;
    @Field(() => UserUpdatefollowingIDsInput, {nullable:true})
    followingIDs?: InstanceType<typeof UserUpdatefollowingIDsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    addedManually?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => AltSignupNullableUpdateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableUpdateEnvelopeInput>;
    @Field(() => NullableEnumPlatformFieldUpdateOperationsInput, {nullable:true})
    registrationPlatform?: InstanceType<typeof NullableEnumPlatformFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    instagramUsername?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referralRockCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    deactivated?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    signupV?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    isParent?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => ShoppingPreferenceUncheckedUpdateManyWithoutUsersNestedInput, {nullable:true})
    shoppingPreferences?: InstanceType<typeof ShoppingPreferenceUncheckedUpdateManyWithoutUsersNestedInput>;
    @Field(() => HobbyUncheckedUpdateManyWithoutUsersNestedInput, {nullable:true})
    hobbies?: InstanceType<typeof HobbyUncheckedUpdateManyWithoutUsersNestedInput>;
    @Field(() => ProductReportUncheckedUpdateManyWithoutReporterNestedInput, {nullable:true})
    reportedProducts?: InstanceType<typeof ProductReportUncheckedUpdateManyWithoutReporterNestedInput>;
    @Field(() => ProductListingUncheckedUpdateManyWithoutWishlistedByNestedInput, {nullable:true})
    wishlist?: InstanceType<typeof ProductListingUncheckedUpdateManyWithoutWishlistedByNestedInput>;
    @Field(() => DealUncheckedUpdateManyWithoutSavedUsersNestedInput, {nullable:true})
    savedDeals?: InstanceType<typeof DealUncheckedUpdateManyWithoutSavedUsersNestedInput>;
    @Field(() => ConversationUncheckedUpdateManyWithoutParticipantsNestedInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUncheckedUpdateManyWithoutParticipantsNestedInput>;
    @Field(() => UserUncheckedUpdateManyWithoutFollowingNestedInput, {nullable:true})
    followedBy?: InstanceType<typeof UserUncheckedUpdateManyWithoutFollowingNestedInput>;
    @Field(() => UserUncheckedUpdateManyWithoutFollowedByNestedInput, {nullable:true})
    following?: InstanceType<typeof UserUncheckedUpdateManyWithoutFollowedByNestedInput>;
}

@InputType()
export class UserUncheckedUpdateWithoutReportedProductsInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    firstName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    lastName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    countryCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    phoneNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    phoneNumberVerified?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => UserUpdaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserUpdaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    password?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referrer?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableEnumGenderFieldUpdateOperationsInput, {nullable:true})
    gender?: InstanceType<typeof NullableEnumGenderFieldUpdateOperationsInput>;
    @Field(() => SizesNullableUpdateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    displayPicture?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    personalEmail?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    eduInstituteId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => UserUpdateshoppingPreferenceIdsInput, {nullable:true})
    shoppingPreferenceIds?: InstanceType<typeof UserUpdateshoppingPreferenceIdsInput>;
    @Field(() => UserUpdatehobbyIdsInput, {nullable:true})
    hobbyIds?: InstanceType<typeof UserUpdatehobbyIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    about?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserUpdatewishlistIdsInput, {nullable:true})
    wishlistIds?: InstanceType<typeof UserUpdatewishlistIdsInput>;
    @Field(() => UserUpdatesavedDealIdsInput, {nullable:true})
    savedDealIds?: InstanceType<typeof UserUpdatesavedDealIdsInput>;
    @Field(() => UserUpdateconversationIdsInput, {nullable:true})
    conversationIds?: InstanceType<typeof UserUpdateconversationIdsInput>;
    @Field(() => UserUpdatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserUpdatedmIdsInput>;
    @Field(() => UserStripeNullableUpdateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableUpdateEnvelopeInput>;
    @Field(() => UserUpdateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserUpdateorderIdsInput>;
    @Field(() => UserUpdatefollowedByIDsInput, {nullable:true})
    followedByIDs?: InstanceType<typeof UserUpdatefollowedByIDsInput>;
    @Field(() => UserUpdatefollowingIDsInput, {nullable:true})
    followingIDs?: InstanceType<typeof UserUpdatefollowingIDsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    addedManually?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => AltSignupNullableUpdateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableUpdateEnvelopeInput>;
    @Field(() => NullableEnumPlatformFieldUpdateOperationsInput, {nullable:true})
    registrationPlatform?: InstanceType<typeof NullableEnumPlatformFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    instagramUsername?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referralRockCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    deactivated?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    signupV?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    isParent?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => ShoppingPreferenceUncheckedUpdateManyWithoutUsersNestedInput, {nullable:true})
    shoppingPreferences?: InstanceType<typeof ShoppingPreferenceUncheckedUpdateManyWithoutUsersNestedInput>;
    @Field(() => HobbyUncheckedUpdateManyWithoutUsersNestedInput, {nullable:true})
    hobbies?: InstanceType<typeof HobbyUncheckedUpdateManyWithoutUsersNestedInput>;
    @Field(() => ProductListingUncheckedUpdateManyWithoutUploaderNestedInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUncheckedUpdateManyWithoutUploaderNestedInput>;
    @Field(() => ProductListingUncheckedUpdateManyWithoutWishlistedByNestedInput, {nullable:true})
    wishlist?: InstanceType<typeof ProductListingUncheckedUpdateManyWithoutWishlistedByNestedInput>;
    @Field(() => DealUncheckedUpdateManyWithoutSavedUsersNestedInput, {nullable:true})
    savedDeals?: InstanceType<typeof DealUncheckedUpdateManyWithoutSavedUsersNestedInput>;
    @Field(() => ConversationUncheckedUpdateManyWithoutParticipantsNestedInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUncheckedUpdateManyWithoutParticipantsNestedInput>;
    @Field(() => UserUncheckedUpdateManyWithoutFollowingNestedInput, {nullable:true})
    followedBy?: InstanceType<typeof UserUncheckedUpdateManyWithoutFollowingNestedInput>;
    @Field(() => UserUncheckedUpdateManyWithoutFollowedByNestedInput, {nullable:true})
    following?: InstanceType<typeof UserUncheckedUpdateManyWithoutFollowedByNestedInput>;
}

@InputType()
export class UserUncheckedUpdateWithoutSavedDealsInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    firstName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    lastName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    countryCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    phoneNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    phoneNumberVerified?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => UserUpdaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserUpdaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    password?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referrer?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableEnumGenderFieldUpdateOperationsInput, {nullable:true})
    gender?: InstanceType<typeof NullableEnumGenderFieldUpdateOperationsInput>;
    @Field(() => SizesNullableUpdateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    displayPicture?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    personalEmail?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    eduInstituteId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => UserUpdateshoppingPreferenceIdsInput, {nullable:true})
    shoppingPreferenceIds?: InstanceType<typeof UserUpdateshoppingPreferenceIdsInput>;
    @Field(() => UserUpdatehobbyIdsInput, {nullable:true})
    hobbyIds?: InstanceType<typeof UserUpdatehobbyIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    about?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserUpdatewishlistIdsInput, {nullable:true})
    wishlistIds?: InstanceType<typeof UserUpdatewishlistIdsInput>;
    @Field(() => UserUpdatesavedDealIdsInput, {nullable:true})
    savedDealIds?: InstanceType<typeof UserUpdatesavedDealIdsInput>;
    @Field(() => UserUpdateconversationIdsInput, {nullable:true})
    conversationIds?: InstanceType<typeof UserUpdateconversationIdsInput>;
    @Field(() => UserUpdatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserUpdatedmIdsInput>;
    @Field(() => UserStripeNullableUpdateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableUpdateEnvelopeInput>;
    @Field(() => UserUpdateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserUpdateorderIdsInput>;
    @Field(() => UserUpdatefollowedByIDsInput, {nullable:true})
    followedByIDs?: InstanceType<typeof UserUpdatefollowedByIDsInput>;
    @Field(() => UserUpdatefollowingIDsInput, {nullable:true})
    followingIDs?: InstanceType<typeof UserUpdatefollowingIDsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    addedManually?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => AltSignupNullableUpdateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableUpdateEnvelopeInput>;
    @Field(() => NullableEnumPlatformFieldUpdateOperationsInput, {nullable:true})
    registrationPlatform?: InstanceType<typeof NullableEnumPlatformFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    instagramUsername?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referralRockCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    deactivated?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    signupV?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    isParent?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => ShoppingPreferenceUncheckedUpdateManyWithoutUsersNestedInput, {nullable:true})
    shoppingPreferences?: InstanceType<typeof ShoppingPreferenceUncheckedUpdateManyWithoutUsersNestedInput>;
    @Field(() => HobbyUncheckedUpdateManyWithoutUsersNestedInput, {nullable:true})
    hobbies?: InstanceType<typeof HobbyUncheckedUpdateManyWithoutUsersNestedInput>;
    @Field(() => ProductListingUncheckedUpdateManyWithoutUploaderNestedInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUncheckedUpdateManyWithoutUploaderNestedInput>;
    @Field(() => ProductReportUncheckedUpdateManyWithoutReporterNestedInput, {nullable:true})
    reportedProducts?: InstanceType<typeof ProductReportUncheckedUpdateManyWithoutReporterNestedInput>;
    @Field(() => ProductListingUncheckedUpdateManyWithoutWishlistedByNestedInput, {nullable:true})
    wishlist?: InstanceType<typeof ProductListingUncheckedUpdateManyWithoutWishlistedByNestedInput>;
    @Field(() => ConversationUncheckedUpdateManyWithoutParticipantsNestedInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUncheckedUpdateManyWithoutParticipantsNestedInput>;
    @Field(() => UserUncheckedUpdateManyWithoutFollowingNestedInput, {nullable:true})
    followedBy?: InstanceType<typeof UserUncheckedUpdateManyWithoutFollowingNestedInput>;
    @Field(() => UserUncheckedUpdateManyWithoutFollowedByNestedInput, {nullable:true})
    following?: InstanceType<typeof UserUncheckedUpdateManyWithoutFollowedByNestedInput>;
}

@InputType()
export class UserUncheckedUpdateWithoutShoppingPreferencesInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    firstName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    lastName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    countryCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    phoneNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    phoneNumberVerified?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => UserUpdaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserUpdaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    password?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referrer?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableEnumGenderFieldUpdateOperationsInput, {nullable:true})
    gender?: InstanceType<typeof NullableEnumGenderFieldUpdateOperationsInput>;
    @Field(() => SizesNullableUpdateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    displayPicture?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    personalEmail?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    eduInstituteId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => UserUpdateshoppingPreferenceIdsInput, {nullable:true})
    shoppingPreferenceIds?: InstanceType<typeof UserUpdateshoppingPreferenceIdsInput>;
    @Field(() => UserUpdatehobbyIdsInput, {nullable:true})
    hobbyIds?: InstanceType<typeof UserUpdatehobbyIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    about?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserUpdatewishlistIdsInput, {nullable:true})
    wishlistIds?: InstanceType<typeof UserUpdatewishlistIdsInput>;
    @Field(() => UserUpdatesavedDealIdsInput, {nullable:true})
    savedDealIds?: InstanceType<typeof UserUpdatesavedDealIdsInput>;
    @Field(() => UserUpdateconversationIdsInput, {nullable:true})
    conversationIds?: InstanceType<typeof UserUpdateconversationIdsInput>;
    @Field(() => UserUpdatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserUpdatedmIdsInput>;
    @Field(() => UserStripeNullableUpdateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableUpdateEnvelopeInput>;
    @Field(() => UserUpdateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserUpdateorderIdsInput>;
    @Field(() => UserUpdatefollowedByIDsInput, {nullable:true})
    followedByIDs?: InstanceType<typeof UserUpdatefollowedByIDsInput>;
    @Field(() => UserUpdatefollowingIDsInput, {nullable:true})
    followingIDs?: InstanceType<typeof UserUpdatefollowingIDsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    addedManually?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => AltSignupNullableUpdateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableUpdateEnvelopeInput>;
    @Field(() => NullableEnumPlatformFieldUpdateOperationsInput, {nullable:true})
    registrationPlatform?: InstanceType<typeof NullableEnumPlatformFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    instagramUsername?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referralRockCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    deactivated?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    signupV?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    isParent?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => HobbyUncheckedUpdateManyWithoutUsersNestedInput, {nullable:true})
    hobbies?: InstanceType<typeof HobbyUncheckedUpdateManyWithoutUsersNestedInput>;
    @Field(() => ProductListingUncheckedUpdateManyWithoutUploaderNestedInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUncheckedUpdateManyWithoutUploaderNestedInput>;
    @Field(() => ProductReportUncheckedUpdateManyWithoutReporterNestedInput, {nullable:true})
    reportedProducts?: InstanceType<typeof ProductReportUncheckedUpdateManyWithoutReporterNestedInput>;
    @Field(() => ProductListingUncheckedUpdateManyWithoutWishlistedByNestedInput, {nullable:true})
    wishlist?: InstanceType<typeof ProductListingUncheckedUpdateManyWithoutWishlistedByNestedInput>;
    @Field(() => DealUncheckedUpdateManyWithoutSavedUsersNestedInput, {nullable:true})
    savedDeals?: InstanceType<typeof DealUncheckedUpdateManyWithoutSavedUsersNestedInput>;
    @Field(() => ConversationUncheckedUpdateManyWithoutParticipantsNestedInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUncheckedUpdateManyWithoutParticipantsNestedInput>;
    @Field(() => UserUncheckedUpdateManyWithoutFollowingNestedInput, {nullable:true})
    followedBy?: InstanceType<typeof UserUncheckedUpdateManyWithoutFollowingNestedInput>;
    @Field(() => UserUncheckedUpdateManyWithoutFollowedByNestedInput, {nullable:true})
    following?: InstanceType<typeof UserUncheckedUpdateManyWithoutFollowedByNestedInput>;
}

@InputType()
export class UserUncheckedUpdateWithoutWishlistInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    firstName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    lastName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    countryCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    phoneNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    phoneNumberVerified?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => UserUpdaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserUpdaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    password?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referrer?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableEnumGenderFieldUpdateOperationsInput, {nullable:true})
    gender?: InstanceType<typeof NullableEnumGenderFieldUpdateOperationsInput>;
    @Field(() => SizesNullableUpdateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    displayPicture?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    personalEmail?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    eduInstituteId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => UserUpdateshoppingPreferenceIdsInput, {nullable:true})
    shoppingPreferenceIds?: InstanceType<typeof UserUpdateshoppingPreferenceIdsInput>;
    @Field(() => UserUpdatehobbyIdsInput, {nullable:true})
    hobbyIds?: InstanceType<typeof UserUpdatehobbyIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    about?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserUpdatewishlistIdsInput, {nullable:true})
    wishlistIds?: InstanceType<typeof UserUpdatewishlistIdsInput>;
    @Field(() => UserUpdatesavedDealIdsInput, {nullable:true})
    savedDealIds?: InstanceType<typeof UserUpdatesavedDealIdsInput>;
    @Field(() => UserUpdateconversationIdsInput, {nullable:true})
    conversationIds?: InstanceType<typeof UserUpdateconversationIdsInput>;
    @Field(() => UserUpdatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserUpdatedmIdsInput>;
    @Field(() => UserStripeNullableUpdateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableUpdateEnvelopeInput>;
    @Field(() => UserUpdateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserUpdateorderIdsInput>;
    @Field(() => UserUpdatefollowedByIDsInput, {nullable:true})
    followedByIDs?: InstanceType<typeof UserUpdatefollowedByIDsInput>;
    @Field(() => UserUpdatefollowingIDsInput, {nullable:true})
    followingIDs?: InstanceType<typeof UserUpdatefollowingIDsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    addedManually?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => AltSignupNullableUpdateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableUpdateEnvelopeInput>;
    @Field(() => NullableEnumPlatformFieldUpdateOperationsInput, {nullable:true})
    registrationPlatform?: InstanceType<typeof NullableEnumPlatformFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    instagramUsername?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referralRockCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    deactivated?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    signupV?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    isParent?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => ShoppingPreferenceUncheckedUpdateManyWithoutUsersNestedInput, {nullable:true})
    shoppingPreferences?: InstanceType<typeof ShoppingPreferenceUncheckedUpdateManyWithoutUsersNestedInput>;
    @Field(() => HobbyUncheckedUpdateManyWithoutUsersNestedInput, {nullable:true})
    hobbies?: InstanceType<typeof HobbyUncheckedUpdateManyWithoutUsersNestedInput>;
    @Field(() => ProductListingUncheckedUpdateManyWithoutUploaderNestedInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUncheckedUpdateManyWithoutUploaderNestedInput>;
    @Field(() => ProductReportUncheckedUpdateManyWithoutReporterNestedInput, {nullable:true})
    reportedProducts?: InstanceType<typeof ProductReportUncheckedUpdateManyWithoutReporterNestedInput>;
    @Field(() => DealUncheckedUpdateManyWithoutSavedUsersNestedInput, {nullable:true})
    savedDeals?: InstanceType<typeof DealUncheckedUpdateManyWithoutSavedUsersNestedInput>;
    @Field(() => ConversationUncheckedUpdateManyWithoutParticipantsNestedInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUncheckedUpdateManyWithoutParticipantsNestedInput>;
    @Field(() => UserUncheckedUpdateManyWithoutFollowingNestedInput, {nullable:true})
    followedBy?: InstanceType<typeof UserUncheckedUpdateManyWithoutFollowingNestedInput>;
    @Field(() => UserUncheckedUpdateManyWithoutFollowedByNestedInput, {nullable:true})
    following?: InstanceType<typeof UserUncheckedUpdateManyWithoutFollowedByNestedInput>;
}

@InputType()
export class UserUncheckedUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    firstName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    lastName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    countryCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    phoneNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    phoneNumberVerified?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => UserUpdaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserUpdaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    password?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referrer?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableEnumGenderFieldUpdateOperationsInput, {nullable:true})
    gender?: InstanceType<typeof NullableEnumGenderFieldUpdateOperationsInput>;
    @Field(() => SizesNullableUpdateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    displayPicture?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    personalEmail?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    eduInstituteId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => UserUpdateshoppingPreferenceIdsInput, {nullable:true})
    shoppingPreferenceIds?: InstanceType<typeof UserUpdateshoppingPreferenceIdsInput>;
    @Field(() => UserUpdatehobbyIdsInput, {nullable:true})
    hobbyIds?: InstanceType<typeof UserUpdatehobbyIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    about?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserUpdatewishlistIdsInput, {nullable:true})
    wishlistIds?: InstanceType<typeof UserUpdatewishlistIdsInput>;
    @Field(() => UserUpdatesavedDealIdsInput, {nullable:true})
    savedDealIds?: InstanceType<typeof UserUpdatesavedDealIdsInput>;
    @Field(() => UserUpdateconversationIdsInput, {nullable:true})
    conversationIds?: InstanceType<typeof UserUpdateconversationIdsInput>;
    @Field(() => UserUpdatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserUpdatedmIdsInput>;
    @Field(() => UserStripeNullableUpdateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableUpdateEnvelopeInput>;
    @Field(() => UserUpdateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserUpdateorderIdsInput>;
    @Field(() => UserUpdatefollowedByIDsInput, {nullable:true})
    followedByIDs?: InstanceType<typeof UserUpdatefollowedByIDsInput>;
    @Field(() => UserUpdatefollowingIDsInput, {nullable:true})
    followingIDs?: InstanceType<typeof UserUpdatefollowingIDsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    addedManually?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => AltSignupNullableUpdateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableUpdateEnvelopeInput>;
    @Field(() => NullableEnumPlatformFieldUpdateOperationsInput, {nullable:true})
    registrationPlatform?: InstanceType<typeof NullableEnumPlatformFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    instagramUsername?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referralRockCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    deactivated?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    signupV?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    isParent?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => ShoppingPreferenceUncheckedUpdateManyWithoutUsersNestedInput, {nullable:true})
    shoppingPreferences?: InstanceType<typeof ShoppingPreferenceUncheckedUpdateManyWithoutUsersNestedInput>;
    @Field(() => HobbyUncheckedUpdateManyWithoutUsersNestedInput, {nullable:true})
    hobbies?: InstanceType<typeof HobbyUncheckedUpdateManyWithoutUsersNestedInput>;
    @Field(() => ProductListingUncheckedUpdateManyWithoutUploaderNestedInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUncheckedUpdateManyWithoutUploaderNestedInput>;
    @Field(() => ProductReportUncheckedUpdateManyWithoutReporterNestedInput, {nullable:true})
    reportedProducts?: InstanceType<typeof ProductReportUncheckedUpdateManyWithoutReporterNestedInput>;
    @Field(() => ProductListingUncheckedUpdateManyWithoutWishlistedByNestedInput, {nullable:true})
    wishlist?: InstanceType<typeof ProductListingUncheckedUpdateManyWithoutWishlistedByNestedInput>;
    @Field(() => DealUncheckedUpdateManyWithoutSavedUsersNestedInput, {nullable:true})
    savedDeals?: InstanceType<typeof DealUncheckedUpdateManyWithoutSavedUsersNestedInput>;
    @Field(() => ConversationUncheckedUpdateManyWithoutParticipantsNestedInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUncheckedUpdateManyWithoutParticipantsNestedInput>;
    @Field(() => UserUncheckedUpdateManyWithoutFollowingNestedInput, {nullable:true})
    followedBy?: InstanceType<typeof UserUncheckedUpdateManyWithoutFollowingNestedInput>;
    @Field(() => UserUncheckedUpdateManyWithoutFollowedByNestedInput, {nullable:true})
    following?: InstanceType<typeof UserUncheckedUpdateManyWithoutFollowedByNestedInput>;
}

@InputType()
export class UserUpdateManyMutationInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    firstName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    lastName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    countryCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    phoneNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    phoneNumberVerified?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => UserUpdaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserUpdaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    password?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referrer?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableEnumGenderFieldUpdateOperationsInput, {nullable:true})
    gender?: InstanceType<typeof NullableEnumGenderFieldUpdateOperationsInput>;
    @Field(() => SizesNullableUpdateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    displayPicture?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    personalEmail?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    about?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserUpdatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserUpdatedmIdsInput>;
    @Field(() => UserStripeNullableUpdateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableUpdateEnvelopeInput>;
    @Field(() => UserUpdateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserUpdateorderIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    addedManually?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => AltSignupNullableUpdateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableUpdateEnvelopeInput>;
    @Field(() => NullableEnumPlatformFieldUpdateOperationsInput, {nullable:true})
    registrationPlatform?: InstanceType<typeof NullableEnumPlatformFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    instagramUsername?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referralRockCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    deactivated?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    signupV?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    isParent?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
}

@InputType()
export class UserUpdateManyWithWhereWithoutConversationsInput {
    @Field(() => UserScalarWhereInput, {nullable:false})
    @Type(() => UserScalarWhereInput)
    where!: InstanceType<typeof UserScalarWhereInput>;
    @Field(() => UserUpdateManyMutationInput, {nullable:false})
    @Type(() => UserUpdateManyMutationInput)
    data!: InstanceType<typeof UserUpdateManyMutationInput>;
}

@InputType()
export class UserUpdateManyWithWhereWithoutEduInstituteInput {
    @Field(() => UserScalarWhereInput, {nullable:false})
    @Type(() => UserScalarWhereInput)
    where!: InstanceType<typeof UserScalarWhereInput>;
    @Field(() => UserUpdateManyMutationInput, {nullable:false})
    @Type(() => UserUpdateManyMutationInput)
    data!: InstanceType<typeof UserUpdateManyMutationInput>;
}

@InputType()
export class UserUpdateManyWithWhereWithoutFollowedByInput {
    @Field(() => UserScalarWhereInput, {nullable:false})
    @Type(() => UserScalarWhereInput)
    where!: InstanceType<typeof UserScalarWhereInput>;
    @Field(() => UserUpdateManyMutationInput, {nullable:false})
    @Type(() => UserUpdateManyMutationInput)
    data!: InstanceType<typeof UserUpdateManyMutationInput>;
}

@InputType()
export class UserUpdateManyWithWhereWithoutFollowingInput {
    @Field(() => UserScalarWhereInput, {nullable:false})
    @Type(() => UserScalarWhereInput)
    where!: InstanceType<typeof UserScalarWhereInput>;
    @Field(() => UserUpdateManyMutationInput, {nullable:false})
    @Type(() => UserUpdateManyMutationInput)
    data!: InstanceType<typeof UserUpdateManyMutationInput>;
}

@InputType()
export class UserUpdateManyWithWhereWithoutHobbiesInput {
    @Field(() => UserScalarWhereInput, {nullable:false})
    @Type(() => UserScalarWhereInput)
    where!: InstanceType<typeof UserScalarWhereInput>;
    @Field(() => UserUpdateManyMutationInput, {nullable:false})
    @Type(() => UserUpdateManyMutationInput)
    data!: InstanceType<typeof UserUpdateManyMutationInput>;
}

@InputType()
export class UserUpdateManyWithWhereWithoutSavedDealsInput {
    @Field(() => UserScalarWhereInput, {nullable:false})
    @Type(() => UserScalarWhereInput)
    where!: InstanceType<typeof UserScalarWhereInput>;
    @Field(() => UserUpdateManyMutationInput, {nullable:false})
    @Type(() => UserUpdateManyMutationInput)
    data!: InstanceType<typeof UserUpdateManyMutationInput>;
}

@InputType()
export class UserUpdateManyWithWhereWithoutShoppingPreferencesInput {
    @Field(() => UserScalarWhereInput, {nullable:false})
    @Type(() => UserScalarWhereInput)
    where!: InstanceType<typeof UserScalarWhereInput>;
    @Field(() => UserUpdateManyMutationInput, {nullable:false})
    @Type(() => UserUpdateManyMutationInput)
    data!: InstanceType<typeof UserUpdateManyMutationInput>;
}

@InputType()
export class UserUpdateManyWithWhereWithoutWishlistInput {
    @Field(() => UserScalarWhereInput, {nullable:false})
    @Type(() => UserScalarWhereInput)
    where!: InstanceType<typeof UserScalarWhereInput>;
    @Field(() => UserUpdateManyMutationInput, {nullable:false})
    @Type(() => UserUpdateManyMutationInput)
    data!: InstanceType<typeof UserUpdateManyMutationInput>;
}

@InputType()
export class UserUpdateManyWithoutConversationsNestedInput {
    @Field(() => [UserCreateWithoutConversationsInput], {nullable:true})
    @Type(() => UserCreateWithoutConversationsInput)
    create?: Array<UserCreateWithoutConversationsInput>;
    @Field(() => [UserCreateOrConnectWithoutConversationsInput], {nullable:true})
    @Type(() => UserCreateOrConnectWithoutConversationsInput)
    connectOrCreate?: Array<UserCreateOrConnectWithoutConversationsInput>;
    @Field(() => [UserUpsertWithWhereUniqueWithoutConversationsInput], {nullable:true})
    @Type(() => UserUpsertWithWhereUniqueWithoutConversationsInput)
    upsert?: Array<UserUpsertWithWhereUniqueWithoutConversationsInput>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    set?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserUpdateWithWhereUniqueWithoutConversationsInput], {nullable:true})
    @Type(() => UserUpdateWithWhereUniqueWithoutConversationsInput)
    update?: Array<UserUpdateWithWhereUniqueWithoutConversationsInput>;
    @Field(() => [UserUpdateManyWithWhereWithoutConversationsInput], {nullable:true})
    @Type(() => UserUpdateManyWithWhereWithoutConversationsInput)
    updateMany?: Array<UserUpdateManyWithWhereWithoutConversationsInput>;
    @Field(() => [UserScalarWhereInput], {nullable:true})
    @Type(() => UserScalarWhereInput)
    deleteMany?: Array<UserScalarWhereInput>;
}

@InputType()
export class UserUpdateManyWithoutEduInstituteNestedInput {
    @Field(() => [UserCreateWithoutEduInstituteInput], {nullable:true})
    @Type(() => UserCreateWithoutEduInstituteInput)
    create?: Array<UserCreateWithoutEduInstituteInput>;
    @Field(() => [UserCreateOrConnectWithoutEduInstituteInput], {nullable:true})
    @Type(() => UserCreateOrConnectWithoutEduInstituteInput)
    connectOrCreate?: Array<UserCreateOrConnectWithoutEduInstituteInput>;
    @Field(() => [UserUpsertWithWhereUniqueWithoutEduInstituteInput], {nullable:true})
    @Type(() => UserUpsertWithWhereUniqueWithoutEduInstituteInput)
    upsert?: Array<UserUpsertWithWhereUniqueWithoutEduInstituteInput>;
    @Field(() => UserCreateManyEduInstituteInputEnvelope, {nullable:true})
    @Type(() => UserCreateManyEduInstituteInputEnvelope)
    createMany?: InstanceType<typeof UserCreateManyEduInstituteInputEnvelope>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    set?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserUpdateWithWhereUniqueWithoutEduInstituteInput], {nullable:true})
    @Type(() => UserUpdateWithWhereUniqueWithoutEduInstituteInput)
    update?: Array<UserUpdateWithWhereUniqueWithoutEduInstituteInput>;
    @Field(() => [UserUpdateManyWithWhereWithoutEduInstituteInput], {nullable:true})
    @Type(() => UserUpdateManyWithWhereWithoutEduInstituteInput)
    updateMany?: Array<UserUpdateManyWithWhereWithoutEduInstituteInput>;
    @Field(() => [UserScalarWhereInput], {nullable:true})
    @Type(() => UserScalarWhereInput)
    deleteMany?: Array<UserScalarWhereInput>;
}

@InputType()
export class UserUpdateManyWithoutFollowedByNestedInput {
    @Field(() => [UserCreateWithoutFollowedByInput], {nullable:true})
    @Type(() => UserCreateWithoutFollowedByInput)
    create?: Array<UserCreateWithoutFollowedByInput>;
    @Field(() => [UserCreateOrConnectWithoutFollowedByInput], {nullable:true})
    @Type(() => UserCreateOrConnectWithoutFollowedByInput)
    connectOrCreate?: Array<UserCreateOrConnectWithoutFollowedByInput>;
    @Field(() => [UserUpsertWithWhereUniqueWithoutFollowedByInput], {nullable:true})
    @Type(() => UserUpsertWithWhereUniqueWithoutFollowedByInput)
    upsert?: Array<UserUpsertWithWhereUniqueWithoutFollowedByInput>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    set?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserUpdateWithWhereUniqueWithoutFollowedByInput], {nullable:true})
    @Type(() => UserUpdateWithWhereUniqueWithoutFollowedByInput)
    update?: Array<UserUpdateWithWhereUniqueWithoutFollowedByInput>;
    @Field(() => [UserUpdateManyWithWhereWithoutFollowedByInput], {nullable:true})
    @Type(() => UserUpdateManyWithWhereWithoutFollowedByInput)
    updateMany?: Array<UserUpdateManyWithWhereWithoutFollowedByInput>;
    @Field(() => [UserScalarWhereInput], {nullable:true})
    @Type(() => UserScalarWhereInput)
    deleteMany?: Array<UserScalarWhereInput>;
}

@InputType()
export class UserUpdateManyWithoutFollowingNestedInput {
    @Field(() => [UserCreateWithoutFollowingInput], {nullable:true})
    @Type(() => UserCreateWithoutFollowingInput)
    create?: Array<UserCreateWithoutFollowingInput>;
    @Field(() => [UserCreateOrConnectWithoutFollowingInput], {nullable:true})
    @Type(() => UserCreateOrConnectWithoutFollowingInput)
    connectOrCreate?: Array<UserCreateOrConnectWithoutFollowingInput>;
    @Field(() => [UserUpsertWithWhereUniqueWithoutFollowingInput], {nullable:true})
    @Type(() => UserUpsertWithWhereUniqueWithoutFollowingInput)
    upsert?: Array<UserUpsertWithWhereUniqueWithoutFollowingInput>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    set?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserUpdateWithWhereUniqueWithoutFollowingInput], {nullable:true})
    @Type(() => UserUpdateWithWhereUniqueWithoutFollowingInput)
    update?: Array<UserUpdateWithWhereUniqueWithoutFollowingInput>;
    @Field(() => [UserUpdateManyWithWhereWithoutFollowingInput], {nullable:true})
    @Type(() => UserUpdateManyWithWhereWithoutFollowingInput)
    updateMany?: Array<UserUpdateManyWithWhereWithoutFollowingInput>;
    @Field(() => [UserScalarWhereInput], {nullable:true})
    @Type(() => UserScalarWhereInput)
    deleteMany?: Array<UserScalarWhereInput>;
}

@InputType()
export class UserUpdateManyWithoutHobbiesNestedInput {
    @Field(() => [UserCreateWithoutHobbiesInput], {nullable:true})
    @Type(() => UserCreateWithoutHobbiesInput)
    create?: Array<UserCreateWithoutHobbiesInput>;
    @Field(() => [UserCreateOrConnectWithoutHobbiesInput], {nullable:true})
    @Type(() => UserCreateOrConnectWithoutHobbiesInput)
    connectOrCreate?: Array<UserCreateOrConnectWithoutHobbiesInput>;
    @Field(() => [UserUpsertWithWhereUniqueWithoutHobbiesInput], {nullable:true})
    @Type(() => UserUpsertWithWhereUniqueWithoutHobbiesInput)
    upsert?: Array<UserUpsertWithWhereUniqueWithoutHobbiesInput>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    set?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserUpdateWithWhereUniqueWithoutHobbiesInput], {nullable:true})
    @Type(() => UserUpdateWithWhereUniqueWithoutHobbiesInput)
    update?: Array<UserUpdateWithWhereUniqueWithoutHobbiesInput>;
    @Field(() => [UserUpdateManyWithWhereWithoutHobbiesInput], {nullable:true})
    @Type(() => UserUpdateManyWithWhereWithoutHobbiesInput)
    updateMany?: Array<UserUpdateManyWithWhereWithoutHobbiesInput>;
    @Field(() => [UserScalarWhereInput], {nullable:true})
    @Type(() => UserScalarWhereInput)
    deleteMany?: Array<UserScalarWhereInput>;
}

@InputType()
export class UserUpdateManyWithoutSavedDealsNestedInput {
    @Field(() => [UserCreateWithoutSavedDealsInput], {nullable:true})
    @Type(() => UserCreateWithoutSavedDealsInput)
    create?: Array<UserCreateWithoutSavedDealsInput>;
    @Field(() => [UserCreateOrConnectWithoutSavedDealsInput], {nullable:true})
    @Type(() => UserCreateOrConnectWithoutSavedDealsInput)
    connectOrCreate?: Array<UserCreateOrConnectWithoutSavedDealsInput>;
    @Field(() => [UserUpsertWithWhereUniqueWithoutSavedDealsInput], {nullable:true})
    @Type(() => UserUpsertWithWhereUniqueWithoutSavedDealsInput)
    upsert?: Array<UserUpsertWithWhereUniqueWithoutSavedDealsInput>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    set?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserUpdateWithWhereUniqueWithoutSavedDealsInput], {nullable:true})
    @Type(() => UserUpdateWithWhereUniqueWithoutSavedDealsInput)
    update?: Array<UserUpdateWithWhereUniqueWithoutSavedDealsInput>;
    @Field(() => [UserUpdateManyWithWhereWithoutSavedDealsInput], {nullable:true})
    @Type(() => UserUpdateManyWithWhereWithoutSavedDealsInput)
    updateMany?: Array<UserUpdateManyWithWhereWithoutSavedDealsInput>;
    @Field(() => [UserScalarWhereInput], {nullable:true})
    @Type(() => UserScalarWhereInput)
    deleteMany?: Array<UserScalarWhereInput>;
}

@InputType()
export class UserUpdateManyWithoutShoppingPreferencesNestedInput {
    @Field(() => [UserCreateWithoutShoppingPreferencesInput], {nullable:true})
    @Type(() => UserCreateWithoutShoppingPreferencesInput)
    create?: Array<UserCreateWithoutShoppingPreferencesInput>;
    @Field(() => [UserCreateOrConnectWithoutShoppingPreferencesInput], {nullable:true})
    @Type(() => UserCreateOrConnectWithoutShoppingPreferencesInput)
    connectOrCreate?: Array<UserCreateOrConnectWithoutShoppingPreferencesInput>;
    @Field(() => [UserUpsertWithWhereUniqueWithoutShoppingPreferencesInput], {nullable:true})
    @Type(() => UserUpsertWithWhereUniqueWithoutShoppingPreferencesInput)
    upsert?: Array<UserUpsertWithWhereUniqueWithoutShoppingPreferencesInput>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    set?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserUpdateWithWhereUniqueWithoutShoppingPreferencesInput], {nullable:true})
    @Type(() => UserUpdateWithWhereUniqueWithoutShoppingPreferencesInput)
    update?: Array<UserUpdateWithWhereUniqueWithoutShoppingPreferencesInput>;
    @Field(() => [UserUpdateManyWithWhereWithoutShoppingPreferencesInput], {nullable:true})
    @Type(() => UserUpdateManyWithWhereWithoutShoppingPreferencesInput)
    updateMany?: Array<UserUpdateManyWithWhereWithoutShoppingPreferencesInput>;
    @Field(() => [UserScalarWhereInput], {nullable:true})
    @Type(() => UserScalarWhereInput)
    deleteMany?: Array<UserScalarWhereInput>;
}

@InputType()
export class UserUpdateManyWithoutWishlistNestedInput {
    @Field(() => [UserCreateWithoutWishlistInput], {nullable:true})
    @Type(() => UserCreateWithoutWishlistInput)
    create?: Array<UserCreateWithoutWishlistInput>;
    @Field(() => [UserCreateOrConnectWithoutWishlistInput], {nullable:true})
    @Type(() => UserCreateOrConnectWithoutWishlistInput)
    connectOrCreate?: Array<UserCreateOrConnectWithoutWishlistInput>;
    @Field(() => [UserUpsertWithWhereUniqueWithoutWishlistInput], {nullable:true})
    @Type(() => UserUpsertWithWhereUniqueWithoutWishlistInput)
    upsert?: Array<UserUpsertWithWhereUniqueWithoutWishlistInput>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    set?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    disconnect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    delete?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserWhereUniqueInput], {nullable:true})
    @Type(() => UserWhereUniqueInput)
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id'>>;
    @Field(() => [UserUpdateWithWhereUniqueWithoutWishlistInput], {nullable:true})
    @Type(() => UserUpdateWithWhereUniqueWithoutWishlistInput)
    update?: Array<UserUpdateWithWhereUniqueWithoutWishlistInput>;
    @Field(() => [UserUpdateManyWithWhereWithoutWishlistInput], {nullable:true})
    @Type(() => UserUpdateManyWithWhereWithoutWishlistInput)
    updateMany?: Array<UserUpdateManyWithWhereWithoutWishlistInput>;
    @Field(() => [UserScalarWhereInput], {nullable:true})
    @Type(() => UserScalarWhereInput)
    deleteMany?: Array<UserScalarWhereInput>;
}

@InputType()
export class UserUpdateOneRequiredWithoutReportedProductsNestedInput {
    @Field(() => UserCreateWithoutReportedProductsInput, {nullable:true})
    @Type(() => UserCreateWithoutReportedProductsInput)
    create?: InstanceType<typeof UserCreateWithoutReportedProductsInput>;
    @Field(() => UserCreateOrConnectWithoutReportedProductsInput, {nullable:true})
    @Type(() => UserCreateOrConnectWithoutReportedProductsInput)
    connectOrCreate?: InstanceType<typeof UserCreateOrConnectWithoutReportedProductsInput>;
    @Field(() => UserUpsertWithoutReportedProductsInput, {nullable:true})
    @Type(() => UserUpsertWithoutReportedProductsInput)
    upsert?: InstanceType<typeof UserUpsertWithoutReportedProductsInput>;
    @Field(() => UserWhereUniqueInput, {nullable:true})
    @Type(() => UserWhereUniqueInput)
    connect?: Prisma.AtLeast<UserWhereUniqueInput, 'id'>;
    @Field(() => UserUpdateToOneWithWhereWithoutReportedProductsInput, {nullable:true})
    @Type(() => UserUpdateToOneWithWhereWithoutReportedProductsInput)
    update?: InstanceType<typeof UserUpdateToOneWithWhereWithoutReportedProductsInput>;
}

@InputType()
export class UserUpdateOneWithoutProductListingsNestedInput {
    @Field(() => UserCreateWithoutProductListingsInput, {nullable:true})
    @Type(() => UserCreateWithoutProductListingsInput)
    create?: InstanceType<typeof UserCreateWithoutProductListingsInput>;
    @Field(() => UserCreateOrConnectWithoutProductListingsInput, {nullable:true})
    @Type(() => UserCreateOrConnectWithoutProductListingsInput)
    connectOrCreate?: InstanceType<typeof UserCreateOrConnectWithoutProductListingsInput>;
    @Field(() => UserUpsertWithoutProductListingsInput, {nullable:true})
    @Type(() => UserUpsertWithoutProductListingsInput)
    upsert?: InstanceType<typeof UserUpsertWithoutProductListingsInput>;
    @Field(() => Boolean, {nullable:true})
    disconnect?: boolean;
    @Field(() => UserWhereInput, {nullable:true})
    @Type(() => UserWhereInput)
    delete?: InstanceType<typeof UserWhereInput>;
    @Field(() => UserWhereUniqueInput, {nullable:true})
    @Type(() => UserWhereUniqueInput)
    connect?: Prisma.AtLeast<UserWhereUniqueInput, 'id'>;
    @Field(() => UserUpdateToOneWithWhereWithoutProductListingsInput, {nullable:true})
    @Type(() => UserUpdateToOneWithWhereWithoutProductListingsInput)
    update?: InstanceType<typeof UserUpdateToOneWithWhereWithoutProductListingsInput>;
}

@InputType()
export class UserUpdateToOneWithWhereWithoutProductListingsInput {
    @Field(() => UserWhereInput, {nullable:true})
    @Type(() => UserWhereInput)
    where?: InstanceType<typeof UserWhereInput>;
    @Field(() => UserUpdateWithoutProductListingsInput, {nullable:false})
    @Type(() => UserUpdateWithoutProductListingsInput)
    data!: InstanceType<typeof UserUpdateWithoutProductListingsInput>;
}

@InputType()
export class UserUpdateToOneWithWhereWithoutReportedProductsInput {
    @Field(() => UserWhereInput, {nullable:true})
    @Type(() => UserWhereInput)
    where?: InstanceType<typeof UserWhereInput>;
    @Field(() => UserUpdateWithoutReportedProductsInput, {nullable:false})
    @Type(() => UserUpdateWithoutReportedProductsInput)
    data!: InstanceType<typeof UserUpdateWithoutReportedProductsInput>;
}

@InputType()
export class UserUpdateWithWhereUniqueWithoutConversationsInput {
    @Field(() => UserWhereUniqueInput, {nullable:false})
    @Type(() => UserWhereUniqueInput)
    where!: Prisma.AtLeast<UserWhereUniqueInput, 'id'>;
    @Field(() => UserUpdateWithoutConversationsInput, {nullable:false})
    @Type(() => UserUpdateWithoutConversationsInput)
    data!: InstanceType<typeof UserUpdateWithoutConversationsInput>;
}

@InputType()
export class UserUpdateWithWhereUniqueWithoutEduInstituteInput {
    @Field(() => UserWhereUniqueInput, {nullable:false})
    @Type(() => UserWhereUniqueInput)
    where!: Prisma.AtLeast<UserWhereUniqueInput, 'id'>;
    @Field(() => UserUpdateWithoutEduInstituteInput, {nullable:false})
    @Type(() => UserUpdateWithoutEduInstituteInput)
    data!: InstanceType<typeof UserUpdateWithoutEduInstituteInput>;
}

@InputType()
export class UserUpdateWithWhereUniqueWithoutFollowedByInput {
    @Field(() => UserWhereUniqueInput, {nullable:false})
    @Type(() => UserWhereUniqueInput)
    where!: Prisma.AtLeast<UserWhereUniqueInput, 'id'>;
    @Field(() => UserUpdateWithoutFollowedByInput, {nullable:false})
    @Type(() => UserUpdateWithoutFollowedByInput)
    data!: InstanceType<typeof UserUpdateWithoutFollowedByInput>;
}

@InputType()
export class UserUpdateWithWhereUniqueWithoutFollowingInput {
    @Field(() => UserWhereUniqueInput, {nullable:false})
    @Type(() => UserWhereUniqueInput)
    where!: Prisma.AtLeast<UserWhereUniqueInput, 'id'>;
    @Field(() => UserUpdateWithoutFollowingInput, {nullable:false})
    @Type(() => UserUpdateWithoutFollowingInput)
    data!: InstanceType<typeof UserUpdateWithoutFollowingInput>;
}

@InputType()
export class UserUpdateWithWhereUniqueWithoutHobbiesInput {
    @Field(() => UserWhereUniqueInput, {nullable:false})
    @Type(() => UserWhereUniqueInput)
    where!: Prisma.AtLeast<UserWhereUniqueInput, 'id'>;
    @Field(() => UserUpdateWithoutHobbiesInput, {nullable:false})
    @Type(() => UserUpdateWithoutHobbiesInput)
    data!: InstanceType<typeof UserUpdateWithoutHobbiesInput>;
}

@InputType()
export class UserUpdateWithWhereUniqueWithoutSavedDealsInput {
    @Field(() => UserWhereUniqueInput, {nullable:false})
    @Type(() => UserWhereUniqueInput)
    where!: Prisma.AtLeast<UserWhereUniqueInput, 'id'>;
    @Field(() => UserUpdateWithoutSavedDealsInput, {nullable:false})
    @Type(() => UserUpdateWithoutSavedDealsInput)
    data!: InstanceType<typeof UserUpdateWithoutSavedDealsInput>;
}

@InputType()
export class UserUpdateWithWhereUniqueWithoutShoppingPreferencesInput {
    @Field(() => UserWhereUniqueInput, {nullable:false})
    @Type(() => UserWhereUniqueInput)
    where!: Prisma.AtLeast<UserWhereUniqueInput, 'id'>;
    @Field(() => UserUpdateWithoutShoppingPreferencesInput, {nullable:false})
    @Type(() => UserUpdateWithoutShoppingPreferencesInput)
    data!: InstanceType<typeof UserUpdateWithoutShoppingPreferencesInput>;
}

@InputType()
export class UserUpdateWithWhereUniqueWithoutWishlistInput {
    @Field(() => UserWhereUniqueInput, {nullable:false})
    @Type(() => UserWhereUniqueInput)
    where!: Prisma.AtLeast<UserWhereUniqueInput, 'id'>;
    @Field(() => UserUpdateWithoutWishlistInput, {nullable:false})
    @Type(() => UserUpdateWithoutWishlistInput)
    data!: InstanceType<typeof UserUpdateWithoutWishlistInput>;
}

@InputType()
export class UserUpdateWithoutConversationsInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    firstName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    lastName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    countryCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    phoneNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    phoneNumberVerified?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => UserUpdaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserUpdaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    password?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referrer?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableEnumGenderFieldUpdateOperationsInput, {nullable:true})
    gender?: InstanceType<typeof NullableEnumGenderFieldUpdateOperationsInput>;
    @Field(() => SizesNullableUpdateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    displayPicture?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    personalEmail?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    about?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserUpdatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserUpdatedmIdsInput>;
    @Field(() => UserStripeNullableUpdateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableUpdateEnvelopeInput>;
    @Field(() => UserUpdateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserUpdateorderIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    addedManually?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => AltSignupNullableUpdateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableUpdateEnvelopeInput>;
    @Field(() => NullableEnumPlatformFieldUpdateOperationsInput, {nullable:true})
    registrationPlatform?: InstanceType<typeof NullableEnumPlatformFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    instagramUsername?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referralRockCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    deactivated?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    signupV?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    isParent?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => EduInstituteUpdateOneWithoutStudentsNestedInput, {nullable:true})
    eduInstitute?: InstanceType<typeof EduInstituteUpdateOneWithoutStudentsNestedInput>;
    @Field(() => ShoppingPreferenceUpdateManyWithoutUsersNestedInput, {nullable:true})
    shoppingPreferences?: InstanceType<typeof ShoppingPreferenceUpdateManyWithoutUsersNestedInput>;
    @Field(() => HobbyUpdateManyWithoutUsersNestedInput, {nullable:true})
    hobbies?: InstanceType<typeof HobbyUpdateManyWithoutUsersNestedInput>;
    @Field(() => ProductListingUpdateManyWithoutUploaderNestedInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUpdateManyWithoutUploaderNestedInput>;
    @Field(() => ProductReportUpdateManyWithoutReporterNestedInput, {nullable:true})
    reportedProducts?: InstanceType<typeof ProductReportUpdateManyWithoutReporterNestedInput>;
    @Field(() => ProductListingUpdateManyWithoutWishlistedByNestedInput, {nullable:true})
    wishlist?: InstanceType<typeof ProductListingUpdateManyWithoutWishlistedByNestedInput>;
    @Field(() => DealUpdateManyWithoutSavedUsersNestedInput, {nullable:true})
    savedDeals?: InstanceType<typeof DealUpdateManyWithoutSavedUsersNestedInput>;
    @Field(() => UserUpdateManyWithoutFollowingNestedInput, {nullable:true})
    followedBy?: InstanceType<typeof UserUpdateManyWithoutFollowingNestedInput>;
    @Field(() => UserUpdateManyWithoutFollowedByNestedInput, {nullable:true})
    following?: InstanceType<typeof UserUpdateManyWithoutFollowedByNestedInput>;
}

@InputType()
export class UserUpdateWithoutEduInstituteInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    firstName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    lastName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    countryCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    phoneNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    phoneNumberVerified?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => UserUpdaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserUpdaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    password?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referrer?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableEnumGenderFieldUpdateOperationsInput, {nullable:true})
    gender?: InstanceType<typeof NullableEnumGenderFieldUpdateOperationsInput>;
    @Field(() => SizesNullableUpdateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    displayPicture?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    personalEmail?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    about?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserUpdatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserUpdatedmIdsInput>;
    @Field(() => UserStripeNullableUpdateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableUpdateEnvelopeInput>;
    @Field(() => UserUpdateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserUpdateorderIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    addedManually?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => AltSignupNullableUpdateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableUpdateEnvelopeInput>;
    @Field(() => NullableEnumPlatformFieldUpdateOperationsInput, {nullable:true})
    registrationPlatform?: InstanceType<typeof NullableEnumPlatformFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    instagramUsername?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referralRockCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    deactivated?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    signupV?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    isParent?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => ShoppingPreferenceUpdateManyWithoutUsersNestedInput, {nullable:true})
    shoppingPreferences?: InstanceType<typeof ShoppingPreferenceUpdateManyWithoutUsersNestedInput>;
    @Field(() => HobbyUpdateManyWithoutUsersNestedInput, {nullable:true})
    hobbies?: InstanceType<typeof HobbyUpdateManyWithoutUsersNestedInput>;
    @Field(() => ProductListingUpdateManyWithoutUploaderNestedInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUpdateManyWithoutUploaderNestedInput>;
    @Field(() => ProductReportUpdateManyWithoutReporterNestedInput, {nullable:true})
    reportedProducts?: InstanceType<typeof ProductReportUpdateManyWithoutReporterNestedInput>;
    @Field(() => ProductListingUpdateManyWithoutWishlistedByNestedInput, {nullable:true})
    wishlist?: InstanceType<typeof ProductListingUpdateManyWithoutWishlistedByNestedInput>;
    @Field(() => DealUpdateManyWithoutSavedUsersNestedInput, {nullable:true})
    savedDeals?: InstanceType<typeof DealUpdateManyWithoutSavedUsersNestedInput>;
    @Field(() => ConversationUpdateManyWithoutParticipantsNestedInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUpdateManyWithoutParticipantsNestedInput>;
    @Field(() => UserUpdateManyWithoutFollowingNestedInput, {nullable:true})
    followedBy?: InstanceType<typeof UserUpdateManyWithoutFollowingNestedInput>;
    @Field(() => UserUpdateManyWithoutFollowedByNestedInput, {nullable:true})
    following?: InstanceType<typeof UserUpdateManyWithoutFollowedByNestedInput>;
}

@InputType()
export class UserUpdateWithoutFollowedByInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    firstName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    lastName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    countryCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    phoneNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    phoneNumberVerified?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => UserUpdaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserUpdaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    password?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referrer?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableEnumGenderFieldUpdateOperationsInput, {nullable:true})
    gender?: InstanceType<typeof NullableEnumGenderFieldUpdateOperationsInput>;
    @Field(() => SizesNullableUpdateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    displayPicture?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    personalEmail?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    about?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserUpdatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserUpdatedmIdsInput>;
    @Field(() => UserStripeNullableUpdateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableUpdateEnvelopeInput>;
    @Field(() => UserUpdateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserUpdateorderIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    addedManually?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => AltSignupNullableUpdateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableUpdateEnvelopeInput>;
    @Field(() => NullableEnumPlatformFieldUpdateOperationsInput, {nullable:true})
    registrationPlatform?: InstanceType<typeof NullableEnumPlatformFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    instagramUsername?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referralRockCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    deactivated?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    signupV?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    isParent?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => EduInstituteUpdateOneWithoutStudentsNestedInput, {nullable:true})
    eduInstitute?: InstanceType<typeof EduInstituteUpdateOneWithoutStudentsNestedInput>;
    @Field(() => ShoppingPreferenceUpdateManyWithoutUsersNestedInput, {nullable:true})
    shoppingPreferences?: InstanceType<typeof ShoppingPreferenceUpdateManyWithoutUsersNestedInput>;
    @Field(() => HobbyUpdateManyWithoutUsersNestedInput, {nullable:true})
    hobbies?: InstanceType<typeof HobbyUpdateManyWithoutUsersNestedInput>;
    @Field(() => ProductListingUpdateManyWithoutUploaderNestedInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUpdateManyWithoutUploaderNestedInput>;
    @Field(() => ProductReportUpdateManyWithoutReporterNestedInput, {nullable:true})
    reportedProducts?: InstanceType<typeof ProductReportUpdateManyWithoutReporterNestedInput>;
    @Field(() => ProductListingUpdateManyWithoutWishlistedByNestedInput, {nullable:true})
    wishlist?: InstanceType<typeof ProductListingUpdateManyWithoutWishlistedByNestedInput>;
    @Field(() => DealUpdateManyWithoutSavedUsersNestedInput, {nullable:true})
    savedDeals?: InstanceType<typeof DealUpdateManyWithoutSavedUsersNestedInput>;
    @Field(() => ConversationUpdateManyWithoutParticipantsNestedInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUpdateManyWithoutParticipantsNestedInput>;
    @Field(() => UserUpdateManyWithoutFollowedByNestedInput, {nullable:true})
    following?: InstanceType<typeof UserUpdateManyWithoutFollowedByNestedInput>;
}

@InputType()
export class UserUpdateWithoutFollowingInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    firstName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    lastName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    countryCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    phoneNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    phoneNumberVerified?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => UserUpdaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserUpdaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    password?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referrer?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableEnumGenderFieldUpdateOperationsInput, {nullable:true})
    gender?: InstanceType<typeof NullableEnumGenderFieldUpdateOperationsInput>;
    @Field(() => SizesNullableUpdateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    displayPicture?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    personalEmail?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    about?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserUpdatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserUpdatedmIdsInput>;
    @Field(() => UserStripeNullableUpdateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableUpdateEnvelopeInput>;
    @Field(() => UserUpdateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserUpdateorderIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    addedManually?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => AltSignupNullableUpdateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableUpdateEnvelopeInput>;
    @Field(() => NullableEnumPlatformFieldUpdateOperationsInput, {nullable:true})
    registrationPlatform?: InstanceType<typeof NullableEnumPlatformFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    instagramUsername?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referralRockCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    deactivated?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    signupV?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    isParent?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => EduInstituteUpdateOneWithoutStudentsNestedInput, {nullable:true})
    eduInstitute?: InstanceType<typeof EduInstituteUpdateOneWithoutStudentsNestedInput>;
    @Field(() => ShoppingPreferenceUpdateManyWithoutUsersNestedInput, {nullable:true})
    shoppingPreferences?: InstanceType<typeof ShoppingPreferenceUpdateManyWithoutUsersNestedInput>;
    @Field(() => HobbyUpdateManyWithoutUsersNestedInput, {nullable:true})
    hobbies?: InstanceType<typeof HobbyUpdateManyWithoutUsersNestedInput>;
    @Field(() => ProductListingUpdateManyWithoutUploaderNestedInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUpdateManyWithoutUploaderNestedInput>;
    @Field(() => ProductReportUpdateManyWithoutReporterNestedInput, {nullable:true})
    reportedProducts?: InstanceType<typeof ProductReportUpdateManyWithoutReporterNestedInput>;
    @Field(() => ProductListingUpdateManyWithoutWishlistedByNestedInput, {nullable:true})
    wishlist?: InstanceType<typeof ProductListingUpdateManyWithoutWishlistedByNestedInput>;
    @Field(() => DealUpdateManyWithoutSavedUsersNestedInput, {nullable:true})
    savedDeals?: InstanceType<typeof DealUpdateManyWithoutSavedUsersNestedInput>;
    @Field(() => ConversationUpdateManyWithoutParticipantsNestedInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUpdateManyWithoutParticipantsNestedInput>;
    @Field(() => UserUpdateManyWithoutFollowingNestedInput, {nullable:true})
    followedBy?: InstanceType<typeof UserUpdateManyWithoutFollowingNestedInput>;
}

@InputType()
export class UserUpdateWithoutHobbiesInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    firstName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    lastName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    countryCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    phoneNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    phoneNumberVerified?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => UserUpdaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserUpdaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    password?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referrer?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableEnumGenderFieldUpdateOperationsInput, {nullable:true})
    gender?: InstanceType<typeof NullableEnumGenderFieldUpdateOperationsInput>;
    @Field(() => SizesNullableUpdateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    displayPicture?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    personalEmail?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    about?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserUpdatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserUpdatedmIdsInput>;
    @Field(() => UserStripeNullableUpdateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableUpdateEnvelopeInput>;
    @Field(() => UserUpdateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserUpdateorderIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    addedManually?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => AltSignupNullableUpdateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableUpdateEnvelopeInput>;
    @Field(() => NullableEnumPlatformFieldUpdateOperationsInput, {nullable:true})
    registrationPlatform?: InstanceType<typeof NullableEnumPlatformFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    instagramUsername?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referralRockCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    deactivated?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    signupV?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    isParent?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => EduInstituteUpdateOneWithoutStudentsNestedInput, {nullable:true})
    eduInstitute?: InstanceType<typeof EduInstituteUpdateOneWithoutStudentsNestedInput>;
    @Field(() => ShoppingPreferenceUpdateManyWithoutUsersNestedInput, {nullable:true})
    shoppingPreferences?: InstanceType<typeof ShoppingPreferenceUpdateManyWithoutUsersNestedInput>;
    @Field(() => ProductListingUpdateManyWithoutUploaderNestedInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUpdateManyWithoutUploaderNestedInput>;
    @Field(() => ProductReportUpdateManyWithoutReporterNestedInput, {nullable:true})
    reportedProducts?: InstanceType<typeof ProductReportUpdateManyWithoutReporterNestedInput>;
    @Field(() => ProductListingUpdateManyWithoutWishlistedByNestedInput, {nullable:true})
    wishlist?: InstanceType<typeof ProductListingUpdateManyWithoutWishlistedByNestedInput>;
    @Field(() => DealUpdateManyWithoutSavedUsersNestedInput, {nullable:true})
    savedDeals?: InstanceType<typeof DealUpdateManyWithoutSavedUsersNestedInput>;
    @Field(() => ConversationUpdateManyWithoutParticipantsNestedInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUpdateManyWithoutParticipantsNestedInput>;
    @Field(() => UserUpdateManyWithoutFollowingNestedInput, {nullable:true})
    followedBy?: InstanceType<typeof UserUpdateManyWithoutFollowingNestedInput>;
    @Field(() => UserUpdateManyWithoutFollowedByNestedInput, {nullable:true})
    following?: InstanceType<typeof UserUpdateManyWithoutFollowedByNestedInput>;
}

@InputType()
export class UserUpdateWithoutProductListingsInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    firstName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    lastName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    countryCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    phoneNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    phoneNumberVerified?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => UserUpdaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserUpdaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    password?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referrer?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableEnumGenderFieldUpdateOperationsInput, {nullable:true})
    gender?: InstanceType<typeof NullableEnumGenderFieldUpdateOperationsInput>;
    @Field(() => SizesNullableUpdateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    displayPicture?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    personalEmail?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    about?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserUpdatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserUpdatedmIdsInput>;
    @Field(() => UserStripeNullableUpdateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableUpdateEnvelopeInput>;
    @Field(() => UserUpdateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserUpdateorderIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    addedManually?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => AltSignupNullableUpdateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableUpdateEnvelopeInput>;
    @Field(() => NullableEnumPlatformFieldUpdateOperationsInput, {nullable:true})
    registrationPlatform?: InstanceType<typeof NullableEnumPlatformFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    instagramUsername?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referralRockCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    deactivated?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    signupV?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    isParent?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => EduInstituteUpdateOneWithoutStudentsNestedInput, {nullable:true})
    eduInstitute?: InstanceType<typeof EduInstituteUpdateOneWithoutStudentsNestedInput>;
    @Field(() => ShoppingPreferenceUpdateManyWithoutUsersNestedInput, {nullable:true})
    shoppingPreferences?: InstanceType<typeof ShoppingPreferenceUpdateManyWithoutUsersNestedInput>;
    @Field(() => HobbyUpdateManyWithoutUsersNestedInput, {nullable:true})
    hobbies?: InstanceType<typeof HobbyUpdateManyWithoutUsersNestedInput>;
    @Field(() => ProductReportUpdateManyWithoutReporterNestedInput, {nullable:true})
    reportedProducts?: InstanceType<typeof ProductReportUpdateManyWithoutReporterNestedInput>;
    @Field(() => ProductListingUpdateManyWithoutWishlistedByNestedInput, {nullable:true})
    wishlist?: InstanceType<typeof ProductListingUpdateManyWithoutWishlistedByNestedInput>;
    @Field(() => DealUpdateManyWithoutSavedUsersNestedInput, {nullable:true})
    savedDeals?: InstanceType<typeof DealUpdateManyWithoutSavedUsersNestedInput>;
    @Field(() => ConversationUpdateManyWithoutParticipantsNestedInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUpdateManyWithoutParticipantsNestedInput>;
    @Field(() => UserUpdateManyWithoutFollowingNestedInput, {nullable:true})
    followedBy?: InstanceType<typeof UserUpdateManyWithoutFollowingNestedInput>;
    @Field(() => UserUpdateManyWithoutFollowedByNestedInput, {nullable:true})
    following?: InstanceType<typeof UserUpdateManyWithoutFollowedByNestedInput>;
}

@InputType()
export class UserUpdateWithoutReportedProductsInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    firstName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    lastName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    countryCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    phoneNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    phoneNumberVerified?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => UserUpdaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserUpdaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    password?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referrer?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableEnumGenderFieldUpdateOperationsInput, {nullable:true})
    gender?: InstanceType<typeof NullableEnumGenderFieldUpdateOperationsInput>;
    @Field(() => SizesNullableUpdateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    displayPicture?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    personalEmail?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    about?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserUpdatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserUpdatedmIdsInput>;
    @Field(() => UserStripeNullableUpdateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableUpdateEnvelopeInput>;
    @Field(() => UserUpdateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserUpdateorderIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    addedManually?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => AltSignupNullableUpdateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableUpdateEnvelopeInput>;
    @Field(() => NullableEnumPlatformFieldUpdateOperationsInput, {nullable:true})
    registrationPlatform?: InstanceType<typeof NullableEnumPlatformFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    instagramUsername?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referralRockCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    deactivated?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    signupV?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    isParent?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => EduInstituteUpdateOneWithoutStudentsNestedInput, {nullable:true})
    eduInstitute?: InstanceType<typeof EduInstituteUpdateOneWithoutStudentsNestedInput>;
    @Field(() => ShoppingPreferenceUpdateManyWithoutUsersNestedInput, {nullable:true})
    shoppingPreferences?: InstanceType<typeof ShoppingPreferenceUpdateManyWithoutUsersNestedInput>;
    @Field(() => HobbyUpdateManyWithoutUsersNestedInput, {nullable:true})
    hobbies?: InstanceType<typeof HobbyUpdateManyWithoutUsersNestedInput>;
    @Field(() => ProductListingUpdateManyWithoutUploaderNestedInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUpdateManyWithoutUploaderNestedInput>;
    @Field(() => ProductListingUpdateManyWithoutWishlistedByNestedInput, {nullable:true})
    wishlist?: InstanceType<typeof ProductListingUpdateManyWithoutWishlistedByNestedInput>;
    @Field(() => DealUpdateManyWithoutSavedUsersNestedInput, {nullable:true})
    savedDeals?: InstanceType<typeof DealUpdateManyWithoutSavedUsersNestedInput>;
    @Field(() => ConversationUpdateManyWithoutParticipantsNestedInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUpdateManyWithoutParticipantsNestedInput>;
    @Field(() => UserUpdateManyWithoutFollowingNestedInput, {nullable:true})
    followedBy?: InstanceType<typeof UserUpdateManyWithoutFollowingNestedInput>;
    @Field(() => UserUpdateManyWithoutFollowedByNestedInput, {nullable:true})
    following?: InstanceType<typeof UserUpdateManyWithoutFollowedByNestedInput>;
}

@InputType()
export class UserUpdateWithoutSavedDealsInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    firstName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    lastName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    countryCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    phoneNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    phoneNumberVerified?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => UserUpdaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserUpdaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    password?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referrer?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableEnumGenderFieldUpdateOperationsInput, {nullable:true})
    gender?: InstanceType<typeof NullableEnumGenderFieldUpdateOperationsInput>;
    @Field(() => SizesNullableUpdateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    displayPicture?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    personalEmail?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    about?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserUpdatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserUpdatedmIdsInput>;
    @Field(() => UserStripeNullableUpdateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableUpdateEnvelopeInput>;
    @Field(() => UserUpdateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserUpdateorderIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    addedManually?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => AltSignupNullableUpdateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableUpdateEnvelopeInput>;
    @Field(() => NullableEnumPlatformFieldUpdateOperationsInput, {nullable:true})
    registrationPlatform?: InstanceType<typeof NullableEnumPlatformFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    instagramUsername?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referralRockCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    deactivated?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    signupV?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    isParent?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => EduInstituteUpdateOneWithoutStudentsNestedInput, {nullable:true})
    eduInstitute?: InstanceType<typeof EduInstituteUpdateOneWithoutStudentsNestedInput>;
    @Field(() => ShoppingPreferenceUpdateManyWithoutUsersNestedInput, {nullable:true})
    shoppingPreferences?: InstanceType<typeof ShoppingPreferenceUpdateManyWithoutUsersNestedInput>;
    @Field(() => HobbyUpdateManyWithoutUsersNestedInput, {nullable:true})
    hobbies?: InstanceType<typeof HobbyUpdateManyWithoutUsersNestedInput>;
    @Field(() => ProductListingUpdateManyWithoutUploaderNestedInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUpdateManyWithoutUploaderNestedInput>;
    @Field(() => ProductReportUpdateManyWithoutReporterNestedInput, {nullable:true})
    reportedProducts?: InstanceType<typeof ProductReportUpdateManyWithoutReporterNestedInput>;
    @Field(() => ProductListingUpdateManyWithoutWishlistedByNestedInput, {nullable:true})
    wishlist?: InstanceType<typeof ProductListingUpdateManyWithoutWishlistedByNestedInput>;
    @Field(() => ConversationUpdateManyWithoutParticipantsNestedInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUpdateManyWithoutParticipantsNestedInput>;
    @Field(() => UserUpdateManyWithoutFollowingNestedInput, {nullable:true})
    followedBy?: InstanceType<typeof UserUpdateManyWithoutFollowingNestedInput>;
    @Field(() => UserUpdateManyWithoutFollowedByNestedInput, {nullable:true})
    following?: InstanceType<typeof UserUpdateManyWithoutFollowedByNestedInput>;
}

@InputType()
export class UserUpdateWithoutShoppingPreferencesInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    firstName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    lastName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    countryCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    phoneNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    phoneNumberVerified?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => UserUpdaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserUpdaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    password?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referrer?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableEnumGenderFieldUpdateOperationsInput, {nullable:true})
    gender?: InstanceType<typeof NullableEnumGenderFieldUpdateOperationsInput>;
    @Field(() => SizesNullableUpdateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    displayPicture?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    personalEmail?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    about?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserUpdatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserUpdatedmIdsInput>;
    @Field(() => UserStripeNullableUpdateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableUpdateEnvelopeInput>;
    @Field(() => UserUpdateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserUpdateorderIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    addedManually?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => AltSignupNullableUpdateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableUpdateEnvelopeInput>;
    @Field(() => NullableEnumPlatformFieldUpdateOperationsInput, {nullable:true})
    registrationPlatform?: InstanceType<typeof NullableEnumPlatformFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    instagramUsername?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referralRockCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    deactivated?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    signupV?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    isParent?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => EduInstituteUpdateOneWithoutStudentsNestedInput, {nullable:true})
    eduInstitute?: InstanceType<typeof EduInstituteUpdateOneWithoutStudentsNestedInput>;
    @Field(() => HobbyUpdateManyWithoutUsersNestedInput, {nullable:true})
    hobbies?: InstanceType<typeof HobbyUpdateManyWithoutUsersNestedInput>;
    @Field(() => ProductListingUpdateManyWithoutUploaderNestedInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUpdateManyWithoutUploaderNestedInput>;
    @Field(() => ProductReportUpdateManyWithoutReporterNestedInput, {nullable:true})
    reportedProducts?: InstanceType<typeof ProductReportUpdateManyWithoutReporterNestedInput>;
    @Field(() => ProductListingUpdateManyWithoutWishlistedByNestedInput, {nullable:true})
    wishlist?: InstanceType<typeof ProductListingUpdateManyWithoutWishlistedByNestedInput>;
    @Field(() => DealUpdateManyWithoutSavedUsersNestedInput, {nullable:true})
    savedDeals?: InstanceType<typeof DealUpdateManyWithoutSavedUsersNestedInput>;
    @Field(() => ConversationUpdateManyWithoutParticipantsNestedInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUpdateManyWithoutParticipantsNestedInput>;
    @Field(() => UserUpdateManyWithoutFollowingNestedInput, {nullable:true})
    followedBy?: InstanceType<typeof UserUpdateManyWithoutFollowingNestedInput>;
    @Field(() => UserUpdateManyWithoutFollowedByNestedInput, {nullable:true})
    following?: InstanceType<typeof UserUpdateManyWithoutFollowedByNestedInput>;
}

@InputType()
export class UserUpdateWithoutWishlistInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    firstName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    lastName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    countryCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    phoneNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    phoneNumberVerified?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => UserUpdaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserUpdaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    password?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referrer?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableEnumGenderFieldUpdateOperationsInput, {nullable:true})
    gender?: InstanceType<typeof NullableEnumGenderFieldUpdateOperationsInput>;
    @Field(() => SizesNullableUpdateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    displayPicture?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    personalEmail?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    about?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserUpdatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserUpdatedmIdsInput>;
    @Field(() => UserStripeNullableUpdateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableUpdateEnvelopeInput>;
    @Field(() => UserUpdateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserUpdateorderIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    addedManually?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => AltSignupNullableUpdateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableUpdateEnvelopeInput>;
    @Field(() => NullableEnumPlatformFieldUpdateOperationsInput, {nullable:true})
    registrationPlatform?: InstanceType<typeof NullableEnumPlatformFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    instagramUsername?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referralRockCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    deactivated?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    signupV?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    isParent?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => EduInstituteUpdateOneWithoutStudentsNestedInput, {nullable:true})
    eduInstitute?: InstanceType<typeof EduInstituteUpdateOneWithoutStudentsNestedInput>;
    @Field(() => ShoppingPreferenceUpdateManyWithoutUsersNestedInput, {nullable:true})
    shoppingPreferences?: InstanceType<typeof ShoppingPreferenceUpdateManyWithoutUsersNestedInput>;
    @Field(() => HobbyUpdateManyWithoutUsersNestedInput, {nullable:true})
    hobbies?: InstanceType<typeof HobbyUpdateManyWithoutUsersNestedInput>;
    @Field(() => ProductListingUpdateManyWithoutUploaderNestedInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUpdateManyWithoutUploaderNestedInput>;
    @Field(() => ProductReportUpdateManyWithoutReporterNestedInput, {nullable:true})
    reportedProducts?: InstanceType<typeof ProductReportUpdateManyWithoutReporterNestedInput>;
    @Field(() => DealUpdateManyWithoutSavedUsersNestedInput, {nullable:true})
    savedDeals?: InstanceType<typeof DealUpdateManyWithoutSavedUsersNestedInput>;
    @Field(() => ConversationUpdateManyWithoutParticipantsNestedInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUpdateManyWithoutParticipantsNestedInput>;
    @Field(() => UserUpdateManyWithoutFollowingNestedInput, {nullable:true})
    followedBy?: InstanceType<typeof UserUpdateManyWithoutFollowingNestedInput>;
    @Field(() => UserUpdateManyWithoutFollowedByNestedInput, {nullable:true})
    following?: InstanceType<typeof UserUpdateManyWithoutFollowedByNestedInput>;
}

@InputType()
export class UserUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    firstName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    lastName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    countryCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    phoneNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    phoneNumberVerified?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => UserUpdaterolesInput, {nullable:true})
    roles?: InstanceType<typeof UserUpdaterolesInput>;
    @Field(() => [UserSessionCreateInput], {nullable:true})
    sessions?: Array<UserSessionCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    password?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referrer?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableEnumGenderFieldUpdateOperationsInput, {nullable:true})
    gender?: InstanceType<typeof NullableEnumGenderFieldUpdateOperationsInput>;
    @Field(() => SizesNullableUpdateEnvelopeInput, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableUpdateEnvelopeInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    displayPicture?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    personalEmail?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => [ImageCreateInput], {nullable:true})
    images?: Array<ImageCreateInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    about?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => [AddressCreateInput], {nullable:true})
    addressBook?: Array<AddressCreateInput>;
    @Field(() => UserUpdatedmIdsInput, {nullable:true})
    dmIds?: InstanceType<typeof UserUpdatedmIdsInput>;
    @Field(() => UserStripeNullableUpdateEnvelopeInput, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableUpdateEnvelopeInput>;
    @Field(() => UserUpdateorderIdsInput, {nullable:true})
    orderIds?: InstanceType<typeof UserUpdateorderIdsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    legacyId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    blackListed?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    addedManually?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => AltSignupNullableUpdateEnvelopeInput, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableUpdateEnvelopeInput>;
    @Field(() => NullableEnumPlatformFieldUpdateOperationsInput, {nullable:true})
    registrationPlatform?: InstanceType<typeof NullableEnumPlatformFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    instagramUsername?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    referralRockCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    deactivated?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    signupV?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    isParent?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    @Field(() => EduInstituteUpdateOneWithoutStudentsNestedInput, {nullable:true})
    eduInstitute?: InstanceType<typeof EduInstituteUpdateOneWithoutStudentsNestedInput>;
    @Field(() => ShoppingPreferenceUpdateManyWithoutUsersNestedInput, {nullable:true})
    shoppingPreferences?: InstanceType<typeof ShoppingPreferenceUpdateManyWithoutUsersNestedInput>;
    @Field(() => HobbyUpdateManyWithoutUsersNestedInput, {nullable:true})
    hobbies?: InstanceType<typeof HobbyUpdateManyWithoutUsersNestedInput>;
    @Field(() => ProductListingUpdateManyWithoutUploaderNestedInput, {nullable:true})
    productListings?: InstanceType<typeof ProductListingUpdateManyWithoutUploaderNestedInput>;
    @Field(() => ProductReportUpdateManyWithoutReporterNestedInput, {nullable:true})
    reportedProducts?: InstanceType<typeof ProductReportUpdateManyWithoutReporterNestedInput>;
    @Field(() => ProductListingUpdateManyWithoutWishlistedByNestedInput, {nullable:true})
    wishlist?: InstanceType<typeof ProductListingUpdateManyWithoutWishlistedByNestedInput>;
    @Field(() => DealUpdateManyWithoutSavedUsersNestedInput, {nullable:true})
    savedDeals?: InstanceType<typeof DealUpdateManyWithoutSavedUsersNestedInput>;
    @Field(() => ConversationUpdateManyWithoutParticipantsNestedInput, {nullable:true})
    conversations?: InstanceType<typeof ConversationUpdateManyWithoutParticipantsNestedInput>;
    @Field(() => UserUpdateManyWithoutFollowingNestedInput, {nullable:true})
    followedBy?: InstanceType<typeof UserUpdateManyWithoutFollowingNestedInput>;
    @Field(() => UserUpdateManyWithoutFollowedByNestedInput, {nullable:true})
    following?: InstanceType<typeof UserUpdateManyWithoutFollowedByNestedInput>;
}

@InputType()
export class UserUpdateconversationIdsInput {
    @Field(() => [String], {nullable:true})
    set?: Array<string>;
    @Field(() => [String], {nullable:true})
    push?: Array<string>;
}

@InputType()
export class UserUpdatedmIdsInput {
    @Field(() => [String], {nullable:true})
    set?: Array<string>;
    @Field(() => [String], {nullable:true})
    push?: Array<string>;
}

@InputType()
export class UserUpdatefollowedByIDsInput {
    @Field(() => [String], {nullable:true})
    set?: Array<string>;
    @Field(() => [String], {nullable:true})
    push?: Array<string>;
}

@InputType()
export class UserUpdatefollowingIDsInput {
    @Field(() => [String], {nullable:true})
    set?: Array<string>;
    @Field(() => [String], {nullable:true})
    push?: Array<string>;
}

@InputType()
export class UserUpdatehobbyIdsInput {
    @Field(() => [String], {nullable:true})
    set?: Array<string>;
    @Field(() => [String], {nullable:true})
    push?: Array<string>;
}

@InputType()
export class UserUpdateorderIdsInput {
    @Field(() => [String], {nullable:true})
    set?: Array<string>;
    @Field(() => [String], {nullable:true})
    push?: Array<string>;
}

@InputType()
export class UserUpdaterolesInput {
    @Field(() => [Role], {nullable:true})
    set?: Array<`${Role}`>;
    @Field(() => [Role], {nullable:true})
    push?: Array<`${Role}`>;
}

@InputType()
export class UserUpdatesavedDealIdsInput {
    @Field(() => [String], {nullable:true})
    set?: Array<string>;
    @Field(() => [String], {nullable:true})
    push?: Array<string>;
}

@InputType()
export class UserUpdateshoppingPreferenceIdsInput {
    @Field(() => [String], {nullable:true})
    set?: Array<string>;
    @Field(() => [String], {nullable:true})
    push?: Array<string>;
}

@InputType()
export class UserUpdatewishlistIdsInput {
    @Field(() => [String], {nullable:true})
    set?: Array<string>;
    @Field(() => [String], {nullable:true})
    push?: Array<string>;
}

@InputType()
export class UserUpsertWithWhereUniqueWithoutConversationsInput {
    @Field(() => UserWhereUniqueInput, {nullable:false})
    @Type(() => UserWhereUniqueInput)
    where!: Prisma.AtLeast<UserWhereUniqueInput, 'id'>;
    @Field(() => UserUpdateWithoutConversationsInput, {nullable:false})
    @Type(() => UserUpdateWithoutConversationsInput)
    update!: InstanceType<typeof UserUpdateWithoutConversationsInput>;
    @Field(() => UserCreateWithoutConversationsInput, {nullable:false})
    @Type(() => UserCreateWithoutConversationsInput)
    create!: InstanceType<typeof UserCreateWithoutConversationsInput>;
}

@InputType()
export class UserUpsertWithWhereUniqueWithoutEduInstituteInput {
    @Field(() => UserWhereUniqueInput, {nullable:false})
    @Type(() => UserWhereUniqueInput)
    where!: Prisma.AtLeast<UserWhereUniqueInput, 'id'>;
    @Field(() => UserUpdateWithoutEduInstituteInput, {nullable:false})
    @Type(() => UserUpdateWithoutEduInstituteInput)
    update!: InstanceType<typeof UserUpdateWithoutEduInstituteInput>;
    @Field(() => UserCreateWithoutEduInstituteInput, {nullable:false})
    @Type(() => UserCreateWithoutEduInstituteInput)
    create!: InstanceType<typeof UserCreateWithoutEduInstituteInput>;
}

@InputType()
export class UserUpsertWithWhereUniqueWithoutFollowedByInput {
    @Field(() => UserWhereUniqueInput, {nullable:false})
    @Type(() => UserWhereUniqueInput)
    where!: Prisma.AtLeast<UserWhereUniqueInput, 'id'>;
    @Field(() => UserUpdateWithoutFollowedByInput, {nullable:false})
    @Type(() => UserUpdateWithoutFollowedByInput)
    update!: InstanceType<typeof UserUpdateWithoutFollowedByInput>;
    @Field(() => UserCreateWithoutFollowedByInput, {nullable:false})
    @Type(() => UserCreateWithoutFollowedByInput)
    create!: InstanceType<typeof UserCreateWithoutFollowedByInput>;
}

@InputType()
export class UserUpsertWithWhereUniqueWithoutFollowingInput {
    @Field(() => UserWhereUniqueInput, {nullable:false})
    @Type(() => UserWhereUniqueInput)
    where!: Prisma.AtLeast<UserWhereUniqueInput, 'id'>;
    @Field(() => UserUpdateWithoutFollowingInput, {nullable:false})
    @Type(() => UserUpdateWithoutFollowingInput)
    update!: InstanceType<typeof UserUpdateWithoutFollowingInput>;
    @Field(() => UserCreateWithoutFollowingInput, {nullable:false})
    @Type(() => UserCreateWithoutFollowingInput)
    create!: InstanceType<typeof UserCreateWithoutFollowingInput>;
}

@InputType()
export class UserUpsertWithWhereUniqueWithoutHobbiesInput {
    @Field(() => UserWhereUniqueInput, {nullable:false})
    @Type(() => UserWhereUniqueInput)
    where!: Prisma.AtLeast<UserWhereUniqueInput, 'id'>;
    @Field(() => UserUpdateWithoutHobbiesInput, {nullable:false})
    @Type(() => UserUpdateWithoutHobbiesInput)
    update!: InstanceType<typeof UserUpdateWithoutHobbiesInput>;
    @Field(() => UserCreateWithoutHobbiesInput, {nullable:false})
    @Type(() => UserCreateWithoutHobbiesInput)
    create!: InstanceType<typeof UserCreateWithoutHobbiesInput>;
}

@InputType()
export class UserUpsertWithWhereUniqueWithoutSavedDealsInput {
    @Field(() => UserWhereUniqueInput, {nullable:false})
    @Type(() => UserWhereUniqueInput)
    where!: Prisma.AtLeast<UserWhereUniqueInput, 'id'>;
    @Field(() => UserUpdateWithoutSavedDealsInput, {nullable:false})
    @Type(() => UserUpdateWithoutSavedDealsInput)
    update!: InstanceType<typeof UserUpdateWithoutSavedDealsInput>;
    @Field(() => UserCreateWithoutSavedDealsInput, {nullable:false})
    @Type(() => UserCreateWithoutSavedDealsInput)
    create!: InstanceType<typeof UserCreateWithoutSavedDealsInput>;
}

@InputType()
export class UserUpsertWithWhereUniqueWithoutShoppingPreferencesInput {
    @Field(() => UserWhereUniqueInput, {nullable:false})
    @Type(() => UserWhereUniqueInput)
    where!: Prisma.AtLeast<UserWhereUniqueInput, 'id'>;
    @Field(() => UserUpdateWithoutShoppingPreferencesInput, {nullable:false})
    @Type(() => UserUpdateWithoutShoppingPreferencesInput)
    update!: InstanceType<typeof UserUpdateWithoutShoppingPreferencesInput>;
    @Field(() => UserCreateWithoutShoppingPreferencesInput, {nullable:false})
    @Type(() => UserCreateWithoutShoppingPreferencesInput)
    create!: InstanceType<typeof UserCreateWithoutShoppingPreferencesInput>;
}

@InputType()
export class UserUpsertWithWhereUniqueWithoutWishlistInput {
    @Field(() => UserWhereUniqueInput, {nullable:false})
    @Type(() => UserWhereUniqueInput)
    where!: Prisma.AtLeast<UserWhereUniqueInput, 'id'>;
    @Field(() => UserUpdateWithoutWishlistInput, {nullable:false})
    @Type(() => UserUpdateWithoutWishlistInput)
    update!: InstanceType<typeof UserUpdateWithoutWishlistInput>;
    @Field(() => UserCreateWithoutWishlistInput, {nullable:false})
    @Type(() => UserCreateWithoutWishlistInput)
    create!: InstanceType<typeof UserCreateWithoutWishlistInput>;
}

@InputType()
export class UserUpsertWithoutProductListingsInput {
    @Field(() => UserUpdateWithoutProductListingsInput, {nullable:false})
    @Type(() => UserUpdateWithoutProductListingsInput)
    update!: InstanceType<typeof UserUpdateWithoutProductListingsInput>;
    @Field(() => UserCreateWithoutProductListingsInput, {nullable:false})
    @Type(() => UserCreateWithoutProductListingsInput)
    create!: InstanceType<typeof UserCreateWithoutProductListingsInput>;
    @Field(() => UserWhereInput, {nullable:true})
    @Type(() => UserWhereInput)
    where?: InstanceType<typeof UserWhereInput>;
}

@InputType()
export class UserUpsertWithoutReportedProductsInput {
    @Field(() => UserUpdateWithoutReportedProductsInput, {nullable:false})
    @Type(() => UserUpdateWithoutReportedProductsInput)
    update!: InstanceType<typeof UserUpdateWithoutReportedProductsInput>;
    @Field(() => UserCreateWithoutReportedProductsInput, {nullable:false})
    @Type(() => UserCreateWithoutReportedProductsInput)
    create!: InstanceType<typeof UserCreateWithoutReportedProductsInput>;
    @Field(() => UserWhereInput, {nullable:true})
    @Type(() => UserWhereInput)
    where?: InstanceType<typeof UserWhereInput>;
}

@InputType()
export class UserWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => [UserWhereInput], {nullable:true})
    AND?: Array<UserWhereInput>;
    @Field(() => [UserWhereInput], {nullable:true})
    OR?: Array<UserWhereInput>;
    @Field(() => [UserWhereInput], {nullable:true})
    NOT?: Array<UserWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    firstName?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    lastName?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    email?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    countryCode?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    phoneNumber?: InstanceType<typeof StringFilter>;
    @Field(() => BoolFilter, {nullable:true})
    phoneNumberVerified?: InstanceType<typeof BoolFilter>;
    @Field(() => EnumRoleNullableListFilter, {nullable:true})
    roles?: InstanceType<typeof EnumRoleNullableListFilter>;
    @Field(() => [UserSessionObjectEqualityInput], {nullable:true})
    sessions?: Array<UserSessionObjectEqualityInput>;
    @Field(() => StringNullableFilter, {nullable:true})
    password?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    referrer?: InstanceType<typeof StringNullableFilter>;
    @Field(() => EnumGenderNullableFilter, {nullable:true})
    gender?: InstanceType<typeof EnumGenderNullableFilter>;
    @Field(() => SizesNullableCompositeFilter, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableCompositeFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    displayPicture?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    personalEmail?: InstanceType<typeof StringNullableFilter>;
    @Field(() => [ImageObjectEqualityInput], {nullable:true})
    images?: Array<ImageObjectEqualityInput>;
    @Field(() => StringNullableFilter, {nullable:true})
    eduInstituteId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    shoppingPreferenceIds?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    hobbyIds?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    about?: InstanceType<typeof StringNullableFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => [AddressObjectEqualityInput], {nullable:true})
    addressBook?: Array<AddressObjectEqualityInput>;
    @Field(() => StringNullableListFilter, {nullable:true})
    wishlistIds?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    savedDealIds?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    conversationIds?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    dmIds?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => UserStripeNullableCompositeFilter, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableCompositeFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    orderIds?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    followedByIDs?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    followingIDs?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    legacyId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => BoolFilter, {nullable:true})
    blackListed?: InstanceType<typeof BoolFilter>;
    @Field(() => BoolNullableFilter, {nullable:true})
    addedManually?: InstanceType<typeof BoolNullableFilter>;
    @Field(() => AltSignupNullableCompositeFilter, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableCompositeFilter>;
    @Field(() => EnumPlatformNullableFilter, {nullable:true})
    registrationPlatform?: InstanceType<typeof EnumPlatformNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    instagramUsername?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    referralRockCode?: InstanceType<typeof StringNullableFilter>;
    @Field(() => BoolNullableFilter, {nullable:true})
    deactivated?: InstanceType<typeof BoolNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    signupV?: InstanceType<typeof StringNullableFilter>;
    @Field(() => BoolNullableFilter, {nullable:true})
    isParent?: InstanceType<typeof BoolNullableFilter>;
    @Field(() => EduInstituteNullableRelationFilter, {nullable:true})
    eduInstitute?: InstanceType<typeof EduInstituteNullableRelationFilter>;
    @Field(() => ShoppingPreferenceListRelationFilter, {nullable:true})
    shoppingPreferences?: InstanceType<typeof ShoppingPreferenceListRelationFilter>;
    @Field(() => HobbyListRelationFilter, {nullable:true})
    hobbies?: InstanceType<typeof HobbyListRelationFilter>;
    @Field(() => ProductListingListRelationFilter, {nullable:true})
    productListings?: InstanceType<typeof ProductListingListRelationFilter>;
    @Field(() => ProductReportListRelationFilter, {nullable:true})
    reportedProducts?: InstanceType<typeof ProductReportListRelationFilter>;
    @Field(() => ProductListingListRelationFilter, {nullable:true})
    wishlist?: InstanceType<typeof ProductListingListRelationFilter>;
    @Field(() => DealListRelationFilter, {nullable:true})
    savedDeals?: InstanceType<typeof DealListRelationFilter>;
    @Field(() => ConversationListRelationFilter, {nullable:true})
    conversations?: InstanceType<typeof ConversationListRelationFilter>;
    @Field(() => UserListRelationFilter, {nullable:true})
    followedBy?: InstanceType<typeof UserListRelationFilter>;
    @Field(() => UserListRelationFilter, {nullable:true})
    following?: InstanceType<typeof UserListRelationFilter>;
}

@InputType()
export class UserWhereInput {
    @Field(() => [UserWhereInput], {nullable:true})
    AND?: Array<UserWhereInput>;
    @Field(() => [UserWhereInput], {nullable:true})
    OR?: Array<UserWhereInput>;
    @Field(() => [UserWhereInput], {nullable:true})
    NOT?: Array<UserWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    firstName?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    lastName?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    email?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    countryCode?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    phoneNumber?: InstanceType<typeof StringFilter>;
    @Field(() => BoolFilter, {nullable:true})
    phoneNumberVerified?: InstanceType<typeof BoolFilter>;
    @Field(() => EnumRoleNullableListFilter, {nullable:true})
    roles?: InstanceType<typeof EnumRoleNullableListFilter>;
    @Field(() => [UserSessionObjectEqualityInput], {nullable:true})
    sessions?: Array<UserSessionObjectEqualityInput>;
    @Field(() => StringNullableFilter, {nullable:true})
    password?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    referrer?: InstanceType<typeof StringNullableFilter>;
    @Field(() => EnumGenderNullableFilter, {nullable:true})
    gender?: InstanceType<typeof EnumGenderNullableFilter>;
    @Field(() => SizesNullableCompositeFilter, {nullable:true})
    sizes?: InstanceType<typeof SizesNullableCompositeFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    displayPicture?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    personalEmail?: InstanceType<typeof StringNullableFilter>;
    @Field(() => [ImageObjectEqualityInput], {nullable:true})
    images?: Array<ImageObjectEqualityInput>;
    @Field(() => StringNullableFilter, {nullable:true})
    eduInstituteId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    shoppingPreferenceIds?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    hobbyIds?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    about?: InstanceType<typeof StringNullableFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => [AddressObjectEqualityInput], {nullable:true})
    addressBook?: Array<AddressObjectEqualityInput>;
    @Field(() => StringNullableListFilter, {nullable:true})
    wishlistIds?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    savedDealIds?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    conversationIds?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    dmIds?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => UserStripeNullableCompositeFilter, {nullable:true})
    stripe?: InstanceType<typeof UserStripeNullableCompositeFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    orderIds?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    followedByIDs?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableListFilter, {nullable:true})
    followingIDs?: InstanceType<typeof StringNullableListFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    legacyId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => BoolFilter, {nullable:true})
    blackListed?: InstanceType<typeof BoolFilter>;
    @Field(() => BoolNullableFilter, {nullable:true})
    addedManually?: InstanceType<typeof BoolNullableFilter>;
    @Field(() => AltSignupNullableCompositeFilter, {nullable:true})
    altSignup?: InstanceType<typeof AltSignupNullableCompositeFilter>;
    @Field(() => EnumPlatformNullableFilter, {nullable:true})
    registrationPlatform?: InstanceType<typeof EnumPlatformNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    instagramUsername?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    referralRockCode?: InstanceType<typeof StringNullableFilter>;
    @Field(() => BoolNullableFilter, {nullable:true})
    deactivated?: InstanceType<typeof BoolNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    signupV?: InstanceType<typeof StringNullableFilter>;
    @Field(() => BoolNullableFilter, {nullable:true})
    isParent?: InstanceType<typeof BoolNullableFilter>;
    @Field(() => EduInstituteNullableRelationFilter, {nullable:true})
    eduInstitute?: InstanceType<typeof EduInstituteNullableRelationFilter>;
    @Field(() => ShoppingPreferenceListRelationFilter, {nullable:true})
    shoppingPreferences?: InstanceType<typeof ShoppingPreferenceListRelationFilter>;
    @Field(() => HobbyListRelationFilter, {nullable:true})
    hobbies?: InstanceType<typeof HobbyListRelationFilter>;
    @Field(() => ProductListingListRelationFilter, {nullable:true})
    productListings?: InstanceType<typeof ProductListingListRelationFilter>;
    @Field(() => ProductReportListRelationFilter, {nullable:true})
    reportedProducts?: InstanceType<typeof ProductReportListRelationFilter>;
    @Field(() => ProductListingListRelationFilter, {nullable:true})
    wishlist?: InstanceType<typeof ProductListingListRelationFilter>;
    @Field(() => DealListRelationFilter, {nullable:true})
    savedDeals?: InstanceType<typeof DealListRelationFilter>;
    @Field(() => ConversationListRelationFilter, {nullable:true})
    conversations?: InstanceType<typeof ConversationListRelationFilter>;
    @Field(() => UserListRelationFilter, {nullable:true})
    followedBy?: InstanceType<typeof UserListRelationFilter>;
    @Field(() => UserListRelationFilter, {nullable:true})
    following?: InstanceType<typeof UserListRelationFilter>;
}

@ObjectType()
export class User {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    firstName!: string;
    @Field(() => String, {nullable:false})
    lastName!: string;
    @Field(() => String, {nullable:false})
    email!: string;
    @Field(() => String, {nullable:false})
    countryCode!: string;
    @Field(() => String, {nullable:false})
    phoneNumber!: string;
    @Field(() => Boolean, {defaultValue:false,nullable:false})
    phoneNumberVerified!: boolean;
    @Field(() => [Role], {nullable:true})
    roles!: Array<`${Role}`>;
    @Field(() => [UserSession], {nullable:true})
    sessions?: Array<UserSession>;
    @Field(() => String, {nullable:true})
    password!: string | null;
    @Field(() => String, {nullable:true})
    referrer!: string | null;
    @Field(() => Gender, {nullable:true})
    gender!: `${Gender}` | null;
    @Field(() => Sizes, {nullable:true})
    sizes?: InstanceType<typeof Sizes> | null;
    @Field(() => String, {nullable:true})
    displayPicture!: string | null;
    @Field(() => String, {nullable:true})
    personalEmail!: string | null;
    @Field(() => [Image], {nullable:true})
    images?: Array<Image>;
    @Field(() => String, {nullable:true})
    eduInstituteId!: string | null;
    @Field(() => [String], {nullable:true})
    shoppingPreferenceIds!: Array<string>;
    @Field(() => [String], {nullable:true})
    hobbyIds!: Array<string>;
    @Field(() => String, {nullable:true})
    about!: string | null;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
    @Field(() => Date, {nullable:false})
    updatedAt!: Date;
    @Field(() => [Address], {nullable:true})
    addressBook?: Array<Address>;
    @Field(() => [String], {nullable:true})
    wishlistIds!: Array<string>;
    @Field(() => [String], {nullable:true})
    savedDealIds!: Array<string>;
    @Field(() => [String], {nullable:true})
    conversationIds!: Array<string>;
    @Field(() => [String], {nullable:true})
    dmIds!: Array<string>;
    @Field(() => UserStripe, {nullable:true})
    stripe?: InstanceType<typeof UserStripe> | null;
    @Field(() => [String], {nullable:true})
    orderIds!: Array<string>;
    @Field(() => [String], {nullable:true})
    followedByIDs!: Array<string>;
    @Field(() => [String], {nullable:true})
    followingIDs!: Array<string>;
    @Field(() => String, {nullable:true})
    legacyId!: string | null;
    @Field(() => Boolean, {defaultValue:false,nullable:false})
    blackListed!: boolean;
    @Field(() => Boolean, {nullable:true})
    addedManually!: boolean | null;
    @Field(() => AltSignup, {nullable:true})
    altSignup?: InstanceType<typeof AltSignup> | null;
    @Field(() => Platform, {nullable:true})
    registrationPlatform!: `${Platform}` | null;
    @Field(() => String, {nullable:true})
    instagramUsername!: string | null;
    @Field(() => String, {nullable:true})
    referralRockCode!: string | null;
    @Field(() => Boolean, {defaultValue:false,nullable:true})
    deactivated!: boolean | null;
    @Field(() => String, {nullable:true})
    signupV!: string | null;
    @Field(() => Boolean, {nullable:true})
    isParent!: boolean | null;
    @Field(() => EduInstitute, {nullable:true})
    eduInstitute?: InstanceType<typeof EduInstitute> | null;
    @Field(() => [ShoppingPreference], {nullable:true})
    shoppingPreferences?: Array<ShoppingPreference>;
    @Field(() => [Hobby], {nullable:true})
    hobbies?: Array<Hobby>;
    @Field(() => [ProductListing], {nullable:true})
    productListings?: Array<ProductListing>;
    @Field(() => [ProductReport], {nullable:true})
    reportedProducts?: Array<ProductReport>;
    @Field(() => [ProductListing], {nullable:true})
    wishlist?: Array<ProductListing>;
    @Field(() => [Deal], {nullable:true})
    savedDeals?: Array<Deal>;
    @Field(() => [Conversation], {nullable:true})
    conversations?: Array<Conversation>;
    @Field(() => [User], {nullable:true})
    followedBy?: Array<User>;
    @Field(() => [User], {nullable:true})
    following?: Array<User>;
}

@InputType()
export class UserSessionCreateInput {
    @Field(() => String, {nullable:false})
    token!: string;
    @Field(() => String, {nullable:true})
    pushToken?: string;
    @Field(() => String, {nullable:false})
    deviceModel!: string;
    @Field(() => Platform, {nullable:false})
    platform!: `${Platform}`;
    @Field(() => Boolean, {nullable:true})
    valid?: boolean;
    @Field(() => Date, {nullable:true})
    started?: Date | string;
    @Field(() => Date, {nullable:true})
    lastSeen?: Date | string;
}

@InputType()
export class UserSessionOrderByCompositeAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    _count?: `${SortOrder}`;
}

@InputType()
export class UserSessionUpdateManyInput {
    @Field(() => UserSessionWhereInput, {nullable:false})
    @Type(() => UserSessionWhereInput)
    where!: InstanceType<typeof UserSessionWhereInput>;
    @Field(() => UserSessionUpdateInput, {nullable:false})
    @Type(() => UserSessionUpdateInput)
    data!: InstanceType<typeof UserSessionUpdateInput>;
}

@InputType()
export class UserSessionUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    token?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    pushToken?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    deviceModel?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => EnumPlatformFieldUpdateOperationsInput, {nullable:true})
    platform?: InstanceType<typeof EnumPlatformFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    valid?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    started?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    lastSeen?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class UserSessionWhereInput {
    @Field(() => [UserSessionWhereInput], {nullable:true})
    AND?: Array<UserSessionWhereInput>;
    @Field(() => [UserSessionWhereInput], {nullable:true})
    OR?: Array<UserSessionWhereInput>;
    @Field(() => [UserSessionWhereInput], {nullable:true})
    NOT?: Array<UserSessionWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    token?: InstanceType<typeof StringFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    pushToken?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringFilter, {nullable:true})
    deviceModel?: InstanceType<typeof StringFilter>;
    @Field(() => EnumPlatformFilter, {nullable:true})
    platform?: InstanceType<typeof EnumPlatformFilter>;
    @Field(() => BoolFilter, {nullable:true})
    valid?: InstanceType<typeof BoolFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    started?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    lastSeen?: InstanceType<typeof DateTimeFilter>;
}

@ObjectType()
export class UserSession {
    @Field(() => String, {nullable:false})
    token!: string;
    @Field(() => String, {nullable:true})
    pushToken!: string | null;
    @Field(() => String, {nullable:false})
    deviceModel!: string;
    @Field(() => Platform, {nullable:false})
    platform!: `${Platform}`;
    @Field(() => Boolean, {defaultValue:true,nullable:false})
    valid!: boolean;
    @Field(() => Date, {nullable:false})
    started!: Date;
    @Field(() => Date, {nullable:false})
    lastSeen!: Date;
}

@InputType()
export class UserStripeCreateInput {
    @Field(() => String, {nullable:true})
    customerId?: string;
    @Field(() => String, {nullable:true})
    expressAccountId?: string;
    @Field(() => Boolean, {nullable:true})
    onboardingComplete?: boolean;
}

@InputType()
export class UserStripeOrderByInput {
    @Field(() => SortOrder, {nullable:true})
    customerId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    expressAccountId?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    onboardingComplete?: `${SortOrder}`;
}

@InputType()
export class UserStripeUpdateInput {
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    customerId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableStringFieldUpdateOperationsInput, {nullable:true})
    expressAccountId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    @Field(() => NullableBoolFieldUpdateOperationsInput, {nullable:true})
    onboardingComplete?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
}

@InputType()
export class UserStripeWhereInput {
    @Field(() => [UserStripeWhereInput], {nullable:true})
    AND?: Array<UserStripeWhereInput>;
    @Field(() => [UserStripeWhereInput], {nullable:true})
    OR?: Array<UserStripeWhereInput>;
    @Field(() => [UserStripeWhereInput], {nullable:true})
    NOT?: Array<UserStripeWhereInput>;
    @Field(() => StringNullableFilter, {nullable:true})
    customerId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => StringNullableFilter, {nullable:true})
    expressAccountId?: InstanceType<typeof StringNullableFilter>;
    @Field(() => BoolNullableFilter, {nullable:true})
    onboardingComplete?: InstanceType<typeof BoolNullableFilter>;
}

@ObjectType()
export class UserStripe {
    @Field(() => String, {nullable:true})
    customerId!: string | null;
    @Field(() => String, {nullable:true})
    expressAccountId!: string | null;
    @Field(() => Boolean, {nullable:true})
    onboardingComplete!: boolean | null;
}

@ArgsType()
export class CreateManyWeightCategoryArgs {
    @Field(() => [WeightCategoryCreateManyInput], {nullable:false})
    @Type(() => WeightCategoryCreateManyInput)
    data!: Array<WeightCategoryCreateManyInput>;
}

@ArgsType()
export class CreateOneWeightCategoryArgs {
    @Field(() => WeightCategoryCreateInput, {nullable:false})
    @Type(() => WeightCategoryCreateInput)
    data!: InstanceType<typeof WeightCategoryCreateInput>;
}

@ArgsType()
export class DeleteManyWeightCategoryArgs {
    @Field(() => WeightCategoryWhereInput, {nullable:true})
    @Type(() => WeightCategoryWhereInput)
    where?: InstanceType<typeof WeightCategoryWhereInput>;
}

@ArgsType()
export class DeleteOneWeightCategoryArgs {
    @Field(() => WeightCategoryWhereUniqueInput, {nullable:false})
    @Type(() => WeightCategoryWhereUniqueInput)
    where!: Prisma.AtLeast<WeightCategoryWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindFirstWeightCategoryOrThrowArgs {
    @Field(() => WeightCategoryWhereInput, {nullable:true})
    @Type(() => WeightCategoryWhereInput)
    where?: InstanceType<typeof WeightCategoryWhereInput>;
    @Field(() => [WeightCategoryOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<WeightCategoryOrderByWithRelationInput>;
    @Field(() => WeightCategoryWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<WeightCategoryWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [WeightCategoryScalarFieldEnum], {nullable:true})
    distinct?: Array<`${WeightCategoryScalarFieldEnum}`>;
}

@ArgsType()
export class FindFirstWeightCategoryArgs {
    @Field(() => WeightCategoryWhereInput, {nullable:true})
    @Type(() => WeightCategoryWhereInput)
    where?: InstanceType<typeof WeightCategoryWhereInput>;
    @Field(() => [WeightCategoryOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<WeightCategoryOrderByWithRelationInput>;
    @Field(() => WeightCategoryWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<WeightCategoryWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [WeightCategoryScalarFieldEnum], {nullable:true})
    distinct?: Array<`${WeightCategoryScalarFieldEnum}`>;
}

@ArgsType()
export class FindManyWeightCategoryArgs {
    @Field(() => WeightCategoryWhereInput, {nullable:true})
    @Type(() => WeightCategoryWhereInput)
    where?: InstanceType<typeof WeightCategoryWhereInput>;
    @Field(() => [WeightCategoryOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<WeightCategoryOrderByWithRelationInput>;
    @Field(() => WeightCategoryWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<WeightCategoryWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
    @Field(() => [WeightCategoryScalarFieldEnum], {nullable:true})
    distinct?: Array<`${WeightCategoryScalarFieldEnum}`>;
}

@ArgsType()
export class FindUniqueWeightCategoryOrThrowArgs {
    @Field(() => WeightCategoryWhereUniqueInput, {nullable:false})
    @Type(() => WeightCategoryWhereUniqueInput)
    where!: Prisma.AtLeast<WeightCategoryWhereUniqueInput, 'id'>;
}

@ArgsType()
export class FindUniqueWeightCategoryArgs {
    @Field(() => WeightCategoryWhereUniqueInput, {nullable:false})
    @Type(() => WeightCategoryWhereUniqueInput)
    where!: Prisma.AtLeast<WeightCategoryWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpdateManyWeightCategoryArgs {
    @Field(() => WeightCategoryUpdateManyMutationInput, {nullable:false})
    @Type(() => WeightCategoryUpdateManyMutationInput)
    data!: InstanceType<typeof WeightCategoryUpdateManyMutationInput>;
    @Field(() => WeightCategoryWhereInput, {nullable:true})
    @Type(() => WeightCategoryWhereInput)
    where?: InstanceType<typeof WeightCategoryWhereInput>;
}

@ArgsType()
export class UpdateOneWeightCategoryArgs {
    @Field(() => WeightCategoryUpdateInput, {nullable:false})
    @Type(() => WeightCategoryUpdateInput)
    data!: InstanceType<typeof WeightCategoryUpdateInput>;
    @Field(() => WeightCategoryWhereUniqueInput, {nullable:false})
    @Type(() => WeightCategoryWhereUniqueInput)
    where!: Prisma.AtLeast<WeightCategoryWhereUniqueInput, 'id'>;
}

@ArgsType()
export class UpsertOneWeightCategoryArgs {
    @Field(() => WeightCategoryWhereUniqueInput, {nullable:false})
    @Type(() => WeightCategoryWhereUniqueInput)
    where!: Prisma.AtLeast<WeightCategoryWhereUniqueInput, 'id'>;
    @Field(() => WeightCategoryCreateInput, {nullable:false})
    @Type(() => WeightCategoryCreateInput)
    create!: InstanceType<typeof WeightCategoryCreateInput>;
    @Field(() => WeightCategoryUpdateInput, {nullable:false})
    @Type(() => WeightCategoryUpdateInput)
    update!: InstanceType<typeof WeightCategoryUpdateInput>;
}

@ArgsType()
export class WeightCategoryAggregateArgs {
    @Field(() => WeightCategoryWhereInput, {nullable:true})
    @Type(() => WeightCategoryWhereInput)
    where?: InstanceType<typeof WeightCategoryWhereInput>;
    @Field(() => [WeightCategoryOrderByWithRelationInput], {nullable:true})
    orderBy?: Array<WeightCategoryOrderByWithRelationInput>;
    @Field(() => WeightCategoryWhereUniqueInput, {nullable:true})
    cursor?: Prisma.AtLeast<WeightCategoryWhereUniqueInput, 'id'>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class WeightCategoryAvgOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    shippingFee?: `${SortOrder}`;
}

@InputType()
export class WeightCategoryCountOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    alias?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    shippingFee?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    description?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class WeightCategoryCreateManyInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    alias!: string;
    @Field(() => PackageDimensionsCreateEnvelopeInput, {nullable:false})
    packageDimensions!: InstanceType<typeof PackageDimensionsCreateEnvelopeInput>;
    @Field(() => PackageWeightCreateEnvelopeInput, {nullable:false})
    packageWeight!: InstanceType<typeof PackageWeightCreateEnvelopeInput>;
    @Field(() => Float, {nullable:false})
    shippingFee!: number;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => String, {nullable:false})
    description!: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class WeightCategoryCreateNestedOneWithoutProductListingInput {
    @Field(() => WeightCategoryCreateWithoutProductListingInput, {nullable:true})
    @Type(() => WeightCategoryCreateWithoutProductListingInput)
    create?: InstanceType<typeof WeightCategoryCreateWithoutProductListingInput>;
    @Field(() => WeightCategoryCreateOrConnectWithoutProductListingInput, {nullable:true})
    @Type(() => WeightCategoryCreateOrConnectWithoutProductListingInput)
    connectOrCreate?: InstanceType<typeof WeightCategoryCreateOrConnectWithoutProductListingInput>;
    @Field(() => WeightCategoryWhereUniqueInput, {nullable:true})
    @Type(() => WeightCategoryWhereUniqueInput)
    connect?: Prisma.AtLeast<WeightCategoryWhereUniqueInput, 'id'>;
}

@InputType()
export class WeightCategoryCreateOrConnectWithoutProductListingInput {
    @Field(() => WeightCategoryWhereUniqueInput, {nullable:false})
    @Type(() => WeightCategoryWhereUniqueInput)
    where!: Prisma.AtLeast<WeightCategoryWhereUniqueInput, 'id'>;
    @Field(() => WeightCategoryCreateWithoutProductListingInput, {nullable:false})
    @Type(() => WeightCategoryCreateWithoutProductListingInput)
    create!: InstanceType<typeof WeightCategoryCreateWithoutProductListingInput>;
}

@InputType()
export class WeightCategoryCreateWithoutProductListingInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    alias!: string;
    @Field(() => PackageDimensionsCreateEnvelopeInput, {nullable:false})
    packageDimensions!: InstanceType<typeof PackageDimensionsCreateEnvelopeInput>;
    @Field(() => PackageWeightCreateEnvelopeInput, {nullable:false})
    packageWeight!: InstanceType<typeof PackageWeightCreateEnvelopeInput>;
    @Field(() => Float, {nullable:false})
    shippingFee!: number;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => String, {nullable:false})
    description!: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class WeightCategoryCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    alias!: string;
    @Field(() => PackageDimensionsCreateEnvelopeInput, {nullable:false})
    packageDimensions!: InstanceType<typeof PackageDimensionsCreateEnvelopeInput>;
    @Field(() => PackageWeightCreateEnvelopeInput, {nullable:false})
    packageWeight!: InstanceType<typeof PackageWeightCreateEnvelopeInput>;
    @Field(() => Float, {nullable:false})
    shippingFee!: number;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => String, {nullable:false})
    description!: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => ProductListingCreateNestedManyWithoutWeightCategoryInput, {nullable:true})
    ProductListing?: InstanceType<typeof ProductListingCreateNestedManyWithoutWeightCategoryInput>;
}

@ArgsType()
export class WeightCategoryGroupByArgs {
    @Field(() => WeightCategoryWhereInput, {nullable:true})
    @Type(() => WeightCategoryWhereInput)
    where?: InstanceType<typeof WeightCategoryWhereInput>;
    @Field(() => [WeightCategoryOrderByWithAggregationInput], {nullable:true})
    orderBy?: Array<WeightCategoryOrderByWithAggregationInput>;
    @Field(() => [WeightCategoryScalarFieldEnum], {nullable:false})
    by!: Array<`${WeightCategoryScalarFieldEnum}`>;
    @Field(() => WeightCategoryScalarWhereWithAggregatesInput, {nullable:true})
    having?: InstanceType<typeof WeightCategoryScalarWhereWithAggregatesInput>;
    @Field(() => Int, {nullable:true})
    take?: number;
    @Field(() => Int, {nullable:true})
    skip?: number;
}

@InputType()
export class WeightCategoryMaxOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    alias?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    shippingFee?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    description?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class WeightCategoryMinOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    alias?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    shippingFee?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    description?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
}

@InputType()
export class WeightCategoryNullableRelationFilter {
    @Field(() => WeightCategoryWhereInput, {nullable:true})
    is?: InstanceType<typeof WeightCategoryWhereInput>;
    @Field(() => WeightCategoryWhereInput, {nullable:true})
    isNot?: InstanceType<typeof WeightCategoryWhereInput>;
}

@InputType()
export class WeightCategoryOrderByWithAggregationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    alias?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    shippingFee?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    description?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => WeightCategoryCountOrderByAggregateInput, {nullable:true})
    _count?: InstanceType<typeof WeightCategoryCountOrderByAggregateInput>;
    @Field(() => WeightCategoryAvgOrderByAggregateInput, {nullable:true})
    _avg?: InstanceType<typeof WeightCategoryAvgOrderByAggregateInput>;
    @Field(() => WeightCategoryMaxOrderByAggregateInput, {nullable:true})
    _max?: InstanceType<typeof WeightCategoryMaxOrderByAggregateInput>;
    @Field(() => WeightCategoryMinOrderByAggregateInput, {nullable:true})
    _min?: InstanceType<typeof WeightCategoryMinOrderByAggregateInput>;
    @Field(() => WeightCategorySumOrderByAggregateInput, {nullable:true})
    _sum?: InstanceType<typeof WeightCategorySumOrderByAggregateInput>;
}

@InputType()
export class WeightCategoryOrderByWithRelationInput {
    @Field(() => SortOrder, {nullable:true})
    id?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    name?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    alias?: `${SortOrder}`;
    @Field(() => PackageDimensionsOrderByInput, {nullable:true})
    packageDimensions?: InstanceType<typeof PackageDimensionsOrderByInput>;
    @Field(() => PackageWeightOrderByInput, {nullable:true})
    packageWeight?: InstanceType<typeof PackageWeightOrderByInput>;
    @Field(() => SortOrder, {nullable:true})
    shippingFee?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    active?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    description?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    createdAt?: `${SortOrder}`;
    @Field(() => SortOrder, {nullable:true})
    updatedAt?: `${SortOrder}`;
    @Field(() => ProductListingOrderByRelationAggregateInput, {nullable:true})
    ProductListing?: InstanceType<typeof ProductListingOrderByRelationAggregateInput>;
}

@InputType()
export class WeightCategoryScalarWhereWithAggregatesInput {
    @Field(() => [WeightCategoryScalarWhereWithAggregatesInput], {nullable:true})
    AND?: Array<WeightCategoryScalarWhereWithAggregatesInput>;
    @Field(() => [WeightCategoryScalarWhereWithAggregatesInput], {nullable:true})
    OR?: Array<WeightCategoryScalarWhereWithAggregatesInput>;
    @Field(() => [WeightCategoryScalarWhereWithAggregatesInput], {nullable:true})
    NOT?: Array<WeightCategoryScalarWhereWithAggregatesInput>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    name?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    alias?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => FloatWithAggregatesFilter, {nullable:true})
    shippingFee?: InstanceType<typeof FloatWithAggregatesFilter>;
    @Field(() => BoolWithAggregatesFilter, {nullable:true})
    active?: InstanceType<typeof BoolWithAggregatesFilter>;
    @Field(() => StringWithAggregatesFilter, {nullable:true})
    description?: InstanceType<typeof StringWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    @Field(() => DateTimeWithAggregatesFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
}

@InputType()
export class WeightCategorySumOrderByAggregateInput {
    @Field(() => SortOrder, {nullable:true})
    shippingFee?: `${SortOrder}`;
}

@InputType()
export class WeightCategoryUncheckedCreateWithoutProductListingInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    alias!: string;
    @Field(() => PackageDimensionsCreateEnvelopeInput, {nullable:false})
    packageDimensions!: InstanceType<typeof PackageDimensionsCreateEnvelopeInput>;
    @Field(() => PackageWeightCreateEnvelopeInput, {nullable:false})
    packageWeight!: InstanceType<typeof PackageWeightCreateEnvelopeInput>;
    @Field(() => Float, {nullable:false})
    shippingFee!: number;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => String, {nullable:false})
    description!: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
}

@InputType()
export class WeightCategoryUncheckedCreateInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    alias!: string;
    @Field(() => PackageDimensionsCreateEnvelopeInput, {nullable:false})
    packageDimensions!: InstanceType<typeof PackageDimensionsCreateEnvelopeInput>;
    @Field(() => PackageWeightCreateEnvelopeInput, {nullable:false})
    packageWeight!: InstanceType<typeof PackageWeightCreateEnvelopeInput>;
    @Field(() => Float, {nullable:false})
    shippingFee!: number;
    @Field(() => Boolean, {nullable:true})
    active?: boolean;
    @Field(() => String, {nullable:false})
    description!: string;
    @Field(() => Date, {nullable:true})
    createdAt?: Date | string;
    @Field(() => Date, {nullable:true})
    updatedAt?: Date | string;
    @Field(() => ProductListingUncheckedCreateNestedManyWithoutWeightCategoryInput, {nullable:true})
    ProductListing?: InstanceType<typeof ProductListingUncheckedCreateNestedManyWithoutWeightCategoryInput>;
}

@InputType()
export class WeightCategoryUncheckedUpdateManyInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    alias?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => PackageDimensionsUpdateEnvelopeInput, {nullable:true})
    packageDimensions?: InstanceType<typeof PackageDimensionsUpdateEnvelopeInput>;
    @Field(() => PackageWeightUpdateEnvelopeInput, {nullable:true})
    packageWeight?: InstanceType<typeof PackageWeightUpdateEnvelopeInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    shippingFee?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class WeightCategoryUncheckedUpdateWithoutProductListingInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    alias?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => PackageDimensionsUpdateEnvelopeInput, {nullable:true})
    packageDimensions?: InstanceType<typeof PackageDimensionsUpdateEnvelopeInput>;
    @Field(() => PackageWeightUpdateEnvelopeInput, {nullable:true})
    packageWeight?: InstanceType<typeof PackageWeightUpdateEnvelopeInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    shippingFee?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class WeightCategoryUncheckedUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    alias?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => PackageDimensionsUpdateEnvelopeInput, {nullable:true})
    packageDimensions?: InstanceType<typeof PackageDimensionsUpdateEnvelopeInput>;
    @Field(() => PackageWeightUpdateEnvelopeInput, {nullable:true})
    packageWeight?: InstanceType<typeof PackageWeightUpdateEnvelopeInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    shippingFee?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => ProductListingUncheckedUpdateManyWithoutWeightCategoryNestedInput, {nullable:true})
    ProductListing?: InstanceType<typeof ProductListingUncheckedUpdateManyWithoutWeightCategoryNestedInput>;
}

@InputType()
export class WeightCategoryUpdateManyMutationInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    alias?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => PackageDimensionsUpdateEnvelopeInput, {nullable:true})
    packageDimensions?: InstanceType<typeof PackageDimensionsUpdateEnvelopeInput>;
    @Field(() => PackageWeightUpdateEnvelopeInput, {nullable:true})
    packageWeight?: InstanceType<typeof PackageWeightUpdateEnvelopeInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    shippingFee?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class WeightCategoryUpdateOneWithoutProductListingNestedInput {
    @Field(() => WeightCategoryCreateWithoutProductListingInput, {nullable:true})
    @Type(() => WeightCategoryCreateWithoutProductListingInput)
    create?: InstanceType<typeof WeightCategoryCreateWithoutProductListingInput>;
    @Field(() => WeightCategoryCreateOrConnectWithoutProductListingInput, {nullable:true})
    @Type(() => WeightCategoryCreateOrConnectWithoutProductListingInput)
    connectOrCreate?: InstanceType<typeof WeightCategoryCreateOrConnectWithoutProductListingInput>;
    @Field(() => WeightCategoryUpsertWithoutProductListingInput, {nullable:true})
    @Type(() => WeightCategoryUpsertWithoutProductListingInput)
    upsert?: InstanceType<typeof WeightCategoryUpsertWithoutProductListingInput>;
    @Field(() => Boolean, {nullable:true})
    disconnect?: boolean;
    @Field(() => WeightCategoryWhereInput, {nullable:true})
    @Type(() => WeightCategoryWhereInput)
    delete?: InstanceType<typeof WeightCategoryWhereInput>;
    @Field(() => WeightCategoryWhereUniqueInput, {nullable:true})
    @Type(() => WeightCategoryWhereUniqueInput)
    connect?: Prisma.AtLeast<WeightCategoryWhereUniqueInput, 'id'>;
    @Field(() => WeightCategoryUpdateToOneWithWhereWithoutProductListingInput, {nullable:true})
    @Type(() => WeightCategoryUpdateToOneWithWhereWithoutProductListingInput)
    update?: InstanceType<typeof WeightCategoryUpdateToOneWithWhereWithoutProductListingInput>;
}

@InputType()
export class WeightCategoryUpdateToOneWithWhereWithoutProductListingInput {
    @Field(() => WeightCategoryWhereInput, {nullable:true})
    @Type(() => WeightCategoryWhereInput)
    where?: InstanceType<typeof WeightCategoryWhereInput>;
    @Field(() => WeightCategoryUpdateWithoutProductListingInput, {nullable:false})
    @Type(() => WeightCategoryUpdateWithoutProductListingInput)
    data!: InstanceType<typeof WeightCategoryUpdateWithoutProductListingInput>;
}

@InputType()
export class WeightCategoryUpdateWithoutProductListingInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    alias?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => PackageDimensionsUpdateEnvelopeInput, {nullable:true})
    packageDimensions?: InstanceType<typeof PackageDimensionsUpdateEnvelopeInput>;
    @Field(() => PackageWeightUpdateEnvelopeInput, {nullable:true})
    packageWeight?: InstanceType<typeof PackageWeightUpdateEnvelopeInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    shippingFee?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}

@InputType()
export class WeightCategoryUpdateInput {
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    alias?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => PackageDimensionsUpdateEnvelopeInput, {nullable:true})
    packageDimensions?: InstanceType<typeof PackageDimensionsUpdateEnvelopeInput>;
    @Field(() => PackageWeightUpdateEnvelopeInput, {nullable:true})
    packageWeight?: InstanceType<typeof PackageWeightUpdateEnvelopeInput>;
    @Field(() => FloatFieldUpdateOperationsInput, {nullable:true})
    shippingFee?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    @Field(() => BoolFieldUpdateOperationsInput, {nullable:true})
    active?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    @Field(() => StringFieldUpdateOperationsInput, {nullable:true})
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => DateTimeFieldUpdateOperationsInput, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    @Field(() => ProductListingUpdateManyWithoutWeightCategoryNestedInput, {nullable:true})
    ProductListing?: InstanceType<typeof ProductListingUpdateManyWithoutWeightCategoryNestedInput>;
}

@InputType()
export class WeightCategoryUpsertWithoutProductListingInput {
    @Field(() => WeightCategoryUpdateWithoutProductListingInput, {nullable:false})
    @Type(() => WeightCategoryUpdateWithoutProductListingInput)
    update!: InstanceType<typeof WeightCategoryUpdateWithoutProductListingInput>;
    @Field(() => WeightCategoryCreateWithoutProductListingInput, {nullable:false})
    @Type(() => WeightCategoryCreateWithoutProductListingInput)
    create!: InstanceType<typeof WeightCategoryCreateWithoutProductListingInput>;
    @Field(() => WeightCategoryWhereInput, {nullable:true})
    @Type(() => WeightCategoryWhereInput)
    where?: InstanceType<typeof WeightCategoryWhereInput>;
}

@InputType()
export class WeightCategoryWhereUniqueInput {
    @Field(() => String, {nullable:true})
    id?: string;
    @Field(() => [WeightCategoryWhereInput], {nullable:true})
    AND?: Array<WeightCategoryWhereInput>;
    @Field(() => [WeightCategoryWhereInput], {nullable:true})
    OR?: Array<WeightCategoryWhereInput>;
    @Field(() => [WeightCategoryWhereInput], {nullable:true})
    NOT?: Array<WeightCategoryWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    name?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    alias?: InstanceType<typeof StringFilter>;
    @Field(() => PackageDimensionsCompositeFilter, {nullable:true})
    packageDimensions?: InstanceType<typeof PackageDimensionsCompositeFilter>;
    @Field(() => PackageWeightCompositeFilter, {nullable:true})
    packageWeight?: InstanceType<typeof PackageWeightCompositeFilter>;
    @Field(() => FloatFilter, {nullable:true})
    shippingFee?: InstanceType<typeof FloatFilter>;
    @Field(() => BoolFilter, {nullable:true})
    active?: InstanceType<typeof BoolFilter>;
    @Field(() => StringFilter, {nullable:true})
    description?: InstanceType<typeof StringFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => ProductListingListRelationFilter, {nullable:true})
    ProductListing?: InstanceType<typeof ProductListingListRelationFilter>;
}

@InputType()
export class WeightCategoryWhereInput {
    @Field(() => [WeightCategoryWhereInput], {nullable:true})
    AND?: Array<WeightCategoryWhereInput>;
    @Field(() => [WeightCategoryWhereInput], {nullable:true})
    OR?: Array<WeightCategoryWhereInput>;
    @Field(() => [WeightCategoryWhereInput], {nullable:true})
    NOT?: Array<WeightCategoryWhereInput>;
    @Field(() => StringFilter, {nullable:true})
    id?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    name?: InstanceType<typeof StringFilter>;
    @Field(() => StringFilter, {nullable:true})
    alias?: InstanceType<typeof StringFilter>;
    @Field(() => PackageDimensionsCompositeFilter, {nullable:true})
    packageDimensions?: InstanceType<typeof PackageDimensionsCompositeFilter>;
    @Field(() => PackageWeightCompositeFilter, {nullable:true})
    packageWeight?: InstanceType<typeof PackageWeightCompositeFilter>;
    @Field(() => FloatFilter, {nullable:true})
    shippingFee?: InstanceType<typeof FloatFilter>;
    @Field(() => BoolFilter, {nullable:true})
    active?: InstanceType<typeof BoolFilter>;
    @Field(() => StringFilter, {nullable:true})
    description?: InstanceType<typeof StringFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    createdAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => DateTimeFilter, {nullable:true})
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    @Field(() => ProductListingListRelationFilter, {nullable:true})
    ProductListing?: InstanceType<typeof ProductListingListRelationFilter>;
}

@ObjectType()
export class WeightCategory {
    @Field(() => ID, {nullable:false})
    id!: string;
    @Field(() => String, {nullable:false})
    name!: string;
    @Field(() => String, {nullable:false})
    alias!: string;
    @Field(() => PackageDimensions, {nullable:false})
    packageDimensions?: InstanceType<typeof PackageDimensions>;
    @Field(() => PackageWeight, {nullable:false})
    packageWeight?: InstanceType<typeof PackageWeight>;
    @Field(() => Float, {nullable:false})
    shippingFee!: number;
    @Field(() => Boolean, {defaultValue:false,nullable:false})
    active!: boolean;
    @Field(() => String, {nullable:false})
    description!: string;
    @Field(() => Date, {nullable:false})
    createdAt!: Date;
    @Field(() => Date, {nullable:false})
    updatedAt!: Date;
    @Field(() => [ProductListing], {nullable:true})
    ProductListing?: Array<ProductListing>;
}
